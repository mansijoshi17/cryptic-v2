{"id":"3adb5383502952854a81643089692891","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/comman/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = _owners[tokenId];\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory baseURI = _baseURI();\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(\n            _isApprovedOrOwner(from, tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(\n            ERC721.ownerOf(tokenId) == from,\n            \"ERC721: transfer from incorrect owner\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"contracts/CrypticAgreement.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CrypticAgreement is Ownable {\n    string name;\n    string cid;\n    address creator;\n    string status;\n\n    mapping(address => bool) public signed;\n    address[] members;\n    uint256 signedMembers;\n\n    constructor(\n        string memory _name,\n        string memory _cid,\n        address _creator,\n        string memory _status\n    ) {\n        name = _name;\n        cid = _cid;\n        creator = _creator;\n        status = _status;\n    }\n\n    function addMembers(address[] memory _members) public {\n        require(msg.sender == creator, \"Only owner can add members\");\n        for (uint256 i = 0; i < _members.length; i++) {\n            signed[address(_members[i])] = false;\n            members.push(_members[i]);\n        }\n    }\n\n    function checkMember(address memberAddress) public view returns (bool) {\n        bool containsMember = false;\n        for (uint256 i = 0; i < members.length; i++) {\n            if (members[i] == memberAddress) {\n                containsMember = true;\n            }\n        }\n        return containsMember;\n    }\n\n    function signAgreement(address signer) public {\n        bool containsMember = checkMember(signer);\n        require(containsMember, \"You are not member of this agreement\");\n        require(!signed[signer], \"You have already signed agreement\");\n        signed[signer] = true;\n        signedMembers = signedMembers + 1;\n    }\n\n    function checkAgreementStatus() public view returns (string memory) {\n        if (signedMembers == members.length) {\n            return \"Signed\";\n        } else {\n            return \"Unsigned\";\n        }\n    }\n\n    function getMembers() public view returns (address[] memory) {\n        return members;\n    }\n\n    function getName() public view returns (string memory) {\n        return name;\n    }\n\n    function getCid() public view returns (string memory) {\n        return cid;\n    }\n\n    function setCid(string memory _cid) public {\n        cid = _cid;\n    }\n\n    function getOwner() public view returns (address) {\n        return creator;\n    }\n}\n"},"contracts/CrypticAgreementFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CrypticAgreement.sol\";\n\ncontract CrypticAgreementFactory is Ownable {\n    mapping(address => address[]) private agreemets;\n\n    event agreementCreated(address agreement);\n\n    function createAgreement(\n        string memory name,\n        string memory cid,\n        string memory status\n    ) public returns (address) {\n        CrypticAgreement agreementContract = new CrypticAgreement(\n            name,\n            cid,\n            msg.sender,\n            status\n        );\n        agreemets[msg.sender].push(address(agreementContract));\n        emit agreementCreated(address(agreementContract));\n        return address(agreementContract);\n    }\n\n    function getAgrrements(address userAddress)\n        public\n        view\n        returns (address[] memory)\n    {\n        return agreemets[userAddress];\n    }\n}\n"},"contracts/CrypticVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./CrypticVaultToken.sol\";\n\ncontract CrypticVault is Ownable {\n    struct emergencyAlert {\n        address user;\n        string subject;\n        string message;\n    }\n\n    mapping(address => bool) private loginStatus;\n    mapping(address => mapping(address => bool)) private transferStatus;\n    mapping(address => address) private users;\n    mapping(address => string[]) private members;\n\n    mapping(address => uint256) private tokenIds;\n    mapping(address => emergencyAlert) private alerts;\n    mapping(address => string[]) private documents;\n    mapping(address => string[]) private notes;\n\n    event TokenCreated(address, address);\n    event TokenTransfered(address, address, address, uint256);\n\n    function getLoginStatus(address caller) public view returns (bool) {\n        return loginStatus[caller];\n    }\n\n    function createToken(string memory name, string memory symbol) public {\n        address _address = address(new CrypticVaultToken(name, symbol)); // Created Token contract.\n        // here add if else if conditions with argument module and store the address in their relevent variable.\n        emit TokenCreated(msg.sender, _address);\n    }\n\n    function bulkMintERC721(\n        address tokenAddress,\n        uint256 start,\n        uint256 end\n    ) public {\n        for (uint256 i = start; i < end; i++) {\n            CrypticVaultToken(tokenAddress).safeMint(msg.sender);\n        }\n        loginStatus[msg.sender] = true;\n        // Remove the next line. Will do that step in create token function.\n        users[msg.sender] = tokenAddress;\n        // Here we will also have token address to set the token Id of particular token's.\n        setTokenId(msg.sender, end - 1);\n    }\n\n    function transferToken(\n        address from,\n        address payable to,\n        address token,\n        uint256 amount\n    ) public {\n        CrypticVaultToken(token).transferTokens(from, to, token, amount);\n        transferStatus[from][to] = true;\n        emit TokenTransfered(from, to, token, amount);\n    }\n\n    function getTokenAddress(address userAddress)\n        public\n        view\n        returns (address)\n    {\n        return users[userAddress];\n    }\n\n    function storeDocuments(address userAddress, string memory cid) public {\n        documents[userAddress].push(cid);\n    }\n\n    function getDocuments(address userAddress)\n        public\n        view\n        returns (string[] memory)\n    {\n        return documents[userAddress];\n    }\n\n    function createMembers(address userAddress, string memory cid) public {\n        members[userAddress].push(cid);\n    }\n\n    function getMembers(address userAddress)\n        public\n        view\n        returns (string[] memory)\n    {\n        return members[userAddress];\n    }\n\n    function createEmergencyAlert(\n        address userAddress,\n        string memory subject,\n        string memory message\n    ) public {\n        emergencyAlert storage newAlert = alerts[userAddress];\n        newAlert.user = userAddress;\n        newAlert.subject = subject;\n        newAlert.message = message;\n    }\n\n    function getEmergencyAlert(address userAddress)\n        public\n        view\n        returns (emergencyAlert memory)\n    {\n        return alerts[userAddress];\n    }\n\n    function setTokenId(address userAddress, uint256 tokenId) public {\n        tokenIds[userAddress] = tokenId;\n    }\n\n    function getTokenId(address userAddress) public view returns (uint256) {\n        return tokenIds[userAddress];\n    }\n\n    function getTransferStatus(address adminAddress, address memberAddress)\n        public\n        view\n        returns (bool)\n    {\n        return transferStatus[adminAddress][memberAddress];\n    }\n\n    function createNotes(address userAddress, string memory cid) public {\n        notes[userAddress].push(cid);\n    }\n\n    function getNotes(address userAddress)\n        public\n        view\n        returns (string[] memory)\n    {\n        return notes[userAddress];\n    }\n\n    function findAndReplace(\n        string memory oldCid,\n        string memory newCid,\n        address userAddress\n    ) public returns (bool) {\n        for (uint256 i = 0; i < notes[userAddress].length; i++) {\n            string memory noteCid = notes[userAddress][i];\n            if (\n                keccak256(abi.encodePacked(noteCid)) ==\n                keccak256(abi.encodePacked(oldCid))\n            ) {\n                notes[userAddress][i] = newCid;\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"},"contracts/CrypticVaultToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"./comman/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ncontract CrypticVaultToken is ERC721 {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    constructor(string memory _name, string memory _symbol)\n        ERC721(_name, _symbol)\n    {}\n\n    function safeMint(address to) public {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n    }\n\n    function transferTokens(\n        address from,\n        address payable to,\n        address token,\n        uint256 amount\n    ) public {\n        if (token != address(0)) {\n            IERC721(token).transferFrom(from, to, amount);\n        } else {\n            require(to.send(amount), \"Transfer of ETH to receiver failed\");\n        }\n    }\n}\n"},"contracts/filecoinMockAPIs/MarketAPI.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.25 <=0.8.17;\n\nimport \"./types/MarketTypes.sol\";\n\n/// @title This contract is a proxy to the singleton Storage Market actor (address: f05). Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\n/// @author Zondax AG\n/// @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\n//       with that of the real library!\ncontract MarketAPI {\n    mapping(string => uint256) balances;\n    mapping(uint64 => MarketTypes.MockDeal) deals;\n\n    constructor() {\n        mock_generate_deals();\n    }\n\n    /// @notice Deposits the received value into the balance held in escrow.\n    /// @dev Because this is a mock method, no real balance is being deducted from the caller, nor incremented in the Storage Market actor (f05).\n    function add_balance(\n        MarketTypes.AddBalanceParams memory params\n    ) public payable {\n        balances[params.provider_or_client] += msg.value;\n    }\n\n    /// @notice Attempt to withdraw the specified amount from the balance held in escrow.\n    /// @notice If less than the specified amount is available, yields the entire available balance.\n    /// @dev This method should be called by an approved address, but the mock does not check that the caller is an approved party.\n    /// @dev Because this is a mock method, no real balance is deposited in the designated address, nor decremented from the Storage Market actor (f05).\n    function withdraw_balance(\n        MarketTypes.WithdrawBalanceParams memory params\n    ) public returns (MarketTypes.WithdrawBalanceReturn memory) {\n        uint256 tmp = balances[params.provider_or_client];\n        if (balances[params.provider_or_client] >= params.tokenAmount) {\n            balances[params.provider_or_client] -= params.tokenAmount;\n            tmp = params.tokenAmount;\n        } else {\n            balances[params.provider_or_client] = 0;\n        }\n\n        return MarketTypes.WithdrawBalanceReturn(tmp);\n    }\n\n    /// @return the escrow balance and locked amount for an address.\n    function get_balance(\n        string memory addr\n    ) public view returns (MarketTypes.GetBalanceReturn memory) {\n        uint256 actualBalance = balances[addr];\n\n        return MarketTypes.GetBalanceReturn(actualBalance, 0);\n    }\n\n    /// @return the data commitment and size of a deal proposal.\n    /// @notice This will be available after the deal is published (whether or not is is activated) and up until some undefined period after it is terminated.\n    /// @dev set data values correctly, currently returning fixed data, feel free to adjust in your local mock.\n    function get_deal_data_commitment(\n        MarketTypes.GetDealDataCommitmentParams memory params\n    ) public view returns (MarketTypes.GetDealDataCommitmentReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealDataCommitmentReturn(\n                bytes(\"0x111111\"),\n                deals[params.id].size\n            );\n    }\n\n    /// @return the client of a deal proposal.\n    function get_deal_client(\n        MarketTypes.GetDealClientParams memory params\n    ) public view returns (MarketTypes.GetDealClientReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return MarketTypes.GetDealClientReturn(deals[params.id].client);\n    }\n\n    /// @return the provider of a deal proposal.\n    function get_deal_provider(\n        MarketTypes.GetDealProviderParams memory params\n    ) public view returns (MarketTypes.GetDealProviderReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return MarketTypes.GetDealProviderReturn(deals[params.id].provider);\n    }\n\n    /// @return the label of a deal proposal.\n    function get_deal_label(\n        MarketTypes.GetDealLabelParams memory params\n    ) public view returns (MarketTypes.GetDealLabelReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return MarketTypes.GetDealLabelReturn(deals[params.id].label);\n    }\n\n    /// @return the start epoch and duration (in epochs) of a deal proposal.\n    function get_deal_term(\n        MarketTypes.GetDealTermParams memory params\n    ) public view returns (MarketTypes.GetDealTermReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealTermReturn(\n                deals[params.id].start,\n                deals[params.id].end\n            );\n    }\n\n    /// @return the per-epoch price of a deal proposal.\n    function get_deal_total_price(\n        MarketTypes.GetDealEpochPriceParams memory params\n    ) public view returns (MarketTypes.GetDealEpochPriceReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealEpochPriceReturn(\n                deals[params.id].price_per_epoch\n            );\n    }\n\n    /// @return the client collateral requirement for a deal proposal.\n    function get_deal_client_collateral(\n        MarketTypes.GetDealClientCollateralParams memory params\n    ) public view returns (MarketTypes.GetDealClientCollateralReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealClientCollateralReturn(\n                deals[params.id].client_collateral\n            );\n    }\n\n    /// @return the provider collateral requirement for a deal proposal.\n    function get_deal_provider_collateral(\n        MarketTypes.GetDealProviderCollateralParams memory params\n    ) public view returns (MarketTypes.GetDealProviderCollateralReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealProviderCollateralReturn(\n                deals[params.id].provider_collateral\n            );\n    }\n\n    /// @return the verified flag for a deal proposal.\n    /// @notice Note that the source of truth for verified allocations and claims is the verified registry actor.\n    function get_deal_verified(\n        MarketTypes.GetDealVerifiedParams memory params\n    ) public view returns (MarketTypes.GetDealVerifiedReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return MarketTypes.GetDealVerifiedReturn(deals[params.id].verified);\n    }\n\n    /// @notice Fetches activation state for a deal.\n    /// @notice This will be available from when the proposal is published until an undefined period after the deal finishes (either normally or by termination).\n    /// @return USR_NOT_FOUND if the deal doesn't exist (yet), or EX_DEAL_EXPIRED if the deal has been removed from state.\n    function get_deal_activation(\n        MarketTypes.GetDealActivationParams memory params\n    ) public view returns (MarketTypes.GetDealActivationReturn memory) {\n        require(deals[params.id].id > 0);\n\n        return\n            MarketTypes.GetDealActivationReturn(\n                deals[params.id].activated,\n                deals[params.id].terminated\n            );\n    }\n\n    /// @notice Publish a new set of storage deals (not yet included in a sector).\n    function publish_storage_deals(bytes memory raw_auth_params, address callee) public {\n        // calls standard filecoin receiver on message authentication api method number\n        (bool success, ) = callee.call(\n            abi.encodeWithSignature(\n                \"handle_filecoin_method(uint64,uint64,bytes)\",\n                0,\n                2643134072,\n                raw_auth_params\n            )\n        );\n        require(success, \"client contract failed to authorize deal publish\");\n    }\n\n    /// @notice Adds mock deal data to the internal state of this mock.\n    /// @dev Feel free to adjust the data here to make it align with deals in your network.\n    function mock_generate_deals() internal {\n        MarketTypes.MockDeal memory deal_67;\n        deal_67.id = 67;\n        deal_67\n            .cid = \"baga6ea4seaqlkg6mss5qs56jqtajg5ycrhpkj2b66cgdkukf2qjmmzz6ayksuci\";\n        deal_67.size = 8388608;\n        deal_67.verified = false;\n        deal_67.client = \"t01109\";\n        deal_67.provider = \"t01113\";\n        deal_67.label = \"mAXCg5AIg8YBXbFjtdBy1iZjpDYAwRSt0elGLF5GvTqulEii1VcM\";\n        deal_67.start = 25245;\n        deal_67.end = 545150;\n        deal_67.price_per_epoch = 1100000000000;\n        deal_67.provider_collateral = 0;\n        deal_67.client_collateral = 0;\n        deal_67.activated = 1;\n        deal_67.terminated = 0;\n\n        deals[deal_67.id] = deal_67;\n\n        // As EVM smart contract has a limited capacity for size (24KiB), we cannot set all deals directly here.\n        // Please, take them from docs.\n\n        // Add or replace more deals here.\n    }\n}\n"},"contracts/filecoinMockAPIs/MinerAPI.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.25 <=0.8.17;\n\nimport \"./types/MinerTypes.sol\";\n\n/// @title This contract is a proxy to a built-in Miner actor. Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\n/// @author Zondax AG\n/// @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\n//       with that of the real library!\ncontract MinerAPI {\n    string owner;\n    bool isBeneficiarySet = false;\n    CommonTypes.ActiveBeneficiary activeBeneficiary;\n    mapping(CommonTypes.SectorSize => uint64) sectorSizesBytes;\n\n    /// @notice (Mock method) Sets the owner of a Miner on contract deployment, which will be returned via get_owner().\n    constructor(string memory _owner) {\n        owner = _owner;\n\n        sectorSizesBytes[CommonTypes.SectorSize._2KiB] = 2 << 10;\n        sectorSizesBytes[CommonTypes.SectorSize._8MiB] = 8 << 20;\n        sectorSizesBytes[CommonTypes.SectorSize._512MiB] = 512 << 20;\n        sectorSizesBytes[CommonTypes.SectorSize._32GiB] = 32 << 30;\n        sectorSizesBytes[CommonTypes.SectorSize._64GiB] = 2 * (32 << 30);\n    }\n\n    /// @notice (Mock method) Sets the owner of a Miner, which will be returned via get_owner().\n    function mock_set_owner(string memory addr) public {\n        require(bytes(owner).length == 0);\n        owner = addr;\n    }\n\n    /// @notice Income and returned collateral are paid to this address\n    /// @notice This address is also allowed to change the worker address for the miner\n    /// @return the owner address of a Miner\n    function get_owner()\n        public\n        view\n        returns (MinerTypes.GetOwnerReturn memory)\n    {\n        require(bytes(owner).length != 0);\n\n        return MinerTypes.GetOwnerReturn(owner);\n    }\n\n    /// @param addr New owner address\n    /// @notice Proposes or confirms a change of owner address.\n    /// @notice If invoked by the current owner, proposes a new owner address for confirmation. If the proposed address is the current owner address, revokes any existing proposal that proposed address.\n    function change_owner_address(string memory addr) public {\n        owner = addr;\n    }\n\n    /// @param params The \"controlling\" addresses are the Owner, the Worker, and all Control Addresses.\n    /// @return Whether the provided address is \"controlling\".\n    function is_controlling_address(\n        MinerTypes.IsControllingAddressParam memory params\n    ) public pure returns (MinerTypes.IsControllingAddressReturn memory) {\n        return MinerTypes.IsControllingAddressReturn(false);\n    }\n\n    /// @return the miner's sector size.\n    function get_sector_size()\n        public\n        view\n        returns (MinerTypes.GetSectorSizeReturn memory)\n    {\n        return\n            MinerTypes.GetSectorSizeReturn(\n                sectorSizesBytes[CommonTypes.SectorSize._8MiB]\n            );\n    }\n\n    /// @notice This is calculated as actor balance - (vesting funds + pre-commit deposit + initial pledge requirement + fee debt)\n    /// @notice Can go negative if the miner is in IP debt.\n    /// @return the available balance of this miner.\n    function get_available_balance()\n        public\n        pure\n        returns (MinerTypes.GetAvailableBalanceReturn memory)\n    {\n        return MinerTypes.GetAvailableBalanceReturn(10000000000000000000000);\n    }\n\n    /// @return the funds vesting in this miner as a list of (vesting_epoch, vesting_amount) tuples.\n    function get_vesting_funds()\n        public\n        pure\n        returns (MinerTypes.GetVestingFundsReturn memory)\n    {\n        CommonTypes.VestingFunds[]\n            memory vesting_funds = new CommonTypes.VestingFunds[](1);\n        vesting_funds[0] = CommonTypes.VestingFunds(\n            1668514825,\n            2000000000000000000000\n        );\n\n        return MinerTypes.GetVestingFundsReturn(vesting_funds);\n    }\n\n    /// @notice Proposes or confirms a change of beneficiary address.\n    /// @notice A proposal must be submitted by the owner, and takes effect after approval of both the proposed beneficiary and current beneficiary, if applicable, any current beneficiary that has time and quota remaining.\n    /// @notice See FIP-0029, https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0029.md\n    function change_beneficiary(\n        MinerTypes.ChangeBeneficiaryParams memory params\n    ) public {\n        if (!isBeneficiarySet) {\n            CommonTypes.BeneficiaryTerm memory term = CommonTypes\n                .BeneficiaryTerm(params.new_quota, 0, params.new_expiration);\n            activeBeneficiary = CommonTypes.ActiveBeneficiary(\n                params.new_beneficiary,\n                term\n            );\n            isBeneficiarySet = true;\n        } else {\n            activeBeneficiary.beneficiary = params.new_beneficiary;\n            activeBeneficiary.term.quota = params.new_quota;\n            activeBeneficiary.term.expiration = params.new_expiration;\n        }\n    }\n\n    /// @notice This method is for use by other actors (such as those acting as beneficiaries), and to abstract the state representation for clients.\n    /// @notice Retrieves the currently active and proposed beneficiary information.\n    function get_beneficiary()\n        public\n        view\n        returns (MinerTypes.GetBeneficiaryReturn memory)\n    {\n        require(isBeneficiarySet);\n\n        CommonTypes.PendingBeneficiaryChange memory proposed;\n        return MinerTypes.GetBeneficiaryReturn(activeBeneficiary, proposed);\n    }\n}\n"},"contracts/filecoinMockAPIs/types/CommonTypes.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.25 <=0.8.17;\n\n/// @title Filecoin actors' common types for Solidity.\n/// @author Zondax AG\nlibrary CommonTypes {\n    enum RegisteredSealProof {\n        StackedDRG2KiBV1,\n        StackedDRG512MiBV1,\n        StackedDRG8MiBV1,\n        StackedDRG32GiBV1,\n        StackedDRG64GiBV1,\n        StackedDRG2KiBV1P1,\n        StackedDRG512MiBV1P1,\n        StackedDRG8MiBV1P1,\n        StackedDRG32GiBV1P1,\n        StackedDRG64GiBV1P1,\n        Invalid\n    }\n\n    enum RegisteredPoStProof {\n        StackedDRGWinning2KiBV1,\n        StackedDRGWinning8MiBV1,\n        StackedDRGWinning512MiBV1,\n        StackedDRGWinning32GiBV1,\n        StackedDRGWinning64GiBV1,\n        StackedDRGWindow2KiBV1,\n        StackedDRGWindow8MiBV1,\n        StackedDRGWindow512MiBV1,\n        StackedDRGWindow32GiBV1,\n        StackedDRGWindow64GiBV1,\n        Invalid\n    }\n\n    enum RegisteredUpdateProof {\n        StackedDRG2KiBV1,\n        StackedDRG8MiBV1,\n        StackedDRG512MiBV1,\n        StackedDRG32GiBV1,\n        StackedDRG64GiBV1,\n        Invalid\n    }\n    enum ExtensionKind {\n        ExtendCommittmentLegacy,\n        ExtendCommittment\n    }\n\n    enum SectorSize {\n        _2KiB,\n        _8MiB,\n        _512MiB,\n        _32GiB,\n        _64GiB\n    }\n\n    struct ValidatedExpirationExtension {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n        int64 new_expiration;\n    }\n\n    struct ExtendExpirationsInner {\n        ValidatedExpirationExtension[] extensions;\n        bytes claims; // FIXME this is a BTreeMap<SectorNumber, (u64, u64)> on rust\n    }\n\n    struct PendingBeneficiaryChange {\n        bytes new_beneficiary;\n        int256 new_quota;\n        uint64 new_expiration;\n        bool approved_by_beneficiary;\n        bool approved_by_nominee;\n    }\n\n    struct BeneficiaryTerm {\n        int256 quota;\n        int256 used_quota;\n        uint64 expiration;\n    }\n\n    struct ActiveBeneficiary {\n        string beneficiary;\n        BeneficiaryTerm term;\n    }\n\n    struct RecoveryDeclaration {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n    }\n\n    struct FaultDeclaration {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n    }\n\n    struct TerminationDeclaration {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n    }\n\n    struct SectorClaim {\n        uint64 sector_number;\n        uint64[] maintain_claims;\n        uint64[] drop_claims;\n    }\n\n    struct ExpirationExtension2 {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n        SectorClaim[] sectors_with_claims;\n        int64 new_expiration;\n    }\n\n    struct ExpirationExtension {\n        uint64 deadline;\n        uint64 partition;\n        uint8 sectors;\n        int64 new_expiration;\n    }\n\n    struct FilterEstimate {\n        int256 position;\n        int256 velocity;\n    }\n\n    struct SectorPreCommitInfoInner {\n        RegisteredSealProof seal_proof;\n        uint64 sector_number;\n        bytes sealed_cid;\n        int64 seal_rand_epoch;\n        uint64[] deal_ids;\n        int64 expiration;\n        bytes unsealed_cid;\n    }\n\n    struct SectorPreCommitInfo {\n        RegisteredSealProof seal_proof;\n        uint64 sector_number;\n        bytes sealed_cid;\n        int64 seal_rand_epoch;\n        uint64[] deal_ids;\n        int64 expiration;\n        bytes unsealed_cid;\n    }\n    struct ReplicaUpdateInner {\n        uint64 sector_number;\n        uint64 deadline;\n        uint64 partition;\n        bytes new_sealed_cid;\n        bytes new_unsealed_cid;\n        uint64[] deals;\n        RegisteredUpdateProof update_proof_type;\n        bytes replica_proof;\n    }\n\n    struct ReplicaUpdate {\n        uint64 sector_number;\n        uint64 deadline;\n        uint64 partition;\n        bytes new_sealed_cid;\n        uint64 deals;\n        RegisteredUpdateProof update_proof_type;\n        bytes replica_proof;\n    }\n\n    struct ReplicaUpdate2 {\n        uint64 sector_number;\n        uint64 deadline;\n        uint64 partition;\n        bytes new_sealed_cid;\n        bytes new_unsealed_cid;\n        uint64 deals;\n        RegisteredUpdateProof update_proof_type;\n        bytes replica_proof;\n    }\n\n    struct PoStPartition {\n        uint64 index;\n        int8 skipped;\n    }\n\n    struct PoStProof {\n        RegisteredPoStProof post_proof;\n        bytes proof_bytes;\n    }\n\n    struct VestingFunds {\n        int64 epoch;\n        int256 amount;\n    }\n    struct SectorDeals {\n        int64 sector_type;\n        int64 sector_expiry;\n        uint64[] deal_ids;\n    }\n\n    struct Signature {\n        int8 sig_type;\n        bytes data;\n    }\n\n    struct DealProposal {\n        bytes piece_cid;\n        uint64 piece_size;\n        bool verified_deal;\n        bytes client;\n        bytes provider;\n        string label;\n        int64 start_epoch;\n        int64 end_epoch;\n        int storage_price_per_epoch;\n        int provider_collateral;\n        int client_collateral;\n    }\n\n    struct ClientDealProposal {\n        DealProposal proposal;\n        Signature client_signature;\n    }\n\n    struct SectorDealData {\n        bytes commd;\n    }\n\n    struct CID {\n        uint8 version;\n        uint64 codec;\n        Multihash hash;\n    }\n\n    struct Multihash {\n        uint64 code;\n        uint8 size;\n        bytes digest;\n    }\n\n    struct VerifiedDealInfo {\n        uint64 client;\n        uint64 allocation_id;\n        bytes data;\n        uint64 size;\n    }\n\n    struct SectorDataSpec {\n        uint64[] deal_ids;\n        int64 sector_type;\n    }\n}\n"},"contracts/filecoinMockAPIs/types/MarketTypes.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.25 <=0.8.17;\n\n/// @title Filecoin market actor types for Solidity.\n/// @author Zondax AG\nlibrary MarketTypes {\n    struct MockDeal {\n        uint64 id;\n        string cid;\n        uint64 size;\n        bool verified;\n        string client;\n        string provider;\n        string label;\n        int64 start;\n        int64 end;\n        uint256 price_per_epoch;\n        uint256 provider_collateral;\n        uint256 client_collateral;\n        int64 activated;\n        int64 terminated;\n    }\n\n    struct AddBalanceParams {\n        string provider_or_client;\n    }\n\n    struct WithdrawBalanceParams {\n        string provider_or_client;\n        uint256 tokenAmount;\n    }\n\n    struct WithdrawBalanceReturn {\n        uint256 amount_withdrawn;\n    }\n\n    struct GetBalanceReturn {\n        uint256 balance;\n        uint256 locked;\n    }\n\n    struct GetDealDataCommitmentParams {\n        uint64 id;\n    }\n\n    struct GetDealDataCommitmentReturn {\n        bytes data;\n        uint64 size;\n    }\n\n    struct GetDealClientParams {\n        uint64 id;\n    }\n\n    struct GetDealClientReturn {\n        string client;\n    }\n\n    struct GetDealProviderParams {\n        uint64 id;\n    }\n\n    struct GetDealProviderReturn {\n        string provider;\n    }\n\n    struct GetDealLabelParams {\n        uint64 id;\n    }\n\n    struct GetDealLabelReturn {\n        string label;\n    }\n\n    struct GetDealTermParams {\n        uint64 id;\n    }\n\n    struct GetDealTermReturn {\n        int64 start;\n        int64 end;\n    }\n\n    struct GetDealEpochPriceParams {\n        uint64 id;\n    }\n\n    struct GetDealEpochPriceReturn {\n        uint256 price_per_epoch;\n    }\n\n    struct GetDealClientCollateralParams {\n        uint64 id;\n    }\n\n    struct GetDealClientCollateralReturn {\n        uint256 collateral;\n    }\n\n    struct GetDealProviderCollateralParams {\n        uint64 id;\n    }\n\n    struct GetDealProviderCollateralReturn {\n        uint256 collateral;\n    }\n\n    struct GetDealVerifiedParams {\n        uint64 id;\n    }\n\n    struct GetDealVerifiedReturn {\n        bool verified;\n    }\n\n    struct GetDealActivationParams {\n        uint64 id;\n    }\n\n    struct GetDealActivationReturn {\n        int64 activated;\n        int64 terminated;\n    }\n}\n"},"contracts/filecoinMockAPIs/types/MinerTypes.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.4.25 <=0.8.17;\n\nimport \"./CommonTypes.sol\";\n\n/// @title Filecoin miner actor types for Solidity.\n/// @author Zondax AG\nlibrary MinerTypes {\n    struct GetOwnerReturn {\n        string owner;\n    }\n    struct IsControllingAddressParam {\n        string addr;\n    }\n    struct IsControllingAddressReturn {\n        bool is_controlling;\n    }\n    struct GetSectorSizeReturn {\n        uint64 sector_size;\n    }\n    struct GetAvailableBalanceReturn {\n        int256 available_balance;\n    }\n    struct GetVestingFundsReturn {\n        CommonTypes.VestingFunds[] vesting_funds;\n    }\n\n    struct ChangeBeneficiaryParams {\n        string new_beneficiary;\n        int256 new_quota;\n        uint64 new_expiration;\n    }\n\n    struct GetBeneficiaryReturn {\n        CommonTypes.ActiveBeneficiary active;\n        CommonTypes.PendingBeneficiaryChange proposed;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7658,"file":"@openzeppelin/contracts/utils/Address.sol","start":7646},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":8473,"file":"@openzeppelin/contracts/utils/Address.sol","start":8461},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/filecoinMockAPIs/MinerAPI.sol:56:9:\n   |\n56 |         MinerTypes.IsControllingAddressParam memory params\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2600,"file":"contracts/filecoinMockAPIs/MinerAPI.sol","start":2550},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[625],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":626,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":625,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,625],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[910],"IERC721":[228]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":911,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":117,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":910,"src":"271:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":228,"linearizedBaseContracts":[228,910],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":127,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":127,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":127,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":127,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":136,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":136,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":136,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":136,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":145,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":145,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":145,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":145,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":153,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":153,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":153,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":228,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":161,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":161,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":228,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"from","nameLocation":"1852:4:1","nodeType":"VariableDeclaration","scope":173,"src":"1844:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"to","nameLocation":"1874:2:1","nodeType":"VariableDeclaration","scope":173,"src":"1866:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":173,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"data","nameLocation":"1926:4:1","nodeType":"VariableDeclaration","scope":173,"src":"1911:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1945:0:1"},"scope":228,"src":"1809:137:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1952:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:1","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"from","nameLocation":"2687:4:1","nodeType":"VariableDeclaration","scope":183,"src":"2679:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"to","nameLocation":"2709:2:1","nodeType":"VariableDeclaration","scope":183,"src":"2701:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:1","nodeType":"VariableDeclaration","scope":183,"src":"2721:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:1"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"2751:0:1"},"scope":228,"src":"2644:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"2758:732:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:1","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"from","nameLocation":"3534:4:1","nodeType":"VariableDeclaration","scope":193,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"to","nameLocation":"3556:2:1","nodeType":"VariableDeclaration","scope":193,"src":"3548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:1","nodeType":"VariableDeclaration","scope":193,"src":"3568:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"3598:0:1"},"scope":228,"src":"3495:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"3605:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":201,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"to","nameLocation":"4087:2:1","nodeType":"VariableDeclaration","scope":201,"src":"4079:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:1","nodeType":"VariableDeclaration","scope":201,"src":"4091:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:1"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"4116:0:1"},"scope":228,"src":"4062:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"4123:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:1","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"operator","nameLocation":"4472:8:1","nodeType":"VariableDeclaration","scope":209,"src":"4464:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:1","nodeType":"VariableDeclaration","scope":209,"src":"4482:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":205,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"4506:0:1"},"scope":228,"src":"4437:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"4513:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:1","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:1","nodeType":"VariableDeclaration","scope":217,"src":"4678:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"operator","nameLocation":"4726:8:1","nodeType":"VariableDeclaration","scope":217,"src":"4718:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:1"},"scope":228,"src":"4657:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"4742:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"owner","nameLocation":"4919:5:1","nodeType":"VariableDeclaration","scope":227,"src":"4911:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"4934:8:1","nodeType":"VariableDeclaration","scope":227,"src":"4926:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"4967:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:1"},"scope":228,"src":"4885:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":229,"src":"250:4725:1","usedErrors":[]}],"src":"108:4868:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"141:152:2","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":246,"linearizedBaseContracts":[246],"name":"IERC721Receiver","nameLocation":"304:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"326:493:2","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":245,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:2","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"867:8:2","nodeType":"VariableDeclaration","scope":245,"src":"859:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"from","nameLocation":"893:4:2","nodeType":"VariableDeclaration","scope":245,"src":"885:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:2","nodeType":"VariableDeclaration","scope":245,"src":"907:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"data","nameLocation":"947:4:2","nodeType":"VariableDeclaration","scope":245,"src":"932:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:2"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"976:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":242,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:2"},"scope":246,"src":"824:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":247,"src":"294:692:2","usedErrors":[]}],"src":"116:871:2"},"id":2},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[910],"IERC721":[228],"IERC721Metadata":[273]},"id":274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":274,"sourceUnit":229,"src":"137:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":251,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":228,"src":"326:7:3"},"id":252,"nodeType":"InheritanceSpecifier","src":"326:7:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"163:133:3","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":273,"linearizedBaseContracts":[273,228,910],"name":"IERC721Metadata","nameLocation":"307:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"340:58:3","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":258,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"416:2:3"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"442:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:3"},"scope":273,"src":"403:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"463:60:3","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"543:2:3"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"569:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":261,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:3"},"scope":273,"src":"528:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"590:90:3","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:3","nodeType":"VariableDeclaration","scope":272,"src":"703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"743:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:3"},"scope":273,"src":"685:73:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":274,"src":"297:463:3","usedErrors":[]}],"src":"112:649:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[603]},"id":604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":603,"linearizedBaseContracts":[603],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":290,"nodeType":"Block","src":"1241:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":284,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":283,"id":289,"nodeType":"Return","src":"1458:30:4"}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"216:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:4","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"account","nameLocation":"1203:7:4","nodeType":"VariableDeclaration","scope":291,"src":"1195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:4"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"1235:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":281,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:4"},"scope":603,"src":"1175:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"2483:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}],"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":305,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2526:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"2493:73:4"},{"assignments":[311,null],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"success","nameLocation":"2583:7:4","nodeType":"VariableDeclaration","scope":324,"src":"2578:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":318,"initialValue":{"arguments":[{"hexValue":"","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":312,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2596:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2618:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:4"},{"expression":{"arguments":[{"id":320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"2639:78:4"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1501:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:4","nodeType":"VariableDeclaration","scope":325,"src":"2431:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"amount","nameLocation":"2466:6:4","nodeType":"VariableDeclaration","scope":325,"src":"2458:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:4"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"2483:0:4"},"scope":603,"src":"2412:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"3555:96:4","statements":[{"expression":{"arguments":[{"id":336,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3594:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3602:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":335,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"3572:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":334,"id":341,"nodeType":"Return","src":"3565:79:4"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"2730:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:4","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"target","nameLocation":"3496:6:4","nodeType":"VariableDeclaration","scope":343,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"data","nameLocation":"3517:4:4","nodeType":"VariableDeclaration","scope":343,"src":"3504:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":329,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:4"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"3541:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:4"},"scope":603,"src":"3466:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"4020:76:4","statements":[{"expression":{"arguments":[{"id":356,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4059:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4067:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":359,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4076:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":355,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"4037:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":354,"id":361,"nodeType":"Return","src":"4030:59:4"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"3657:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:4","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"target","nameLocation":"3912:6:4","nodeType":"VariableDeclaration","scope":363,"src":"3904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"data","nameLocation":"3941:4:4","nodeType":"VariableDeclaration","scope":363,"src":"3928:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":347,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:4","nodeType":"VariableDeclaration","scope":363,"src":"3955:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"4006:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":352,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:4"},"scope":603,"src":"3873:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"4601:111:4","statements":[{"expression":{"arguments":[{"id":376,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4640:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4648:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":375,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"4618:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":374,"id":381,"nodeType":"Return","src":"4611:94:4"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"4102:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"target","nameLocation":"4506:6:4","nodeType":"VariableDeclaration","scope":383,"src":"4498:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"data","nameLocation":"4535:4:4","nodeType":"VariableDeclaration","scope":383,"src":"4522:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"4557:5:4","nodeType":"VariableDeclaration","scope":383,"src":"4549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:4"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"4587:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":372,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:4"},"scope":603,"src":"4458:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"5139:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:4","typeDescriptions":{}}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5149:81:4"},{"assignments":[409,411],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"success","nameLocation":"5246:7:4","nodeType":"VariableDeclaration","scope":426,"src":"5241:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:4","nodeType":"VariableDeclaration","scope":426,"src":"5255:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":410,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":418,"initialValue":{"arguments":[{"id":416,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5308:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":412,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5282:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:4"},{"expression":{"arguments":[{"id":420,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5357:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":421,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":422,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5374:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":423,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5386:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":419,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5330:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":396,"id":425,"nodeType":"Return","src":"5323:76:4"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"4718:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:4","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"target","nameLocation":"5008:6:4","nodeType":"VariableDeclaration","scope":427,"src":"5000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"data","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":427,"src":"5024:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":387,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"5059:5:4","nodeType":"VariableDeclaration","scope":427,"src":"5051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:4","nodeType":"VariableDeclaration","scope":427,"src":"5074:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":391,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:4"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"5125:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:4"},"scope":603,"src":"4960:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":443,"nodeType":"Block","src":"5683:97:4","statements":[{"expression":{"arguments":[{"id":438,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5727:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":437,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[444,473],"referencedDeclaration":473,"src":"5700:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":436,"id":442,"nodeType":"Return","src":"5693:80:4"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"5412:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:4","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"target","nameLocation":"5619:6:4","nodeType":"VariableDeclaration","scope":444,"src":"5611:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"data","nameLocation":"5640:4:4","nodeType":"VariableDeclaration","scope":444,"src":"5627:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:4"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"5669:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":434,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:4"},"scope":603,"src":"5583:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"6122:168:4","statements":[{"assignments":[457,459],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"success","nameLocation":"6138:7:4","nodeType":"VariableDeclaration","scope":472,"src":"6133:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:4","nodeType":"VariableDeclaration","scope":472,"src":"6147:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":462,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6174:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:4"},{"expression":{"arguments":[{"id":466,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6241:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6249:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6258:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":469,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6270:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":465,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":455,"id":471,"nodeType":"Return","src":"6207:76:4"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"5786:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:4","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"target","nameLocation":"6009:6:4","nodeType":"VariableDeclaration","scope":473,"src":"6001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"data","nameLocation":"6038:4:4","nodeType":"VariableDeclaration","scope":473,"src":"6025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":448,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:4","nodeType":"VariableDeclaration","scope":473,"src":"6052:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":450,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:4"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"6108:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:4"},"scope":603,"src":"5964:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"6566:101:4","statements":[{"expression":{"arguments":[{"id":484,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6612:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":483,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[490,519],"referencedDeclaration":519,"src":"6583:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":482,"id":488,"nodeType":"Return","src":"6576:84:4"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"6296:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:4","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"target","nameLocation":"6507:6:4","nodeType":"VariableDeclaration","scope":490,"src":"6499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"data","nameLocation":"6528:4:4","nodeType":"VariableDeclaration","scope":490,"src":"6515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:4"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"6552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:4"},"scope":603,"src":"6469:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"7008:170:4","statements":[{"assignments":[503,505],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"success","nameLocation":"7024:7:4","nodeType":"VariableDeclaration","scope":518,"src":"7019:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":502,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:4","nodeType":"VariableDeclaration","scope":518,"src":"7033:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":510,"initialValue":{"arguments":[{"id":508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7080:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":506,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:4"},{"expression":{"arguments":[{"id":512,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7129:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":514,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"7146:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":515,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7158:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":511,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7102:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":501,"id":517,"nodeType":"Return","src":"7095:76:4"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"6673:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"target","nameLocation":"6900:6:4","nodeType":"VariableDeclaration","scope":519,"src":"6892:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"data","nameLocation":"6929:4:4","nodeType":"VariableDeclaration","scope":519,"src":"6916:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:4","nodeType":"VariableDeclaration","scope":519,"src":"6943:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:4"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":519,"src":"6994:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":499,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:4"},"scope":603,"src":"6853:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"7660:434:4","statements":[{"condition":{"id":533,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"7674:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":555,"nodeType":"Block","src":"8030:58:4","statements":[{"expression":{"arguments":[{"id":551,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8052:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":552,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"8064:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":550,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8044:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"8044:33:4"}]},"id":556,"nodeType":"IfStatement","src":"7670:418:4","trueBody":{"id":549,"nodeType":"Block","src":"7683:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":534,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7701:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"7697:286:4","trueBody":{"id":545,"nodeType":"Block","src":"7725:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7927:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":539,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7916:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"7908:60:4"}]}},{"expression":{"id":547,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8003:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":532,"id":548,"nodeType":"Return","src":"7996:17:4"}]}}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"7184:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:4","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"target","nameLocation":"7519:6:4","nodeType":"VariableDeclaration","scope":558,"src":"7511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"success","nameLocation":"7540:7:4","nodeType":"VariableDeclaration","scope":558,"src":"7535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:4","nodeType":"VariableDeclaration","scope":558,"src":"7557:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:4","nodeType":"VariableDeclaration","scope":558,"src":"7590:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":527,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:4"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"7646:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":530,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:4"},"scope":603,"src":"7466:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"8475:135:4","statements":[{"condition":{"id":570,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"8489:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":579,"nodeType":"Block","src":"8546:58:4","statements":[{"expression":{"arguments":[{"id":575,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8568:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":576,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"8580:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":574,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8560:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"8560:33:4"}]},"id":580,"nodeType":"IfStatement","src":"8485:119:4","trueBody":{"id":573,"nodeType":"Block","src":"8498:42:4","statements":[{"expression":{"id":571,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":569,"id":572,"nodeType":"Return","src":"8512:17:4"}]}}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"8100:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"success","nameLocation":"8355:7:4","nodeType":"VariableDeclaration","scope":582,"src":"8350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:4","nodeType":"VariableDeclaration","scope":582,"src":"8372:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":562,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:4","nodeType":"VariableDeclaration","scope":582,"src":"8405:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:4"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"8461:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":567,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:4"},"scope":603,"src":"8315:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"8699:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":589,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8775:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":599,"nodeType":"Block","src":"9105:45:4","statements":[{"expression":{"arguments":[{"id":596,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9126:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":595,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"9119:20:4"}]},"id":600,"nodeType":"IfStatement","src":"8771:379:4","trueBody":{"id":594,"nodeType":"Block","src":"8798:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:4"},"nodeType":"YulFunctionCall","src":"8997:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:4"},"nodeType":"YulFunctionCall","src":"9038:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:4"},"nodeType":"YulFunctionCall","src":"9031:44:4"},"nodeType":"YulExpressionStatement","src":"9031:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":584,"isOffset":false,"isSlot":false,"src":"9003:10:4","valueSize":1},{"declaration":584,"isOffset":false,"isSlot":false,"src":"9046:10:4","valueSize":1}],"id":593,"nodeType":"InlineAssembly","src":"8947:142:4"}]}}]},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:4","nodeType":"VariableDeclaration","scope":602,"src":"8633:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:4","nodeType":"VariableDeclaration","scope":602,"src":"8658:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8699:0:4"},"scope":603,"src":"8616:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":604,"src":"194:8964:4","usedErrors":[]}],"src":"101:9058:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[625]},"id":626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":625,"linearizedBaseContracts":[625],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":614,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":610,"id":613,"nodeType":"Return","src":"712:17:5"}]},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":625,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":619,"id":622,"nodeType":"Return","src":"819:15:5"}]},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":624,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":625,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":626,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[699]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":627,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"112:311:6","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699],"name":"Counters","nameLocation":"432:8:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":631,"members":[{"constant":false,"id":630,"mutability":"mutable","name":"_value","nameLocation":"794:6:6","nodeType":"VariableDeclaration","scope":631,"src":"786:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:6","nodeType":"StructDefinition","scope":699,"src":"447:374:6","visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"901:38:6","statements":[{"expression":{"expression":{"id":639,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":630,"src":"918:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":641,"nodeType":"Return","src":"911:21:6"}]},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:6","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"counter","nameLocation":"860:7:6","nodeType":"VariableDeclaration","scope":643,"src":"844:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"844:7:6"},"referencedDeclaration":631,"src":"844:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:6"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"892:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:6"},"scope":699,"src":"827:112:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"998:70:6","statements":[{"id":655,"nodeType":"UncheckedBlock","src":"1008:54:6","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":649,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1032:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":630,"src":"1032:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"1032:19:6"}]}]},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:6","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"counter","nameLocation":"980:7:6","nodeType":"VariableDeclaration","scope":657,"src":"964:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":645,"nodeType":"UserDefinedTypeName","pathNode":{"id":644,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"964:7:6"},"referencedDeclaration":631,"src":"964:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:6"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"998:0:6"},"scope":699,"src":"945:123:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"1127:176:6","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"value","nameLocation":"1145:5:6","nodeType":"VariableDeclaration","scope":684,"src":"1137:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":667,"initialValue":{"expression":{"id":665,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1153:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":630,"src":"1153:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1185:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"1177:49:6"},{"id":683,"nodeType":"UncheckedBlock","src":"1236:61:6","statements":[{"expression":{"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":675,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1260:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":630,"src":"1260:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1277:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":682,"nodeType":"ExpressionStatement","src":"1260:26:6"}]}]},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:6","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"counter","nameLocation":"1109:7:6","nodeType":"VariableDeclaration","scope":685,"src":"1093:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":659,"nodeType":"UserDefinedTypeName","pathNode":{"id":658,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"1093:7:6"},"referencedDeclaration":631,"src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:6"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"1127:0:6"},"scope":699,"src":"1074:229:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"1358:35:6","statements":[{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":691,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1368:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":630,"src":"1368:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":696,"nodeType":"ExpressionStatement","src":"1368:18:6"}]},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:6","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"counter","nameLocation":"1340:7:6","nodeType":"VariableDeclaration","scope":698,"src":"1324:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"1324:7:6"},"referencedDeclaration":631,"src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:6"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"1358:0:6"},"scope":699,"src":"1309:84:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":700,"src":"424:971:6","usedErrors":[]}],"src":"87:1309:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1775],"Strings":[874]},"id":875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":875,"sourceUnit":1776,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"153:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":874,"linearizedBaseContracts":[874],"name":"Strings","nameLocation":"196:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":706,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:7","nodeType":"VariableDeclaration","scope":874,"src":"210:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":704,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":709,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:7","nodeType":"VariableDeclaration","scope":874,"src":"270:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":707,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":756,"nodeType":"Block","src":"486:625:7","statements":[{"id":755,"nodeType":"UncheckedBlock","src":"496:609:7","statements":[{"assignments":[718],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"length","nameLocation":"528:6:7","nodeType":"VariableDeclaration","scope":755,"src":"520:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"548:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":719,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"537:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1775_$","typeString":"type(library Math)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"537:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:7"},{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"buffer","nameLocation":"586:6:7","nodeType":"VariableDeclaration","scope":755,"src":"572:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":726,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":732,"initialValue":{"arguments":[{"id":730,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:7"},{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"ptr","nameLocation":"635:3:7","nodeType":"VariableDeclaration","scope":755,"src":"627:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":735,"nodeType":"VariableDeclarationStatement","src":"627:11:7"},{"AST":{"nodeType":"YulBlock","src":"708:67:7","statements":[{"nodeType":"YulAssignment","src":"726:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:7"},"nodeType":"YulFunctionCall","src":"745:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:7"},"nodeType":"YulFunctionCall","src":"733:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":727,"isOffset":false,"isSlot":false,"src":"737:6:7","valueSize":1},{"declaration":718,"isOffset":false,"isSlot":false,"src":"753:6:7","valueSize":1},{"declaration":734,"isOffset":false,"isSlot":false,"src":"726:3:7","valueSize":1}],"id":736,"nodeType":"InlineAssembly","src":"699:76:7"},{"body":{"id":751,"nodeType":"Block","src":"801:267:7","statements":[{"expression":{"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:7","subExpression":{"id":738,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"819:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ExpressionStatement","src":"819:5:7"},{"AST":{"nodeType":"YulBlock","src":"902:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:7"},"nodeType":"YulFunctionCall","src":"942:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:7"},"nodeType":"YulFunctionCall","src":"937:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:7"},"nodeType":"YulFunctionCall","src":"924:44:7"},"nodeType":"YulExpressionStatement","src":"924:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":706,"isOffset":false,"isSlot":false,"src":"958:8:7","valueSize":1},{"declaration":734,"isOffset":false,"isSlot":false,"src":"932:3:7","valueSize":1},{"declaration":712,"isOffset":false,"isSlot":false,"src":"946:5:7","valueSize":1}],"id":741,"nodeType":"InlineAssembly","src":"893:93:7"},{"expression":{"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":745,"nodeType":"ExpressionStatement","src":"1003:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":750,"nodeType":"IfStatement","src":"1032:21:7","trueBody":{"id":749,"nodeType":"Break","src":"1048:5:7"}}]},"condition":{"hexValue":"74727565","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":752,"nodeType":"WhileStatement","src":"788:280:7"},{"expression":{"id":753,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1088:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":716,"id":754,"nodeType":"Return","src":"1081:13:7"}]}]},"documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"320:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:7","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"value","nameLocation":"441:5:7","nodeType":"VariableDeclaration","scope":757,"src":"433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:7"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"471:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":714,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:7"},"scope":874,"src":"415:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"1290:100:7","statements":[{"id":775,"nodeType":"UncheckedBlock","src":"1300:84:7","statements":[{"expression":{"arguments":[{"id":766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":767,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1350:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1775_$","typeString":"type(library Math)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1735,"src":"1350:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[777,853,873],"referencedDeclaration":853,"src":"1331:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":764,"id":774,"nodeType":"Return","src":"1324:49:7"}]}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"1117:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:7","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"value","nameLocation":"1245:5:7","nodeType":"VariableDeclaration","scope":777,"src":"1237:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:7"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"1275:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":762,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:7"},"scope":874,"src":"1216:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"1603:347:7","statements":[{"assignments":[788],"declarations":[{"constant":false,"id":788,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:7","nodeType":"VariableDeclaration","scope":852,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":792,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":789,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:7"},{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1670:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":800,"indexExpression":{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":803,"nodeType":"ExpressionStatement","src":"1670:15:7"},{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":804,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1695:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":806,"indexExpression":{"hexValue":"31","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":809,"nodeType":"ExpressionStatement","src":"1695:15:7"},{"body":{"id":838,"nodeType":"Block","src":"1765:83:7","statements":[{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":824,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1779:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":826,"indexExpression":{"id":825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":827,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"1791:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":831,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1800:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":833,"nodeType":"ExpressionStatement","src":"1779:33:7"},{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":837,"nodeType":"ExpressionStatement","src":"1826:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":839,"initializationExpression":{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"i","nameLocation":"1733:1:7","nodeType":"VariableDeclaration","scope":839,"src":"1725:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":813,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1741:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:7"},"loopExpression":{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:7","subExpression":{"id":821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"1760:3:7"},"nodeType":"ForStatement","src":"1720:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"1857:55:7"},{"expression":{"arguments":[{"id":849,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1936:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":786,"id":851,"nodeType":"Return","src":"1922:21:7"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"1396:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:7","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"value","nameLocation":"1542:5:7","nodeType":"VariableDeclaration","scope":853,"src":"1534:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"length","nameLocation":"1557:6:7","nodeType":"VariableDeclaration","scope":853,"src":"1549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:7"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"1588:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":784,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:7"},"scope":874,"src":"1513:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"2175:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":866,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"2220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":864,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:7","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:7","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":869,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2228:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":861,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[777,853,873],"referencedDeclaration":853,"src":"2192:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":860,"id":871,"nodeType":"Return","src":"2185:59:7"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1956:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:7","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"addr","nameLocation":"2131:4:7","nodeType":"VariableDeclaration","scope":873,"src":"2123:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:7"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"2160:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":858,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:7"},"scope":874,"src":"2102:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":875,"src":"188:2065:7","usedErrors":[]}],"src":"101:2153:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[898],"IERC165":[910]},"id":899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":876,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":899,"sourceUnit":911,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":879,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":910,"src":"754:7:8"},"id":880,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":898,"linearizedBaseContracts":[898,910],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[909],"body":{"id":896,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":891,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$910_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$910_$","typeString":"type(contract IERC165)"}],"id":890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$910","typeString":"type(contract IERC165)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":888,"id":895,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":897,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":885,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":897,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":882,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":898,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":899,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[910]},"id":911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":900,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":910,"linearizedBaseContracts":[910],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":909,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":903,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":910,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":911,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1775]},"id":1776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":912,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1775,"linearizedBaseContracts":[1775],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":917,"members":[{"id":914,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":915,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":916,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":934,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":926,"id":933,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":935,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":935,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":1775,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":944,"id":951,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":953,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":953,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":1775,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":962,"id":974,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":976,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":976,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":1775,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1000,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":985,"id":999,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1001,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1001,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1001,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":1775,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"1795:3797:10","statements":[{"id":1121,"nodeType":"UncheckedBlock","src":"1805:3781:10","statements":[{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:10","nodeType":"VariableDeclaration","scope":1121,"src":"2126:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"nodeType":"VariableDeclarationStatement","src":"2126:13:10"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:10","nodeType":"VariableDeclaration","scope":1121,"src":"2198:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1018,"nodeType":"VariableDeclarationStatement","src":"2198:13:10"},{"AST":{"nodeType":"YulBlock","src":"2278:157:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:10"},"nodeType":"YulFunctionCall","src":"2319:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:10"},"nodeType":"YulFunctionCall","src":"2306:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:10","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:10"},"nodeType":"YulFunctionCall","src":"2352:9:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:10"}]},{"nodeType":"YulAssignment","src":"2378:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:10"},"nodeType":"YulFunctionCall","src":"2391:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:10"},"nodeType":"YulFunctionCall","src":"2407:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:10"},"nodeType":"YulFunctionCall","src":"2387:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1014,"isOffset":false,"isSlot":false,"src":"2343:5:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"2399:5:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"2414:5:10","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"2378:5:10","valueSize":1},{"declaration":1004,"isOffset":false,"isSlot":false,"src":"2313:1:10","valueSize":1},{"declaration":1004,"isOffset":false,"isSlot":false,"src":"2356:1:10","valueSize":1},{"declaration":1006,"isOffset":false,"isSlot":false,"src":"2316:1:10","valueSize":1},{"declaration":1006,"isOffset":false,"isSlot":false,"src":"2359:1:10","valueSize":1}],"id":1019,"nodeType":"InlineAssembly","src":"2269:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2516:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"2512:75:10","trueBody":{"id":1027,"nodeType":"Block","src":"2528:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2553:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1024,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2561:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1012,"id":1026,"nodeType":"Return","src":"2546:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2697:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1031,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2711:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"2689:28:10"},{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:10","nodeType":"VariableDeclaration","scope":1121,"src":"2973:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"nodeType":"VariableDeclarationStatement","src":"2973:17:10"},{"AST":{"nodeType":"YulBlock","src":"3013:291:10","statements":[{"nodeType":"YulAssignment","src":"3082:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:10"},"nodeType":"YulFunctionCall","src":"3095:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:10"}]},{"nodeType":"YulAssignment","src":"3202:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:10"},"nodeType":"YulFunctionCall","src":"3222:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:10"},"nodeType":"YulFunctionCall","src":"3211:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:10"}]},{"nodeType":"YulAssignment","src":"3260:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:10"},"nodeType":"YulFunctionCall","src":"3269:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1008,"isOffset":false,"isSlot":false,"src":"3108:11:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"3236:5:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"3260:5:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"3273:5:10","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"3202:5:10","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"3215:5:10","valueSize":1},{"declaration":1036,"isOffset":false,"isSlot":false,"src":"3082:9:10","valueSize":1},{"declaration":1036,"isOffset":false,"isSlot":false,"src":"3225:9:10","valueSize":1},{"declaration":1036,"isOffset":false,"isSlot":false,"src":"3280:9:10","valueSize":1},{"declaration":1004,"isOffset":false,"isSlot":false,"src":"3102:1:10","valueSize":1},{"declaration":1006,"isOffset":false,"isSlot":false,"src":"3105:1:10","valueSize":1}],"id":1038,"nodeType":"InlineAssembly","src":"3004:300:10"},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"twos","nameLocation":"3619:4:10","nodeType":"VariableDeclaration","scope":1121,"src":"3611:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1048,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3626:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:10","subExpression":{"id":1042,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3642:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:10"},{"AST":{"nodeType":"YulBlock","src":"3681:362:10","statements":[{"nodeType":"YulAssignment","src":"3746:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:10"},"nodeType":"YulFunctionCall","src":"3761:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:10"}]},{"nodeType":"YulAssignment","src":"3850:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:10"},"nodeType":"YulFunctionCall","src":"3859:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:10"}]},{"nodeType":"YulAssignment","src":"3990:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:10"},"nodeType":"YulFunctionCall","src":"4006:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:10"},"nodeType":"YulFunctionCall","src":"4002:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:10"},"nodeType":"YulFunctionCall","src":"3998:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1008,"isOffset":false,"isSlot":false,"src":"3746:11:10","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"3765:11:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"3850:5:10","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"3863:5:10","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"3778:4:10","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"3870:4:10","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"3990:4:10","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"4013:4:10","valueSize":1},{"declaration":1040,"isOffset":false,"isSlot":false,"src":"4020:4:10","valueSize":1}],"id":1049,"nodeType":"InlineAssembly","src":"3672:371:10"},{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1050,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4109:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"4118:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1052,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"4126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ExpressionStatement","src":"4109:21:10"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:10","nodeType":"VariableDeclaration","scope":1121,"src":"4448:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4471:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:10"},{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1068,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4733:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"4704:36:10"},{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4773:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4788:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1076,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"4773:36:10"},{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1081,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4843:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1084,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"4843:36:10"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1089,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4913:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4928:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1092,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ExpressionStatement","src":"4913:36:10"},{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1097,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4998:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ExpressionStatement","src":"4983:36:10"},{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1105,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"5069:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"5054:36:10"},{"expression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5533:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ExpressionStatement","src":"5524:24:10"},{"expression":{"id":1119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5569:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1012,"id":1120,"nodeType":"Return","src":"5562:13:10"}]}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"x","nameLocation":"1700:1:10","nodeType":"VariableDeclaration","scope":1123,"src":"1692:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"y","nameLocation":"1719:1:10","nodeType":"VariableDeclaration","scope":1123,"src":"1711:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:10","nodeType":"VariableDeclaration","scope":1123,"src":"1730:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:10"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"result","nameLocation":"1787:6:10","nodeType":"VariableDeclaration","scope":1123,"src":"1779:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:10"},"scope":1775,"src":"1667:3925:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"5872:189:10","statements":[{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"result","nameLocation":"5890:6:10","nodeType":"VariableDeclaration","scope":1166,"src":"5882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1145,"initialValue":{"arguments":[{"id":1141,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5906:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1142,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5909:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1143,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5912:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1140,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1123,1167],"referencedDeclaration":1123,"src":"5899:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"5938:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1147,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5950:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$917_$","typeString":"type(enum Math.Rounding)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":915,"src":"5950:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"src":"5938:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1151,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5972:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1152,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5975:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1153,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5978:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1163,"nodeType":"IfStatement","src":"5934:98:10","trueBody":{"id":1162,"nodeType":"Block","src":"5996:36:10","statements":[{"expression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ExpressionStatement","src":"6010:11:10"}]}},{"expression":{"id":1164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6048:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1137,"id":1165,"nodeType":"Return","src":"6041:13:10"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"5598:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:10","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"x","nameLocation":"5757:1:10","nodeType":"VariableDeclaration","scope":1167,"src":"5749:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"y","nameLocation":"5776:1:10","nodeType":"VariableDeclaration","scope":1167,"src":"5768:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:10","nodeType":"VariableDeclaration","scope":1167,"src":"5787:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:10","nodeType":"VariableDeclaration","scope":1167,"src":"5816:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"typeName":{"id":1132,"nodeType":"UserDefinedTypeName","pathNode":{"id":1131,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":917,"src":"5816:8:10"},"referencedDeclaration":917,"src":"5816:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:10"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"5863:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:10"},"scope":1775,"src":"5724:337:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"6337:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"6351:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1181,"nodeType":"IfStatement","src":"6347:45:10","trueBody":{"id":1180,"nodeType":"Block","src":"6359:33:10","statements":[{"expression":{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1174,"id":1179,"nodeType":"Return","src":"6373:8:10"}]}},{"assignments":[1183],"declarations":[{"constant":false,"id":1183,"mutability":"mutable","name":"result","nameLocation":"7079:6:10","nodeType":"VariableDeclaration","scope":1278,"src":"7071:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1192,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7099:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1447,1483],"referencedDeclaration":1447,"src":"7094:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:10"},{"id":1277,"nodeType":"UncheckedBlock","src":"7508:408:10","statements":[{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7532:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7542:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7555:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1203,"nodeType":"ExpressionStatement","src":"7532:35:10"},{"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7581:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7591:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7600:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7604:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1214,"nodeType":"ExpressionStatement","src":"7581:35:10"},{"expression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7630:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1225,"nodeType":"ExpressionStatement","src":"7630:35:10"},{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7689:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7698:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7702:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1236,"nodeType":"ExpressionStatement","src":"7679:35:10"},{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7728:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7738:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7747:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7751:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ExpressionStatement","src":"7728:35:10"},{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7787:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7796:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7800:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ExpressionStatement","src":"7777:35:10"},{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7826:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7836:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7845:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1269,"nodeType":"ExpressionStatement","src":"7826:35:10"},{"expression":{"arguments":[{"id":1271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7886:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7894:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"7898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"7882:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1174,"id":1276,"nodeType":"Return","src":"7875:30:10"}]}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"6067:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:10","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"a","nameLocation":"6302:1:10","nodeType":"VariableDeclaration","scope":1279,"src":"6294:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:10"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"6328:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:10"},"scope":1775,"src":"6280:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"8098:161:10","statements":[{"id":1313,"nodeType":"UncheckedBlock","src":"8108:145:10","statements":[{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"result","nameLocation":"8140:6:10","nodeType":"VariableDeclaration","scope":1313,"src":"8132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"arguments":[{"id":1293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"8154:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1279,1315],"referencedDeclaration":1279,"src":"8149:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1297,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"8187:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1298,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"8199:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$917_$","typeString":"type(enum Math.Rounding)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":915,"src":"8199:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"src":"8187:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8214:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8223:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"8232:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:10","trueExpression":{"hexValue":"31","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1289,"id":1312,"nodeType":"Return","src":"8170:72:10"}]}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"7928:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:10","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"a","nameLocation":"8044:1:10","nodeType":"VariableDeclaration","scope":1315,"src":"8036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:10","nodeType":"VariableDeclaration","scope":1315,"src":"8047:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":917,"src":"8047:8:10"},"referencedDeclaration":917,"src":"8047:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:10"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"8089:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:10"},"scope":1775,"src":"8022:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1446,"nodeType":"Block","src":"8444:922:10","statements":[{"assignments":[1324],"declarations":[{"constant":false,"id":1324,"mutability":"mutable","name":"result","nameLocation":"8462:6:10","nodeType":"VariableDeclaration","scope":1446,"src":"8454:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1326,"initialValue":{"hexValue":"30","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:10"},{"id":1443,"nodeType":"UncheckedBlock","src":"8482:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8510:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"nodeType":"IfStatement","src":"8506:99:10","trueBody":{"id":1340,"nodeType":"Block","src":"8528:77:10","statements":[{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"8546:13:10"},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8577:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"8577:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8622:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1356,"nodeType":"IfStatement","src":"8618:96:10","trueBody":{"id":1355,"nodeType":"Block","src":"8639:75:10","statements":[{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8657:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"8657:12:10"},{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8687:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ExpressionStatement","src":"8687:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"8727:96:10","trueBody":{"id":1370,"nodeType":"Block","src":"8748:75:10","statements":[{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8766:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"8766:12:10"},{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8796:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1369,"nodeType":"ExpressionStatement","src":"8796:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8840:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1386,"nodeType":"IfStatement","src":"8836:96:10","trueBody":{"id":1385,"nodeType":"Block","src":"8857:75:10","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8875:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"8875:12:10"},{"expression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8905:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ExpressionStatement","src":"8905:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8949:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"8945:93:10","trueBody":{"id":1400,"nodeType":"Block","src":"8965:73:10","statements":[{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"nodeType":"ExpressionStatement","src":"8983:11:10"},{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9012:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ExpressionStatement","src":"9012:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9055:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"nodeType":"IfStatement","src":"9051:93:10","trueBody":{"id":1415,"nodeType":"Block","src":"9071:73:10","statements":[{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ExpressionStatement","src":"9089:11:10"},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9118:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"9118:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9161:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"9157:93:10","trueBody":{"id":1430,"nodeType":"Block","src":"9177:73:10","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9195:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ExpressionStatement","src":"9195:11:10"},{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9224:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"9224:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"9267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"nodeType":"IfStatement","src":"9263:64:10","trueBody":{"id":1441,"nodeType":"Block","src":"9283:44:10","statements":[{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9301:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ExpressionStatement","src":"9301:11:10"}]}}]},{"expression":{"id":1444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9353:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1322,"id":1445,"nodeType":"Return","src":"9346:13:10"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"8265:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:10","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"value","nameLocation":"8405:5:10","nodeType":"VariableDeclaration","scope":1447,"src":"8397:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:10"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"8435:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:10"},"scope":1775,"src":"8383:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1482,"nodeType":"Block","src":"9599:165:10","statements":[{"id":1481,"nodeType":"UncheckedBlock","src":"9609:149:10","statements":[{"assignments":[1459],"declarations":[{"constant":false,"id":1459,"mutability":"mutable","name":"result","nameLocation":"9641:6:10","nodeType":"VariableDeclaration","scope":1481,"src":"9633:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1463,"initialValue":{"arguments":[{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"9655:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1447,1483],"referencedDeclaration":1447,"src":"9650:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"9682:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"9692:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1466,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"9704:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$917_$","typeString":"type(enum Math.Rounding)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":915,"src":"9704:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"src":"9692:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"9724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"9733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:10","trueExpression":{"hexValue":"31","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1457,"id":1480,"nodeType":"Return","src":"9675:72:10"}]}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"9372:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:10","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"value","nameLocation":"9541:5:10","nodeType":"VariableDeclaration","scope":1483,"src":"9533:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:10","nodeType":"VariableDeclaration","scope":1483,"src":"9548:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"typeName":{"id":1452,"nodeType":"UserDefinedTypeName","pathNode":{"id":1451,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":917,"src":"9548:8:10"},"referencedDeclaration":917,"src":"9548:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:10"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"9590:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:10"},"scope":1775,"src":"9519:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"9951:828:10","statements":[{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"result","nameLocation":"9969:6:10","nodeType":"VariableDeclaration","scope":1611,"src":"9961:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1494,"initialValue":{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:10"},{"id":1608,"nodeType":"UncheckedBlock","src":"9989:761:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10017:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"10013:99:10","trueBody":{"id":1510,"nodeType":"Block","src":"10034:78:10","statements":[{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"10052:15:10"},{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10085:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"nodeType":"ExpressionStatement","src":"10085:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10129:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1528,"nodeType":"IfStatement","src":"10125:99:10","trueBody":{"id":1527,"nodeType":"Block","src":"10146:78:10","statements":[{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"10164:15:10"},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10197:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"nodeType":"ExpressionStatement","src":"10197:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10241:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1545,"nodeType":"IfStatement","src":"10237:99:10","trueBody":{"id":1544,"nodeType":"Block","src":"10258:78:10","statements":[{"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10276:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1539,"nodeType":"ExpressionStatement","src":"10276:15:10"},{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10309:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"nodeType":"ExpressionStatement","src":"10309:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10353:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1562,"nodeType":"IfStatement","src":"10349:96:10","trueBody":{"id":1561,"nodeType":"Block","src":"10369:76:10","statements":[{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ExpressionStatement","src":"10387:14:10"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10419:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ExpressionStatement","src":"10419:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10462:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"IfStatement","src":"10458:96:10","trueBody":{"id":1578,"nodeType":"Block","src":"10478:76:10","statements":[{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10496:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"10496:14:10"},{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10528:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"10528:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10571:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"IfStatement","src":"10567:96:10","trueBody":{"id":1595,"nodeType":"Block","src":"10587:76:10","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10605:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1590,"nodeType":"ExpressionStatement","src":"10605:14:10"},{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10637:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"10637:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"10680:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"10676:64:10","trueBody":{"id":1606,"nodeType":"Block","src":"10696:44:10","statements":[{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10714:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"10714:11:10"}]}}]},{"expression":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10766:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1490,"id":1610,"nodeType":"Return","src":"10759:13:10"}]},"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"9770:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:10","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"value","nameLocation":"9912:5:10","nodeType":"VariableDeclaration","scope":1612,"src":"9904:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:10"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"9942:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:10"},"scope":1775,"src":"9889:890:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1647,"nodeType":"Block","src":"11014:165:10","statements":[{"id":1646,"nodeType":"UncheckedBlock","src":"11024:149:10","statements":[{"assignments":[1624],"declarations":[{"constant":false,"id":1624,"mutability":"mutable","name":"result","nameLocation":"11056:6:10","nodeType":"VariableDeclaration","scope":1646,"src":"11048:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1628,"initialValue":{"arguments":[{"id":1626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"11071:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1612,1648],"referencedDeclaration":1612,"src":"11065:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"11098:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"11108:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1631,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"11120:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$917_$","typeString":"type(enum Math.Rounding)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":915,"src":"11120:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"src":"11108:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"11139:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"11148:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:10","trueExpression":{"hexValue":"31","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1622,"id":1645,"nodeType":"Return","src":"11091:71:10"}]}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"10785:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:10","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"value","nameLocation":"10956:5:10","nodeType":"VariableDeclaration","scope":1648,"src":"10948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:10","nodeType":"VariableDeclaration","scope":1648,"src":"10963:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"typeName":{"id":1617,"nodeType":"UserDefinedTypeName","pathNode":{"id":1616,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":917,"src":"10963:8:10"},"referencedDeclaration":917,"src":"10963:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:10"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"11005:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:10"},"scope":1775,"src":"10933:246:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"11493:600:10","statements":[{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"result","nameLocation":"11511:6:10","nodeType":"VariableDeclaration","scope":1734,"src":"11503:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1659,"initialValue":{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:10"},{"id":1731,"nodeType":"UncheckedBlock","src":"11531:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1674,"nodeType":"IfStatement","src":"11555:98:10","trueBody":{"id":1673,"nodeType":"Block","src":"11577:76:10","statements":[{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"11595:13:10"},{"expression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11626:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"nodeType":"ExpressionStatement","src":"11626:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11670:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1689,"nodeType":"IfStatement","src":"11666:95:10","trueBody":{"id":1688,"nodeType":"Block","src":"11687:74:10","statements":[{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11705:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"11705:12:10"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11735:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"11735:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11778:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"11774:95:10","trueBody":{"id":1703,"nodeType":"Block","src":"11795:74:10","statements":[{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11813:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"11813:12:10"},{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11843:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ExpressionStatement","src":"11843:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11886:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"nodeType":"IfStatement","src":"11882:95:10","trueBody":{"id":1718,"nodeType":"Block","src":"11903:74:10","statements":[{"expression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1713,"nodeType":"ExpressionStatement","src":"11921:12:10"},{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11951:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"11951:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"11994:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1730,"nodeType":"IfStatement","src":"11990:64:10","trueBody":{"id":1729,"nodeType":"Block","src":"12010:44:10","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12028:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"12028:11:10"}]}}]},{"expression":{"id":1732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12080:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1655,"id":1733,"nodeType":"Return","src":"12073:13:10"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"11185:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:10","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"value","nameLocation":"11454:5:10","nodeType":"VariableDeclaration","scope":1735,"src":"11446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:10"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"11484:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:10"},"scope":1775,"src":"11430:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"12329:173:10","statements":[{"id":1772,"nodeType":"UncheckedBlock","src":"12339:157:10","statements":[{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"result","nameLocation":"12371:6:10","nodeType":"VariableDeclaration","scope":1772,"src":"12363:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1751,"initialValue":{"arguments":[{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"12387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1748,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1735,1774],"referencedDeclaration":1735,"src":"12380:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"12424:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1754,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"12436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$917_$","typeString":"type(enum Math.Rounding)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":915,"src":"12436:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"src":"12424:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"12457:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"12471:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:10","trueExpression":{"hexValue":"31","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1745,"id":1771,"nodeType":"Return","src":"12407:78:10"}]}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"12099:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:10","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"value","nameLocation":"12271:5:10","nodeType":"VariableDeclaration","scope":1774,"src":"12263:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:10","nodeType":"VariableDeclaration","scope":1774,"src":"12278:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"},"typeName":{"id":1740,"nodeType":"UserDefinedTypeName","pathNode":{"id":1739,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":917,"src":"12278:8:10"},"referencedDeclaration":917,"src":"12278:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$917","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:10"},"returnParameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"12320:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:10"},"scope":1775,"src":"12247:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1776,"src":"202:12302:10","usedErrors":[]}],"src":"103:12402:10"},"id":10},"contracts/CrypticAgreement.sol":{"ast":{"absolutePath":"contracts/CrypticAgreement.sol","exportedSymbols":{"Context":[625],"CrypticAgreement":[2008],"Ownable":[112]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1777,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2009,"sourceUnit":113,"src":"57:52:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1779,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"140:7:11"},"id":1780,"nodeType":"InheritanceSpecifier","src":"140:7:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008,112,625],"name":"CrypticAgreement","nameLocation":"120:16:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1782,"mutability":"mutable","name":"name","nameLocation":"161:4:11","nodeType":"VariableDeclaration","scope":2008,"src":"154:11:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"154:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"cid","nameLocation":"178:3:11","nodeType":"VariableDeclaration","scope":2008,"src":"171:10:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"171:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"creator","nameLocation":"195:7:11","nodeType":"VariableDeclaration","scope":2008,"src":"187:15:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"status","nameLocation":"215:6:11","nodeType":"VariableDeclaration","scope":2008,"src":"208:13:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1787,"name":"string","nodeType":"ElementaryTypeName","src":"208:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"functionSelector":"0555ff41","id":1792,"mutability":"mutable","name":"signed","nameLocation":"260:6:11","nodeType":"VariableDeclaration","scope":2008,"src":"228:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1791,"keyType":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"236:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"228:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1790,"name":"bool","nodeType":"ElementaryTypeName","src":"247:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":1795,"mutability":"mutable","name":"members","nameLocation":"282:7:11","nodeType":"VariableDeclaration","scope":2008,"src":"272:17:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1794,"nodeType":"ArrayTypeName","src":"272:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"signedMembers","nameLocation":"303:13:11","nodeType":"VariableDeclaration","scope":2008,"src":"295:21:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"455:103:11","statements":[{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1808,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"465:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1809,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"472:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"465:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1811,"nodeType":"ExpressionStatement","src":"465:12:11"},{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"487:3:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1813,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"493:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"487:10:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1815,"nodeType":"ExpressionStatement","src":"487:10:11"},{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"507:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1817,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"517:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"507:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1819,"nodeType":"ExpressionStatement","src":"507:18:11"},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1820,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"535:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1821,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"544:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"535:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1823,"nodeType":"ExpressionStatement","src":"535:16:11"}]},"id":1825,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"_name","nameLocation":"358:5:11","nodeType":"VariableDeclaration","scope":1825,"src":"344:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1798,"name":"string","nodeType":"ElementaryTypeName","src":"344:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"_cid","nameLocation":"387:4:11","nodeType":"VariableDeclaration","scope":1825,"src":"373:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"373:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"_creator","nameLocation":"409:8:11","nodeType":"VariableDeclaration","scope":1825,"src":"401:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"_status","nameLocation":"441:7:11","nodeType":"VariableDeclaration","scope":1825,"src":"427:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1804,"name":"string","nodeType":"ElementaryTypeName","src":"427:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"334:120:11"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"455:0:11"},"scope":2008,"src":"323:235:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1871,"nodeType":"Block","src":"618:232:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"636:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"636:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1834,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"650:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"636:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e20616464206d656d62657273","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"659:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a","typeString":"literal_string \"Only owner can add members\""},"value":"Only owner can add members"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a","typeString":"literal_string \"Only owner can add members\""}],"id":1831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"628:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"628:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1838,"nodeType":"ExpressionStatement","src":"628:60:11"},{"body":{"id":1869,"nodeType":"Block","src":"744:100:11","statements":[{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1850,"name":"signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"758:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1857,"indexExpression":{"arguments":[{"baseExpression":{"id":1853,"name":"_members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"773:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1855,"indexExpression":{"id":1854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"782:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"773:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"765:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"765:7:11","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"765:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"758:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"789:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"758:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1860,"nodeType":"ExpressionStatement","src":"758:36:11"},{"expression":{"arguments":[{"baseExpression":{"id":1864,"name":"_members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"821:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1866,"indexExpression":{"id":1865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"830:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"821:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1861,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"808:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"808:12:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"808:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"ExpressionStatement","src":"808:25:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"718:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1844,"name":"_members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"722:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"722:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"718:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"initializationExpression":{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"i","nameLocation":"711:1:11","nodeType":"VariableDeclaration","scope":1870,"src":"703:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"hexValue":"30","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"715:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"703:13:11"},"loopExpression":{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"739:3:11","subExpression":{"id":1847,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"739:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"739:3:11"},"nodeType":"ForStatement","src":"698:146:11"}]},"functionSelector":"6f4d469b","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"addMembers","nameLocation":"573:10:11","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"_members","nameLocation":"601:8:11","nodeType":"VariableDeclaration","scope":1872,"src":"584:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"584:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1827,"nodeType":"ArrayTypeName","src":"584:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"583:27:11"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"618:0:11"},"scope":2008,"src":"564:286:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1909,"nodeType":"Block","src":"927:240:11","statements":[{"assignments":[1880],"declarations":[{"constant":false,"id":1880,"mutability":"mutable","name":"containsMember","nameLocation":"942:14:11","nodeType":"VariableDeclaration","scope":1909,"src":"937:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1879,"name":"bool","nodeType":"ElementaryTypeName","src":"937:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1882,"initialValue":{"hexValue":"66616c7365","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"959:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"937:27:11"},{"body":{"id":1905,"nodeType":"Block","src":"1019:111:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1894,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1037:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1896,"indexExpression":{"id":1895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1045:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1037:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1897,"name":"memberAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"1051:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1037:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"1033:87:11","trueBody":{"id":1903,"nodeType":"Block","src":"1066:54:11","statements":[{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1899,"name":"containsMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1084:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1101:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1084:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"ExpressionStatement","src":"1084:21:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"994:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1888,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"998:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"998:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"994:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"initializationExpression":{"assignments":[1884],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"i","nameLocation":"987:1:11","nodeType":"VariableDeclaration","scope":1906,"src":"979:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1886,"initialValue":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"991:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"979:13:11"},"loopExpression":{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1014:3:11","subExpression":{"id":1891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1014:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"1014:3:11"},"nodeType":"ForStatement","src":"974:156:11"},{"expression":{"id":1907,"name":"containsMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1146:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1878,"id":1908,"nodeType":"Return","src":"1139:21:11"}]},"functionSelector":"aaf2e5d8","id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"checkMember","nameLocation":"865:11:11","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"memberAddress","nameLocation":"885:13:11","nodeType":"VariableDeclaration","scope":1910,"src":"877:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:23:11"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"921:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"921:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"920:6:11"},"scope":2008,"src":"856:311:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1946,"nodeType":"Block","src":"1219:276:11","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"containsMember","nameLocation":"1234:14:11","nodeType":"VariableDeclaration","scope":1946,"src":"1229:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1915,"name":"bool","nodeType":"ElementaryTypeName","src":"1229:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1920,"initialValue":{"arguments":[{"id":1918,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1263:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1917,"name":"checkMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1251:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1251:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1229:41:11"},{"expression":{"arguments":[{"id":1922,"name":"containsMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1288:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f74206d656d626572206f6620746869732061677265656d656e74","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1304:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0","typeString":"literal_string \"You are not member of this agreement\""},"value":"You are not member of this agreement"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0","typeString":"literal_string \"You are not member of this agreement\""}],"id":1921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1280:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1280:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"1280:63:11"},{"expression":{"arguments":[{"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1361:15:11","subExpression":{"baseExpression":{"id":1927,"name":"signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1362:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1929,"indexExpression":{"id":1928,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1369:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1362:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c7265616479207369676e65642061677265656d656e74","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1378:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9","typeString":"literal_string \"You have already signed agreement\""},"value":"You have already signed agreement"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9","typeString":"literal_string \"You have already signed agreement\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1353:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1353:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"1353:61:11"},{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1934,"name":"signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1424:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1936,"indexExpression":{"id":1935,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1431:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1424:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1441:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1424:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"ExpressionStatement","src":"1424:21:11"},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"signedMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1455:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"signedMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1471:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1471:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1945,"nodeType":"ExpressionStatement","src":"1455:33:11"}]},"functionSelector":"db8ddcc9","id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"signAgreement","nameLocation":"1182:13:11","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"signer","nameLocation":"1204:6:11","nodeType":"VariableDeclaration","scope":1947,"src":"1196:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1195:16:11"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"1219:0:11"},"scope":2008,"src":"1173:322:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"1569:141:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"signedMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1583:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1953,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1600:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1600:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1583:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1961,"nodeType":"Block","src":"1662:42:11","statements":[{"expression":{"hexValue":"556e7369676e6564","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1683:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2165a249363b40c213b362bc2bf65514383d9ff0d74698c0ab47cc657e2f70be","typeString":"literal_string \"Unsigned\""},"value":"Unsigned"},"functionReturnParameters":1951,"id":1960,"nodeType":"Return","src":"1676:17:11"}]},"id":1962,"nodeType":"IfStatement","src":"1579:125:11","trueBody":{"id":1958,"nodeType":"Block","src":"1616:40:11","statements":[{"expression":{"hexValue":"5369676e6564","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1637:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f368d33078fbef144a41ddeaf9da70677bc5df7b112e9648455a68de7431a058","typeString":"literal_string \"Signed\""},"value":"Signed"},"functionReturnParameters":1951,"id":1957,"nodeType":"Return","src":"1630:15:11"}]}}]},"functionSelector":"ce0fabd8","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"checkAgreementStatus","nameLocation":"1510:20:11","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"1530:2:11"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1964,"src":"1554:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"1554:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1553:15:11"},"scope":2008,"src":"1501:209:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1972,"nodeType":"Block","src":"1777:31:11","statements":[{"expression":{"id":1970,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1794:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1969,"id":1971,"nodeType":"Return","src":"1787:14:11"}]},"functionSelector":"9eab5253","id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"getMembers","nameLocation":"1725:10:11","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"1735:2:11"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"1759:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1967,"nodeType":"ArrayTypeName","src":"1759:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1758:18:11"},"scope":2008,"src":"1716:92:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1980,"nodeType":"Block","src":"1869:28:11","statements":[{"expression":{"id":1978,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1886:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1977,"id":1979,"nodeType":"Return","src":"1879:11:11"}]},"functionSelector":"17d7de7c","id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"1823:7:11","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"1830:2:11"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"1854:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"1854:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1853:15:11"},"scope":2008,"src":"1814:83:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1988,"nodeType":"Block","src":"1957:27:11","statements":[{"expression":{"id":1986,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1974:3:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1985,"id":1987,"nodeType":"Return","src":"1967:10:11"}]},"functionSelector":"ca00c702","id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"getCid","nameLocation":"1912:6:11","nodeType":"FunctionDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[],"src":"1918:2:11"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"1942:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"1942:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1941:15:11"},"scope":2008,"src":"1903:81:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1998,"nodeType":"Block","src":"2033:27:11","statements":[{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1994,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2043:3:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1995,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2049:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2043:10:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1997,"nodeType":"ExpressionStatement","src":"2043:10:11"}]},"functionSelector":"b7e03bec","id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"setCid","nameLocation":"1999:6:11","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"_cid","nameLocation":"2020:4:11","nodeType":"VariableDeclaration","scope":1999,"src":"2006:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"2006:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2005:20:11"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[],"src":"2033:0:11"},"scope":2008,"src":"1990:70:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2006,"nodeType":"Block","src":"2116:31:11","statements":[{"expression":{"id":2004,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"2133:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2003,"id":2005,"nodeType":"Return","src":"2126:14:11"}]},"functionSelector":"893d20e8","id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nameLocation":"2075:8:11","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"2083:2:11"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2007,"src":"2107:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"2107:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2106:9:11"},"scope":2008,"src":"2066:81:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2009,"src":"111:2038:11","usedErrors":[]}],"src":"32:2118:11"},"id":11},"contracts/CrypticAgreementFactory.sol":{"ast":{"absolutePath":"contracts/CrypticAgreementFactory.sol","exportedSymbols":{"Context":[625],"CrypticAgreement":[2008],"CrypticAgreementFactory":[2085],"Ownable":[112]},"id":2086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2086,"sourceUnit":113,"src":"57:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CrypticAgreement.sol","file":"./CrypticAgreement.sol","id":2012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2086,"sourceUnit":2009,"src":"110:32:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2013,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"180:7:12"},"id":2014,"nodeType":"InheritanceSpecifier","src":"180:7:12"}],"contractDependencies":[2008],"contractKind":"contract","fullyImplemented":true,"id":2085,"linearizedBaseContracts":[2085,112,625],"name":"CrypticAgreementFactory","nameLocation":"153:23:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2019,"mutability":"mutable","name":"agreemets","nameLocation":"232:9:12","nodeType":"VariableDeclaration","scope":2085,"src":"194:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":2018,"keyType":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"194:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueType":{"baseType":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2017,"nodeType":"ArrayTypeName","src":"213:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"anonymous":false,"id":2023,"name":"agreementCreated","nameLocation":"254:16:12","nodeType":"EventDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"indexed":false,"mutability":"mutable","name":"agreement","nameLocation":"279:9:12","nodeType":"VariableDeclaration","scope":2023,"src":"271:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2020,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"270:19:12"},"src":"248:42:12"},{"body":{"id":2070,"nodeType":"Block","src":"437:329:12","statements":[{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"agreementContract","nameLocation":"464:17:12","nodeType":"VariableDeclaration","scope":2070,"src":"447:34:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"},"typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"CrypticAgreement","nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"447:16:12"},"referencedDeclaration":2008,"src":"447:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"id":2040,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"518:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2041,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"536:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2042,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"553:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"553:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2044,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"577:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"484:20:12","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_CrypticAgreement_$2008_$","typeString":"function (string memory,string memory,address,string memory) returns (contract CrypticAgreement)"},"typeName":{"id":2038,"nodeType":"UserDefinedTypeName","pathNode":{"id":2037,"name":"CrypticAgreement","nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"488:16:12"},"referencedDeclaration":2008,"src":"488:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"484:109:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}},"nodeType":"VariableDeclarationStatement","src":"447:146:12"},{"expression":{"arguments":[{"arguments":[{"id":2054,"name":"agreementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"638:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}],"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"630:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:12","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"630:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2047,"name":"agreemets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"603:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2050,"indexExpression":{"expression":{"id":2048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"613:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"613:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"603:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"603:26:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"603:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2057,"nodeType":"ExpressionStatement","src":"603:54:12"},{"eventCall":{"arguments":[{"arguments":[{"id":2061,"name":"agreementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"697:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"689:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:12","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"689:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2058,"name":"agreementCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"672:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"672:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"EmitStatement","src":"667:49:12"},{"expression":{"arguments":[{"id":2067,"name":"agreementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"741:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CrypticAgreement_$2008","typeString":"contract CrypticAgreement"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"733:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:12","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"733:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2033,"id":2069,"nodeType":"Return","src":"726:33:12"}]},"functionSelector":"3c02634e","id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"createAgreement","nameLocation":"305:15:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"name","nameLocation":"344:4:12","nodeType":"VariableDeclaration","scope":2071,"src":"330:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2024,"name":"string","nodeType":"ElementaryTypeName","src":"330:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"cid","nameLocation":"372:3:12","nodeType":"VariableDeclaration","scope":2071,"src":"358:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"358:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"status","nameLocation":"399:6:12","nodeType":"VariableDeclaration","scope":2071,"src":"385:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"385:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"320:91:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"428:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"427:9:12"},"scope":2085,"src":"296:470:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2083,"nodeType":"Block","src":"883:46:12","statements":[{"expression":{"baseExpression":{"id":2079,"name":"agreemets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"900:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":2081,"indexExpression":{"id":2080,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"910:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"900:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2078,"id":2082,"nodeType":"Return","src":"893:29:12"}]},"functionSelector":"2de333ed","id":2084,"implemented":true,"kind":"function","modifiers":[],"name":"getAgrrements","nameLocation":"781:13:12","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"userAddress","nameLocation":"803:11:12","nodeType":"VariableDeclaration","scope":2084,"src":"795:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"794:21:12"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2084,"src":"861:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2076,"nodeType":"ArrayTypeName","src":"861:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"860:18:12"},"scope":2085,"src":"772:157:12","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2086,"src":"144:787:12","usedErrors":[]}],"src":"32:900:12"},"id":12},"contracts/CrypticVault.sol":{"ast":{"absolutePath":"contracts/CrypticVault.sol","exportedSymbols":{"Address":[603],"Context":[625],"Counters":[699],"CrypticVault":[2529],"CrypticVaultToken":[2616],"ERC165":[898],"ERC721":[3481],"IERC165":[910],"IERC721":[228],"IERC721Metadata":[273],"IERC721Receiver":[246],"Math":[1775],"Ownable":[112],"Strings":[874]},"id":2530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2087,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2530,"sourceUnit":113,"src":"57:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2530,"sourceUnit":229,"src":"110:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CrypticVaultToken.sol","file":"./CrypticVaultToken.sol","id":2090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2530,"sourceUnit":2617,"src":"169:33:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2091,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"229:7:13"},"id":2092,"nodeType":"InheritanceSpecifier","src":"229:7:13"}],"contractDependencies":[2616],"contractKind":"contract","fullyImplemented":true,"id":2529,"linearizedBaseContracts":[2529,112,625],"name":"CrypticVault","nameLocation":"213:12:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CrypticVault.emergencyAlert","id":2099,"members":[{"constant":false,"id":2094,"mutability":"mutable","name":"user","nameLocation":"283:4:13","nodeType":"VariableDeclaration","scope":2099,"src":"275:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"subject","nameLocation":"304:7:13","nodeType":"VariableDeclaration","scope":2099,"src":"297:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"297:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"message","nameLocation":"328:7:13","nodeType":"VariableDeclaration","scope":2099,"src":"321:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2097,"name":"string","nodeType":"ElementaryTypeName","src":"321:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"emergencyAlert","nameLocation":"250:14:13","nodeType":"StructDefinition","scope":2529,"src":"243:99:13","visibility":"public"},{"constant":false,"id":2103,"mutability":"mutable","name":"loginStatus","nameLocation":"381:11:13","nodeType":"VariableDeclaration","scope":2529,"src":"348:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2102,"keyType":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"348:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2101,"name":"bool","nodeType":"ElementaryTypeName","src":"367:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":2109,"mutability":"mutable","name":"transferStatus","nameLocation":"451:14:13","nodeType":"VariableDeclaration","scope":2529,"src":"398:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2108,"keyType":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"398:44:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":2107,"keyType":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"417:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2106,"name":"bool","nodeType":"ElementaryTypeName","src":"436:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":2113,"mutability":"mutable","name":"users","nameLocation":"507:5:13","nodeType":"VariableDeclaration","scope":2529,"src":"471:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2112,"keyType":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"471:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2118,"mutability":"mutable","name":"members","nameLocation":"555:7:13","nodeType":"VariableDeclaration","scope":2529,"src":"518:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":2117,"keyType":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"518:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueType":{"baseType":{"id":2115,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2116,"nodeType":"ArrayTypeName","src":"537:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"private"},{"constant":false,"id":2122,"mutability":"mutable","name":"tokenIds","nameLocation":"605:8:13","nodeType":"VariableDeclaration","scope":2529,"src":"569:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2121,"keyType":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"569:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2127,"mutability":"mutable","name":"alerts","nameLocation":"662:6:13","nodeType":"VariableDeclaration","scope":2529,"src":"619:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_emergencyAlert_$2099_storage_$","typeString":"mapping(address => struct CrypticVault.emergencyAlert)"},"typeName":{"id":2126,"keyType":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"619:34:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_emergencyAlert_$2099_storage_$","typeString":"mapping(address => struct CrypticVault.emergencyAlert)"},"valueType":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"emergencyAlert","nodeType":"IdentifierPath","referencedDeclaration":2099,"src":"638:14:13"},"referencedDeclaration":2099,"src":"638:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert"}}},"visibility":"private"},{"constant":false,"id":2132,"mutability":"mutable","name":"documents","nameLocation":"711:9:13","nodeType":"VariableDeclaration","scope":2529,"src":"674:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":2131,"keyType":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"674:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueType":{"baseType":{"id":2129,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2130,"nodeType":"ArrayTypeName","src":"693:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"private"},{"constant":false,"id":2137,"mutability":"mutable","name":"notes","nameLocation":"763:5:13","nodeType":"VariableDeclaration","scope":2529,"src":"726:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":2136,"keyType":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueType":{"baseType":{"id":2134,"name":"string","nodeType":"ElementaryTypeName","src":"745:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2135,"nodeType":"ArrayTypeName","src":"745:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"private"},{"anonymous":false,"id":2143,"name":"TokenCreated","nameLocation":"781:12:13","nodeType":"EventDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2141,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"803:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"793:18:13"},"src":"775:37:13"},{"anonymous":false,"id":2153,"name":"TokenTransfered","nameLocation":"823:15:13","nodeType":"EventDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"839:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2147,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2149,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"857:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"866:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"838:36:13"},"src":"817:58:13"},{"body":{"id":2164,"nodeType":"Block","src":"948:43:13","statements":[{"expression":{"baseExpression":{"id":2160,"name":"loginStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"965:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2162,"indexExpression":{"id":2161,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"977:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"965:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2159,"id":2163,"nodeType":"Return","src":"958:26:13"}]},"functionSelector":"e95fd155","id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"getLoginStatus","nameLocation":"890:14:13","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"caller","nameLocation":"913:6:13","nodeType":"VariableDeclaration","scope":2165,"src":"905:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"904:16:13"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2165,"src":"942:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"942:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"941:6:13"},"scope":2529,"src":"881:110:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2190,"nodeType":"Block","src":"1067:269:13","statements":[{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"_address","nameLocation":"1085:8:13","nodeType":"VariableDeclaration","scope":2190,"src":"1077:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2183,"initialValue":{"arguments":[{"arguments":[{"id":2179,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"1126:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2180,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"1132:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1104:21:13","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_CrypticVaultToken_$2616_$","typeString":"function (string memory,string memory) returns (contract CrypticVaultToken)"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"CrypticVaultToken","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"1108:17:13"},"referencedDeclaration":2616,"src":"1108:17:13","typeDescriptions":{"typeIdentifier":"t_contract$_CrypticVaultToken_$2616","typeString":"contract CrypticVaultToken"}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1104:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CrypticVaultToken_$2616","typeString":"contract CrypticVaultToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CrypticVaultToken_$2616","typeString":"contract CrypticVaultToken"}],"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1096:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:13","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1096:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1077:63:13"},{"eventCall":{"arguments":[{"expression":{"id":2185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1308:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1308:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2187,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"1320:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2184,"name":"TokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"1295:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1295:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"EmitStatement","src":"1290:39:13"}]},"functionSelector":"2f2f2d56","id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"createToken","nameLocation":"1006:11:13","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"name","nameLocation":"1032:4:13","nodeType":"VariableDeclaration","scope":2191,"src":"1018:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"1018:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"symbol","nameLocation":"1052:6:13","nodeType":"VariableDeclaration","scope":2191,"src":"1038:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1017:42:13"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[],"src":"1067:0:13"},"scope":2529,"src":"997:339:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2242,"nodeType":"Block","src":"1453:422:13","statements":[{"body":{"id":2218,"nodeType":"Block","src":"1501:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":2214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1556:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1556:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2211,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1533:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"name":"CrypticVaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"1515:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CrypticVaultToken_$2616_$","typeString":"type(contract CrypticVaultToken)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1515:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CrypticVaultToken_$2616","typeString":"contract CrypticVaultToken"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"1515:40:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1515:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"1515:52:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1487:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2205,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1491:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1487:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"initializationExpression":{"assignments":[2201],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"i","nameLocation":"1476:1:13","nodeType":"VariableDeclaration","scope":2219,"src":"1468:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2203,"initialValue":{"id":2202,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1480:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1468:17:13"},"loopExpression":{"expression":{"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1496:3:13","subExpression":{"id":2207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1496:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ExpressionStatement","src":"1496:3:13"},"nodeType":"ForStatement","src":"1463:115:13"},{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2220,"name":"loginStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1587:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2223,"indexExpression":{"expression":{"id":2221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1599:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1599:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1587:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1613:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1587:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"ExpressionStatement","src":"1587:30:13"},{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2227,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1704:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2230,"indexExpression":{"expression":{"id":2228,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1710:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1710:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1704:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2231,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1724:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1704:32:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2233,"nodeType":"ExpressionStatement","src":"1704:32:13"},{"expression":{"arguments":[{"expression":{"id":2235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1848:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1848:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1860:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1866:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1860:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2234,"name":"setTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"1837:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"1837:31:13"}]},"functionSelector":"523070e2","id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"bulkMintERC721","nameLocation":"1351:14:13","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"tokenAddress","nameLocation":"1383:12:13","nodeType":"VariableDeclaration","scope":2243,"src":"1375:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"start","nameLocation":"1413:5:13","nodeType":"VariableDeclaration","scope":2243,"src":"1405:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"end","nameLocation":"1436:3:13","nodeType":"VariableDeclaration","scope":2243,"src":"1428:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1365:80:13"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[],"src":"1453:0:13"},"scope":2529,"src":"1342:533:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2279,"nodeType":"Block","src":"2014:177:13","statements":[{"expression":{"arguments":[{"id":2258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2064:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2070:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"2074:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2261,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2081:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2255,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"2042:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2254,"name":"CrypticVaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"2024:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CrypticVaultToken_$2616_$","typeString":"type(contract CrypticVaultToken)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2024:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CrypticVaultToken_$2616","typeString":"contract CrypticVaultToken"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferTokens","nodeType":"MemberAccess","referencedDeclaration":2615,"src":"2024:39:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_payable_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address payable,address,uint256) external"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2024:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"ExpressionStatement","src":"2024:64:13"},{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2264,"name":"transferStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2098:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2267,"indexExpression":{"id":2265,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2113:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2098:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2268,"indexExpression":{"id":2266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2119:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2098:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2125:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2098:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2271,"nodeType":"ExpressionStatement","src":"2098:31:13"},{"eventCall":{"arguments":[{"id":2273,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2160:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2166:2:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2275,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"2170:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2177:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2272,"name":"TokenTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2144:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2144:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"EmitStatement","src":"2139:45:13"}]},"functionSelector":"2c54de4f","id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"transferToken","nameLocation":"1890:13:13","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"from","nameLocation":"1921:4:13","nodeType":"VariableDeclaration","scope":2280,"src":"1913:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"to","nameLocation":"1951:2:13","nodeType":"VariableDeclaration","scope":2280,"src":"1935:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"1935:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"token","nameLocation":"1971:5:13","nodeType":"VariableDeclaration","scope":2280,"src":"1963:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"1963:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"amount","nameLocation":"1994:6:13","nodeType":"VariableDeclaration","scope":2280,"src":"1986:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1903:103:13"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[],"src":"2014:0:13"},"scope":2529,"src":"1881:310:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2291,"nodeType":"Block","src":"2301:42:13","statements":[{"expression":{"baseExpression":{"id":2287,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2318:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2289,"indexExpression":{"id":2288,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2324:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2286,"id":2290,"nodeType":"Return","src":"2311:25:13"}]},"functionSelector":"b8d7b669","id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenAddress","nameLocation":"2206:15:13","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"userAddress","nameLocation":"2230:11:13","nodeType":"VariableDeclaration","scope":2292,"src":"2222:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2221:21:13"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"2288:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"2288:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2287:9:13"},"scope":2529,"src":"2197:146:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2306,"nodeType":"Block","src":"2420:49:13","statements":[{"expression":{"arguments":[{"id":2303,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2458:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":2299,"name":"documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2430:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2301,"indexExpression":{"id":2300,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2440:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2430:22:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2430:27:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2430:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2305,"nodeType":"ExpressionStatement","src":"2430:32:13"}]},"functionSelector":"3e953859","id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"storeDocuments","nameLocation":"2358:14:13","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"userAddress","nameLocation":"2381:11:13","nodeType":"VariableDeclaration","scope":2307,"src":"2373:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"cid","nameLocation":"2408:3:13","nodeType":"VariableDeclaration","scope":2307,"src":"2394:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2295,"name":"string","nodeType":"ElementaryTypeName","src":"2394:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2372:40:13"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"2420:0:13"},"scope":2529,"src":"2349:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2319,"nodeType":"Block","src":"2584:46:13","statements":[{"expression":{"baseExpression":{"id":2315,"name":"documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2601:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2317,"indexExpression":{"id":2316,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2611:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2601:22:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":2314,"id":2318,"nodeType":"Return","src":"2594:29:13"}]},"functionSelector":"27f50a2d","id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"getDocuments","nameLocation":"2484:12:13","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"userAddress","nameLocation":"2505:11:13","nodeType":"VariableDeclaration","scope":2320,"src":"2497:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2496:21:13"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"2563:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"2563:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2312,"nodeType":"ArrayTypeName","src":"2563:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2562:17:13"},"scope":2529,"src":"2475:155:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2334,"nodeType":"Block","src":"2706:47:13","statements":[{"expression":{"arguments":[{"id":2331,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2742:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":2327,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2716:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2329,"indexExpression":{"id":2328,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2724:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2716:20:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2716:25:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2716:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"2716:30:13"}]},"functionSelector":"b33df448","id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"createMembers","nameLocation":"2645:13:13","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"userAddress","nameLocation":"2667:11:13","nodeType":"VariableDeclaration","scope":2335,"src":"2659:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"cid","nameLocation":"2694:3:13","nodeType":"VariableDeclaration","scope":2335,"src":"2680:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2323,"name":"string","nodeType":"ElementaryTypeName","src":"2680:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2658:40:13"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"2706:0:13"},"scope":2529,"src":"2636:117:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2347,"nodeType":"Block","src":"2866:44:13","statements":[{"expression":{"baseExpression":{"id":2343,"name":"members","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2883:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2345,"indexExpression":{"id":2344,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2891:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2883:20:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":2342,"id":2346,"nodeType":"Return","src":"2876:27:13"}]},"functionSelector":"78544629","id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"getMembers","nameLocation":"2768:10:13","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"userAddress","nameLocation":"2787:11:13","nodeType":"VariableDeclaration","scope":2348,"src":"2779:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2778:21:13"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2348,"src":"2845:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"2845:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2340,"nodeType":"ArrayTypeName","src":"2845:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2844:17:13"},"scope":2529,"src":"2759:151:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2382,"nodeType":"Block","src":"3050:179:13","statements":[{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"newAlert","nameLocation":"3083:8:13","nodeType":"VariableDeclaration","scope":2382,"src":"3060:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert"},"typeName":{"id":2358,"nodeType":"UserDefinedTypeName","pathNode":{"id":2357,"name":"emergencyAlert","nodeType":"IdentifierPath","referencedDeclaration":2099,"src":"3060:14:13"},"referencedDeclaration":2099,"src":"3060:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert"}},"visibility":"internal"}],"id":2363,"initialValue":{"baseExpression":{"id":2360,"name":"alerts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3094:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_emergencyAlert_$2099_storage_$","typeString":"mapping(address => struct CrypticVault.emergencyAlert storage ref)"}},"id":2362,"indexExpression":{"id":2361,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3101:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3094:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage","typeString":"struct CrypticVault.emergencyAlert storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3060:53:13"},{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2364,"name":"newAlert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"3123:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert storage pointer"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"3123:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2367,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3139:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3123:27:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2369,"nodeType":"ExpressionStatement","src":"3123:27:13"},{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2370,"name":"newAlert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"3160:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert storage pointer"}},"id":2372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"subject","nodeType":"MemberAccess","referencedDeclaration":2096,"src":"3160:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2373,"name":"subject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3179:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3160:26:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2375,"nodeType":"ExpressionStatement","src":"3160:26:13"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2376,"name":"newAlert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"3196:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert storage pointer"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"message","nodeType":"MemberAccess","referencedDeclaration":2098,"src":"3196:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2379,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3215:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3196:26:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2381,"nodeType":"ExpressionStatement","src":"3196:26:13"}]},"functionSelector":"a894b1e4","id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"createEmergencyAlert","nameLocation":"2925:20:13","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"userAddress","nameLocation":"2963:11:13","nodeType":"VariableDeclaration","scope":2383,"src":"2955:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"2955:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"subject","nameLocation":"2998:7:13","nodeType":"VariableDeclaration","scope":2383,"src":"2984:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"2984:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"message","nameLocation":"3029:7:13","nodeType":"VariableDeclaration","scope":2383,"src":"3015:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2353,"name":"string","nodeType":"ElementaryTypeName","src":"3015:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2945:97:13"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"3050:0:13"},"scope":2529,"src":"2916:313:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2395,"nodeType":"Block","src":"3355:43:13","statements":[{"expression":{"baseExpression":{"id":2391,"name":"alerts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3372:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_emergencyAlert_$2099_storage_$","typeString":"mapping(address => struct CrypticVault.emergencyAlert storage ref)"}},"id":2393,"indexExpression":{"id":2392,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"3379:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3372:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage","typeString":"struct CrypticVault.emergencyAlert storage ref"}},"functionReturnParameters":2390,"id":2394,"nodeType":"Return","src":"3365:26:13"}]},"functionSelector":"ddc8be3b","id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"getEmergencyAlert","nameLocation":"3244:17:13","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"userAddress","nameLocation":"3270:11:13","nodeType":"VariableDeclaration","scope":2396,"src":"3262:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3261:21:13"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2396,"src":"3328:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_memory_ptr","typeString":"struct CrypticVault.emergencyAlert"},"typeName":{"id":2388,"nodeType":"UserDefinedTypeName","pathNode":{"id":2387,"name":"emergencyAlert","nodeType":"IdentifierPath","referencedDeclaration":2099,"src":"3328:14:13"},"referencedDeclaration":2099,"src":"3328:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_emergencyAlert_$2099_storage_ptr","typeString":"struct CrypticVault.emergencyAlert"}},"visibility":"internal"}],"src":"3327:23:13"},"scope":2529,"src":"3235:163:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2409,"nodeType":"Block","src":"3469:48:13","statements":[{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2403,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3479:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2405,"indexExpression":{"id":2404,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3488:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3479:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3479:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"3479:31:13"}]},"functionSelector":"c7c82d1c","id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"setTokenId","nameLocation":"3413:10:13","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"userAddress","nameLocation":"3432:11:13","nodeType":"VariableDeclaration","scope":2410,"src":"3424:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"tokenId","nameLocation":"3453:7:13","nodeType":"VariableDeclaration","scope":2410,"src":"3445:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3445:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3423:38:13"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[],"src":"3469:0:13"},"scope":2529,"src":"3404:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2421,"nodeType":"Block","src":"3594:45:13","statements":[{"expression":{"baseExpression":{"id":2417,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3611:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2419,"indexExpression":{"id":2418,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3620:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3611:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2416,"id":2420,"nodeType":"Return","src":"3604:28:13"}]},"functionSelector":"f1537686","id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"3532:10:13","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"userAddress","nameLocation":"3551:11:13","nodeType":"VariableDeclaration","scope":2422,"src":"3543:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"3543:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3542:21:13"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"3585:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3585:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3584:9:13"},"scope":2529,"src":"3523:116:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2437,"nodeType":"Block","src":"3772:67:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2431,"name":"transferStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3789:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2433,"indexExpression":{"id":2432,"name":"adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"3804:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3789:28:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2435,"indexExpression":{"id":2434,"name":"memberAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3818:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3789:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2430,"id":2436,"nodeType":"Return","src":"3782:50:13"}]},"functionSelector":"3b1a0174","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"getTransferStatus","nameLocation":"3654:17:13","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"adminAddress","nameLocation":"3680:12:13","nodeType":"VariableDeclaration","scope":2438,"src":"3672:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"3672:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"memberAddress","nameLocation":"3702:13:13","nodeType":"VariableDeclaration","scope":2438,"src":"3694:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"3694:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3671:45:13"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"3762:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2428,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3761:6:13"},"scope":2529,"src":"3645:194:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2452,"nodeType":"Block","src":"3913:45:13","statements":[{"expression":{"arguments":[{"id":2449,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"3947:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":2445,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"3923:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2447,"indexExpression":{"id":2446,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"3929:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3923:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3923:23:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3923:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"ExpressionStatement","src":"3923:28:13"}]},"functionSelector":"ed0704b0","id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"createNotes","nameLocation":"3854:11:13","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"userAddress","nameLocation":"3874:11:13","nodeType":"VariableDeclaration","scope":2453,"src":"3866:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"3866:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"cid","nameLocation":"3901:3:13","nodeType":"VariableDeclaration","scope":2453,"src":"3887:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2441,"name":"string","nodeType":"ElementaryTypeName","src":"3887:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3865:40:13"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"3913:0:13"},"scope":2529,"src":"3845:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2465,"nodeType":"Block","src":"4069:42:13","statements":[{"expression":{"baseExpression":{"id":2461,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4086:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2463,"indexExpression":{"id":2462,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4092:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4086:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":2460,"id":2464,"nodeType":"Return","src":"4079:25:13"}]},"functionSelector":"10a50690","id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"getNotes","nameLocation":"3973:8:13","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"userAddress","nameLocation":"3990:11:13","nodeType":"VariableDeclaration","scope":2466,"src":"3982:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"3982:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3981:21:13"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"4048:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2457,"name":"string","nodeType":"ElementaryTypeName","src":"4048:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2458,"nodeType":"ArrayTypeName","src":"4048:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4047:17:13"},"scope":2529,"src":"3964:147:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2527,"nodeType":"Block","src":"4258:396:13","statements":[{"body":{"id":2523,"nodeType":"Block","src":"4324:302:13","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"noteCid","nameLocation":"4352:7:13","nodeType":"VariableDeclaration","scope":2523,"src":"4338:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"4338:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2497,"initialValue":{"baseExpression":{"baseExpression":{"id":2492,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4362:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2494,"indexExpression":{"id":2493,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4368:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2496,"indexExpression":{"id":2495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4381:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:21:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4338:45:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2501,"name":"noteCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"4445:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4428:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4428:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4428:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2498,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4418:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4418:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2507,"name":"oldCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4501:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2505,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4484:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4484:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4484:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4474:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4418:91:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2522,"nodeType":"IfStatement","src":"4397:219:13","trueBody":{"id":2521,"nodeType":"Block","src":"4524:92:13","statements":[{"expression":{"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2511,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4542:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2514,"indexExpression":{"id":2512,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4548:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4542:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2515,"indexExpression":{"id":2513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4561:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4542:21:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2516,"name":"newCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"4566:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4542:30:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2518,"nodeType":"ExpressionStatement","src":"4542:30:13"},{"expression":{"hexValue":"74727565","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4597:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2476,"id":2520,"nodeType":"Return","src":"4590:11:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4288:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2482,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4292:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":2484,"indexExpression":{"id":2483,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4298:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4292:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4292:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4288:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2524,"initializationExpression":{"assignments":[2478],"declarations":[{"constant":false,"id":2478,"mutability":"mutable","name":"i","nameLocation":"4281:1:13","nodeType":"VariableDeclaration","scope":2524,"src":"4273:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2480,"initialValue":{"hexValue":"30","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4273:13:13"},"loopExpression":{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4319:3:13","subExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4319:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"4319:3:13"},"nodeType":"ForStatement","src":"4268:358:13"},{"expression":{"hexValue":"66616c7365","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4642:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2476,"id":2526,"nodeType":"Return","src":"4635:12:13"}]},"functionSelector":"6a663fbc","id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"findAndReplace","nameLocation":"4126:14:13","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"oldCid","nameLocation":"4164:6:13","nodeType":"VariableDeclaration","scope":2528,"src":"4150:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"4150:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"newCid","nameLocation":"4194:6:13","nodeType":"VariableDeclaration","scope":2528,"src":"4180:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2469,"name":"string","nodeType":"ElementaryTypeName","src":"4180:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"userAddress","nameLocation":"4218:11:13","nodeType":"VariableDeclaration","scope":2528,"src":"4210:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"4210:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4140:95:13"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"4252:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"4252:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4251:6:13"},"scope":2529,"src":"4117:537:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2530,"src":"204:4452:13","usedErrors":[]}],"src":"32:4625:13"},"id":13},"contracts/CrypticVaultToken.sol":{"ast":{"absolutePath":"contracts/CrypticVaultToken.sol","exportedSymbols":{"Address":[603],"Context":[625],"Counters":[699],"CrypticVaultToken":[2616],"ERC165":[898],"ERC721":[3481],"IERC165":[910],"IERC721":[228],"IERC721Metadata":[273],"IERC721Receiver":[246],"Math":[1775],"Strings":[874]},"id":2617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2531,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"contracts/comman/ERC721.sol","file":"./comman/ERC721.sol","id":2532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2617,"sourceUnit":3482,"src":"57:29:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":2533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2617,"sourceUnit":700,"src":"87:52:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2617,"sourceUnit":229,"src":"140:58:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2535,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"230:6:14"},"id":2536,"nodeType":"InheritanceSpecifier","src":"230:6:14"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2616,"linearizedBaseContracts":[2616,3481,273,228,898,910,625],"name":"CrypticVaultToken","nameLocation":"209:17:14","nodeType":"ContractDefinition","nodes":[{"id":2540,"libraryName":{"id":2537,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"249:8:14"},"nodeType":"UsingForDirective","src":"243:36:14","typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"262:16:14"},"referencedDeclaration":631,"src":"262:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":2543,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"310:15:14","nodeType":"VariableDeclaration","scope":2616,"src":"285:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage","typeString":"struct Counters.Counter"},"typeName":{"id":2542,"nodeType":"UserDefinedTypeName","pathNode":{"id":2541,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":631,"src":"285:16:14"},"referencedDeclaration":631,"src":"285:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":2554,"nodeType":"Block","src":"423:2:14","statements":[]},"id":2555,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2550,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"403:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2551,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"410:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2552,"kind":"baseConstructorSpecifier","modifierName":{"id":2549,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"396:6:14"},"nodeType":"ModifierInvocation","src":"396:22:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"_name","nameLocation":"358:5:14","nodeType":"VariableDeclaration","scope":2555,"src":"344:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2544,"name":"string","nodeType":"ElementaryTypeName","src":"344:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"_symbol","nameLocation":"379:7:14","nodeType":"VariableDeclaration","scope":2555,"src":"365:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2546,"name":"string","nodeType":"ElementaryTypeName","src":"365:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"343:44:14"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"423:0:14"},"scope":2616,"src":"332:93:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2576,"nodeType":"Block","src":"468:129:14","statements":[{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"tokenId","nameLocation":"486:7:14","nodeType":"VariableDeclaration","scope":2576,"src":"478:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2562,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"496:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage","typeString":"struct Counters.Counter storage ref"}},"id":2563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":643,"src":"496:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$631_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$631_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"496:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"478:43:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2566,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"531:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$631_storage","typeString":"struct Counters.Counter storage ref"}},"id":2568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":657,"src":"531:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$631_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$631_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"531:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"ExpressionStatement","src":"531:27:14"},{"expression":{"arguments":[{"id":2572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"578:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"582:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2571,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[3110,3139],"referencedDeclaration":3110,"src":"568:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"568:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"ExpressionStatement","src":"568:22:14"}]},"functionSelector":"40d097c3","id":2577,"implemented":true,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"440:8:14","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"to","nameLocation":"457:2:14","nodeType":"VariableDeclaration","scope":2577,"src":"449:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:12:14"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"468:0:14"},"scope":2616,"src":"431:166:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2614,"nodeType":"Block","src":"737:204:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"751:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"760:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:14","typeDescriptions":{}}},"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"760:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"751:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2612,"nodeType":"Block","src":"848:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"878:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2605,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"870:2:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","src":"870:7:14","typeDescriptions":{"typeIdentifier":"t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"870:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206f662045544820746f207265636569766572206661696c6564","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"887:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54","typeString":"literal_string \"Transfer of ETH to receiver failed\""},"value":"Transfer of ETH to receiver failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54","typeString":"literal_string \"Transfer of ETH to receiver failed\""}],"id":2604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"862:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"862:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"ExpressionStatement","src":"862:62:14"}]},"id":2613,"nodeType":"IfStatement","src":"747:188:14","trueBody":{"id":2603,"nodeType":"Block","src":"772:70:14","statements":[{"expression":{"arguments":[{"id":2598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"814:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"820:2:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2600,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"824:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2595,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"794:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2594,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"786:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$228_$","typeString":"type(contract IERC721)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$228","typeString":"contract IERC721"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":193,"src":"786:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"ExpressionStatement","src":"786:45:14"}]}}]},"functionSelector":"68155ec1","id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"transferTokens","nameLocation":"612:14:14","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"from","nameLocation":"644:4:14","nodeType":"VariableDeclaration","scope":2615,"src":"636:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"to","nameLocation":"674:2:14","nodeType":"VariableDeclaration","scope":2615,"src":"658:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"658:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"token","nameLocation":"694:5:14","nodeType":"VariableDeclaration","scope":2615,"src":"686:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"686:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"amount","nameLocation":"717:6:14","nodeType":"VariableDeclaration","scope":2615,"src":"709:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"626:103:14"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"737:0:14"},"scope":2616,"src":"603:338:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2617,"src":"200:743:14","usedErrors":[]}],"src":"32:912:14"},"id":14},"contracts/comman/ERC721.sol":{"ast":{"absolutePath":"contracts/comman/ERC721.sol","exportedSymbols":{"Address":[603],"Context":[625],"ERC165":[898],"ERC721":[3481],"IERC165":[910],"IERC721":[228],"IERC721Metadata":[273],"IERC721Receiver":[246],"Math":[1775],"Strings":[874]},"id":3482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2618,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":229,"src":"132:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":2620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":247,"src":"191:66:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":2621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":274,"src":"258:77:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":2622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":604,"src":"336:51:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":2623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":626,"src":"388:51:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":875,"src":"440:51:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":2625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":899,"src":"492:64:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2627,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":625,"src":"824:7:15"},"id":2628,"nodeType":"InheritanceSpecifier","src":"824:7:15"},{"baseName":{"id":2629,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"833:6:15"},"id":2630,"nodeType":"InheritanceSpecifier","src":"833:6:15"},{"baseName":{"id":2631,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":228,"src":"841:7:15"},"id":2632,"nodeType":"InheritanceSpecifier","src":"841:7:15"},{"baseName":{"id":2633,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":273,"src":"850:15:15"},"id":2634,"nodeType":"InheritanceSpecifier","src":"850:15:15"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"558:246:15","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3481,"linearizedBaseContracts":[3481,273,228,898,910,625],"name":"ERC721","nameLocation":"814:6:15","nodeType":"ContractDefinition","nodes":[{"id":2637,"libraryName":{"id":2635,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":603,"src":"878:7:15"},"nodeType":"UsingForDirective","src":"872:26:15","typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":2640,"libraryName":{"id":2638,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":874,"src":"909:7:15"},"nodeType":"UsingForDirective","src":"903:26:15","typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2642,"mutability":"mutable","name":"_name","nameLocation":"968:5:15","nodeType":"VariableDeclaration","scope":3481,"src":"953:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"953:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2644,"mutability":"mutable","name":"_symbol","nameLocation":"1015:7:15","nodeType":"VariableDeclaration","scope":3481,"src":"1000:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2643,"name":"string","nodeType":"ElementaryTypeName","src":"1000:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2648,"mutability":"mutable","name":"_owners","nameLocation":"1111:7:15","nodeType":"VariableDeclaration","scope":3481,"src":"1075:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2647,"keyType":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1075:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2652,"mutability":"mutable","name":"_balances","nameLocation":"1205:9:15","nodeType":"VariableDeclaration","scope":3481,"src":"1169:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2651,"keyType":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1169:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2656,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1306:15:15","nodeType":"VariableDeclaration","scope":3481,"src":"1270:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2655,"keyType":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1270:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2662,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1429:18:15","nodeType":"VariableDeclaration","scope":3481,"src":"1376:71:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2661,"keyType":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1376:44:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":2660,"keyType":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1395:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"1414:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2678,"nodeType":"Block","src":"1623:57:15","statements":[{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"1633:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2671,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"1641:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1633:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2673,"nodeType":"ExpressionStatement","src":"1633:13:15"},{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1656:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2675,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1666:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1656:17:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2677,"nodeType":"ExpressionStatement","src":"1656:17:15"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"1454:108:15","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2679,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"name_","nameLocation":"1593:5:15","nodeType":"VariableDeclaration","scope":2679,"src":"1579:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2664,"name":"string","nodeType":"ElementaryTypeName","src":"1579:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"symbol_","nameLocation":"1614:7:15","nodeType":"VariableDeclaration","scope":2679,"src":"1600:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2666,"name":"string","nodeType":"ElementaryTypeName","src":"1600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1578:44:15"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[],"src":"1623:0:15"},"scope":3481,"src":"1567:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[897,909],"body":{"id":2709,"nodeType":"Block","src":"1899:192:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1928:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2692,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1948:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$228_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$228_$","typeString":"type(contract IERC721)"}],"id":2691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1943:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1943:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$228","typeString":"type(contract IERC721)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1943:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1928:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1984:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2698,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2004:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$273_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$273_$","typeString":"type(contract IERC721Metadata)"}],"id":2697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1999:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1999:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$273","typeString":"type(contract IERC721Metadata)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1999:33:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1984:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1928:104:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2705,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2072:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2703,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2048:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3481_$","typeString":"type(contract super ERC721)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":897,"src":"2048:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2048:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1928:156:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2689,"id":2708,"nodeType":"Return","src":"1909:175:15"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"1686:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1756:17:15","nodeType":"FunctionDefinition","overrides":{"id":2686,"nodeType":"OverrideSpecifier","overrides":[{"id":2684,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"1855:6:15"},{"id":2685,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":910,"src":"1863:7:15"}],"src":"1846:25:15"},"parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"interfaceId","nameLocation":"1781:11:15","nodeType":"VariableDeclaration","scope":2710,"src":"1774:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2681,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1774:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1773:20:15"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"1889:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2687,"name":"bool","nodeType":"ElementaryTypeName","src":"1889:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1888:6:15"},"scope":3481,"src":"1747:344:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[153],"body":{"id":2733,"nodeType":"Block","src":"2275:158:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2306:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2323:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2315:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"2315:7:15","typeDescriptions":{}}},"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2306:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2339:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":2719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2285:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2285:108:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2728,"nodeType":"ExpressionStatement","src":"2285:108:15"},{"expression":{"baseExpression":{"id":2729,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2410:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2731,"indexExpression":{"id":2730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2420:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2410:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2718,"id":2732,"nodeType":"Return","src":"2403:23:15"}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"2097:48:15","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2159:9:15","nodeType":"FunctionDefinition","overrides":{"id":2715,"nodeType":"OverrideSpecifier","overrides":[],"src":"2236:8:15"},"parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"owner","nameLocation":"2177:5:15","nodeType":"VariableDeclaration","scope":2734,"src":"2169:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2168:15:15"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"2262:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2261:9:15"},"scope":3481,"src":"2150:283:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[161],"body":{"id":2761,"nodeType":"Block","src":"2615:188:15","statements":[{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"owner","nameLocation":"2633:5:15","nodeType":"VariableDeclaration","scope":2761,"src":"2625:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2748,"initialValue":{"baseExpression":{"id":2745,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"2641:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2747,"indexExpression":{"id":2746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"2649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2641:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2625:32:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2688:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2697:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:15","typeDescriptions":{}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2697:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2688:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2721:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":2749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2667:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2667:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"ExpressionStatement","src":"2667:107:15"},{"expression":{"id":2759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2791:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2742,"id":2760,"nodeType":"Return","src":"2784:12:15"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"2439:46:15","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2499:7:15","nodeType":"FunctionDefinition","overrides":{"id":2739,"nodeType":"OverrideSpecifier","overrides":[],"src":"2576:8:15"},"parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"tokenId","nameLocation":"2515:7:15","nodeType":"VariableDeclaration","scope":2762,"src":"2507:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2506:17:15"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"2602:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2601:9:15"},"scope":3481,"src":"2490:313:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[258],"body":{"id":2771,"nodeType":"Block","src":"2934:29:15","statements":[{"expression":{"id":2769,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2951:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2768,"id":2770,"nodeType":"Return","src":"2944:12:15"}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"2809:51:15","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2874:4:15","nodeType":"FunctionDefinition","overrides":{"id":2765,"nodeType":"OverrideSpecifier","overrides":[],"src":"2901:8:15"},"parameters":{"id":2764,"nodeType":"ParameterList","parameters":[],"src":"2878:2:15"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"2919:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2766,"name":"string","nodeType":"ElementaryTypeName","src":"2919:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2918:15:15"},"scope":3481,"src":"2865:98:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[264],"body":{"id":2781,"nodeType":"Block","src":"3098:31:15","statements":[{"expression":{"id":2779,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3115:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2778,"id":2780,"nodeType":"Return","src":"3108:14:15"}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"2969:53:15","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3036:6:15","nodeType":"FunctionDefinition","overrides":{"id":2775,"nodeType":"OverrideSpecifier","overrides":[],"src":"3065:8:15"},"parameters":{"id":2774,"nodeType":"ParameterList","parameters":[],"src":"3042:2:15"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2782,"src":"3083:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2776,"name":"string","nodeType":"ElementaryTypeName","src":"3083:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3082:15:15"},"scope":3481,"src":"3027:102:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[272],"body":{"id":2823,"nodeType":"Block","src":"3327:319:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2793,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2792,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"3358:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3358:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3388:49:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":2791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3337:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"ExpressionStatement","src":"3337:110:15"},{"assignments":[2799],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"baseURI","nameLocation":"3472:7:15","nodeType":"VariableDeclaration","scope":2823,"src":"3458:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"3458:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2802,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2800,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3482:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3482:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3458:34:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2805,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3527:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3521:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"3521:5:15","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3521:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3521:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3545:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3521:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3637:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3521:118:15","trueExpression":{"arguments":[{"arguments":[{"id":2814,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3589:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":757,"src":"3598:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3598:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2812,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3572:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3572:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3565:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2810,"name":"string","nodeType":"ElementaryTypeName","src":"3565:6:15","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3565:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2790,"id":2822,"nodeType":"Return","src":"3502:137:15"}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"3135:55:15","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3204:8:15","nodeType":"FunctionDefinition","overrides":{"id":2787,"nodeType":"OverrideSpecifier","overrides":[],"src":"3282:8:15"},"parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"tokenId","nameLocation":"3221:7:15","nodeType":"VariableDeclaration","scope":2824,"src":"3213:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3212:17:15"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2824,"src":"3308:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"3308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3307:15:15"},"scope":3481,"src":"3195:451:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2832,"nodeType":"Block","src":"3953:26:15","statements":[{"expression":{"hexValue":"","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3970:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2829,"id":2831,"nodeType":"Return","src":"3963:9:15"}]},"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"3652:230:15","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3896:8:15","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"3904:2:15"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"3938:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2827,"name":"string","nodeType":"ElementaryTypeName","src":"3938:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3937:15:15"},"scope":3481,"src":"3887:92:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[201],"body":{"id":2875,"nodeType":"Block","src":"4106:331:15","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"owner","nameLocation":"4124:5:15","nodeType":"VariableDeclaration","scope":2875,"src":"4116:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2842,"name":"address","nodeType":"ElementaryTypeName","src":"4116:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"id":2846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4147:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4132:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3481_$","typeString":"type(contract ERC721)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"4132:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4132:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4116:39:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"4173:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2851,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4179:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4173:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4186:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":2849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4165:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4165:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"4165:57:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2857,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4254:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4254:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4270:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4254:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2862,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4296:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4303:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4303:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2861,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"4279:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4279:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4254:62:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4330:58:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":2856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4233:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4233:165:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"ExpressionStatement","src":"4233:165:15"},{"expression":{"arguments":[{"id":2871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"4418:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4422:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"4409:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"4409:21:15"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"3985:46:15","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2876,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4045:7:15","nodeType":"FunctionDefinition","overrides":{"id":2840,"nodeType":"OverrideSpecifier","overrides":[],"src":"4097:8:15"},"parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"to","nameLocation":"4061:2:15","nodeType":"VariableDeclaration","scope":2876,"src":"4053:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"4053:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"tokenId","nameLocation":"4073:7:15","nodeType":"VariableDeclaration","scope":2876,"src":"4065:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4052:29:15"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[],"src":"4106:0:15"},"scope":3481,"src":"4036:401:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[217],"body":{"id":2896,"nodeType":"Block","src":"4627:166:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2887,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2886,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"4658:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4658:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4688:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":2885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4637:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4637:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2891,"nodeType":"ExpressionStatement","src":"4637:107:15"},{"expression":{"baseExpression":{"id":2892,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4762:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2894,"indexExpression":{"id":2893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"4778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4762:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2884,"id":2895,"nodeType":"Return","src":"4755:31:15"}]},"documentation":{"id":2877,"nodeType":"StructuredDocumentation","src":"4443:50:15","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4507:11:15","nodeType":"FunctionDefinition","overrides":{"id":2881,"nodeType":"OverrideSpecifier","overrides":[],"src":"4588:8:15"},"parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"tokenId","nameLocation":"4527:7:15","nodeType":"VariableDeclaration","scope":2897,"src":"4519:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:17:15"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"4614:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"4614:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4613:9:15"},"scope":3481,"src":"4498:295:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[209],"body":{"id":2913,"nodeType":"Block","src":"4972:69:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2907,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5001:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5001:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2909,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"5015:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2910,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5025:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2906,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"4982:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4982:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2912,"nodeType":"ExpressionStatement","src":"4982:52:15"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"4799:56:15","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4869:17:15","nodeType":"FunctionDefinition","overrides":{"id":2904,"nodeType":"OverrideSpecifier","overrides":[],"src":"4959:8:15"},"parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"operator","nameLocation":"4895:8:15","nodeType":"VariableDeclaration","scope":2914,"src":"4887:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"4887:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"approved","nameLocation":"4910:8:15","nodeType":"VariableDeclaration","scope":2914,"src":"4905:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2901,"name":"bool","nodeType":"ElementaryTypeName","src":"4905:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4886:33:15"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[],"src":"4972:0:15"},"scope":3481,"src":"4860:181:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[227],"body":{"id":2931,"nodeType":"Block","src":"5254:59:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2925,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"5271:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2927,"indexExpression":{"id":2926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"5290:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5271:25:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2929,"indexExpression":{"id":2928,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5297:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5271:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2924,"id":2930,"nodeType":"Return","src":"5264:42:15"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"5047:55:15","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5116:16:15","nodeType":"FunctionDefinition","overrides":{"id":2921,"nodeType":"OverrideSpecifier","overrides":[],"src":"5218:8:15"},"parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"owner","nameLocation":"5141:5:15","nodeType":"VariableDeclaration","scope":2932,"src":"5133:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"5133:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"operator","nameLocation":"5156:8:15","nodeType":"VariableDeclaration","scope":2932,"src":"5148:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"5148:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5132:33:15"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"5244:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2922,"name":"bool","nodeType":"ElementaryTypeName","src":"5244:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5243:6:15"},"scope":3481,"src":"5107:206:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[193],"body":{"id":2957,"nodeType":"Block","src":"5494:237:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2945,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5596:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"5602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5577:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5577:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5624:51:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":2943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5556:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5556:129:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2950,"nodeType":"ExpressionStatement","src":"5556:129:15"},{"expression":{"arguments":[{"id":2952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5706:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"5712:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"5716:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"5696:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5696:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"ExpressionStatement","src":"5696:28:15"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"5319:51:15","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2958,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5384:12:15","nodeType":"FunctionDefinition","overrides":{"id":2941,"nodeType":"OverrideSpecifier","overrides":[],"src":"5485:8:15"},"parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"from","nameLocation":"5414:4:15","nodeType":"VariableDeclaration","scope":2958,"src":"5406:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"to","nameLocation":"5436:2:15","nodeType":"VariableDeclaration","scope":2958,"src":"5428:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"tokenId","nameLocation":"5456:7:15","nodeType":"VariableDeclaration","scope":2958,"src":"5448:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5396:73:15"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"5494:0:15"},"scope":3481,"src":"5375:356:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[183],"body":{"id":2976,"nodeType":"Block","src":"5920:56:15","statements":[{"expression":{"arguments":[{"id":2970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"5947:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"5953:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2972,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"5957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5966:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2969,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2977,3007],"referencedDeclaration":3007,"src":"5930:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5930:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2975,"nodeType":"ExpressionStatement","src":"5930:39:15"}]},"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"5737:55:15","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2977,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5806:16:15","nodeType":"FunctionDefinition","overrides":{"id":2967,"nodeType":"OverrideSpecifier","overrides":[],"src":"5911:8:15"},"parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"from","nameLocation":"5840:4:15","nodeType":"VariableDeclaration","scope":2977,"src":"5832:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"5832:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"to","nameLocation":"5862:2:15","nodeType":"VariableDeclaration","scope":2977,"src":"5854:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"5854:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"tokenId","nameLocation":"5882:7:15","nodeType":"VariableDeclaration","scope":2977,"src":"5874:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"5874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5822:73:15"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"5920:0:15"},"scope":3481,"src":"5797:179:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[173],"body":{"id":3006,"nodeType":"Block","src":"6193:203:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2992,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6243:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6243:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"6257:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"6224:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6224:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6279:51:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":2990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6203:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6203:137:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"ExpressionStatement","src":"6203:137:15"},{"expression":{"arguments":[{"id":3000,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"6364:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3001,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"6370:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"6374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3003,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"6383:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2999,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6350:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6350:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"ExpressionStatement","src":"6350:39:15"}]},"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"5982:55:15","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6051:16:15","nodeType":"FunctionDefinition","overrides":{"id":2988,"nodeType":"OverrideSpecifier","overrides":[],"src":"6184:8:15"},"parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"from","nameLocation":"6085:4:15","nodeType":"VariableDeclaration","scope":3007,"src":"6077:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"6077:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"to","nameLocation":"6107:2:15","nodeType":"VariableDeclaration","scope":3007,"src":"6099:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"6099:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"tokenId","nameLocation":"6127:7:15","nodeType":"VariableDeclaration","scope":3007,"src":"6119:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"6119:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"_data","nameLocation":"6157:5:15","nodeType":"VariableDeclaration","scope":3007,"src":"6144:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2985,"name":"bytes","nodeType":"ElementaryTypeName","src":"6144:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6067:101:15"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[],"src":"6193:0:15"},"scope":3481,"src":"6042:354:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3035,"nodeType":"Block","src":"7399:200:15","statements":[{"expression":{"arguments":[{"id":3020,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7419:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3021,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"7425:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3022,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"7409:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7409:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"7409:28:15"},{"expression":{"arguments":[{"arguments":[{"id":3027,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7491:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"7497:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3029,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3030,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"7510:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3026,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"7468:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7468:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7530:52:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":3025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7447:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7447:145:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"7447:145:15"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"6402:851:15","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"7267:13:15","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"from","nameLocation":"7298:4:15","nodeType":"VariableDeclaration","scope":3036,"src":"7290:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"7290:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"to","nameLocation":"7320:2:15","nodeType":"VariableDeclaration","scope":3036,"src":"7312:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"7312:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"tokenId","nameLocation":"7340:7:15","nodeType":"VariableDeclaration","scope":3036,"src":"7332:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"_data","nameLocation":"7370:5:15","nodeType":"VariableDeclaration","scope":3036,"src":"7357:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3015,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7280:101:15"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[],"src":"7399:0:15"},"scope":3481,"src":"7258:341:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"7973:54:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3044,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"7990:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3046,"indexExpression":{"id":3045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7990:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8018:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8010:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"8010:7:15","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8010:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7990:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3043,"id":3052,"nodeType":"Return","src":"7983:37:15"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"7605:292:15","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7911:7:15","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"tokenId","nameLocation":"7927:7:15","nodeType":"VariableDeclaration","scope":3054,"src":"7919:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"7919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7918:17:15"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"7967:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3041,"name":"bool","nodeType":"ElementaryTypeName","src":"7967:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7966:6:15"},"scope":3481,"src":"7902:125:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3094,"nodeType":"Block","src":"8320:303:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3066,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"8359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3065,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8351:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8351:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8381:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":3064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8330:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8330:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3070,"nodeType":"ExpressionStatement","src":"8330:107:15"},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"owner","nameLocation":"8455:5:15","nodeType":"VariableDeclaration","scope":3094,"src":"8447:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3071,"name":"address","nodeType":"ElementaryTypeName","src":"8447:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"8478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3073,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"8463:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3481_$","typeString":"type(contract ERC721)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"8463:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8463:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8447:39:15"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"8504:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"8515:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8504:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"8548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8536:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8536:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3084,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"8560:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8536:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8504:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3088,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"8600:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3089,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"8607:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3087,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"8583:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8583:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8504:111:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8503:113:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3063,"id":3093,"nodeType":"Return","src":"8496:120:15"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"8033:147:15","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"8194:18:15","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"spender","nameLocation":"8221:7:15","nodeType":"VariableDeclaration","scope":3095,"src":"8213:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"8213:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"tokenId","nameLocation":"8238:7:15","nodeType":"VariableDeclaration","scope":3095,"src":"8230:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"8230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8212:34:15"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"8310:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3061,"name":"bool","nodeType":"ElementaryTypeName","src":"8310:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8309:6:15"},"scope":3481,"src":"8185:438:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"9018:43:15","statements":[{"expression":{"arguments":[{"id":3104,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"9038:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3105,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"9042:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9051:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3103,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[3110,3139],"referencedDeclaration":3139,"src":"9028:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9028:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"ExpressionStatement","src":"9028:26:15"}]},"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"8629:319:15","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8962:9:15","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"to","nameLocation":"8980:2:15","nodeType":"VariableDeclaration","scope":3110,"src":"8972:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"8972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"tokenId","nameLocation":"8992:7:15","nodeType":"VariableDeclaration","scope":3110,"src":"8984:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"8984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8971:29:15"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[],"src":"9018:0:15"},"scope":3481,"src":"8953:108:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"9397:196:15","statements":[{"expression":{"arguments":[{"id":3121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"9413:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3122,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9417:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3120,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"9407:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9407:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"ExpressionStatement","src":"9407:18:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9487:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"9479:7:15","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9479:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"9491:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9495:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3133,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9504:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3126,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"9456:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9456:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9524:52:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":3125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9435:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9435:151:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"ExpressionStatement","src":"9435:151:15"}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"9067:210:15","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"9291:9:15","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"to","nameLocation":"9318:2:15","nodeType":"VariableDeclaration","scope":3139,"src":"9310:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"9310:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"tokenId","nameLocation":"9338:7:15","nodeType":"VariableDeclaration","scope":3139,"src":"9330:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"9330:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"_data","nameLocation":"9368:5:15","nodeType":"VariableDeclaration","scope":3139,"src":"9355:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3116,"name":"bytes","nodeType":"ElementaryTypeName","src":"9355:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9300:79:15"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[],"src":"9397:0:15"},"scope":3481,"src":"9282:311:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3204,"nodeType":"Block","src":"9976:366:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"9994:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10008:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10000:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"10000:7:15","typeDescriptions":{}}},"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10000:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9994:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10012:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":3147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9986:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9986:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3156,"nodeType":"ExpressionStatement","src":"9986:61:15"},{"expression":{"arguments":[{"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10065:17:15","subExpression":{"arguments":[{"id":3159,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"10074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3158,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"10066:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10066:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10084:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":3157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10057:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10057:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3164,"nodeType":"ExpressionStatement","src":"10057:58:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10147:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"10147:7:15","typeDescriptions":{}}},"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10147:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"10159:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"10163:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10126:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10126:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"10126:45:15"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3174,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10182:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3176,"indexExpression":{"id":3175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"10192:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10182:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10199:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10182:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"10182:18:15"},{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3180,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10210:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3182,"indexExpression":{"id":3181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"10218:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10210:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"10229:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10210:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3185,"nodeType":"ExpressionStatement","src":"10210:21:15"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:15","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10256:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"10268:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3192,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"10272:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"10247:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10247:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"EmitStatement","src":"10242:38:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10311:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"10311:7:15","typeDescriptions":{}}},"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10311:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3200,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"10323:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"10327:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"10291:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10291:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"10291:44:15"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"9599:311:15","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9924:5:15","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"to","nameLocation":"9938:2:15","nodeType":"VariableDeclaration","scope":3205,"src":"9930:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"9930:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"tokenId","nameLocation":"9950:7:15","nodeType":"VariableDeclaration","scope":3205,"src":"9942:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9929:29:15"},"returnParameters":{"id":3146,"nodeType":"ParameterList","parameters":[],"src":"9976:0:15"},"scope":3481,"src":"9915:427:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"10608:357:15","statements":[{"assignments":[3212],"declarations":[{"constant":false,"id":3212,"mutability":"mutable","name":"owner","nameLocation":"10626:5:15","nodeType":"VariableDeclaration","scope":3264,"src":"10618:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"10618:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3217,"initialValue":{"arguments":[{"id":3215,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3213,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"10634:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3481_$","typeString":"type(contract ERC721)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"10634:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10634:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10618:39:15"},{"expression":{"arguments":[{"id":3219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"10689:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10704:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10696:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"10696:7:15","typeDescriptions":{}}},"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10696:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10708:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10668:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10668:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3226,"nodeType":"ExpressionStatement","src":"10668:48:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10771:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10763:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"10763:7:15","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10763:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3227,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"10754:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10754:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"ExpressionStatement","src":"10754:29:15"},{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3235,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10794:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3237,"indexExpression":{"id":3236,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"10804:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10794:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10814:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10794:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"10794:21:15"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10825:23:15","subExpression":{"baseExpression":{"id":3241,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10832:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3243,"indexExpression":{"id":3242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10832:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"10825:23:15"},{"eventCall":{"arguments":[{"id":3247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"10873:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10888:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"10880:7:15","typeDescriptions":{}}},"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10880:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3246,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"10864:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10864:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"EmitStatement","src":"10859:41:15"},{"expression":{"arguments":[{"id":3256,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"10931:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10946:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10938:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"10938:7:15","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10938:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3261,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"10950:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3255,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"10911:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10911:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3263,"nodeType":"ExpressionStatement","src":"10911:47:15"}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"10348:206:15","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10568:5:15","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"tokenId","nameLocation":"10582:7:15","nodeType":"VariableDeclaration","scope":3265,"src":"10574:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"10574:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10573:17:15"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"10608:0:15"},"scope":3481,"src":"10559:406:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3339,"nodeType":"Block","src":"11398:530:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3278,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11444:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3276,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"11429:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3481_$","typeString":"type(contract ERC721)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"11429:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11429:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11456:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11429:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11474:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":3275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11408:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11408:115:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"ExpressionStatement","src":"11408:115:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11541:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11555:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11547:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"11547:7:15","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11547:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11541:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11559:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":3285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11533:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11533:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"ExpressionStatement","src":"11533:65:15"},{"expression":{"arguments":[{"id":3296,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11630:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3297,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11636:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11640:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3295,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11609:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"ExpressionStatement","src":"11609:39:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11727:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11719:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3302,"name":"address","nodeType":"ElementaryTypeName","src":"11719:7:15","typeDescriptions":{}}},"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11719:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11731:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3301,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11710:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11710:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3308,"nodeType":"ExpressionStatement","src":"11710:29:15"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3309,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"11750:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3311,"indexExpression":{"id":3310,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11760:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11750:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11769:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11750:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"11750:20:15"},{"expression":{"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3315,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"11780:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3317,"indexExpression":{"id":3316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11790:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11780:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11780:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3320,"nodeType":"ExpressionStatement","src":"11780:18:15"},{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3321,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"11808:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3323,"indexExpression":{"id":3322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11816:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11808:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11827:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11808:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3326,"nodeType":"ExpressionStatement","src":"11808:21:15"},{"eventCall":{"arguments":[{"id":3328,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11854:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3329,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11860:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3330,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3327,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"11845:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11845:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3332,"nodeType":"EmitStatement","src":"11840:32:15"},{"expression":{"arguments":[{"id":3334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11903:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"11909:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3336,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"11913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"11883:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11883:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3338,"nodeType":"ExpressionStatement","src":"11883:38:15"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"10971:313:15","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":3340,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11298:9:15","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"from","nameLocation":"11325:4:15","nodeType":"VariableDeclaration","scope":3340,"src":"11317:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"11317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"to","nameLocation":"11347:2:15","nodeType":"VariableDeclaration","scope":3340,"src":"11339:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"11339:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"tokenId","nameLocation":"11367:7:15","nodeType":"VariableDeclaration","scope":3340,"src":"11359:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11307:73:15"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[],"src":"11398:0:15"},"scope":3481,"src":"11289:639:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3363,"nodeType":"Block","src":"12103:107:15","statements":[{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3348,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"12113:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3350,"indexExpression":{"id":3349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"12129:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12113:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"12140:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12113:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3353,"nodeType":"ExpressionStatement","src":"12113:29:15"},{"eventCall":{"arguments":[{"arguments":[{"id":3357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"12181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3355,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12166:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3481_$","typeString":"type(contract ERC721)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"12166:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12166:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"12191:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"12195:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"12157:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12157:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"EmitStatement","src":"12152:51:15"}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"11934:100:15","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":3364,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12048:8:15","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"to","nameLocation":"12065:2:15","nodeType":"VariableDeclaration","scope":3364,"src":"12057:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"12057:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"tokenId","nameLocation":"12077:7:15","nodeType":"VariableDeclaration","scope":3364,"src":"12069:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"12069:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12056:29:15"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"12103:0:15"},"scope":3481,"src":"12039:171:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3395,"nodeType":"Block","src":"12468:184:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"12486:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3376,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"12495:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12486:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12505:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":3374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12478:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12478:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"ExpressionStatement","src":"12478:55:15"},{"expression":{"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3381,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"12543:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":3384,"indexExpression":{"id":3382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"12562:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12543:25:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3385,"indexExpression":{"id":3383,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"12569:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12543:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3386,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"12581:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12543:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3388,"nodeType":"ExpressionStatement","src":"12543:46:15"},{"eventCall":{"arguments":[{"id":3390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"12619:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3391,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"12626:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3392,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"12636:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3389,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12604:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12604:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3394,"nodeType":"EmitStatement","src":"12599:46:15"}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"12216:124:15","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."},"id":3396,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12354:18:15","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"owner","nameLocation":"12390:5:15","nodeType":"VariableDeclaration","scope":3396,"src":"12382:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"12382:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"operator","nameLocation":"12413:8:15","nodeType":"VariableDeclaration","scope":3396,"src":"12405:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3368,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"approved","nameLocation":"12436:8:15","nodeType":"VariableDeclaration","scope":3396,"src":"12431:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3370,"name":"bool","nodeType":"ElementaryTypeName","src":"12431:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12372:78:15"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"12468:0:15"},"scope":3481,"src":"12345:307:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3457,"nodeType":"Block","src":"13361:794:15","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3410,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13375:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":291,"src":"13375:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13375:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3455,"nodeType":"Block","src":"14113:36:15","statements":[{"expression":{"hexValue":"74727565","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14134:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3409,"id":3454,"nodeType":"Return","src":"14127:11:15"}]},"id":3456,"nodeType":"IfStatement","src":"13371:778:15","trueBody":{"id":3452,"nodeType":"Block","src":"13392:715:15","statements":[{"clauses":[{"block":{"id":3432,"nodeType":"Block","src":"13633:91:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"13658:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3427,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"13668:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$246_$","typeString":"type(contract IERC721Receiver)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":245,"src":"13668:32:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"13668:41:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"13658:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3409,"id":3431,"nodeType":"Return","src":"13651:58:15"}]},"errorName":"","id":3433,"nodeType":"TryCatchClause","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"retval","nameLocation":"13625:6:15","nodeType":"VariableDeclaration","scope":3433,"src":"13618:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3423,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13618:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"13617:15:15"},"src":"13609:115:15"},{"block":{"id":3449,"nodeType":"Block","src":"13753:344:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3437,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"13775:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13775:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13775:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3447,"nodeType":"Block","src":"13948:135:15","statements":[{"AST":{"nodeType":"YulBlock","src":"13979:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14016:2:15","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14020:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14012:3:15"},"nodeType":"YulFunctionCall","src":"14012:15:15"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14035:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14029:5:15"},"nodeType":"YulFunctionCall","src":"14029:13:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14005:6:15"},"nodeType":"YulFunctionCall","src":"14005:38:15"},"nodeType":"YulExpressionStatement","src":"14005:38:15"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3435,"isOffset":false,"isSlot":false,"src":"14020:6:15","valueSize":1},{"declaration":3435,"isOffset":false,"isSlot":false,"src":"14035:6:15","valueSize":1}],"id":3446,"nodeType":"InlineAssembly","src":"13970:95:15"}]},"id":3448,"nodeType":"IfStatement","src":"13771:312:15","trueBody":{"id":3445,"nodeType":"Block","src":"13795:147:15","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13849:52:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":3441,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13817:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13817:106:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3444,"nodeType":"ExpressionStatement","src":"13817:106:15"}]}}]},"errorName":"","id":3450,"nodeType":"TryCatchClause","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"reason","nameLocation":"13745:6:15","nodeType":"VariableDeclaration","scope":3450,"src":"13732:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3434,"name":"bytes","nodeType":"ElementaryTypeName","src":"13732:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13731:21:15"},"src":"13725:372:15"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3417,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13484:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13484:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3419,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"13518:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"13544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3421,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"13573:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13442:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3413,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"13426:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$246_$","typeString":"type(contract IERC721Receiver)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13426:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$246","typeString":"contract IERC721Receiver"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":245,"src":"13426:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13426:170:15","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3451,"nodeType":"TryStatement","src":"13406:691:15"}]}}]},"documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"12658:542:15","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13214:22:15","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"from","nameLocation":"13254:4:15","nodeType":"VariableDeclaration","scope":3458,"src":"13246:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3398,"name":"address","nodeType":"ElementaryTypeName","src":"13246:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"to","nameLocation":"13276:2:15","nodeType":"VariableDeclaration","scope":3458,"src":"13268:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"13268:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"tokenId","nameLocation":"13296:7:15","nodeType":"VariableDeclaration","scope":3458,"src":"13288:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"13288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"_data","nameLocation":"13326:5:15","nodeType":"VariableDeclaration","scope":3458,"src":"13313:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3404,"name":"bytes","nodeType":"ElementaryTypeName","src":"13313:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13236:101:15"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"13355:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3407,"name":"bool","nodeType":"ElementaryTypeName","src":"13355:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13354:6:15"},"scope":3481,"src":"13205:950:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3468,"nodeType":"Block","src":"14831:2:15","statements":[]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"14161:545:15","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14720:20:15","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"from","nameLocation":"14758:4:15","nodeType":"VariableDeclaration","scope":3469,"src":"14750:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3460,"name":"address","nodeType":"ElementaryTypeName","src":"14750:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3463,"mutability":"mutable","name":"to","nameLocation":"14780:2:15","nodeType":"VariableDeclaration","scope":3469,"src":"14772:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"14772:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"tokenId","nameLocation":"14800:7:15","nodeType":"VariableDeclaration","scope":3469,"src":"14792:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"14792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14740:73:15"},"returnParameters":{"id":3467,"nodeType":"ParameterList","parameters":[],"src":"14831:0:15"},"scope":3481,"src":"14711:122:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"15324:2:15","statements":[]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"14839:361:15","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15214:19:15","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"from","nameLocation":"15251:4:15","nodeType":"VariableDeclaration","scope":3480,"src":"15243:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"15243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"to","nameLocation":"15273:2:15","nodeType":"VariableDeclaration","scope":3480,"src":"15265:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3473,"name":"address","nodeType":"ElementaryTypeName","src":"15265:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"tokenId","nameLocation":"15293:7:15","nodeType":"VariableDeclaration","scope":3480,"src":"15285:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"15285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15233:73:15"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[],"src":"15324:0:15"},"scope":3481,"src":"15205:121:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3482,"src":"805:14523:15","usedErrors":[]}],"src":"107:15222:15"},"id":15},"contracts/filecoinMockAPIs/MarketAPI.sol":{"ast":{"absolutePath":"contracts/filecoinMockAPIs/MarketAPI.sol","exportedSymbols":{"MarketAPI":[4036],"MarketTypes":[4779]},"id":4037,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3483,"literals":["solidity",">=","0.4",".25","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"39:34:16"},{"absolutePath":"contracts/filecoinMockAPIs/types/MarketTypes.sol","file":"./types/MarketTypes.sol","id":3484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4037,"sourceUnit":4780,"src":"75:33:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"110:451:16","text":"@title This contract is a proxy to the singleton Storage Market actor (address: f05). Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\n @author Zondax AG\n @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it"},"fullyImplemented":true,"id":4036,"linearizedBaseContracts":[4036],"name":"MarketAPI","nameLocation":"610:9:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3489,"mutability":"mutable","name":"balances","nameLocation":"653:8:16","nodeType":"VariableDeclaration","scope":4036,"src":"626:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":3488,"keyType":{"id":3486,"name":"string","nodeType":"ElementaryTypeName","src":"634:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"626:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueType":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"deals","nameLocation":"707:5:16","nodeType":"VariableDeclaration","scope":4036,"src":"667:45:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal)"},"typeName":{"id":3493,"keyType":{"id":3490,"name":"uint64","nodeType":"ElementaryTypeName","src":"675:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"667:39:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal)"},"valueType":{"id":3492,"nodeType":"UserDefinedTypeName","pathNode":{"id":3491,"name":"MarketTypes.MockDeal","nodeType":"IdentifierPath","referencedDeclaration":4696,"src":"685:20:16"},"referencedDeclaration":4696,"src":"685:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage_ptr","typeString":"struct MarketTypes.MockDeal"}}},"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"733:38:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3497,"name":"mock_generate_deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"743:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"743:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3499,"nodeType":"ExpressionStatement","src":"743:21:16"}]},"id":3501,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"730:2:16"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[],"src":"733:0:16"},"scope":4036,"src":"719:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3516,"nodeType":"Block","src":"1094:65:16","statements":[{"expression":{"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3508,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1104:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3511,"indexExpression":{"expression":{"id":3509,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1113:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddBalanceParams_$4699_memory_ptr","typeString":"struct MarketTypes.AddBalanceParams memory"}},"id":3510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_or_client","nodeType":"MemberAccess","referencedDeclaration":4698,"src":"1113:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1104:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1143:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1143:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1104:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3515,"nodeType":"ExpressionStatement","src":"1104:48:16"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"777:218:16","text":"@notice Deposits the received value into the balance held in escrow.\n @dev Because this is a mock method, no real balance is being deducted from the caller, nor incremented in the Storage Market actor (f05)."},"functionSelector":"ebf66ef1","id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"add_balance","nameLocation":"1009:11:16","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"params","nameLocation":"1066:6:16","nodeType":"VariableDeclaration","scope":3517,"src":"1030:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AddBalanceParams_$4699_memory_ptr","typeString":"struct MarketTypes.AddBalanceParams"},"typeName":{"id":3504,"nodeType":"UserDefinedTypeName","pathNode":{"id":3503,"name":"MarketTypes.AddBalanceParams","nodeType":"IdentifierPath","referencedDeclaration":4699,"src":"1030:28:16"},"referencedDeclaration":4699,"src":"1030:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddBalanceParams_$4699_storage_ptr","typeString":"struct MarketTypes.AddBalanceParams"}},"visibility":"internal"}],"src":"1020:58:16"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[],"src":"1094:0:16"},"scope":4036,"src":"1000:159:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3569,"nodeType":"Block","src":"1788:384:16","statements":[{"assignments":[3528],"declarations":[{"constant":false,"id":3528,"mutability":"mutable","name":"tmp","nameLocation":"1806:3:16","nodeType":"VariableDeclaration","scope":3569,"src":"1798:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3533,"initialValue":{"baseExpression":{"id":3529,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1812:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3532,"indexExpression":{"expression":{"id":3530,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1821:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_or_client","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"1821:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1812:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3534,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1861:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3537,"indexExpression":{"expression":{"id":3535,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1870:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_or_client","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"1870:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1861:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3538,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1900:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenAmount","nodeType":"MemberAccess","referencedDeclaration":4703,"src":"1900:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1861:57:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3562,"nodeType":"Block","src":"2046:64:16","statements":[{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3555,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2060:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3558,"indexExpression":{"expression":{"id":3556,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"2069:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_or_client","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"2069:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2060:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2060:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3561,"nodeType":"ExpressionStatement","src":"2060:39:16"}]},"id":3563,"nodeType":"IfStatement","src":"1857:253:16","trueBody":{"id":3554,"nodeType":"Block","src":"1920:120:16","statements":[{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3541,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1934:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3544,"indexExpression":{"expression":{"id":3542,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1943:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_or_client","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"1943:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1934:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":3545,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1973:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenAmount","nodeType":"MemberAccess","referencedDeclaration":4703,"src":"1973:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1934:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3548,"nodeType":"ExpressionStatement","src":"1934:57:16"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"tmp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"2005:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3550,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"2011:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams memory"}},"id":3551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenAmount","nodeType":"MemberAccess","referencedDeclaration":4703,"src":"2011:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2005:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ExpressionStatement","src":"2005:24:16"}]}},{"expression":{"arguments":[{"id":3566,"name":"tmp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"2161:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3564,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2127:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WithdrawBalanceReturn","nodeType":"MemberAccess","referencedDeclaration":4707,"src":"2127:33:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WithdrawBalanceReturn_$4707_storage_ptr_$","typeString":"type(struct MarketTypes.WithdrawBalanceReturn storage pointer)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2127:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceReturn_$4707_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceReturn memory"}},"functionReturnParameters":3526,"id":3568,"nodeType":"Return","src":"2120:45:16"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1165:471:16","text":"@notice Attempt to withdraw the specified amount from the balance held in escrow.\n @notice If less than the specified amount is available, yields the entire available balance.\n @dev This method should be called by an approved address, but the mock does not check that the caller is an approved party.\n @dev Because this is a mock method, no real balance is deposited in the designated address, nor decremented from the Storage Market actor (f05)."},"functionSelector":"13178dc1","id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw_balance","nameLocation":"1650:16:16","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"params","nameLocation":"1717:6:16","nodeType":"VariableDeclaration","scope":3570,"src":"1676:47:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams"},"typeName":{"id":3520,"nodeType":"UserDefinedTypeName","pathNode":{"id":3519,"name":"MarketTypes.WithdrawBalanceParams","nodeType":"IdentifierPath","referencedDeclaration":4704,"src":"1676:33:16"},"referencedDeclaration":4704,"src":"1676:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceParams_$4704_storage_ptr","typeString":"struct MarketTypes.WithdrawBalanceParams"}},"visibility":"internal"}],"src":"1666:63:16"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"1746:40:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceReturn_$4707_memory_ptr","typeString":"struct MarketTypes.WithdrawBalanceReturn"},"typeName":{"id":3524,"nodeType":"UserDefinedTypeName","pathNode":{"id":3523,"name":"MarketTypes.WithdrawBalanceReturn","nodeType":"IdentifierPath","referencedDeclaration":4707,"src":"1746:33:16"},"referencedDeclaration":4707,"src":"1746:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawBalanceReturn_$4707_storage_ptr","typeString":"struct MarketTypes.WithdrawBalanceReturn"}},"visibility":"internal"}],"src":"1745:42:16"},"scope":4036,"src":"1641:531:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3591,"nodeType":"Block","src":"2360:119:16","statements":[{"assignments":[3580],"declarations":[{"constant":false,"id":3580,"mutability":"mutable","name":"actualBalance","nameLocation":"2378:13:16","nodeType":"VariableDeclaration","scope":3591,"src":"2370:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3584,"initialValue":{"baseExpression":{"id":3581,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2394:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3583,"indexExpression":{"id":3582,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"2403:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2394:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2370:38:16"},{"expression":{"arguments":[{"id":3587,"name":"actualBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2455:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3585,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2426:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetBalanceReturn","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"2426:28:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetBalanceReturn_$4712_storage_ptr_$","typeString":"type(struct MarketTypes.GetBalanceReturn storage pointer)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2426:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetBalanceReturn_$4712_memory_ptr","typeString":"struct MarketTypes.GetBalanceReturn memory"}},"functionReturnParameters":3578,"id":3590,"nodeType":"Return","src":"2419:53:16"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"2178:64:16","text":"@return the escrow balance and locked amount for an address."},"functionSelector":"65a9b4a0","id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"get_balance","nameLocation":"2256:11:16","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"addr","nameLocation":"2291:4:16","nodeType":"VariableDeclaration","scope":3592,"src":"2277:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3572,"name":"string","nodeType":"ElementaryTypeName","src":"2277:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2267:34:16"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"2323:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetBalanceReturn_$4712_memory_ptr","typeString":"struct MarketTypes.GetBalanceReturn"},"typeName":{"id":3576,"nodeType":"UserDefinedTypeName","pathNode":{"id":3575,"name":"MarketTypes.GetBalanceReturn","nodeType":"IdentifierPath","referencedDeclaration":4712,"src":"2323:28:16"},"referencedDeclaration":4712,"src":"2323:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetBalanceReturn_$4712_storage_ptr","typeString":"struct MarketTypes.GetBalanceReturn"}},"visibility":"internal"}],"src":"2322:37:16"},"scope":4036,"src":"2247:232:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3625,"nodeType":"Block","src":"2993:206:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3603,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3011:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3606,"indexExpression":{"expression":{"id":3604,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3017:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentParams memory"}},"id":3605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4714,"src":"3017:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3011:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"3011:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3033:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3011:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3003:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3003:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3611,"nodeType":"ExpressionStatement","src":"3003:32:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"3078313131313131","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3128:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_073e70d7cf90873ba6230dab17f83410280f30a5a925638ddd6b4d8817ab9290","typeString":"literal_string \"0x111111\""},"value":"0x111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_073e70d7cf90873ba6230dab17f83410280f30a5a925638ddd6b4d8817ab9290","typeString":"literal_string \"0x111111\""}],"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3122:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3614,"name":"bytes","nodeType":"ElementaryTypeName","src":"3122:5:16","typeDescriptions":{}}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3122:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"baseExpression":{"id":3618,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3157:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3621,"indexExpression":{"expression":{"id":3619,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3163:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentParams memory"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4714,"src":"3163:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3157:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"size","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"3157:21:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3612,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"3065:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealDataCommitmentReturn","nodeType":"MemberAccess","referencedDeclaration":4720,"src":"3065:39:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealDataCommitmentReturn_$4720_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealDataCommitmentReturn storage pointer)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:127:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentReturn memory"}},"functionReturnParameters":3601,"id":3624,"nodeType":"Return","src":"3046:146:16"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"2485:331:16","text":"@return the data commitment and size of a deal proposal.\n @notice This will be available after the deal is published (whether or not is is activated) and up until some undefined period after it is terminated.\n @dev set data values correctly, currently returning fixed data, feel free to adjust in your local mock."},"functionSelector":"991e04a4","id":3626,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_data_commitment","nameLocation":"2830:24:16","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"params","nameLocation":"2911:6:16","nodeType":"VariableDeclaration","scope":3626,"src":"2864:53:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentParams"},"typeName":{"id":3595,"nodeType":"UserDefinedTypeName","pathNode":{"id":3594,"name":"MarketTypes.GetDealDataCommitmentParams","nodeType":"IdentifierPath","referencedDeclaration":4715,"src":"2864:39:16"},"referencedDeclaration":4715,"src":"2864:39:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentParams_$4715_storage_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentParams"}},"visibility":"internal"}],"src":"2854:69:16"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3626,"src":"2945:46:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentReturn"},"typeName":{"id":3599,"nodeType":"UserDefinedTypeName","pathNode":{"id":3598,"name":"MarketTypes.GetDealDataCommitmentReturn","nodeType":"IdentifierPath","referencedDeclaration":4720,"src":"2945:39:16"},"referencedDeclaration":4720,"src":"2945:39:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealDataCommitmentReturn_$4720_storage_ptr","typeString":"struct MarketTypes.GetDealDataCommitmentReturn"}},"visibility":"internal"}],"src":"2944:48:16"},"scope":4036,"src":"2821:378:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3655,"nodeType":"Block","src":"3399:123:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3637,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3417:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3640,"indexExpression":{"expression":{"id":3638,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"3423:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientParams_$4723_memory_ptr","typeString":"struct MarketTypes.GetDealClientParams memory"}},"id":3639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"3423:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"3417:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3439:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3417:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3409:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3409:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"ExpressionStatement","src":"3409:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3648,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3491:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3651,"indexExpression":{"expression":{"id":3649,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"3497:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientParams_$4723_memory_ptr","typeString":"struct MarketTypes.GetDealClientParams memory"}},"id":3650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4722,"src":"3497:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3491:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"client","nodeType":"MemberAccess","referencedDeclaration":4677,"src":"3491:23:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3646,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"3459:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealClientReturn","nodeType":"MemberAccess","referencedDeclaration":4726,"src":"3459:31:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealClientReturn_$4726_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealClientReturn storage pointer)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3459:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientReturn_$4726_memory_ptr","typeString":"struct MarketTypes.GetDealClientReturn memory"}},"functionReturnParameters":3635,"id":3654,"nodeType":"Return","src":"3452:63:16"}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"3205:42:16","text":"@return the client of a deal proposal."},"functionSelector":"8b7f02fd","id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_client","nameLocation":"3261:15:16","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"params","nameLocation":"3325:6:16","nodeType":"VariableDeclaration","scope":3656,"src":"3286:45:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientParams_$4723_memory_ptr","typeString":"struct MarketTypes.GetDealClientParams"},"typeName":{"id":3629,"nodeType":"UserDefinedTypeName","pathNode":{"id":3628,"name":"MarketTypes.GetDealClientParams","nodeType":"IdentifierPath","referencedDeclaration":4723,"src":"3286:31:16"},"referencedDeclaration":4723,"src":"3286:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientParams_$4723_storage_ptr","typeString":"struct MarketTypes.GetDealClientParams"}},"visibility":"internal"}],"src":"3276:61:16"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3656,"src":"3359:38:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientReturn_$4726_memory_ptr","typeString":"struct MarketTypes.GetDealClientReturn"},"typeName":{"id":3633,"nodeType":"UserDefinedTypeName","pathNode":{"id":3632,"name":"MarketTypes.GetDealClientReturn","nodeType":"IdentifierPath","referencedDeclaration":4726,"src":"3359:31:16"},"referencedDeclaration":4726,"src":"3359:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientReturn_$4726_storage_ptr","typeString":"struct MarketTypes.GetDealClientReturn"}},"visibility":"internal"}],"src":"3358:40:16"},"scope":4036,"src":"3252:270:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3685,"nodeType":"Block","src":"3730:127:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3667,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3748:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3670,"indexExpression":{"expression":{"id":3668,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3754:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderParams_$4729_memory_ptr","typeString":"struct MarketTypes.GetDealProviderParams memory"}},"id":3669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4728,"src":"3754:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3748:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"3748:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3770:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3748:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3740:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3740:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3675,"nodeType":"ExpressionStatement","src":"3740:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3678,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"3824:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3681,"indexExpression":{"expression":{"id":3679,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3830:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderParams_$4729_memory_ptr","typeString":"struct MarketTypes.GetDealProviderParams memory"}},"id":3680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4728,"src":"3830:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3824:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider","nodeType":"MemberAccess","referencedDeclaration":4679,"src":"3824:25:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3676,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"3790:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealProviderReturn","nodeType":"MemberAccess","referencedDeclaration":4732,"src":"3790:33:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealProviderReturn_$4732_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealProviderReturn storage pointer)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3790:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderReturn_$4732_memory_ptr","typeString":"struct MarketTypes.GetDealProviderReturn memory"}},"functionReturnParameters":3665,"id":3684,"nodeType":"Return","src":"3783:67:16"}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"3528:44:16","text":"@return the provider of a deal proposal."},"functionSelector":"55d95609","id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_provider","nameLocation":"3586:17:16","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"params","nameLocation":"3654:6:16","nodeType":"VariableDeclaration","scope":3686,"src":"3613:47:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderParams_$4729_memory_ptr","typeString":"struct MarketTypes.GetDealProviderParams"},"typeName":{"id":3659,"nodeType":"UserDefinedTypeName","pathNode":{"id":3658,"name":"MarketTypes.GetDealProviderParams","nodeType":"IdentifierPath","referencedDeclaration":4729,"src":"3613:33:16"},"referencedDeclaration":4729,"src":"3613:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderParams_$4729_storage_ptr","typeString":"struct MarketTypes.GetDealProviderParams"}},"visibility":"internal"}],"src":"3603:63:16"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"3688:40:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderReturn_$4732_memory_ptr","typeString":"struct MarketTypes.GetDealProviderReturn"},"typeName":{"id":3663,"nodeType":"UserDefinedTypeName","pathNode":{"id":3662,"name":"MarketTypes.GetDealProviderReturn","nodeType":"IdentifierPath","referencedDeclaration":4732,"src":"3688:33:16"},"referencedDeclaration":4732,"src":"3688:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderReturn_$4732_storage_ptr","typeString":"struct MarketTypes.GetDealProviderReturn"}},"visibility":"internal"}],"src":"3687:42:16"},"scope":4036,"src":"3577:280:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3715,"nodeType":"Block","src":"4053:121:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3697,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4071:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3700,"indexExpression":{"expression":{"id":3698,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"4077:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelParams_$4735_memory_ptr","typeString":"struct MarketTypes.GetDealLabelParams memory"}},"id":3699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"4077:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"4071:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4093:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4071:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4063:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4063:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3705,"nodeType":"ExpressionStatement","src":"4063:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3708,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4144:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3711,"indexExpression":{"expression":{"id":3709,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"4150:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelParams_$4735_memory_ptr","typeString":"struct MarketTypes.GetDealLabelParams memory"}},"id":3710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"4150:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4144:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"label","nodeType":"MemberAccess","referencedDeclaration":4681,"src":"4144:22:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3706,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4113:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealLabelReturn","nodeType":"MemberAccess","referencedDeclaration":4738,"src":"4113:30:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealLabelReturn_$4738_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealLabelReturn storage pointer)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4113:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelReturn_$4738_memory_ptr","typeString":"struct MarketTypes.GetDealLabelReturn memory"}},"functionReturnParameters":3695,"id":3714,"nodeType":"Return","src":"4106:61:16"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"3863:41:16","text":"@return the label of a deal proposal."},"functionSelector":"9f4b7c7d","id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_label","nameLocation":"3918:14:16","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"params","nameLocation":"3980:6:16","nodeType":"VariableDeclaration","scope":3716,"src":"3942:44:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelParams_$4735_memory_ptr","typeString":"struct MarketTypes.GetDealLabelParams"},"typeName":{"id":3689,"nodeType":"UserDefinedTypeName","pathNode":{"id":3688,"name":"MarketTypes.GetDealLabelParams","nodeType":"IdentifierPath","referencedDeclaration":4735,"src":"3942:30:16"},"referencedDeclaration":4735,"src":"3942:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelParams_$4735_storage_ptr","typeString":"struct MarketTypes.GetDealLabelParams"}},"visibility":"internal"}],"src":"3932:60:16"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"4014:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelReturn_$4738_memory_ptr","typeString":"struct MarketTypes.GetDealLabelReturn"},"typeName":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"MarketTypes.GetDealLabelReturn","nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"4014:30:16"},"referencedDeclaration":4738,"src":"4014:30:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealLabelReturn_$4738_storage_ptr","typeString":"struct MarketTypes.GetDealLabelReturn"}},"visibility":"internal"}],"src":"4013:39:16"},"scope":4036,"src":"3909:265:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3750,"nodeType":"Block","src":"4398:200:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3727,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4416:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3730,"indexExpression":{"expression":{"id":3728,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"4422:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermParams_$4741_memory_ptr","typeString":"struct MarketTypes.GetDealTermParams memory"}},"id":3729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4740,"src":"4422:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4416:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"4416:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4438:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4416:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4408:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4408:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"4408:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3738,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4517:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3741,"indexExpression":{"expression":{"id":3739,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermParams_$4741_memory_ptr","typeString":"struct MarketTypes.GetDealTermParams memory"}},"id":3740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4740,"src":"4523:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4517:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4683,"src":"4517:22:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"baseExpression":{"id":3743,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4557:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3746,"indexExpression":{"expression":{"id":3744,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"4563:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermParams_$4741_memory_ptr","typeString":"struct MarketTypes.GetDealTermParams memory"}},"id":3745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4740,"src":"4563:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4557:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4685,"src":"4557:20:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":3736,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4470:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealTermReturn","nodeType":"MemberAccess","referencedDeclaration":4746,"src":"4470:29:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealTermReturn_$4746_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealTermReturn storage pointer)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4470:121:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermReturn_$4746_memory_ptr","typeString":"struct MarketTypes.GetDealTermReturn memory"}},"functionReturnParameters":3725,"id":3749,"nodeType":"Return","src":"4451:140:16"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"4180:72:16","text":"@return the start epoch and duration (in epochs) of a deal proposal."},"functionSelector":"ad36f184","id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_term","nameLocation":"4266:13:16","nodeType":"FunctionDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"params","nameLocation":"4326:6:16","nodeType":"VariableDeclaration","scope":3751,"src":"4289:43:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermParams_$4741_memory_ptr","typeString":"struct MarketTypes.GetDealTermParams"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"MarketTypes.GetDealTermParams","nodeType":"IdentifierPath","referencedDeclaration":4741,"src":"4289:29:16"},"referencedDeclaration":4741,"src":"4289:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermParams_$4741_storage_ptr","typeString":"struct MarketTypes.GetDealTermParams"}},"visibility":"internal"}],"src":"4279:59:16"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"4360:36:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermReturn_$4746_memory_ptr","typeString":"struct MarketTypes.GetDealTermReturn"},"typeName":{"id":3723,"nodeType":"UserDefinedTypeName","pathNode":{"id":3722,"name":"MarketTypes.GetDealTermReturn","nodeType":"IdentifierPath","referencedDeclaration":4746,"src":"4360:29:16"},"referencedDeclaration":4746,"src":"4360:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealTermReturn_$4746_storage_ptr","typeString":"struct MarketTypes.GetDealTermReturn"}},"visibility":"internal"}],"src":"4359:38:16"},"scope":4036,"src":"4257:341:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3780,"nodeType":"Block","src":"4820:178:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3762,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4838:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3765,"indexExpression":{"expression":{"id":3763,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4844:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","typeString":"struct MarketTypes.GetDealEpochPriceParams memory"}},"id":3764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4748,"src":"4844:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4838:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"4838:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4860:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4838:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4830:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4830:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3770,"nodeType":"ExpressionStatement","src":"4830:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3773,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4945:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3776,"indexExpression":{"expression":{"id":3774,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4951:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","typeString":"struct MarketTypes.GetDealEpochPriceParams memory"}},"id":3775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4748,"src":"4951:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4945:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price_per_epoch","nodeType":"MemberAccess","referencedDeclaration":4687,"src":"4945:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3771,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4892:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealEpochPriceReturn","nodeType":"MemberAccess","referencedDeclaration":4752,"src":"4892:35:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealEpochPriceReturn_$4752_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealEpochPriceReturn storage pointer)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4892:99:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr","typeString":"struct MarketTypes.GetDealEpochPriceReturn memory"}},"functionReturnParameters":3760,"id":3779,"nodeType":"Return","src":"4873:118:16"}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"4604:51:16","text":"@return the per-epoch price of a deal proposal."},"functionSelector":"412a4b9a","id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_total_price","nameLocation":"4669:20:16","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"params","nameLocation":"4742:6:16","nodeType":"VariableDeclaration","scope":3781,"src":"4699:49:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","typeString":"struct MarketTypes.GetDealEpochPriceParams"},"typeName":{"id":3754,"nodeType":"UserDefinedTypeName","pathNode":{"id":3753,"name":"MarketTypes.GetDealEpochPriceParams","nodeType":"IdentifierPath","referencedDeclaration":4749,"src":"4699:35:16"},"referencedDeclaration":4749,"src":"4699:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceParams_$4749_storage_ptr","typeString":"struct MarketTypes.GetDealEpochPriceParams"}},"visibility":"internal"}],"src":"4689:65:16"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3781,"src":"4776:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr","typeString":"struct MarketTypes.GetDealEpochPriceReturn"},"typeName":{"id":3758,"nodeType":"UserDefinedTypeName","pathNode":{"id":3757,"name":"MarketTypes.GetDealEpochPriceReturn","nodeType":"IdentifierPath","referencedDeclaration":4752,"src":"4776:35:16"},"referencedDeclaration":4752,"src":"4776:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealEpochPriceReturn_$4752_storage_ptr","typeString":"struct MarketTypes.GetDealEpochPriceReturn"}},"visibility":"internal"}],"src":"4775:44:16"},"scope":4036,"src":"4660:338:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3810,"nodeType":"Block","src":"5253:186:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3792,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5271:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3795,"indexExpression":{"expression":{"id":3793,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"5277:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","typeString":"struct MarketTypes.GetDealClientCollateralParams memory"}},"id":3794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4754,"src":"5277:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5271:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"5271:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5271:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5263:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5263:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3800,"nodeType":"ExpressionStatement","src":"5263:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3803,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5384:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3806,"indexExpression":{"expression":{"id":3804,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"5390:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","typeString":"struct MarketTypes.GetDealClientCollateralParams memory"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4754,"src":"5390:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5384:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"client_collateral","nodeType":"MemberAccess","referencedDeclaration":4691,"src":"5384:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3801,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5325:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealClientCollateralReturn","nodeType":"MemberAccess","referencedDeclaration":4758,"src":"5325:41:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealClientCollateralReturn_$4758_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealClientCollateralReturn storage pointer)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5325:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr","typeString":"struct MarketTypes.GetDealClientCollateralReturn memory"}},"functionReturnParameters":3790,"id":3809,"nodeType":"Return","src":"5306:126:16"}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"5004:66:16","text":"@return the client collateral requirement for a deal proposal."},"functionSelector":"8777b7c8","id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_client_collateral","nameLocation":"5084:26:16","nodeType":"FunctionDefinition","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"params","nameLocation":"5169:6:16","nodeType":"VariableDeclaration","scope":3811,"src":"5120:55:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","typeString":"struct MarketTypes.GetDealClientCollateralParams"},"typeName":{"id":3784,"nodeType":"UserDefinedTypeName","pathNode":{"id":3783,"name":"MarketTypes.GetDealClientCollateralParams","nodeType":"IdentifierPath","referencedDeclaration":4755,"src":"5120:41:16"},"referencedDeclaration":4755,"src":"5120:41:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralParams_$4755_storage_ptr","typeString":"struct MarketTypes.GetDealClientCollateralParams"}},"visibility":"internal"}],"src":"5110:71:16"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"5203:48:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr","typeString":"struct MarketTypes.GetDealClientCollateralReturn"},"typeName":{"id":3788,"nodeType":"UserDefinedTypeName","pathNode":{"id":3787,"name":"MarketTypes.GetDealClientCollateralReturn","nodeType":"IdentifierPath","referencedDeclaration":4758,"src":"5203:41:16"},"referencedDeclaration":4758,"src":"5203:41:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealClientCollateralReturn_$4758_storage_ptr","typeString":"struct MarketTypes.GetDealClientCollateralReturn"}},"visibility":"internal"}],"src":"5202:50:16"},"scope":4036,"src":"5075:364:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3840,"nodeType":"Block","src":"5702:190:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3822,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5720:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3825,"indexExpression":{"expression":{"id":3823,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5726:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralParams memory"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4760,"src":"5726:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"5720:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5742:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5720:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5712:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5712:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"5712:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3833,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5835:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3836,"indexExpression":{"expression":{"id":3834,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5841:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralParams memory"}},"id":3835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4760,"src":"5841:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5835:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"provider_collateral","nodeType":"MemberAccess","referencedDeclaration":4689,"src":"5835:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3831,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5774:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealProviderCollateralReturn","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"5774:43:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealProviderCollateralReturn_$4764_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealProviderCollateralReturn storage pointer)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5774:111:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralReturn memory"}},"functionReturnParameters":3820,"id":3839,"nodeType":"Return","src":"5755:130:16"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"5445:68:16","text":"@return the provider collateral requirement for a deal proposal."},"functionSelector":"1a2811e7","id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_provider_collateral","nameLocation":"5527:28:16","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"params","nameLocation":"5616:6:16","nodeType":"VariableDeclaration","scope":3841,"src":"5565:57:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralParams"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"MarketTypes.GetDealProviderCollateralParams","nodeType":"IdentifierPath","referencedDeclaration":4761,"src":"5565:43:16"},"referencedDeclaration":4761,"src":"5565:43:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralParams_$4761_storage_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralParams"}},"visibility":"internal"}],"src":"5555:73:16"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"5650:50:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralReturn"},"typeName":{"id":3818,"nodeType":"UserDefinedTypeName","pathNode":{"id":3817,"name":"MarketTypes.GetDealProviderCollateralReturn","nodeType":"IdentifierPath","referencedDeclaration":4764,"src":"5650:43:16"},"referencedDeclaration":4764,"src":"5650:43:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealProviderCollateralReturn_$4764_storage_ptr","typeString":"struct MarketTypes.GetDealProviderCollateralReturn"}},"visibility":"internal"}],"src":"5649:52:16"},"scope":4036,"src":"5518:374:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3870,"nodeType":"Block","src":"6220:127:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3852,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6238:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3855,"indexExpression":{"expression":{"id":3853,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"6244:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedParams_$4767_memory_ptr","typeString":"struct MarketTypes.GetDealVerifiedParams memory"}},"id":3854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4766,"src":"6244:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6238:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"6238:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6260:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6238:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6230:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6230:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"6230:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3863,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6314:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3866,"indexExpression":{"expression":{"id":3864,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"6320:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedParams_$4767_memory_ptr","typeString":"struct MarketTypes.GetDealVerifiedParams memory"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4766,"src":"6320:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6314:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":4675,"src":"6314:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3861,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6280:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealVerifiedReturn","nodeType":"MemberAccess","referencedDeclaration":4770,"src":"6280:33:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealVerifiedReturn_$4770_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealVerifiedReturn storage pointer)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedReturn_$4770_memory_ptr","typeString":"struct MarketTypes.GetDealVerifiedReturn memory"}},"functionReturnParameters":3850,"id":3869,"nodeType":"Return","src":"6273:67:16"}]},"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"5898:164:16","text":"@return the verified flag for a deal proposal.\n @notice Note that the source of truth for verified allocations and claims is the verified registry actor."},"functionSelector":"5c4ddef3","id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_verified","nameLocation":"6076:17:16","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"params","nameLocation":"6144:6:16","nodeType":"VariableDeclaration","scope":3871,"src":"6103:47:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedParams_$4767_memory_ptr","typeString":"struct MarketTypes.GetDealVerifiedParams"},"typeName":{"id":3844,"nodeType":"UserDefinedTypeName","pathNode":{"id":3843,"name":"MarketTypes.GetDealVerifiedParams","nodeType":"IdentifierPath","referencedDeclaration":4767,"src":"6103:33:16"},"referencedDeclaration":4767,"src":"6103:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedParams_$4767_storage_ptr","typeString":"struct MarketTypes.GetDealVerifiedParams"}},"visibility":"internal"}],"src":"6093:63:16"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"6178:40:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedReturn_$4770_memory_ptr","typeString":"struct MarketTypes.GetDealVerifiedReturn"},"typeName":{"id":3848,"nodeType":"UserDefinedTypeName","pathNode":{"id":3847,"name":"MarketTypes.GetDealVerifiedReturn","nodeType":"IdentifierPath","referencedDeclaration":4770,"src":"6178:33:16"},"referencedDeclaration":4770,"src":"6178:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealVerifiedReturn_$4770_storage_ptr","typeString":"struct MarketTypes.GetDealVerifiedReturn"}},"visibility":"internal"}],"src":"6177:42:16"},"scope":4036,"src":"6067:280:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3905,"nodeType":"Block","src":"6850:217:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3882,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6868:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3885,"indexExpression":{"expression":{"id":3883,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"6874:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationParams_$4773_memory_ptr","typeString":"struct MarketTypes.GetDealActivationParams memory"}},"id":3884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4772,"src":"6874:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"6868:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6868:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6860:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6860:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3890,"nodeType":"ExpressionStatement","src":"6860:32:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3893,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6975:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3896,"indexExpression":{"expression":{"id":3894,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"6981:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationParams_$4773_memory_ptr","typeString":"struct MarketTypes.GetDealActivationParams memory"}},"id":3895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4772,"src":"6981:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6975:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"activated","nodeType":"MemberAccess","referencedDeclaration":4693,"src":"6975:26:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"baseExpression":{"id":3898,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"7019:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":3901,"indexExpression":{"expression":{"id":3899,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"7025:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationParams_$4773_memory_ptr","typeString":"struct MarketTypes.GetDealActivationParams memory"}},"id":3900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4772,"src":"7025:9:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7019:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":3902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"terminated","nodeType":"MemberAccess","referencedDeclaration":4695,"src":"7019:27:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":3891,"name":"MarketTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6922:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MarketTypes_$4779_$","typeString":"type(library MarketTypes)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetDealActivationReturn","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"6922:35:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetDealActivationReturn_$4778_storage_ptr_$","typeString":"type(struct MarketTypes.GetDealActivationReturn storage pointer)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:138:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationReturn_$4778_memory_ptr","typeString":"struct MarketTypes.GetDealActivationReturn memory"}},"functionReturnParameters":3880,"id":3904,"nodeType":"Return","src":"6903:157:16"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"6353:333:16","text":"@notice Fetches activation state for a deal.\n @notice This will be available from when the proposal is published until an undefined period after the deal finishes (either normally or by termination).\n @return USR_NOT_FOUND if the deal doesn't exist (yet), or EX_DEAL_EXPIRED if the deal has been removed from state."},"functionSelector":"f241560c","id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"get_deal_activation","nameLocation":"6700:19:16","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"params","nameLocation":"6772:6:16","nodeType":"VariableDeclaration","scope":3906,"src":"6729:49:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationParams_$4773_memory_ptr","typeString":"struct MarketTypes.GetDealActivationParams"},"typeName":{"id":3874,"nodeType":"UserDefinedTypeName","pathNode":{"id":3873,"name":"MarketTypes.GetDealActivationParams","nodeType":"IdentifierPath","referencedDeclaration":4773,"src":"6729:35:16"},"referencedDeclaration":4773,"src":"6729:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationParams_$4773_storage_ptr","typeString":"struct MarketTypes.GetDealActivationParams"}},"visibility":"internal"}],"src":"6719:65:16"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"6806:42:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationReturn_$4778_memory_ptr","typeString":"struct MarketTypes.GetDealActivationReturn"},"typeName":{"id":3878,"nodeType":"UserDefinedTypeName","pathNode":{"id":3877,"name":"MarketTypes.GetDealActivationReturn","nodeType":"IdentifierPath","referencedDeclaration":4778,"src":"6806:35:16"},"referencedDeclaration":4778,"src":"6806:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_GetDealActivationReturn_$4778_storage_ptr","typeString":"struct MarketTypes.GetDealActivationReturn"}},"visibility":"internal"}],"src":"6805:44:16"},"scope":4036,"src":"6691:376:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3932,"nodeType":"Block","src":"7240:417:16","statements":[{"assignments":[3915,null],"declarations":[{"constant":false,"id":3915,"mutability":"mutable","name":"success","nameLocation":"7344:7:16","nodeType":"VariableDeclaration","scope":3932,"src":"7339:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3914,"name":"bool","nodeType":"ElementaryTypeName","src":"7339:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3926,"initialValue":{"arguments":[{"arguments":[{"hexValue":"68616e646c655f66696c65636f696e5f6d6574686f642875696e7436342c75696e7436342c627974657329","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7423:45:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_868e10c4054b8ca2a3ca54c5ccb32c34b659308e0645a717d102380a5139c8ad","typeString":"literal_string \"handle_filecoin_method(uint64,uint64,bytes)\""},"value":"handle_filecoin_method(uint64,uint64,bytes)"},{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"32363433313334303732","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:10:16","typeDescriptions":{"typeIdentifier":"t_rational_2643134072_by_1","typeString":"int_const 2643134072"},"value":"2643134072"},{"id":3923,"name":"raw_auth_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"7533:15:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_868e10c4054b8ca2a3ca54c5ccb32c34b659308e0645a717d102380a5139c8ad","typeString":"literal_string \"handle_filecoin_method(uint64,uint64,bytes)\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_2643134072_by_1","typeString":"int_const 2643134072"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3918,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7382:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"7382:23:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7382:180:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3916,"name":"callee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"7357:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"7357:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7357:215:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7338:234:16"},{"expression":{"arguments":[{"id":3928,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"7590:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c69656e7420636f6e7472616374206661696c656420746f20617574686f72697a65206465616c207075626c697368","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7599:50:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb","typeString":"literal_string \"client contract failed to authorize deal publish\""},"value":"client contract failed to authorize deal publish"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb","typeString":"literal_string \"client contract failed to authorize deal publish\""}],"id":3927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7582:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7582:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3931,"nodeType":"ExpressionStatement","src":"7582:68:16"}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"7073:78:16","text":"@notice Publish a new set of storage deals (not yet included in a sector)."},"functionSelector":"34409642","id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"publish_storage_deals","nameLocation":"7165:21:16","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"raw_auth_params","nameLocation":"7200:15:16","nodeType":"VariableDeclaration","scope":3933,"src":"7187:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3908,"name":"bytes","nodeType":"ElementaryTypeName","src":"7187:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"callee","nameLocation":"7225:6:16","nodeType":"VariableDeclaration","scope":3933,"src":"7217:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3910,"name":"address","nodeType":"ElementaryTypeName","src":"7217:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7186:46:16"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[],"src":"7240:0:16"},"scope":4036,"src":"7156:501:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4034,"nodeType":"Block","src":"7867:887:16","statements":[{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"deal_67","nameLocation":"7905:7:16","nodeType":"VariableDeclaration","scope":4034,"src":"7877:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal"},"typeName":{"id":3940,"nodeType":"UserDefinedTypeName","pathNode":{"id":3939,"name":"MarketTypes.MockDeal","nodeType":"IdentifierPath","referencedDeclaration":4696,"src":"7877:20:16"},"referencedDeclaration":4696,"src":"7877:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage_ptr","typeString":"struct MarketTypes.MockDeal"}},"visibility":"internal"}],"id":3942,"nodeType":"VariableDeclarationStatement","src":"7877:35:16"},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3943,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"7922:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"7922:10:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3637","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7935:2:16","typeDescriptions":{"typeIdentifier":"t_rational_67_by_1","typeString":"int_const 67"},"value":"67"},"src":"7922:15:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3948,"nodeType":"ExpressionStatement","src":"7922:15:16"},{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3949,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"7947:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"cid","nodeType":"MemberAccess","referencedDeclaration":4671,"src":"7947:24:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6261676136656134736561716c6b67366d737335717335366a7174616a673579637268706b6a326236366367646b756b6632716a6d6d7a7a3661796b73756369","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7974:66:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cdd818422fef243d40428476b28710904f58af8aed6ba1c63df519fae7d8a006","typeString":"literal_string \"baga6ea4seaqlkg6mss5qs56jqtajg5ycrhpkj2b66cgdkukf2qjmmzz6ayksuci\""},"value":"baga6ea4seaqlkg6mss5qs56jqtajg5ycrhpkj2b66cgdkukf2qjmmzz6ayksuci"},"src":"7947:93:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3954,"nodeType":"ExpressionStatement","src":"7947:93:16"},{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3955,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8050:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"size","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"8050:12:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"38333838363038","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8065:7:16","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"8388608"},"src":"8050:22:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3960,"nodeType":"ExpressionStatement","src":"8050:22:16"},{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3961,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8082:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":4675,"src":"8082:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8101:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8082:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"ExpressionStatement","src":"8082:24:16"},{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3967,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8116:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"client","nodeType":"MemberAccess","referencedDeclaration":4677,"src":"8116:14:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"743031313039","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8133:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f3ac6671181d64cb5c30f730daf2e22d437155e5cc09e1de867900a9310910d","typeString":"literal_string \"t01109\""},"value":"t01109"},"src":"8116:25:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3972,"nodeType":"ExpressionStatement","src":"8116:25:16"},{"expression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3973,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8151:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"provider","nodeType":"MemberAccess","referencedDeclaration":4679,"src":"8151:16:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"743031313133","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8170:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b40a853539be84e790423e92c9d3c3e9ba1cf20c303dbc8e4be5ec55f58b1ab5","typeString":"literal_string \"t01113\""},"value":"t01113"},"src":"8151:27:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3978,"nodeType":"ExpressionStatement","src":"8151:27:16"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3979,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8188:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"label","nodeType":"MemberAccess","referencedDeclaration":4681,"src":"8188:13:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6d41584367354149673859425862466a7464427931695a6a704459417752537430656c474c463547765471756c4569693156634d","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8204:54:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f999437cc5821b2db12741b50f5ebf5a7d616b467302bae21b8d1d61820e4165","typeString":"literal_string \"mAXCg5AIg8YBXbFjtdBy1iZjpDYAwRSt0elGLF5GvTqulEii1VcM\""},"value":"mAXCg5AIg8YBXbFjtdBy1iZjpDYAwRSt0elGLF5GvTqulEii1VcM"},"src":"8188:70:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3984,"nodeType":"ExpressionStatement","src":"8188:70:16"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3985,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8268:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"start","nodeType":"MemberAccess","referencedDeclaration":4683,"src":"8268:13:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235323435","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8284:5:16","typeDescriptions":{"typeIdentifier":"t_rational_25245_by_1","typeString":"int_const 25245"},"value":"25245"},"src":"8268:21:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3990,"nodeType":"ExpressionStatement","src":"8268:21:16"},{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3991,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8299:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"end","nodeType":"MemberAccess","referencedDeclaration":4685,"src":"8299:11:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"353435313530","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8313:6:16","typeDescriptions":{"typeIdentifier":"t_rational_545150_by_1","typeString":"int_const 545150"},"value":"545150"},"src":"8299:20:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3996,"nodeType":"ExpressionStatement","src":"8299:20:16"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3997,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8329:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":3999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"price_per_epoch","nodeType":"MemberAccess","referencedDeclaration":4687,"src":"8329:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31313030303030303030303030","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8355:13:16","typeDescriptions":{"typeIdentifier":"t_rational_1100000000000_by_1","typeString":"int_const 1100000000000"},"value":"1100000000000"},"src":"8329:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"8329:39:16"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4003,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8378:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":4005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"provider_collateral","nodeType":"MemberAccess","referencedDeclaration":4689,"src":"8378:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8408:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8378:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"8378:31:16"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4009,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8419:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":4011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"client_collateral","nodeType":"MemberAccess","referencedDeclaration":4691,"src":"8419:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8447:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8419:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"8419:29:16"},{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4015,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8458:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"activated","nodeType":"MemberAccess","referencedDeclaration":4693,"src":"8458:17:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8458:21:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4020,"nodeType":"ExpressionStatement","src":"8458:21:16"},{"expression":{"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4021,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":4023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"terminated","nodeType":"MemberAccess","referencedDeclaration":4695,"src":"8489:18:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8510:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8489:22:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4026,"nodeType":"ExpressionStatement","src":"8489:22:16"},{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4027,"name":"deals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"8522:5:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_MockDeal_$4696_storage_$","typeString":"mapping(uint64 => struct MarketTypes.MockDeal storage ref)"}},"id":4030,"indexExpression":{"expression":{"id":4028,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8528:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"id":4029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"8528:10:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8522:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4031,"name":"deal_67","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8542:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_memory_ptr","typeString":"struct MarketTypes.MockDeal memory"}},"src":"8522:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_MockDeal_$4696_storage","typeString":"struct MarketTypes.MockDeal storage ref"}},"id":4033,"nodeType":"ExpressionStatement","src":"8522:27:16"}]},"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"7663:159:16","text":"@notice Adds mock deal data to the internal state of this mock.\n @dev Feel free to adjust the data here to make it align with deals in your network."},"id":4035,"implemented":true,"kind":"function","modifiers":[],"name":"mock_generate_deals","nameLocation":"7836:19:16","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[],"src":"7855:2:16"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[],"src":"7867:0:16"},"scope":4036,"src":"7827:927:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4037,"src":"601:8155:16","usedErrors":[]}],"src":"39:8718:16"},"id":16},"contracts/filecoinMockAPIs/MinerAPI.sol":{"ast":{"absolutePath":"contracts/filecoinMockAPIs/MinerAPI.sol","exportedSymbols":{"CommonTypes":[4664],"MinerAPI":[4344],"MinerTypes":[4818]},"id":4345,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4038,"literals":["solidity",">=","0.4",".25","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"39:34:17"},{"absolutePath":"contracts/filecoinMockAPIs/types/MinerTypes.sol","file":"./types/MinerTypes.sol","id":4039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4345,"sourceUnit":4819,"src":"75:32:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"109:424:17","text":"@title This contract is a proxy to a built-in Miner actor. Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\n @author Zondax AG\n @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it"},"fullyImplemented":true,"id":4344,"linearizedBaseContracts":[4344],"name":"MinerAPI","nameLocation":"582:8:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4042,"mutability":"mutable","name":"owner","nameLocation":"604:5:17","nodeType":"VariableDeclaration","scope":4344,"src":"597:12:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4041,"name":"string","nodeType":"ElementaryTypeName","src":"597:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"isBeneficiarySet","nameLocation":"620:16:17","nodeType":"VariableDeclaration","scope":4344,"src":"615:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4043,"name":"bool","nodeType":"ElementaryTypeName","src":"615:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"639:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"activeBeneficiary","nameLocation":"680:17:17","nodeType":"VariableDeclaration","scope":4344,"src":"650:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary"},"typeName":{"id":4047,"nodeType":"UserDefinedTypeName","pathNode":{"id":4046,"name":"CommonTypes.ActiveBeneficiary","nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"650:29:17"},"referencedDeclaration":4427,"src":"650:29:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage_ptr","typeString":"struct CommonTypes.ActiveBeneficiary"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"sectorSizesBytes","nameLocation":"745:16:17","nodeType":"VariableDeclaration","scope":4344,"src":"703:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"},"typeName":{"id":4052,"keyType":{"id":4050,"nodeType":"UserDefinedTypeName","pathNode":{"id":4049,"name":"CommonTypes.SectorSize","nodeType":"IdentifierPath","referencedDeclaration":4387,"src":"711:22:17"},"referencedDeclaration":4387,"src":"711:22:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"nodeType":"Mapping","src":"703:41:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"},"valueType":{"id":4051,"name":"uint64","nodeType":"ElementaryTypeName","src":"737:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},"visibility":"internal"},{"body":{"id":4116,"nodeType":"Block","src":"922:376:17","statements":[{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4059,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"932:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4060,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"940:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"932:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4062,"nodeType":"ExpressionStatement","src":"932:14:17"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4063,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"957:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4067,"indexExpression":{"expression":{"expression":{"id":4064,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"974:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"974:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_2KiB","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"974:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"957:46:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3130","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1011:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1006:7:17","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"}},"src":"957:56:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4072,"nodeType":"ExpressionStatement","src":"957:56:17"},{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4073,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1023:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4077,"indexExpression":{"expression":{"expression":{"id":4074,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1040:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"1040:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_8MiB","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"1040:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1023:46:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1072:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3230","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1072:7:17","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"}},"src":"1023:56:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4082,"nodeType":"ExpressionStatement","src":"1023:56:17"},{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4083,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1089:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4087,"indexExpression":{"expression":{"expression":{"id":4084,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1106:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"1106:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_512MiB","nodeType":"MemberAccess","referencedDeclaration":4384,"src":"1106:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1089:48:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_536870912_by_1","typeString":"int_const 536870912"},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"353132","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:3:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"512"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3230","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1140:9:17","typeDescriptions":{"typeIdentifier":"t_rational_536870912_by_1","typeString":"int_const 536870912"}},"src":"1089:60:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4092,"nodeType":"ExpressionStatement","src":"1089:60:17"},{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4093,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1159:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4097,"indexExpression":{"expression":{"expression":{"id":4094,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1176:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"1176:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_32GiB","nodeType":"MemberAccess","referencedDeclaration":4385,"src":"1176:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1159:47:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1209:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3330","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1215:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1209:8:17","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"}},"src":"1159:58:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4102,"nodeType":"ExpressionStatement","src":"1159:58:17"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4103,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"1227:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4107,"indexExpression":{"expression":{"expression":{"id":4104,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1244:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"1244:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_64GiB","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"1244:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1227:47:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_68719476736_by_1","typeString":"int_const 68719476736"},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1277:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1282:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3330","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1288:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1282:8:17","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1281:10:17","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"}},"src":"1277:14:17","typeDescriptions":{"typeIdentifier":"t_rational_68719476736_by_1","typeString":"int_const 68719476736"}},"src":"1227:64:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4115,"nodeType":"ExpressionStatement","src":"1227:64:17"}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"768:115:17","text":"@notice (Mock method) Sets the owner of a Miner on contract deployment, which will be returned via get_owner()."},"id":4117,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"_owner","nameLocation":"914:6:17","nodeType":"VariableDeclaration","scope":4117,"src":"900:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4055,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"899:22:17"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[],"src":"922:0:17"},"scope":4344,"src":"888:410:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4137,"nodeType":"Block","src":"1452:72:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1476:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1470:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4124,"name":"bytes","nodeType":"ElementaryTypeName","src":"1470:5:17","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1470:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1470:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1470:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1462:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"ExpressionStatement","src":"1462:33:17"},{"expression":{"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1505:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4134,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"1513:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1505:12:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4136,"nodeType":"ExpressionStatement","src":"1505:12:17"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"1304:92:17","text":"@notice (Mock method) Sets the owner of a Miner, which will be returned via get_owner()."},"functionSelector":"f5cd020c","id":4138,"implemented":true,"kind":"function","modifiers":[],"name":"mock_set_owner","nameLocation":"1410:14:17","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"addr","nameLocation":"1439:4:17","nodeType":"VariableDeclaration","scope":4138,"src":"1425:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4119,"name":"string","nodeType":"ElementaryTypeName","src":"1425:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1424:20:17"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[],"src":"1452:0:17"},"scope":4344,"src":"1401:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4160,"nodeType":"Block","src":"1839:100:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1863:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1857:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4146,"name":"bytes","nodeType":"ElementaryTypeName","src":"1857:5:17","typeDescriptions":{}}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1857:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1857:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1849:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1849:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4154,"nodeType":"ExpressionStatement","src":"1849:33:17"},{"expression":{"arguments":[{"id":4157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"1926:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4155,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"1900:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetOwnerReturn","nodeType":"MemberAccess","referencedDeclaration":4786,"src":"1900:25:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetOwnerReturn_$4786_storage_ptr_$","typeString":"type(struct MinerTypes.GetOwnerReturn storage pointer)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1900:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetOwnerReturn_$4786_memory_ptr","typeString":"struct MinerTypes.GetOwnerReturn memory"}},"functionReturnParameters":4144,"id":4159,"nodeType":"Return","src":"1893:39:17"}]},"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"1530:200:17","text":"@notice Income and returned collateral are paid to this address\n @notice This address is also allowed to change the worker address for the miner\n @return the owner address of a Miner"},"functionSelector":"0ac298dc","id":4161,"implemented":true,"kind":"function","modifiers":[],"name":"get_owner","nameLocation":"1744:9:17","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[],"src":"1753:2:17"},"returnParameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4161,"src":"1801:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetOwnerReturn_$4786_memory_ptr","typeString":"struct MinerTypes.GetOwnerReturn"},"typeName":{"id":4142,"nodeType":"UserDefinedTypeName","pathNode":{"id":4141,"name":"MinerTypes.GetOwnerReturn","nodeType":"IdentifierPath","referencedDeclaration":4786,"src":"1801:25:17"},"referencedDeclaration":4786,"src":"1801:25:17","typeDescriptions":{"typeIdentifier":"t_struct$_GetOwnerReturn_$4786_storage_ptr","typeString":"struct MinerTypes.GetOwnerReturn"}},"visibility":"internal"}],"src":"1800:34:17"},"scope":4344,"src":"1735:204:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4171,"nodeType":"Block","src":"2307:29:17","statements":[{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"2317:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4168,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"2325:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2317:12:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4170,"nodeType":"ExpressionStatement","src":"2317:12:17"}]},"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"1945:300:17","text":"@param addr New owner address\n @notice Proposes or confirms a change of owner address.\n @notice If invoked by the current owner, proposes a new owner address for confirmation. If the proposed address is the current owner address, revokes any existing proposal that proposed address."},"functionSelector":"207f2cec","id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"change_owner_address","nameLocation":"2259:20:17","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"addr","nameLocation":"2294:4:17","nodeType":"VariableDeclaration","scope":4172,"src":"2280:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4163,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2279:20:17"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[],"src":"2307:0:17"},"scope":4344,"src":"2250:86:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4187,"nodeType":"Block","src":"2674:68:17","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2729:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4182,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2691:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"IsControllingAddressReturn","nodeType":"MemberAccess","referencedDeclaration":4792,"src":"2691:37:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IsControllingAddressReturn_$4792_storage_ptr_$","typeString":"type(struct MinerTypes.IsControllingAddressReturn storage pointer)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2691:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IsControllingAddressReturn_$4792_memory_ptr","typeString":"struct MinerTypes.IsControllingAddressReturn memory"}},"functionReturnParameters":4181,"id":4186,"nodeType":"Return","src":"2684:51:17"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"2342:162:17","text":"@param params The \"controlling\" addresses are the Owner, the Worker, and all Control Addresses.\n @return Whether the provided address is \"controlling\"."},"functionSelector":"e8d38633","id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"is_controlling_address","nameLocation":"2518:22:17","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"params","nameLocation":"2594:6:17","nodeType":"VariableDeclaration","scope":4188,"src":"2550:50:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IsControllingAddressParam_$4789_memory_ptr","typeString":"struct MinerTypes.IsControllingAddressParam"},"typeName":{"id":4175,"nodeType":"UserDefinedTypeName","pathNode":{"id":4174,"name":"MinerTypes.IsControllingAddressParam","nodeType":"IdentifierPath","referencedDeclaration":4789,"src":"2550:36:17"},"referencedDeclaration":4789,"src":"2550:36:17","typeDescriptions":{"typeIdentifier":"t_struct$_IsControllingAddressParam_$4789_storage_ptr","typeString":"struct MinerTypes.IsControllingAddressParam"}},"visibility":"internal"}],"src":"2540:66:17"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"2628:44:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IsControllingAddressReturn_$4792_memory_ptr","typeString":"struct MinerTypes.IsControllingAddressReturn"},"typeName":{"id":4179,"nodeType":"UserDefinedTypeName","pathNode":{"id":4178,"name":"MinerTypes.IsControllingAddressReturn","nodeType":"IdentifierPath","referencedDeclaration":4792,"src":"2628:37:17"},"referencedDeclaration":4792,"src":"2628:37:17","typeDescriptions":{"typeIdentifier":"t_struct$_IsControllingAddressReturn_$4792_storage_ptr","typeString":"struct MinerTypes.IsControllingAddressReturn"}},"visibility":"internal"}],"src":"2627:46:17"},"scope":4344,"src":"2509:233:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4204,"nodeType":"Block","src":"2904:144:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4197,"name":"sectorSizesBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"2981:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_SectorSize_$4387_$_t_uint64_$","typeString":"mapping(enum CommonTypes.SectorSize => uint64)"}},"id":4201,"indexExpression":{"expression":{"expression":{"id":4198,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"2998:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SectorSize","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"2998:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SectorSize_$4387_$","typeString":"type(enum CommonTypes.SectorSize)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"_8MiB","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"2998:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_SectorSize_$4387","typeString":"enum CommonTypes.SectorSize"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:46:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4195,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2933:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetSectorSizeReturn","nodeType":"MemberAccess","referencedDeclaration":4795,"src":"2933:30:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetSectorSizeReturn_$4795_storage_ptr_$","typeString":"type(struct MinerTypes.GetSectorSizeReturn storage pointer)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2933:108:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetSectorSizeReturn_$4795_memory_ptr","typeString":"struct MinerTypes.GetSectorSizeReturn memory"}},"functionReturnParameters":4194,"id":4203,"nodeType":"Return","src":"2914:127:17"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"2748:36:17","text":"@return the miner's sector size."},"functionSelector":"a9b494a1","id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"get_sector_size","nameLocation":"2798:15:17","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[],"src":"2813:2:17"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"2861:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetSectorSizeReturn_$4795_memory_ptr","typeString":"struct MinerTypes.GetSectorSizeReturn"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"MinerTypes.GetSectorSizeReturn","nodeType":"IdentifierPath","referencedDeclaration":4795,"src":"2861:30:17"},"referencedDeclaration":4795,"src":"2861:30:17","typeDescriptions":{"typeIdentifier":"t_struct$_GetSectorSizeReturn_$4795_storage_ptr","typeString":"struct MinerTypes.GetSectorSizeReturn"}},"visibility":"internal"}],"src":"2860:39:17"},"scope":4344,"src":"2789:259:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4217,"nodeType":"Block","src":"3425:85:17","statements":[{"expression":{"arguments":[{"hexValue":"3130303030303030303030303030303030303030303030","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3479:23:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000_by_1","typeString":"int_const 10000000000000000000000"},"value":"10000000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000000000000000_by_1","typeString":"int_const 10000000000000000000000"}],"expression":{"id":4212,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"3442:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetAvailableBalanceReturn","nodeType":"MemberAccess","referencedDeclaration":4798,"src":"3442:36:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetAvailableBalanceReturn_$4798_storage_ptr_$","typeString":"type(struct MinerTypes.GetAvailableBalanceReturn storage pointer)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3442:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr","typeString":"struct MinerTypes.GetAvailableBalanceReturn memory"}},"functionReturnParameters":4211,"id":4216,"nodeType":"Return","src":"3435:68:17"}]},"documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"3054:239:17","text":"@notice This is calculated as actor balance - (vesting funds + pre-commit deposit + initial pledge requirement + fee debt)\n @notice Can go negative if the miner is in IP debt.\n @return the available balance of this miner."},"functionSelector":"59cf9e17","id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"get_available_balance","nameLocation":"3307:21:17","nodeType":"FunctionDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[],"src":"3328:2:17"},"returnParameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"3376:43:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr","typeString":"struct MinerTypes.GetAvailableBalanceReturn"},"typeName":{"id":4209,"nodeType":"UserDefinedTypeName","pathNode":{"id":4208,"name":"MinerTypes.GetAvailableBalanceReturn","nodeType":"IdentifierPath","referencedDeclaration":4798,"src":"3376:36:17"},"referencedDeclaration":4798,"src":"3376:36:17","typeDescriptions":{"typeIdentifier":"t_struct$_GetAvailableBalanceReturn_$4798_storage_ptr","typeString":"struct MinerTypes.GetAvailableBalanceReturn"}},"visibility":"internal"}],"src":"3375:45:17"},"scope":4344,"src":"3298:212:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4253,"nodeType":"Block","src":"3736:300:17","statements":[{"assignments":[4230],"declarations":[{"constant":false,"id":4230,"mutability":"mutable","name":"vesting_funds","nameLocation":"3792:13:17","nodeType":"VariableDeclaration","scope":4253,"src":"3746:59:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","typeString":"struct CommonTypes.VestingFunds[]"},"typeName":{"baseType":{"id":4228,"nodeType":"UserDefinedTypeName","pathNode":{"id":4227,"name":"CommonTypes.VestingFunds","nodeType":"IdentifierPath","referencedDeclaration":4587,"src":"3746:24:17"},"referencedDeclaration":4587,"src":"3746:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_storage_ptr","typeString":"struct CommonTypes.VestingFunds"}},"id":4229,"nodeType":"ArrayTypeName","src":"3746:26:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.VestingFunds[]"}},"visibility":"internal"}],"id":4237,"initialValue":{"arguments":[{"hexValue":"31","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3839:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3808:30:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CommonTypes.VestingFunds memory[] memory)"},"typeName":{"baseType":{"id":4232,"nodeType":"UserDefinedTypeName","pathNode":{"id":4231,"name":"CommonTypes.VestingFunds","nodeType":"IdentifierPath","referencedDeclaration":4587,"src":"3812:24:17"},"referencedDeclaration":4587,"src":"3812:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_storage_ptr","typeString":"struct CommonTypes.VestingFunds"}},"id":4233,"nodeType":"ArrayTypeName","src":"3812:26:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.VestingFunds[]"}}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3808:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3746:95:17"},{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4238,"name":"vesting_funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"3851:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory[] memory"}},"id":4240,"indexExpression":{"hexValue":"30","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3865:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3851:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31363638353134383235","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3908:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1668514825_by_1","typeString":"int_const 1668514825"},"value":"1668514825"},{"hexValue":"32303030303030303030303030303030303030303030","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3932:22:17","typeDescriptions":{"typeIdentifier":"t_rational_2000000000000000000000_by_1","typeString":"int_const 2000000000000000000000"},"value":"2000000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1668514825_by_1","typeString":"int_const 1668514825"},{"typeIdentifier":"t_rational_2000000000000000000000_by_1","typeString":"int_const 2000000000000000000000"}],"expression":{"id":4241,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"3870:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"VestingFunds","nodeType":"MemberAccess","referencedDeclaration":4587,"src":"3870:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VestingFunds_$4587_storage_ptr_$","typeString":"type(struct CommonTypes.VestingFunds storage pointer)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3870:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory"}},"src":"3851:113:17","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory"}},"id":4247,"nodeType":"ExpressionStatement","src":"3851:113:17"},{"expression":{"arguments":[{"id":4250,"name":"vesting_funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4015:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","typeString":"struct CommonTypes.VestingFunds memory[] memory"}],"expression":{"id":4248,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"3982:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetVestingFundsReturn","nodeType":"MemberAccess","referencedDeclaration":4803,"src":"3982:32:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetVestingFundsReturn_$4803_storage_ptr_$","typeString":"type(struct MinerTypes.GetVestingFundsReturn storage pointer)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetVestingFundsReturn_$4803_memory_ptr","typeString":"struct MinerTypes.GetVestingFundsReturn memory"}},"functionReturnParameters":4224,"id":4252,"nodeType":"Return","src":"3975:54:17"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"3516:96:17","text":"@return the funds vesting in this miner as a list of (vesting_epoch, vesting_amount) tuples."},"functionSelector":"214c471c","id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"get_vesting_funds","nameLocation":"3626:17:17","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[],"src":"3643:2:17"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4254,"src":"3691:39:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetVestingFundsReturn_$4803_memory_ptr","typeString":"struct MinerTypes.GetVestingFundsReturn"},"typeName":{"id":4222,"nodeType":"UserDefinedTypeName","pathNode":{"id":4221,"name":"MinerTypes.GetVestingFundsReturn","nodeType":"IdentifierPath","referencedDeclaration":4803,"src":"3691:32:17"},"referencedDeclaration":4803,"src":"3691:32:17","typeDescriptions":{"typeIdentifier":"t_struct$_GetVestingFundsReturn_$4803_storage_ptr","typeString":"struct MinerTypes.GetVestingFundsReturn"}},"visibility":"internal"}],"src":"3690:41:17"},"scope":4344,"src":"3617:419:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4318,"nodeType":"Block","src":"4534:587:17","statements":[{"condition":{"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4548:17:17","subExpression":{"id":4261,"name":"isBeneficiarySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4549:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4316,"nodeType":"Block","src":"4904:211:17","statements":[{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4291,"name":"activeBeneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"4918:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},"id":4293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"beneficiary","nodeType":"MemberAccess","referencedDeclaration":4423,"src":"4918:29:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4294,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4950:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_beneficiary","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"4950:22:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4918:54:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4297,"nodeType":"ExpressionStatement","src":"4918:54:17"},{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":4298,"name":"activeBeneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"4986:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},"id":4301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"term","nodeType":"MemberAccess","referencedDeclaration":4426,"src":"4986:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_storage","typeString":"struct CommonTypes.BeneficiaryTerm storage ref"}},"id":4302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"quota","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"4986:28:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4303,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"5017:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_quota","nodeType":"MemberAccess","referencedDeclaration":4807,"src":"5017:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4986:47:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4306,"nodeType":"ExpressionStatement","src":"4986:47:17"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":4307,"name":"activeBeneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"5047:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},"id":4310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"term","nodeType":"MemberAccess","referencedDeclaration":4426,"src":"5047:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_storage","typeString":"struct CommonTypes.BeneficiaryTerm storage ref"}},"id":4311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":4420,"src":"5047:33:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4312,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"5083:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_expiration","nodeType":"MemberAccess","referencedDeclaration":4809,"src":"5083:21:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5047:57:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4315,"nodeType":"ExpressionStatement","src":"5047:57:17"}]},"id":4317,"nodeType":"IfStatement","src":"4544:571:17","trueBody":{"id":4290,"nodeType":"Block","src":"4567:331:17","statements":[{"assignments":[4267],"declarations":[{"constant":false,"id":4267,"mutability":"mutable","name":"term","nameLocation":"4616:4:17","nodeType":"VariableDeclaration","scope":4290,"src":"4581:39:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_memory_ptr","typeString":"struct CommonTypes.BeneficiaryTerm"},"typeName":{"id":4266,"nodeType":"UserDefinedTypeName","pathNode":{"id":4265,"name":"CommonTypes.BeneficiaryTerm","nodeType":"IdentifierPath","referencedDeclaration":4421,"src":"4581:27:17"},"referencedDeclaration":4421,"src":"4581:27:17","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_storage_ptr","typeString":"struct CommonTypes.BeneficiaryTerm"}},"visibility":"internal"}],"id":4276,"initialValue":{"arguments":[{"expression":{"id":4270,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4668:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_quota","nodeType":"MemberAccess","referencedDeclaration":4807,"src":"4668:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"hexValue":"30","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4686:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":4273,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4689:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_expiration","nodeType":"MemberAccess","referencedDeclaration":4809,"src":"4689:21:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":4268,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"4623:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BeneficiaryTerm","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"4623:44:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BeneficiaryTerm_$4421_storage_ptr_$","typeString":"type(struct CommonTypes.BeneficiaryTerm storage pointer)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4623:88:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_memory_ptr","typeString":"struct CommonTypes.BeneficiaryTerm memory"}},"nodeType":"VariableDeclarationStatement","src":"4581:130:17"},{"expression":{"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"activeBeneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"4725:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4280,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4792:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams memory"}},"id":4281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"new_beneficiary","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"4792:22:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4282,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"4832:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_memory_ptr","typeString":"struct CommonTypes.BeneficiaryTerm memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_memory_ptr","typeString":"struct CommonTypes.BeneficiaryTerm memory"}],"expression":{"id":4278,"name":"CommonTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"4745:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CommonTypes_$4664_$","typeString":"type(library CommonTypes)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ActiveBeneficiary","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"4745:29:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ActiveBeneficiary_$4427_storage_ptr_$","typeString":"type(struct CommonTypes.ActiveBeneficiary storage pointer)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4745:105:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_memory_ptr","typeString":"struct CommonTypes.ActiveBeneficiary memory"}},"src":"4725:125:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},"id":4285,"nodeType":"ExpressionStatement","src":"4725:125:17"},{"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4286,"name":"isBeneficiarySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"4864:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4883:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4864:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4289,"nodeType":"ExpressionStatement","src":"4864:23:17"}]}}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"4042:388:17","text":"@notice Proposes or confirms a change of beneficiary address.\n @notice A proposal must be submitted by the owner, and takes effect after approval of both the proposed beneficiary and current beneficiary, if applicable, any current beneficiary that has time and quota remaining.\n @notice See FIP-0029, https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0029.md"},"functionSelector":"81ab68dd","id":4319,"implemented":true,"kind":"function","modifiers":[],"name":"change_beneficiary","nameLocation":"4444:18:17","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"params","nameLocation":"4514:6:17","nodeType":"VariableDeclaration","scope":4319,"src":"4472:48:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams"},"typeName":{"id":4257,"nodeType":"UserDefinedTypeName","pathNode":{"id":4256,"name":"MinerTypes.ChangeBeneficiaryParams","nodeType":"IdentifierPath","referencedDeclaration":4810,"src":"4472:34:17"},"referencedDeclaration":4810,"src":"4472:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_ChangeBeneficiaryParams_$4810_storage_ptr","typeString":"struct MinerTypes.ChangeBeneficiaryParams"}},"visibility":"internal"}],"src":"4462:64:17"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[],"src":"4534:0:17"},"scope":4344,"src":"4435:686:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4342,"nodeType":"Block","src":"5478:182:17","statements":[{"expression":{"arguments":[{"id":4327,"name":"isBeneficiarySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"5496:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5488:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5488:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4329,"nodeType":"ExpressionStatement","src":"5488:25:17"},{"assignments":[4334],"declarations":[{"constant":false,"id":4334,"mutability":"mutable","name":"proposed","nameLocation":"5568:8:17","nodeType":"VariableDeclaration","scope":4342,"src":"5524:52:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_memory_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange"},"typeName":{"id":4333,"nodeType":"UserDefinedTypeName","pathNode":{"id":4332,"name":"CommonTypes.PendingBeneficiaryChange","nodeType":"IdentifierPath","referencedDeclaration":4414,"src":"5524:36:17"},"referencedDeclaration":4414,"src":"5524:36:17","typeDescriptions":{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_storage_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange"}},"visibility":"internal"}],"id":4335,"nodeType":"VariableDeclarationStatement","src":"5524:52:17"},{"expression":{"arguments":[{"id":4338,"name":"activeBeneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"5625:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"}},{"id":4339,"name":"proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5644:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_memory_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage","typeString":"struct CommonTypes.ActiveBeneficiary storage ref"},{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_memory_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange memory"}],"expression":{"id":4336,"name":"MinerTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"5593:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinerTypes_$4818_$","typeString":"type(library MinerTypes)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GetBeneficiaryReturn","nodeType":"MemberAccess","referencedDeclaration":4817,"src":"5593:31:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GetBeneficiaryReturn_$4817_storage_ptr_$","typeString":"type(struct MinerTypes.GetBeneficiaryReturn storage pointer)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5593:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GetBeneficiaryReturn_$4817_memory_ptr","typeString":"struct MinerTypes.GetBeneficiaryReturn memory"}},"functionReturnParameters":4325,"id":4341,"nodeType":"Return","src":"5586:67:17"}]},"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"5127:230:17","text":"@notice This method is for use by other actors (such as those acting as beneficiaries), and to abstract the state representation for clients.\n @notice Retrieves the currently active and proposed beneficiary information."},"functionSelector":"d9fc907e","id":4343,"implemented":true,"kind":"function","modifiers":[],"name":"get_beneficiary","nameLocation":"5371:15:17","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[],"src":"5386:2:17"},"returnParameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4343,"src":"5434:38:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GetBeneficiaryReturn_$4817_memory_ptr","typeString":"struct MinerTypes.GetBeneficiaryReturn"},"typeName":{"id":4323,"nodeType":"UserDefinedTypeName","pathNode":{"id":4322,"name":"MinerTypes.GetBeneficiaryReturn","nodeType":"IdentifierPath","referencedDeclaration":4817,"src":"5434:31:17"},"referencedDeclaration":4817,"src":"5434:31:17","typeDescriptions":{"typeIdentifier":"t_struct$_GetBeneficiaryReturn_$4817_storage_ptr","typeString":"struct MinerTypes.GetBeneficiaryReturn"}},"visibility":"internal"}],"src":"5433:40:17"},"scope":4344,"src":"5362:298:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4345,"src":"573:5089:17","usedErrors":[]}],"src":"39:5624:17"},"id":17},"contracts/filecoinMockAPIs/types/CommonTypes.sol":{"ast":{"absolutePath":"contracts/filecoinMockAPIs/types/CommonTypes.sol","exportedSymbols":{"CommonTypes":[4664]},"id":4665,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4346,"literals":["solidity",">=","0.4",".25","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"39:34:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"75:77:18","text":"@title Filecoin actors' common types for Solidity.\n @author Zondax AG"},"fullyImplemented":true,"id":4664,"linearizedBaseContracts":[4664],"name":"CommonTypes","nameLocation":"160:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CommonTypes.RegisteredSealProof","id":4359,"members":[{"id":4348,"name":"StackedDRG2KiBV1","nameLocation":"213:16:18","nodeType":"EnumValue","src":"213:16:18"},{"id":4349,"name":"StackedDRG512MiBV1","nameLocation":"239:18:18","nodeType":"EnumValue","src":"239:18:18"},{"id":4350,"name":"StackedDRG8MiBV1","nameLocation":"267:16:18","nodeType":"EnumValue","src":"267:16:18"},{"id":4351,"name":"StackedDRG32GiBV1","nameLocation":"293:17:18","nodeType":"EnumValue","src":"293:17:18"},{"id":4352,"name":"StackedDRG64GiBV1","nameLocation":"320:17:18","nodeType":"EnumValue","src":"320:17:18"},{"id":4353,"name":"StackedDRG2KiBV1P1","nameLocation":"347:18:18","nodeType":"EnumValue","src":"347:18:18"},{"id":4354,"name":"StackedDRG512MiBV1P1","nameLocation":"375:20:18","nodeType":"EnumValue","src":"375:20:18"},{"id":4355,"name":"StackedDRG8MiBV1P1","nameLocation":"405:18:18","nodeType":"EnumValue","src":"405:18:18"},{"id":4356,"name":"StackedDRG32GiBV1P1","nameLocation":"433:19:18","nodeType":"EnumValue","src":"433:19:18"},{"id":4357,"name":"StackedDRG64GiBV1P1","nameLocation":"462:19:18","nodeType":"EnumValue","src":"462:19:18"},{"id":4358,"name":"Invalid","nameLocation":"491:7:18","nodeType":"EnumValue","src":"491:7:18"}],"name":"RegisteredSealProof","nameLocation":"183:19:18","nodeType":"EnumDefinition","src":"178:326:18"},{"canonicalName":"CommonTypes.RegisteredPoStProof","id":4371,"members":[{"id":4360,"name":"StackedDRGWinning2KiBV1","nameLocation":"545:23:18","nodeType":"EnumValue","src":"545:23:18"},{"id":4361,"name":"StackedDRGWinning8MiBV1","nameLocation":"578:23:18","nodeType":"EnumValue","src":"578:23:18"},{"id":4362,"name":"StackedDRGWinning512MiBV1","nameLocation":"611:25:18","nodeType":"EnumValue","src":"611:25:18"},{"id":4363,"name":"StackedDRGWinning32GiBV1","nameLocation":"646:24:18","nodeType":"EnumValue","src":"646:24:18"},{"id":4364,"name":"StackedDRGWinning64GiBV1","nameLocation":"680:24:18","nodeType":"EnumValue","src":"680:24:18"},{"id":4365,"name":"StackedDRGWindow2KiBV1","nameLocation":"714:22:18","nodeType":"EnumValue","src":"714:22:18"},{"id":4366,"name":"StackedDRGWindow8MiBV1","nameLocation":"746:22:18","nodeType":"EnumValue","src":"746:22:18"},{"id":4367,"name":"StackedDRGWindow512MiBV1","nameLocation":"778:24:18","nodeType":"EnumValue","src":"778:24:18"},{"id":4368,"name":"StackedDRGWindow32GiBV1","nameLocation":"812:23:18","nodeType":"EnumValue","src":"812:23:18"},{"id":4369,"name":"StackedDRGWindow64GiBV1","nameLocation":"845:23:18","nodeType":"EnumValue","src":"845:23:18"},{"id":4370,"name":"Invalid","nameLocation":"878:7:18","nodeType":"EnumValue","src":"878:7:18"}],"name":"RegisteredPoStProof","nameLocation":"515:19:18","nodeType":"EnumDefinition","src":"510:381:18"},{"canonicalName":"CommonTypes.RegisteredUpdateProof","id":4378,"members":[{"id":4372,"name":"StackedDRG2KiBV1","nameLocation":"934:16:18","nodeType":"EnumValue","src":"934:16:18"},{"id":4373,"name":"StackedDRG8MiBV1","nameLocation":"960:16:18","nodeType":"EnumValue","src":"960:16:18"},{"id":4374,"name":"StackedDRG512MiBV1","nameLocation":"986:18:18","nodeType":"EnumValue","src":"986:18:18"},{"id":4375,"name":"StackedDRG32GiBV1","nameLocation":"1014:17:18","nodeType":"EnumValue","src":"1014:17:18"},{"id":4376,"name":"StackedDRG64GiBV1","nameLocation":"1041:17:18","nodeType":"EnumValue","src":"1041:17:18"},{"id":4377,"name":"Invalid","nameLocation":"1068:7:18","nodeType":"EnumValue","src":"1068:7:18"}],"name":"RegisteredUpdateProof","nameLocation":"902:21:18","nodeType":"EnumDefinition","src":"897:184:18"},{"canonicalName":"CommonTypes.ExtensionKind","id":4381,"members":[{"id":4379,"name":"ExtendCommittmentLegacy","nameLocation":"1115:23:18","nodeType":"EnumValue","src":"1115:23:18"},{"id":4380,"name":"ExtendCommittment","nameLocation":"1148:17:18","nodeType":"EnumValue","src":"1148:17:18"}],"name":"ExtensionKind","nameLocation":"1091:13:18","nodeType":"EnumDefinition","src":"1086:85:18"},{"canonicalName":"CommonTypes.SectorSize","id":4387,"members":[{"id":4382,"name":"_2KiB","nameLocation":"1203:5:18","nodeType":"EnumValue","src":"1203:5:18"},{"id":4383,"name":"_8MiB","nameLocation":"1218:5:18","nodeType":"EnumValue","src":"1218:5:18"},{"id":4384,"name":"_512MiB","nameLocation":"1233:7:18","nodeType":"EnumValue","src":"1233:7:18"},{"id":4385,"name":"_32GiB","nameLocation":"1250:6:18","nodeType":"EnumValue","src":"1250:6:18"},{"id":4386,"name":"_64GiB","nameLocation":"1266:6:18","nodeType":"EnumValue","src":"1266:6:18"}],"name":"SectorSize","nameLocation":"1182:10:18","nodeType":"EnumDefinition","src":"1177:101:18"},{"canonicalName":"CommonTypes.ValidatedExpirationExtension","id":4396,"members":[{"constant":false,"id":4389,"mutability":"mutable","name":"deadline","nameLocation":"1337:8:18","nodeType":"VariableDeclaration","scope":4396,"src":"1330:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4388,"name":"uint64","nodeType":"ElementaryTypeName","src":"1330:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"partition","nameLocation":"1362:9:18","nodeType":"VariableDeclaration","scope":4396,"src":"1355:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4390,"name":"uint64","nodeType":"ElementaryTypeName","src":"1355:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"sectors","nameLocation":"1387:7:18","nodeType":"VariableDeclaration","scope":4396,"src":"1381:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4392,"name":"uint8","nodeType":"ElementaryTypeName","src":"1381:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"new_expiration","nameLocation":"1410:14:18","nodeType":"VariableDeclaration","scope":4396,"src":"1404:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4394,"name":"int64","nodeType":"ElementaryTypeName","src":"1404:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"ValidatedExpirationExtension","nameLocation":"1291:28:18","nodeType":"StructDefinition","scope":4664,"src":"1284:147:18","visibility":"public"},{"canonicalName":"CommonTypes.ExtendExpirationsInner","id":4403,"members":[{"constant":false,"id":4400,"mutability":"mutable","name":"extensions","nameLocation":"1508:10:18","nodeType":"VariableDeclaration","scope":4403,"src":"1477:41:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatedExpirationExtension_$4396_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.ValidatedExpirationExtension[]"},"typeName":{"baseType":{"id":4398,"nodeType":"UserDefinedTypeName","pathNode":{"id":4397,"name":"ValidatedExpirationExtension","nodeType":"IdentifierPath","referencedDeclaration":4396,"src":"1477:28:18"},"referencedDeclaration":4396,"src":"1477:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatedExpirationExtension_$4396_storage_ptr","typeString":"struct CommonTypes.ValidatedExpirationExtension"}},"id":4399,"nodeType":"ArrayTypeName","src":"1477:30:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatedExpirationExtension_$4396_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.ValidatedExpirationExtension[]"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"claims","nameLocation":"1534:6:18","nodeType":"VariableDeclaration","scope":4403,"src":"1528:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ExtendExpirationsInner","nameLocation":"1444:22:18","nodeType":"StructDefinition","scope":4664,"src":"1437:172:18","visibility":"public"},{"canonicalName":"CommonTypes.PendingBeneficiaryChange","id":4414,"members":[{"constant":false,"id":4405,"mutability":"mutable","name":"new_beneficiary","nameLocation":"1663:15:18","nodeType":"VariableDeclaration","scope":4414,"src":"1657:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4404,"name":"bytes","nodeType":"ElementaryTypeName","src":"1657:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4407,"mutability":"mutable","name":"new_quota","nameLocation":"1695:9:18","nodeType":"VariableDeclaration","scope":4414,"src":"1688:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4406,"name":"int256","nodeType":"ElementaryTypeName","src":"1688:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"new_expiration","nameLocation":"1721:14:18","nodeType":"VariableDeclaration","scope":4414,"src":"1714:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4408,"name":"uint64","nodeType":"ElementaryTypeName","src":"1714:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"approved_by_beneficiary","nameLocation":"1750:23:18","nodeType":"VariableDeclaration","scope":4414,"src":"1745:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4410,"name":"bool","nodeType":"ElementaryTypeName","src":"1745:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"approved_by_nominee","nameLocation":"1788:19:18","nodeType":"VariableDeclaration","scope":4414,"src":"1783:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4412,"name":"bool","nodeType":"ElementaryTypeName","src":"1783:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PendingBeneficiaryChange","nameLocation":"1622:24:18","nodeType":"StructDefinition","scope":4664,"src":"1615:199:18","visibility":"public"},{"canonicalName":"CommonTypes.BeneficiaryTerm","id":4421,"members":[{"constant":false,"id":4416,"mutability":"mutable","name":"quota","nameLocation":"1860:5:18","nodeType":"VariableDeclaration","scope":4421,"src":"1853:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4415,"name":"int256","nodeType":"ElementaryTypeName","src":"1853:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"used_quota","nameLocation":"1882:10:18","nodeType":"VariableDeclaration","scope":4421,"src":"1875:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4417,"name":"int256","nodeType":"ElementaryTypeName","src":"1875:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"expiration","nameLocation":"1909:10:18","nodeType":"VariableDeclaration","scope":4421,"src":"1902:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4419,"name":"uint64","nodeType":"ElementaryTypeName","src":"1902:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"BeneficiaryTerm","nameLocation":"1827:15:18","nodeType":"StructDefinition","scope":4664,"src":"1820:106:18","visibility":"public"},{"canonicalName":"CommonTypes.ActiveBeneficiary","id":4427,"members":[{"constant":false,"id":4423,"mutability":"mutable","name":"beneficiary","nameLocation":"1974:11:18","nodeType":"VariableDeclaration","scope":4427,"src":"1967:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4422,"name":"string","nodeType":"ElementaryTypeName","src":"1967:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"term","nameLocation":"2011:4:18","nodeType":"VariableDeclaration","scope":4427,"src":"1995:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_storage_ptr","typeString":"struct CommonTypes.BeneficiaryTerm"},"typeName":{"id":4425,"nodeType":"UserDefinedTypeName","pathNode":{"id":4424,"name":"BeneficiaryTerm","nodeType":"IdentifierPath","referencedDeclaration":4421,"src":"1995:15:18"},"referencedDeclaration":4421,"src":"1995:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_BeneficiaryTerm_$4421_storage_ptr","typeString":"struct CommonTypes.BeneficiaryTerm"}},"visibility":"internal"}],"name":"ActiveBeneficiary","nameLocation":"1939:17:18","nodeType":"StructDefinition","scope":4664,"src":"1932:90:18","visibility":"public"},{"canonicalName":"CommonTypes.RecoveryDeclaration","id":4434,"members":[{"constant":false,"id":4429,"mutability":"mutable","name":"deadline","nameLocation":"2072:8:18","nodeType":"VariableDeclaration","scope":4434,"src":"2065:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4428,"name":"uint64","nodeType":"ElementaryTypeName","src":"2065:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"partition","nameLocation":"2097:9:18","nodeType":"VariableDeclaration","scope":4434,"src":"2090:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4430,"name":"uint64","nodeType":"ElementaryTypeName","src":"2090:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4433,"mutability":"mutable","name":"sectors","nameLocation":"2122:7:18","nodeType":"VariableDeclaration","scope":4434,"src":"2116:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4432,"name":"uint8","nodeType":"ElementaryTypeName","src":"2116:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"RecoveryDeclaration","nameLocation":"2035:19:18","nodeType":"StructDefinition","scope":4664,"src":"2028:108:18","visibility":"public"},{"canonicalName":"CommonTypes.FaultDeclaration","id":4441,"members":[{"constant":false,"id":4436,"mutability":"mutable","name":"deadline","nameLocation":"2183:8:18","nodeType":"VariableDeclaration","scope":4441,"src":"2176:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4435,"name":"uint64","nodeType":"ElementaryTypeName","src":"2176:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"partition","nameLocation":"2208:9:18","nodeType":"VariableDeclaration","scope":4441,"src":"2201:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4437,"name":"uint64","nodeType":"ElementaryTypeName","src":"2201:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"sectors","nameLocation":"2233:7:18","nodeType":"VariableDeclaration","scope":4441,"src":"2227:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4439,"name":"uint8","nodeType":"ElementaryTypeName","src":"2227:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FaultDeclaration","nameLocation":"2149:16:18","nodeType":"StructDefinition","scope":4664,"src":"2142:105:18","visibility":"public"},{"canonicalName":"CommonTypes.TerminationDeclaration","id":4448,"members":[{"constant":false,"id":4443,"mutability":"mutable","name":"deadline","nameLocation":"2300:8:18","nodeType":"VariableDeclaration","scope":4448,"src":"2293:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4442,"name":"uint64","nodeType":"ElementaryTypeName","src":"2293:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"partition","nameLocation":"2325:9:18","nodeType":"VariableDeclaration","scope":4448,"src":"2318:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4444,"name":"uint64","nodeType":"ElementaryTypeName","src":"2318:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"sectors","nameLocation":"2350:7:18","nodeType":"VariableDeclaration","scope":4448,"src":"2344:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4446,"name":"uint8","nodeType":"ElementaryTypeName","src":"2344:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"TerminationDeclaration","nameLocation":"2260:22:18","nodeType":"StructDefinition","scope":4664,"src":"2253:111:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorClaim","id":4457,"members":[{"constant":false,"id":4450,"mutability":"mutable","name":"sector_number","nameLocation":"2406:13:18","nodeType":"VariableDeclaration","scope":4457,"src":"2399:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4449,"name":"uint64","nodeType":"ElementaryTypeName","src":"2399:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"maintain_claims","nameLocation":"2438:15:18","nodeType":"VariableDeclaration","scope":4457,"src":"2429:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4451,"name":"uint64","nodeType":"ElementaryTypeName","src":"2429:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4452,"nodeType":"ArrayTypeName","src":"2429:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"drop_claims","nameLocation":"2472:11:18","nodeType":"VariableDeclaration","scope":4457,"src":"2463:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4454,"name":"uint64","nodeType":"ElementaryTypeName","src":"2463:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4455,"nodeType":"ArrayTypeName","src":"2463:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"name":"SectorClaim","nameLocation":"2377:11:18","nodeType":"StructDefinition","scope":4664,"src":"2370:120:18","visibility":"public"},{"canonicalName":"CommonTypes.ExpirationExtension2","id":4470,"members":[{"constant":false,"id":4459,"mutability":"mutable","name":"deadline","nameLocation":"2541:8:18","nodeType":"VariableDeclaration","scope":4470,"src":"2534:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4458,"name":"uint64","nodeType":"ElementaryTypeName","src":"2534:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"partition","nameLocation":"2566:9:18","nodeType":"VariableDeclaration","scope":4470,"src":"2559:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4460,"name":"uint64","nodeType":"ElementaryTypeName","src":"2559:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"sectors","nameLocation":"2591:7:18","nodeType":"VariableDeclaration","scope":4470,"src":"2585:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4462,"name":"uint8","nodeType":"ElementaryTypeName","src":"2585:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"sectors_with_claims","nameLocation":"2622:19:18","nodeType":"VariableDeclaration","scope":4470,"src":"2608:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SectorClaim_$4457_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.SectorClaim[]"},"typeName":{"baseType":{"id":4465,"nodeType":"UserDefinedTypeName","pathNode":{"id":4464,"name":"SectorClaim","nodeType":"IdentifierPath","referencedDeclaration":4457,"src":"2608:11:18"},"referencedDeclaration":4457,"src":"2608:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_SectorClaim_$4457_storage_ptr","typeString":"struct CommonTypes.SectorClaim"}},"id":4466,"nodeType":"ArrayTypeName","src":"2608:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SectorClaim_$4457_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.SectorClaim[]"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"new_expiration","nameLocation":"2657:14:18","nodeType":"VariableDeclaration","scope":4470,"src":"2651:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4468,"name":"int64","nodeType":"ElementaryTypeName","src":"2651:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"ExpirationExtension2","nameLocation":"2503:20:18","nodeType":"StructDefinition","scope":4664,"src":"2496:182:18","visibility":"public"},{"canonicalName":"CommonTypes.ExpirationExtension","id":4479,"members":[{"constant":false,"id":4472,"mutability":"mutable","name":"deadline","nameLocation":"2728:8:18","nodeType":"VariableDeclaration","scope":4479,"src":"2721:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4471,"name":"uint64","nodeType":"ElementaryTypeName","src":"2721:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"partition","nameLocation":"2753:9:18","nodeType":"VariableDeclaration","scope":4479,"src":"2746:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4473,"name":"uint64","nodeType":"ElementaryTypeName","src":"2746:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"sectors","nameLocation":"2778:7:18","nodeType":"VariableDeclaration","scope":4479,"src":"2772:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4475,"name":"uint8","nodeType":"ElementaryTypeName","src":"2772:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"new_expiration","nameLocation":"2801:14:18","nodeType":"VariableDeclaration","scope":4479,"src":"2795:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4477,"name":"int64","nodeType":"ElementaryTypeName","src":"2795:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"ExpirationExtension","nameLocation":"2691:19:18","nodeType":"StructDefinition","scope":4664,"src":"2684:138:18","visibility":"public"},{"canonicalName":"CommonTypes.FilterEstimate","id":4484,"members":[{"constant":false,"id":4481,"mutability":"mutable","name":"position","nameLocation":"2867:8:18","nodeType":"VariableDeclaration","scope":4484,"src":"2860:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4480,"name":"int256","nodeType":"ElementaryTypeName","src":"2860:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"velocity","nameLocation":"2892:8:18","nodeType":"VariableDeclaration","scope":4484,"src":"2885:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4482,"name":"int256","nodeType":"ElementaryTypeName","src":"2885:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"FilterEstimate","nameLocation":"2835:14:18","nodeType":"StructDefinition","scope":4664,"src":"2828:79:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorPreCommitInfoInner","id":4501,"members":[{"constant":false,"id":4487,"mutability":"mutable","name":"seal_proof","nameLocation":"2975:10:18","nodeType":"VariableDeclaration","scope":4501,"src":"2955:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredSealProof_$4359","typeString":"enum CommonTypes.RegisteredSealProof"},"typeName":{"id":4486,"nodeType":"UserDefinedTypeName","pathNode":{"id":4485,"name":"RegisteredSealProof","nodeType":"IdentifierPath","referencedDeclaration":4359,"src":"2955:19:18"},"referencedDeclaration":4359,"src":"2955:19:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredSealProof_$4359","typeString":"enum CommonTypes.RegisteredSealProof"}},"visibility":"internal"},{"constant":false,"id":4489,"mutability":"mutable","name":"sector_number","nameLocation":"3002:13:18","nodeType":"VariableDeclaration","scope":4501,"src":"2995:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4488,"name":"uint64","nodeType":"ElementaryTypeName","src":"2995:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"sealed_cid","nameLocation":"3031:10:18","nodeType":"VariableDeclaration","scope":4501,"src":"3025:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4490,"name":"bytes","nodeType":"ElementaryTypeName","src":"3025:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"seal_rand_epoch","nameLocation":"3057:15:18","nodeType":"VariableDeclaration","scope":4501,"src":"3051:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4492,"name":"int64","nodeType":"ElementaryTypeName","src":"3051:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"deal_ids","nameLocation":"3091:8:18","nodeType":"VariableDeclaration","scope":4501,"src":"3082:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4494,"name":"uint64","nodeType":"ElementaryTypeName","src":"3082:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4495,"nodeType":"ArrayTypeName","src":"3082:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"expiration","nameLocation":"3115:10:18","nodeType":"VariableDeclaration","scope":4501,"src":"3109:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4497,"name":"int64","nodeType":"ElementaryTypeName","src":"3109:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"unsealed_cid","nameLocation":"3141:12:18","nodeType":"VariableDeclaration","scope":4501,"src":"3135:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4499,"name":"bytes","nodeType":"ElementaryTypeName","src":"3135:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SectorPreCommitInfoInner","nameLocation":"2920:24:18","nodeType":"StructDefinition","scope":4664,"src":"2913:247:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorPreCommitInfo","id":4518,"members":[{"constant":false,"id":4504,"mutability":"mutable","name":"seal_proof","nameLocation":"3223:10:18","nodeType":"VariableDeclaration","scope":4518,"src":"3203:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredSealProof_$4359","typeString":"enum CommonTypes.RegisteredSealProof"},"typeName":{"id":4503,"nodeType":"UserDefinedTypeName","pathNode":{"id":4502,"name":"RegisteredSealProof","nodeType":"IdentifierPath","referencedDeclaration":4359,"src":"3203:19:18"},"referencedDeclaration":4359,"src":"3203:19:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredSealProof_$4359","typeString":"enum CommonTypes.RegisteredSealProof"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"sector_number","nameLocation":"3250:13:18","nodeType":"VariableDeclaration","scope":4518,"src":"3243:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4505,"name":"uint64","nodeType":"ElementaryTypeName","src":"3243:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"sealed_cid","nameLocation":"3279:10:18","nodeType":"VariableDeclaration","scope":4518,"src":"3273:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4507,"name":"bytes","nodeType":"ElementaryTypeName","src":"3273:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"seal_rand_epoch","nameLocation":"3305:15:18","nodeType":"VariableDeclaration","scope":4518,"src":"3299:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4509,"name":"int64","nodeType":"ElementaryTypeName","src":"3299:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"deal_ids","nameLocation":"3339:8:18","nodeType":"VariableDeclaration","scope":4518,"src":"3330:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4511,"name":"uint64","nodeType":"ElementaryTypeName","src":"3330:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4512,"nodeType":"ArrayTypeName","src":"3330:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":4515,"mutability":"mutable","name":"expiration","nameLocation":"3363:10:18","nodeType":"VariableDeclaration","scope":4518,"src":"3357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4514,"name":"int64","nodeType":"ElementaryTypeName","src":"3357:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4517,"mutability":"mutable","name":"unsealed_cid","nameLocation":"3389:12:18","nodeType":"VariableDeclaration","scope":4518,"src":"3383:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4516,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SectorPreCommitInfo","nameLocation":"3173:19:18","nodeType":"StructDefinition","scope":4664,"src":"3166:242:18","visibility":"public"},{"canonicalName":"CommonTypes.ReplicaUpdateInner","id":4537,"members":[{"constant":false,"id":4520,"mutability":"mutable","name":"sector_number","nameLocation":"3456:13:18","nodeType":"VariableDeclaration","scope":4537,"src":"3449:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4519,"name":"uint64","nodeType":"ElementaryTypeName","src":"3449:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"deadline","nameLocation":"3486:8:18","nodeType":"VariableDeclaration","scope":4537,"src":"3479:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4521,"name":"uint64","nodeType":"ElementaryTypeName","src":"3479:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"partition","nameLocation":"3511:9:18","nodeType":"VariableDeclaration","scope":4537,"src":"3504:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4523,"name":"uint64","nodeType":"ElementaryTypeName","src":"3504:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4526,"mutability":"mutable","name":"new_sealed_cid","nameLocation":"3536:14:18","nodeType":"VariableDeclaration","scope":4537,"src":"3530:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4525,"name":"bytes","nodeType":"ElementaryTypeName","src":"3530:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4528,"mutability":"mutable","name":"new_unsealed_cid","nameLocation":"3566:16:18","nodeType":"VariableDeclaration","scope":4537,"src":"3560:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4527,"name":"bytes","nodeType":"ElementaryTypeName","src":"3560:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"deals","nameLocation":"3601:5:18","nodeType":"VariableDeclaration","scope":4537,"src":"3592:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4529,"name":"uint64","nodeType":"ElementaryTypeName","src":"3592:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4530,"nodeType":"ArrayTypeName","src":"3592:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":4534,"mutability":"mutable","name":"update_proof_type","nameLocation":"3638:17:18","nodeType":"VariableDeclaration","scope":4537,"src":"3616:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"},"typeName":{"id":4533,"nodeType":"UserDefinedTypeName","pathNode":{"id":4532,"name":"RegisteredUpdateProof","nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"3616:21:18"},"referencedDeclaration":4378,"src":"3616:21:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"}},"visibility":"internal"},{"constant":false,"id":4536,"mutability":"mutable","name":"replica_proof","nameLocation":"3671:13:18","nodeType":"VariableDeclaration","scope":4537,"src":"3665:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4535,"name":"bytes","nodeType":"ElementaryTypeName","src":"3665:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReplicaUpdateInner","nameLocation":"3420:18:18","nodeType":"StructDefinition","scope":4664,"src":"3413:278:18","visibility":"public"},{"canonicalName":"CommonTypes.ReplicaUpdate","id":4553,"members":[{"constant":false,"id":4539,"mutability":"mutable","name":"sector_number","nameLocation":"3735:13:18","nodeType":"VariableDeclaration","scope":4553,"src":"3728:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4538,"name":"uint64","nodeType":"ElementaryTypeName","src":"3728:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4541,"mutability":"mutable","name":"deadline","nameLocation":"3765:8:18","nodeType":"VariableDeclaration","scope":4553,"src":"3758:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4540,"name":"uint64","nodeType":"ElementaryTypeName","src":"3758:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"partition","nameLocation":"3790:9:18","nodeType":"VariableDeclaration","scope":4553,"src":"3783:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4542,"name":"uint64","nodeType":"ElementaryTypeName","src":"3783:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"new_sealed_cid","nameLocation":"3815:14:18","nodeType":"VariableDeclaration","scope":4553,"src":"3809:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4544,"name":"bytes","nodeType":"ElementaryTypeName","src":"3809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"deals","nameLocation":"3846:5:18","nodeType":"VariableDeclaration","scope":4553,"src":"3839:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4546,"name":"uint64","nodeType":"ElementaryTypeName","src":"3839:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"update_proof_type","nameLocation":"3883:17:18","nodeType":"VariableDeclaration","scope":4553,"src":"3861:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"},"typeName":{"id":4549,"nodeType":"UserDefinedTypeName","pathNode":{"id":4548,"name":"RegisteredUpdateProof","nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"3861:21:18"},"referencedDeclaration":4378,"src":"3861:21:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"replica_proof","nameLocation":"3916:13:18","nodeType":"VariableDeclaration","scope":4553,"src":"3910:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4551,"name":"bytes","nodeType":"ElementaryTypeName","src":"3910:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReplicaUpdate","nameLocation":"3704:13:18","nodeType":"StructDefinition","scope":4664,"src":"3697:239:18","visibility":"public"},{"canonicalName":"CommonTypes.ReplicaUpdate2","id":4571,"members":[{"constant":false,"id":4555,"mutability":"mutable","name":"sector_number","nameLocation":"3981:13:18","nodeType":"VariableDeclaration","scope":4571,"src":"3974:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4554,"name":"uint64","nodeType":"ElementaryTypeName","src":"3974:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4557,"mutability":"mutable","name":"deadline","nameLocation":"4011:8:18","nodeType":"VariableDeclaration","scope":4571,"src":"4004:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4556,"name":"uint64","nodeType":"ElementaryTypeName","src":"4004:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4559,"mutability":"mutable","name":"partition","nameLocation":"4036:9:18","nodeType":"VariableDeclaration","scope":4571,"src":"4029:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4558,"name":"uint64","nodeType":"ElementaryTypeName","src":"4029:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"new_sealed_cid","nameLocation":"4061:14:18","nodeType":"VariableDeclaration","scope":4571,"src":"4055:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4560,"name":"bytes","nodeType":"ElementaryTypeName","src":"4055:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"new_unsealed_cid","nameLocation":"4091:16:18","nodeType":"VariableDeclaration","scope":4571,"src":"4085:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4562,"name":"bytes","nodeType":"ElementaryTypeName","src":"4085:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"deals","nameLocation":"4124:5:18","nodeType":"VariableDeclaration","scope":4571,"src":"4117:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4564,"name":"uint64","nodeType":"ElementaryTypeName","src":"4117:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"update_proof_type","nameLocation":"4161:17:18","nodeType":"VariableDeclaration","scope":4571,"src":"4139:39:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"},"typeName":{"id":4567,"nodeType":"UserDefinedTypeName","pathNode":{"id":4566,"name":"RegisteredUpdateProof","nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"4139:21:18"},"referencedDeclaration":4378,"src":"4139:21:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredUpdateProof_$4378","typeString":"enum CommonTypes.RegisteredUpdateProof"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"replica_proof","nameLocation":"4194:13:18","nodeType":"VariableDeclaration","scope":4571,"src":"4188:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4569,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReplicaUpdate2","nameLocation":"3949:14:18","nodeType":"StructDefinition","scope":4664,"src":"3942:272:18","visibility":"public"},{"canonicalName":"CommonTypes.PoStPartition","id":4576,"members":[{"constant":false,"id":4573,"mutability":"mutable","name":"index","nameLocation":"4258:5:18","nodeType":"VariableDeclaration","scope":4576,"src":"4251:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4572,"name":"uint64","nodeType":"ElementaryTypeName","src":"4251:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"skipped","nameLocation":"4278:7:18","nodeType":"VariableDeclaration","scope":4576,"src":"4273:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4574,"name":"int8","nodeType":"ElementaryTypeName","src":"4273:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"name":"PoStPartition","nameLocation":"4227:13:18","nodeType":"StructDefinition","scope":4664,"src":"4220:72:18","visibility":"public"},{"canonicalName":"CommonTypes.PoStProof","id":4582,"members":[{"constant":false,"id":4579,"mutability":"mutable","name":"post_proof","nameLocation":"4345:10:18","nodeType":"VariableDeclaration","scope":4582,"src":"4325:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredPoStProof_$4371","typeString":"enum CommonTypes.RegisteredPoStProof"},"typeName":{"id":4578,"nodeType":"UserDefinedTypeName","pathNode":{"id":4577,"name":"RegisteredPoStProof","nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"4325:19:18"},"referencedDeclaration":4371,"src":"4325:19:18","typeDescriptions":{"typeIdentifier":"t_enum$_RegisteredPoStProof_$4371","typeString":"enum CommonTypes.RegisteredPoStProof"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"proof_bytes","nameLocation":"4371:11:18","nodeType":"VariableDeclaration","scope":4582,"src":"4365:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4580,"name":"bytes","nodeType":"ElementaryTypeName","src":"4365:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PoStProof","nameLocation":"4305:9:18","nodeType":"StructDefinition","scope":4664,"src":"4298:91:18","visibility":"public"},{"canonicalName":"CommonTypes.VestingFunds","id":4587,"members":[{"constant":false,"id":4584,"mutability":"mutable","name":"epoch","nameLocation":"4431:5:18","nodeType":"VariableDeclaration","scope":4587,"src":"4425:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4583,"name":"int64","nodeType":"ElementaryTypeName","src":"4425:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"amount","nameLocation":"4453:6:18","nodeType":"VariableDeclaration","scope":4587,"src":"4446:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4585,"name":"int256","nodeType":"ElementaryTypeName","src":"4446:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"VestingFunds","nameLocation":"4402:12:18","nodeType":"StructDefinition","scope":4664,"src":"4395:71:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorDeals","id":4595,"members":[{"constant":false,"id":4589,"mutability":"mutable","name":"sector_type","nameLocation":"4506:11:18","nodeType":"VariableDeclaration","scope":4595,"src":"4500:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4588,"name":"int64","nodeType":"ElementaryTypeName","src":"4500:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"sector_expiry","nameLocation":"4533:13:18","nodeType":"VariableDeclaration","scope":4595,"src":"4527:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4590,"name":"int64","nodeType":"ElementaryTypeName","src":"4527:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4594,"mutability":"mutable","name":"deal_ids","nameLocation":"4565:8:18","nodeType":"VariableDeclaration","scope":4595,"src":"4556:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4592,"name":"uint64","nodeType":"ElementaryTypeName","src":"4556:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4593,"nodeType":"ArrayTypeName","src":"4556:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"name":"SectorDeals","nameLocation":"4478:11:18","nodeType":"StructDefinition","scope":4664,"src":"4471:109:18","visibility":"public"},{"canonicalName":"CommonTypes.Signature","id":4600,"members":[{"constant":false,"id":4597,"mutability":"mutable","name":"sig_type","nameLocation":"4618:8:18","nodeType":"VariableDeclaration","scope":4600,"src":"4613:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4596,"name":"int8","nodeType":"ElementaryTypeName","src":"4613:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"data","nameLocation":"4642:4:18","nodeType":"VariableDeclaration","scope":4600,"src":"4636:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4598,"name":"bytes","nodeType":"ElementaryTypeName","src":"4636:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Signature","nameLocation":"4593:9:18","nodeType":"StructDefinition","scope":4664,"src":"4586:67:18","visibility":"public"},{"canonicalName":"CommonTypes.DealProposal","id":4623,"members":[{"constant":false,"id":4602,"mutability":"mutable","name":"piece_cid","nameLocation":"4695:9:18","nodeType":"VariableDeclaration","scope":4623,"src":"4689:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4689:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"piece_size","nameLocation":"4721:10:18","nodeType":"VariableDeclaration","scope":4623,"src":"4714:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4603,"name":"uint64","nodeType":"ElementaryTypeName","src":"4714:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"verified_deal","nameLocation":"4746:13:18","nodeType":"VariableDeclaration","scope":4623,"src":"4741:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4605,"name":"bool","nodeType":"ElementaryTypeName","src":"4741:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"client","nameLocation":"4775:6:18","nodeType":"VariableDeclaration","scope":4623,"src":"4769:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4607,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"provider","nameLocation":"4797:8:18","nodeType":"VariableDeclaration","scope":4623,"src":"4791:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4609,"name":"bytes","nodeType":"ElementaryTypeName","src":"4791:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"label","nameLocation":"4822:5:18","nodeType":"VariableDeclaration","scope":4623,"src":"4815:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4611,"name":"string","nodeType":"ElementaryTypeName","src":"4815:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"start_epoch","nameLocation":"4843:11:18","nodeType":"VariableDeclaration","scope":4623,"src":"4837:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4613,"name":"int64","nodeType":"ElementaryTypeName","src":"4837:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"end_epoch","nameLocation":"4870:9:18","nodeType":"VariableDeclaration","scope":4623,"src":"4864:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4615,"name":"int64","nodeType":"ElementaryTypeName","src":"4864:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"storage_price_per_epoch","nameLocation":"4893:23:18","nodeType":"VariableDeclaration","scope":4623,"src":"4889:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4617,"name":"int","nodeType":"ElementaryTypeName","src":"4889:3:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4620,"mutability":"mutable","name":"provider_collateral","nameLocation":"4930:19:18","nodeType":"VariableDeclaration","scope":4623,"src":"4926:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4619,"name":"int","nodeType":"ElementaryTypeName","src":"4926:3:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"client_collateral","nameLocation":"4963:17:18","nodeType":"VariableDeclaration","scope":4623,"src":"4959:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4621,"name":"int","nodeType":"ElementaryTypeName","src":"4959:3:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"DealProposal","nameLocation":"4666:12:18","nodeType":"StructDefinition","scope":4664,"src":"4659:328:18","visibility":"public"},{"canonicalName":"CommonTypes.ClientDealProposal","id":4630,"members":[{"constant":false,"id":4626,"mutability":"mutable","name":"proposal","nameLocation":"5042:8:18","nodeType":"VariableDeclaration","scope":4630,"src":"5029:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_DealProposal_$4623_storage_ptr","typeString":"struct CommonTypes.DealProposal"},"typeName":{"id":4625,"nodeType":"UserDefinedTypeName","pathNode":{"id":4624,"name":"DealProposal","nodeType":"IdentifierPath","referencedDeclaration":4623,"src":"5029:12:18"},"referencedDeclaration":4623,"src":"5029:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_DealProposal_$4623_storage_ptr","typeString":"struct CommonTypes.DealProposal"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"client_signature","nameLocation":"5070:16:18","nodeType":"VariableDeclaration","scope":4630,"src":"5060:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$4600_storage_ptr","typeString":"struct CommonTypes.Signature"},"typeName":{"id":4628,"nodeType":"UserDefinedTypeName","pathNode":{"id":4627,"name":"Signature","nodeType":"IdentifierPath","referencedDeclaration":4600,"src":"5060:9:18"},"referencedDeclaration":4600,"src":"5060:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$4600_storage_ptr","typeString":"struct CommonTypes.Signature"}},"visibility":"internal"}],"name":"ClientDealProposal","nameLocation":"5000:18:18","nodeType":"StructDefinition","scope":4664,"src":"4993:100:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorDealData","id":4633,"members":[{"constant":false,"id":4632,"mutability":"mutable","name":"commd","nameLocation":"5137:5:18","nodeType":"VariableDeclaration","scope":4633,"src":"5131:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4631,"name":"bytes","nodeType":"ElementaryTypeName","src":"5131:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SectorDealData","nameLocation":"5106:14:18","nodeType":"StructDefinition","scope":4664,"src":"5099:50:18","visibility":"public"},{"canonicalName":"CommonTypes.CID","id":4641,"members":[{"constant":false,"id":4635,"mutability":"mutable","name":"version","nameLocation":"5182:7:18","nodeType":"VariableDeclaration","scope":4641,"src":"5176:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4634,"name":"uint8","nodeType":"ElementaryTypeName","src":"5176:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4637,"mutability":"mutable","name":"codec","nameLocation":"5206:5:18","nodeType":"VariableDeclaration","scope":4641,"src":"5199:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4636,"name":"uint64","nodeType":"ElementaryTypeName","src":"5199:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"hash","nameLocation":"5231:4:18","nodeType":"VariableDeclaration","scope":4641,"src":"5221:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Multihash_$4648_storage_ptr","typeString":"struct CommonTypes.Multihash"},"typeName":{"id":4639,"nodeType":"UserDefinedTypeName","pathNode":{"id":4638,"name":"Multihash","nodeType":"IdentifierPath","referencedDeclaration":4648,"src":"5221:9:18"},"referencedDeclaration":4648,"src":"5221:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_Multihash_$4648_storage_ptr","typeString":"struct CommonTypes.Multihash"}},"visibility":"internal"}],"name":"CID","nameLocation":"5162:3:18","nodeType":"StructDefinition","scope":4664,"src":"5155:87:18","visibility":"public"},{"canonicalName":"CommonTypes.Multihash","id":4648,"members":[{"constant":false,"id":4643,"mutability":"mutable","name":"code","nameLocation":"5282:4:18","nodeType":"VariableDeclaration","scope":4648,"src":"5275:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4642,"name":"uint64","nodeType":"ElementaryTypeName","src":"5275:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"size","nameLocation":"5302:4:18","nodeType":"VariableDeclaration","scope":4648,"src":"5296:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4644,"name":"uint8","nodeType":"ElementaryTypeName","src":"5296:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"digest","nameLocation":"5322:6:18","nodeType":"VariableDeclaration","scope":4648,"src":"5316:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4646,"name":"bytes","nodeType":"ElementaryTypeName","src":"5316:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Multihash","nameLocation":"5255:9:18","nodeType":"StructDefinition","scope":4664,"src":"5248:87:18","visibility":"public"},{"canonicalName":"CommonTypes.VerifiedDealInfo","id":4657,"members":[{"constant":false,"id":4650,"mutability":"mutable","name":"client","nameLocation":"5382:6:18","nodeType":"VariableDeclaration","scope":4657,"src":"5375:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4649,"name":"uint64","nodeType":"ElementaryTypeName","src":"5375:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"allocation_id","nameLocation":"5405:13:18","nodeType":"VariableDeclaration","scope":4657,"src":"5398:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4651,"name":"uint64","nodeType":"ElementaryTypeName","src":"5398:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"data","nameLocation":"5434:4:18","nodeType":"VariableDeclaration","scope":4657,"src":"5428:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4653,"name":"bytes","nodeType":"ElementaryTypeName","src":"5428:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"size","nameLocation":"5455:4:18","nodeType":"VariableDeclaration","scope":4657,"src":"5448:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4655,"name":"uint64","nodeType":"ElementaryTypeName","src":"5448:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"VerifiedDealInfo","nameLocation":"5348:16:18","nodeType":"StructDefinition","scope":4664,"src":"5341:125:18","visibility":"public"},{"canonicalName":"CommonTypes.SectorDataSpec","id":4663,"members":[{"constant":false,"id":4660,"mutability":"mutable","name":"deal_ids","nameLocation":"5513:8:18","nodeType":"VariableDeclaration","scope":4663,"src":"5504:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":4658,"name":"uint64","nodeType":"ElementaryTypeName","src":"5504:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4659,"nodeType":"ArrayTypeName","src":"5504:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"sector_type","nameLocation":"5537:11:18","nodeType":"VariableDeclaration","scope":4663,"src":"5531:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4661,"name":"int64","nodeType":"ElementaryTypeName","src":"5531:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"SectorDataSpec","nameLocation":"5479:14:18","nodeType":"StructDefinition","scope":4664,"src":"5472:83:18","visibility":"public"}],"scope":4665,"src":"152:5405:18","usedErrors":[]}],"src":"39:5519:18"},"id":18},"contracts/filecoinMockAPIs/types/MarketTypes.sol":{"ast":{"absolutePath":"contracts/filecoinMockAPIs/types/MarketTypes.sol","exportedSymbols":{"MarketTypes":[4779]},"id":4780,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4666,"literals":["solidity",">=","0.4",".25","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"39:34:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"75:75:19","text":"@title Filecoin market actor types for Solidity.\n @author Zondax AG"},"fullyImplemented":true,"id":4779,"linearizedBaseContracts":[4779],"name":"MarketTypes","nameLocation":"158:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MarketTypes.MockDeal","id":4696,"members":[{"constant":false,"id":4669,"mutability":"mutable","name":"id","nameLocation":"209:2:19","nodeType":"VariableDeclaration","scope":4696,"src":"202:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4668,"name":"uint64","nodeType":"ElementaryTypeName","src":"202:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"cid","nameLocation":"228:3:19","nodeType":"VariableDeclaration","scope":4696,"src":"221:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4670,"name":"string","nodeType":"ElementaryTypeName","src":"221:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"size","nameLocation":"248:4:19","nodeType":"VariableDeclaration","scope":4696,"src":"241:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4672,"name":"uint64","nodeType":"ElementaryTypeName","src":"241:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"verified","nameLocation":"267:8:19","nodeType":"VariableDeclaration","scope":4696,"src":"262:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4674,"name":"bool","nodeType":"ElementaryTypeName","src":"262:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"client","nameLocation":"292:6:19","nodeType":"VariableDeclaration","scope":4696,"src":"285:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4676,"name":"string","nodeType":"ElementaryTypeName","src":"285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"provider","nameLocation":"315:8:19","nodeType":"VariableDeclaration","scope":4696,"src":"308:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4678,"name":"string","nodeType":"ElementaryTypeName","src":"308:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"label","nameLocation":"340:5:19","nodeType":"VariableDeclaration","scope":4696,"src":"333:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4680,"name":"string","nodeType":"ElementaryTypeName","src":"333:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"start","nameLocation":"361:5:19","nodeType":"VariableDeclaration","scope":4696,"src":"355:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4682,"name":"int64","nodeType":"ElementaryTypeName","src":"355:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"end","nameLocation":"382:3:19","nodeType":"VariableDeclaration","scope":4696,"src":"376:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4684,"name":"int64","nodeType":"ElementaryTypeName","src":"376:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4687,"mutability":"mutable","name":"price_per_epoch","nameLocation":"403:15:19","nodeType":"VariableDeclaration","scope":4696,"src":"395:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"provider_collateral","nameLocation":"436:19:19","nodeType":"VariableDeclaration","scope":4696,"src":"428:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"client_collateral","nameLocation":"473:17:19","nodeType":"VariableDeclaration","scope":4696,"src":"465:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"activated","nameLocation":"506:9:19","nodeType":"VariableDeclaration","scope":4696,"src":"500:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4692,"name":"int64","nodeType":"ElementaryTypeName","src":"500:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"terminated","nameLocation":"531:10:19","nodeType":"VariableDeclaration","scope":4696,"src":"525:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4694,"name":"int64","nodeType":"ElementaryTypeName","src":"525:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"MockDeal","nameLocation":"183:8:19","nodeType":"StructDefinition","scope":4779,"src":"176:372:19","visibility":"public"},{"canonicalName":"MarketTypes.AddBalanceParams","id":4699,"members":[{"constant":false,"id":4698,"mutability":"mutable","name":"provider_or_client","nameLocation":"595:18:19","nodeType":"VariableDeclaration","scope":4699,"src":"588:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4697,"name":"string","nodeType":"ElementaryTypeName","src":"588:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"AddBalanceParams","nameLocation":"561:16:19","nodeType":"StructDefinition","scope":4779,"src":"554:66:19","visibility":"public"},{"canonicalName":"MarketTypes.WithdrawBalanceParams","id":4704,"members":[{"constant":false,"id":4701,"mutability":"mutable","name":"provider_or_client","nameLocation":"672:18:19","nodeType":"VariableDeclaration","scope":4704,"src":"665:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4700,"name":"string","nodeType":"ElementaryTypeName","src":"665:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4703,"mutability":"mutable","name":"tokenAmount","nameLocation":"708:11:19","nodeType":"VariableDeclaration","scope":4704,"src":"700:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawBalanceParams","nameLocation":"633:21:19","nodeType":"StructDefinition","scope":4779,"src":"626:100:19","visibility":"public"},{"canonicalName":"MarketTypes.WithdrawBalanceReturn","id":4707,"members":[{"constant":false,"id":4706,"mutability":"mutable","name":"amount_withdrawn","nameLocation":"779:16:19","nodeType":"VariableDeclaration","scope":4707,"src":"771:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawBalanceReturn","nameLocation":"739:21:19","nodeType":"StructDefinition","scope":4779,"src":"732:70:19","visibility":"public"},{"canonicalName":"MarketTypes.GetBalanceReturn","id":4712,"members":[{"constant":false,"id":4709,"mutability":"mutable","name":"balance","nameLocation":"850:7:19","nodeType":"VariableDeclaration","scope":4712,"src":"842:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"locked","nameLocation":"875:6:19","nodeType":"VariableDeclaration","scope":4712,"src":"867:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GetBalanceReturn","nameLocation":"815:16:19","nodeType":"StructDefinition","scope":4779,"src":"808:80:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealDataCommitmentParams","id":4715,"members":[{"constant":false,"id":4714,"mutability":"mutable","name":"id","nameLocation":"946:2:19","nodeType":"VariableDeclaration","scope":4715,"src":"939:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4713,"name":"uint64","nodeType":"ElementaryTypeName","src":"939:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealDataCommitmentParams","nameLocation":"901:27:19","nodeType":"StructDefinition","scope":4779,"src":"894:61:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealDataCommitmentReturn","id":4720,"members":[{"constant":false,"id":4717,"mutability":"mutable","name":"data","nameLocation":"1012:4:19","nodeType":"VariableDeclaration","scope":4720,"src":"1006:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4716,"name":"bytes","nodeType":"ElementaryTypeName","src":"1006:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"size","nameLocation":"1033:4:19","nodeType":"VariableDeclaration","scope":4720,"src":"1026:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4718,"name":"uint64","nodeType":"ElementaryTypeName","src":"1026:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealDataCommitmentReturn","nameLocation":"968:27:19","nodeType":"StructDefinition","scope":4779,"src":"961:83:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealClientParams","id":4723,"members":[{"constant":false,"id":4722,"mutability":"mutable","name":"id","nameLocation":"1094:2:19","nodeType":"VariableDeclaration","scope":4723,"src":"1087:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4721,"name":"uint64","nodeType":"ElementaryTypeName","src":"1087:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealClientParams","nameLocation":"1057:19:19","nodeType":"StructDefinition","scope":4779,"src":"1050:53:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealClientReturn","id":4726,"members":[{"constant":false,"id":4725,"mutability":"mutable","name":"client","nameLocation":"1153:6:19","nodeType":"VariableDeclaration","scope":4726,"src":"1146:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4724,"name":"string","nodeType":"ElementaryTypeName","src":"1146:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"GetDealClientReturn","nameLocation":"1116:19:19","nodeType":"StructDefinition","scope":4779,"src":"1109:57:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealProviderParams","id":4729,"members":[{"constant":false,"id":4728,"mutability":"mutable","name":"id","nameLocation":"1218:2:19","nodeType":"VariableDeclaration","scope":4729,"src":"1211:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4727,"name":"uint64","nodeType":"ElementaryTypeName","src":"1211:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealProviderParams","nameLocation":"1179:21:19","nodeType":"StructDefinition","scope":4779,"src":"1172:55:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealProviderReturn","id":4732,"members":[{"constant":false,"id":4731,"mutability":"mutable","name":"provider","nameLocation":"1279:8:19","nodeType":"VariableDeclaration","scope":4732,"src":"1272:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4730,"name":"string","nodeType":"ElementaryTypeName","src":"1272:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"GetDealProviderReturn","nameLocation":"1240:21:19","nodeType":"StructDefinition","scope":4779,"src":"1233:61:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealLabelParams","id":4735,"members":[{"constant":false,"id":4734,"mutability":"mutable","name":"id","nameLocation":"1343:2:19","nodeType":"VariableDeclaration","scope":4735,"src":"1336:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4733,"name":"uint64","nodeType":"ElementaryTypeName","src":"1336:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealLabelParams","nameLocation":"1307:18:19","nodeType":"StructDefinition","scope":4779,"src":"1300:52:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealLabelReturn","id":4738,"members":[{"constant":false,"id":4737,"mutability":"mutable","name":"label","nameLocation":"1401:5:19","nodeType":"VariableDeclaration","scope":4738,"src":"1394:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4736,"name":"string","nodeType":"ElementaryTypeName","src":"1394:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"GetDealLabelReturn","nameLocation":"1365:18:19","nodeType":"StructDefinition","scope":4779,"src":"1358:55:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealTermParams","id":4741,"members":[{"constant":false,"id":4740,"mutability":"mutable","name":"id","nameLocation":"1461:2:19","nodeType":"VariableDeclaration","scope":4741,"src":"1454:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4739,"name":"uint64","nodeType":"ElementaryTypeName","src":"1454:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealTermParams","nameLocation":"1426:17:19","nodeType":"StructDefinition","scope":4779,"src":"1419:51:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealTermReturn","id":4746,"members":[{"constant":false,"id":4743,"mutability":"mutable","name":"start","nameLocation":"1517:5:19","nodeType":"VariableDeclaration","scope":4746,"src":"1511:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4742,"name":"int64","nodeType":"ElementaryTypeName","src":"1511:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"end","nameLocation":"1538:3:19","nodeType":"VariableDeclaration","scope":4746,"src":"1532:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4744,"name":"int64","nodeType":"ElementaryTypeName","src":"1532:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"GetDealTermReturn","nameLocation":"1483:17:19","nodeType":"StructDefinition","scope":4779,"src":"1476:72:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealEpochPriceParams","id":4749,"members":[{"constant":false,"id":4748,"mutability":"mutable","name":"id","nameLocation":"1602:2:19","nodeType":"VariableDeclaration","scope":4749,"src":"1595:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4747,"name":"uint64","nodeType":"ElementaryTypeName","src":"1595:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealEpochPriceParams","nameLocation":"1561:23:19","nodeType":"StructDefinition","scope":4779,"src":"1554:57:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealEpochPriceReturn","id":4752,"members":[{"constant":false,"id":4751,"mutability":"mutable","name":"price_per_epoch","nameLocation":"1666:15:19","nodeType":"VariableDeclaration","scope":4752,"src":"1658:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GetDealEpochPriceReturn","nameLocation":"1624:23:19","nodeType":"StructDefinition","scope":4779,"src":"1617:71:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealClientCollateralParams","id":4755,"members":[{"constant":false,"id":4754,"mutability":"mutable","name":"id","nameLocation":"1748:2:19","nodeType":"VariableDeclaration","scope":4755,"src":"1741:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4753,"name":"uint64","nodeType":"ElementaryTypeName","src":"1741:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealClientCollateralParams","nameLocation":"1701:29:19","nodeType":"StructDefinition","scope":4779,"src":"1694:63:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealClientCollateralReturn","id":4758,"members":[{"constant":false,"id":4757,"mutability":"mutable","name":"collateral","nameLocation":"1818:10:19","nodeType":"VariableDeclaration","scope":4758,"src":"1810:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GetDealClientCollateralReturn","nameLocation":"1770:29:19","nodeType":"StructDefinition","scope":4779,"src":"1763:72:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealProviderCollateralParams","id":4761,"members":[{"constant":false,"id":4760,"mutability":"mutable","name":"id","nameLocation":"1897:2:19","nodeType":"VariableDeclaration","scope":4761,"src":"1890:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4759,"name":"uint64","nodeType":"ElementaryTypeName","src":"1890:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealProviderCollateralParams","nameLocation":"1848:31:19","nodeType":"StructDefinition","scope":4779,"src":"1841:65:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealProviderCollateralReturn","id":4764,"members":[{"constant":false,"id":4763,"mutability":"mutable","name":"collateral","nameLocation":"1969:10:19","nodeType":"VariableDeclaration","scope":4764,"src":"1961:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GetDealProviderCollateralReturn","nameLocation":"1919:31:19","nodeType":"StructDefinition","scope":4779,"src":"1912:74:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealVerifiedParams","id":4767,"members":[{"constant":false,"id":4766,"mutability":"mutable","name":"id","nameLocation":"2038:2:19","nodeType":"VariableDeclaration","scope":4767,"src":"2031:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4765,"name":"uint64","nodeType":"ElementaryTypeName","src":"2031:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealVerifiedParams","nameLocation":"1999:21:19","nodeType":"StructDefinition","scope":4779,"src":"1992:55:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealVerifiedReturn","id":4770,"members":[{"constant":false,"id":4769,"mutability":"mutable","name":"verified","nameLocation":"2097:8:19","nodeType":"VariableDeclaration","scope":4770,"src":"2092:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4768,"name":"bool","nodeType":"ElementaryTypeName","src":"2092:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GetDealVerifiedReturn","nameLocation":"2060:21:19","nodeType":"StructDefinition","scope":4779,"src":"2053:59:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealActivationParams","id":4773,"members":[{"constant":false,"id":4772,"mutability":"mutable","name":"id","nameLocation":"2166:2:19","nodeType":"VariableDeclaration","scope":4773,"src":"2159:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4771,"name":"uint64","nodeType":"ElementaryTypeName","src":"2159:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetDealActivationParams","nameLocation":"2125:23:19","nodeType":"StructDefinition","scope":4779,"src":"2118:57:19","visibility":"public"},{"canonicalName":"MarketTypes.GetDealActivationReturn","id":4778,"members":[{"constant":false,"id":4775,"mutability":"mutable","name":"activated","nameLocation":"2228:9:19","nodeType":"VariableDeclaration","scope":4778,"src":"2222:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4774,"name":"int64","nodeType":"ElementaryTypeName","src":"2222:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"terminated","nameLocation":"2253:10:19","nodeType":"VariableDeclaration","scope":4778,"src":"2247:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4776,"name":"int64","nodeType":"ElementaryTypeName","src":"2247:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"GetDealActivationReturn","nameLocation":"2188:23:19","nodeType":"StructDefinition","scope":4779,"src":"2181:89:19","visibility":"public"}],"scope":4780,"src":"150:2122:19","usedErrors":[]}],"src":"39:2234:19"},"id":19},"contracts/filecoinMockAPIs/types/MinerTypes.sol":{"ast":{"absolutePath":"contracts/filecoinMockAPIs/types/MinerTypes.sol","exportedSymbols":{"CommonTypes":[4664],"MinerTypes":[4818]},"id":4819,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4781,"literals":["solidity",">=","0.4",".25","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"39:34:20"},{"absolutePath":"contracts/filecoinMockAPIs/types/CommonTypes.sol","file":"./CommonTypes.sol","id":4782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4819,"sourceUnit":4665,"src":"75:27:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"104:74:20","text":"@title Filecoin miner actor types for Solidity.\n @author Zondax AG"},"fullyImplemented":true,"id":4818,"linearizedBaseContracts":[4818],"name":"MinerTypes","nameLocation":"186:10:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MinerTypes.GetOwnerReturn","id":4786,"members":[{"constant":false,"id":4785,"mutability":"mutable","name":"owner","nameLocation":"242:5:20","nodeType":"VariableDeclaration","scope":4786,"src":"235:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4784,"name":"string","nodeType":"ElementaryTypeName","src":"235:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"GetOwnerReturn","nameLocation":"210:14:20","nodeType":"StructDefinition","scope":4818,"src":"203:51:20","visibility":"public"},{"canonicalName":"MinerTypes.IsControllingAddressParam","id":4789,"members":[{"constant":false,"id":4788,"mutability":"mutable","name":"addr","nameLocation":"309:4:20","nodeType":"VariableDeclaration","scope":4789,"src":"302:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4787,"name":"string","nodeType":"ElementaryTypeName","src":"302:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"IsControllingAddressParam","nameLocation":"266:25:20","nodeType":"StructDefinition","scope":4818,"src":"259:61:20","visibility":"public"},{"canonicalName":"MinerTypes.IsControllingAddressReturn","id":4792,"members":[{"constant":false,"id":4791,"mutability":"mutable","name":"is_controlling","nameLocation":"374:14:20","nodeType":"VariableDeclaration","scope":4792,"src":"369:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4790,"name":"bool","nodeType":"ElementaryTypeName","src":"369:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"IsControllingAddressReturn","nameLocation":"332:26:20","nodeType":"StructDefinition","scope":4818,"src":"325:70:20","visibility":"public"},{"canonicalName":"MinerTypes.GetSectorSizeReturn","id":4795,"members":[{"constant":false,"id":4794,"mutability":"mutable","name":"sector_size","nameLocation":"444:11:20","nodeType":"VariableDeclaration","scope":4795,"src":"437:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4793,"name":"uint64","nodeType":"ElementaryTypeName","src":"437:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"GetSectorSizeReturn","nameLocation":"407:19:20","nodeType":"StructDefinition","scope":4818,"src":"400:62:20","visibility":"public"},{"canonicalName":"MinerTypes.GetAvailableBalanceReturn","id":4798,"members":[{"constant":false,"id":4797,"mutability":"mutable","name":"available_balance","nameLocation":"517:17:20","nodeType":"VariableDeclaration","scope":4798,"src":"510:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4796,"name":"int256","nodeType":"ElementaryTypeName","src":"510:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"GetAvailableBalanceReturn","nameLocation":"474:25:20","nodeType":"StructDefinition","scope":4818,"src":"467:74:20","visibility":"public"},{"canonicalName":"MinerTypes.GetVestingFundsReturn","id":4803,"members":[{"constant":false,"id":4802,"mutability":"mutable","name":"vesting_funds","nameLocation":"612:13:20","nodeType":"VariableDeclaration","scope":4803,"src":"585:40:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.VestingFunds[]"},"typeName":{"baseType":{"id":4800,"nodeType":"UserDefinedTypeName","pathNode":{"id":4799,"name":"CommonTypes.VestingFunds","nodeType":"IdentifierPath","referencedDeclaration":4587,"src":"585:24:20"},"referencedDeclaration":4587,"src":"585:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFunds_$4587_storage_ptr","typeString":"struct CommonTypes.VestingFunds"}},"id":4801,"nodeType":"ArrayTypeName","src":"585:26:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VestingFunds_$4587_storage_$dyn_storage_ptr","typeString":"struct CommonTypes.VestingFunds[]"}},"visibility":"internal"}],"name":"GetVestingFundsReturn","nameLocation":"553:21:20","nodeType":"StructDefinition","scope":4818,"src":"546:86:20","visibility":"public"},{"canonicalName":"MinerTypes.ChangeBeneficiaryParams","id":4810,"members":[{"constant":false,"id":4805,"mutability":"mutable","name":"new_beneficiary","nameLocation":"686:15:20","nodeType":"VariableDeclaration","scope":4810,"src":"679:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4804,"name":"string","nodeType":"ElementaryTypeName","src":"679:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"new_quota","nameLocation":"718:9:20","nodeType":"VariableDeclaration","scope":4810,"src":"711:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4806,"name":"int256","nodeType":"ElementaryTypeName","src":"711:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"new_expiration","nameLocation":"744:14:20","nodeType":"VariableDeclaration","scope":4810,"src":"737:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4808,"name":"uint64","nodeType":"ElementaryTypeName","src":"737:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"ChangeBeneficiaryParams","nameLocation":"645:23:20","nodeType":"StructDefinition","scope":4818,"src":"638:127:20","visibility":"public"},{"canonicalName":"MinerTypes.GetBeneficiaryReturn","id":4817,"members":[{"constant":false,"id":4813,"mutability":"mutable","name":"active","nameLocation":"839:6:20","nodeType":"VariableDeclaration","scope":4817,"src":"809:36:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage_ptr","typeString":"struct CommonTypes.ActiveBeneficiary"},"typeName":{"id":4812,"nodeType":"UserDefinedTypeName","pathNode":{"id":4811,"name":"CommonTypes.ActiveBeneficiary","nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"809:29:20"},"referencedDeclaration":4427,"src":"809:29:20","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveBeneficiary_$4427_storage_ptr","typeString":"struct CommonTypes.ActiveBeneficiary"}},"visibility":"internal"},{"constant":false,"id":4816,"mutability":"mutable","name":"proposed","nameLocation":"892:8:20","nodeType":"VariableDeclaration","scope":4817,"src":"855:45:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_storage_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange"},"typeName":{"id":4815,"nodeType":"UserDefinedTypeName","pathNode":{"id":4814,"name":"CommonTypes.PendingBeneficiaryChange","nodeType":"IdentifierPath","referencedDeclaration":4414,"src":"855:36:20"},"referencedDeclaration":4414,"src":"855:36:20","typeDescriptions":{"typeIdentifier":"t_struct$_PendingBeneficiaryChange_$4414_storage_ptr","typeString":"struct CommonTypes.PendingBeneficiaryChange"}},"visibility":"internal"}],"name":"GetBeneficiaryReturn","nameLocation":"778:20:20","nodeType":"StructDefinition","scope":4818,"src":"771:136:20","visibility":"public"}],"scope":4819,"src":"178:731:20","usedErrors":[]}],"src":"39:871:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099cacbc6e50b727c05ad7311b45ab66de75b492a5183dd43291999daa084e96664736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xCA 0xCB 0xC6 0xE5 SIGNEXTEND PUSH19 0x7C05AD7311B45AB66DE75B492A5183DD432919 SWAP10 0xDA LOG0 DUP5 0xE9 PUSH7 0x64736F6C634300 ADDMOD DIV STOP CALLER ","sourceMap":"194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099cacbc6e50b727c05ad7311b45ab66de75b492a5183dd43291999daa084e96664736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xCA 0xCB 0xC6 0xE5 SIGNEXTEND PUSH19 0x7C05AD7311B45AB66DE75B492A5183DD432919 SWAP10 0xDA LOG0 DUP5 0xE9 PUSH7 0x64736F6C634300 ADDMOD DIV STOP CALLER ","sourceMap":"194:8964:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070e73f0a9bdb8d9cff6918fc96fb658d845e9d4bdea4f69cc3af8352bfc6673964736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE73F0A9BDB8D9CFF6918FC96FB658D845E SWAP14 0x4B 0xDE LOG4 0xF6 SWAP13 0xC3 0xAF DUP4 MSTORE 0xBF 0xC6 PUSH8 0x3964736F6C634300 ADDMOD DIV STOP CALLER ","sourceMap":"424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070e73f0a9bdb8d9cff6918fc96fb658d845e9d4bdea4f69cc3af8352bfc6673964736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE73F0A9BDB8D9CFF6918FC96FB658D845E SWAP14 0x4B 0xDE LOG4 0xF6 SWAP13 0xC3 0xAF DUP4 MSTORE 0xBF 0xC6 PUSH8 0x3964736F6C634300 ADDMOD DIV STOP CALLER ","sourceMap":"424:971:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"current(struct Counters.Counter storage pointer)":"infinite","decrement(struct Counters.Counter storage pointer)":"infinite","increment(struct Counters.Counter storage pointer)":"infinite","reset(struct Counters.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029c05119bccc511574891c718be35f03446c9f74fefc042f852a10c927558d5c64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xC0 MLOAD NOT 0xBC 0xCC MLOAD ISZERO PUSH21 0x891C718BE35F03446C9F74FEFC042F852A10C92755 DUP14 0x5C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"188:2065:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029c05119bccc511574891c718be35f03446c9f74fefc042f852a10c927558d5c64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xC0 MLOAD NOT 0xBC 0xCC MLOAD ISZERO PUSH21 0x891C718BE35F03446C9F74FEFC042F852A10C92755 DUP14 0x5C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"188:2065:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e9d2bfe7428d9072e4eebe3ffd84c65a54fcfee3290e32937f2b0dad96bb4d64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE9D2BFE7428D9072E4EEBE3FFD84C65A54FCFEE3290E32937F 0x2B 0xD 0xAD SWAP7 0xBB 0x4D PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:12302:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e9d2bfe7428d9072e4eebe3ffd84c65a54fcfee3290e32937f2b0dad96bb4d64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE9D2BFE7428D9072E4EEBE3FFD84C65A54FCFEE3290E32937F 0x2B 0xD 0xAD SWAP7 0xBB 0x4D PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:12302:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CrypticAgreement.sol":{"CrypticAgreement":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_cid","type":"string"},{"internalType":"address","name":"_creator","type":"address"},{"internalType":"string","name":"_status","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address[]","name":"_members","type":"address[]"}],"name":"addMembers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkAgreementStatus","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"memberAddress","type":"address"}],"name":"checkMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCid","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_cid","type":"string"}],"name":"setCid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"signAgreement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"signed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4196:21","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:21","statements":[{"nodeType":"YulAssignment","src":"112:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:21"},"nodeType":"YulFunctionCall","src":"137:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:21"},"nodeType":"YulFunctionCall","src":"121:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:21"},"nodeType":"YulFunctionCall","src":"196:21:21"},"nodeType":"YulExpressionStatement","src":"196:21:21"},{"nodeType":"YulVariableDeclaration","src":"226:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:21"},"nodeType":"YulFunctionCall","src":"237:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:21"},"nodeType":"YulFunctionCall","src":"293:12:21"},"nodeType":"YulExpressionStatement","src":"293:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:21"},"nodeType":"YulFunctionCall","src":"268:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:21"},"nodeType":"YulFunctionCall","src":"265:25:21"},"nodeType":"YulIf","src":"262:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:21"},"nodeType":"YulFunctionCall","src":"316:39:21"},"nodeType":"YulExpressionStatement","src":"316:39:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:21","type":""}],"src":"7:354:21"},{"body":{"nodeType":"YulBlock","src":"430:80:21","statements":[{"nodeType":"YulAssignment","src":"440:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"455:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:21"},"nodeType":"YulFunctionCall","src":"449:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"440:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"471:26:21"},"nodeType":"YulFunctionCall","src":"471:33:21"},"nodeType":"YulExpressionStatement","src":"471:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"416:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"424:5:21","type":""}],"src":"367:143:21"},{"body":{"nodeType":"YulBlock","src":"603:215:21","statements":[{"body":{"nodeType":"YulBlock","src":"652:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"661:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"664:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"654:6:21"},"nodeType":"YulFunctionCall","src":"654:12:21"},"nodeType":"YulExpressionStatement","src":"654:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"631:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"639:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"646:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"623:3:21"},"nodeType":"YulFunctionCall","src":"623:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"616:6:21"},"nodeType":"YulFunctionCall","src":"616:35:21"},"nodeType":"YulIf","src":"613:2:21"},{"nodeType":"YulVariableDeclaration","src":"677:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"691:5:21"},"nodeType":"YulFunctionCall","src":"691:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"681:6:21","type":""}]},{"nodeType":"YulAssignment","src":"713:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"785:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"793:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"781:3:21"},"nodeType":"YulFunctionCall","src":"781:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"800:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"808:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"722:58:21"},"nodeType":"YulFunctionCall","src":"722:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"713:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"581:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"589:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"597:5:21","type":""}],"src":"530:288:21"},{"body":{"nodeType":"YulBlock","src":"982:913:21","statements":[{"body":{"nodeType":"YulBlock","src":"1029:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1038:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1041:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1031:6:21"},"nodeType":"YulFunctionCall","src":"1031:12:21"},"nodeType":"YulExpressionStatement","src":"1031:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1003:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1012:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"999:3:21"},"nodeType":"YulFunctionCall","src":"999:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1024:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"995:3:21"},"nodeType":"YulFunctionCall","src":"995:33:21"},"nodeType":"YulIf","src":"992:2:21"},{"nodeType":"YulBlock","src":"1055:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1070:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1094:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1105:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1090:3:21"},"nodeType":"YulFunctionCall","src":"1090:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1084:5:21"},"nodeType":"YulFunctionCall","src":"1084:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1074:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1155:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:21"},"nodeType":"YulFunctionCall","src":"1157:12:21"},"nodeType":"YulExpressionStatement","src":"1157:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1127:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1135:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1124:2:21"},"nodeType":"YulFunctionCall","src":"1124:30:21"},"nodeType":"YulIf","src":"1121:2:21"},{"nodeType":"YulAssignment","src":"1185:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1252:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1237:3:21"},"nodeType":"YulFunctionCall","src":"1237:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1261:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1195:41:21"},"nodeType":"YulFunctionCall","src":"1195:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1185:6:21"}]}]},{"nodeType":"YulBlock","src":"1289:225:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1304:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1324:3:21"},"nodeType":"YulFunctionCall","src":"1324:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1318:5:21"},"nodeType":"YulFunctionCall","src":"1318:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1308:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1390:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1399:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1402:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1392:6:21"},"nodeType":"YulFunctionCall","src":"1392:12:21"},"nodeType":"YulExpressionStatement","src":"1392:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1362:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1370:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1359:2:21"},"nodeType":"YulFunctionCall","src":"1359:30:21"},"nodeType":"YulIf","src":"1356:2:21"},{"nodeType":"YulAssignment","src":"1420:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1476:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1487:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1472:3:21"},"nodeType":"YulFunctionCall","src":"1472:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1496:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1430:41:21"},"nodeType":"YulFunctionCall","src":"1430:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1420:6:21"}]}]},{"nodeType":"YulBlock","src":"1524:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1539:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1553:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1543:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1569:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1615:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1626:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:21"},"nodeType":"YulFunctionCall","src":"1611:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1635:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1579:31:21"},"nodeType":"YulFunctionCall","src":"1579:64:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1569:6:21"}]}]},{"nodeType":"YulBlock","src":"1663:225:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1678:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1713:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1698:3:21"},"nodeType":"YulFunctionCall","src":"1698:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1692:5:21"},"nodeType":"YulFunctionCall","src":"1692:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1682:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1764:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1773:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1776:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1766:6:21"},"nodeType":"YulFunctionCall","src":"1766:12:21"},"nodeType":"YulExpressionStatement","src":"1766:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1736:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1744:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1733:2:21"},"nodeType":"YulFunctionCall","src":"1733:30:21"},"nodeType":"YulIf","src":"1730:2:21"},{"nodeType":"YulAssignment","src":"1794:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1861:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:21"},"nodeType":"YulFunctionCall","src":"1846:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1870:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1804:41:21"},"nodeType":"YulFunctionCall","src":"1804:74:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1794:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"928:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"939:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"951:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"959:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"967:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"975:6:21","type":""}],"src":"824:1071:21"},{"body":{"nodeType":"YulBlock","src":"1942:88:21","statements":[{"nodeType":"YulAssignment","src":"1952:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1962:18:21"},"nodeType":"YulFunctionCall","src":"1962:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1952:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2011:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"2019:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1991:19:21"},"nodeType":"YulFunctionCall","src":"1991:33:21"},"nodeType":"YulExpressionStatement","src":"1991:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1926:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1935:6:21","type":""}],"src":"1901:129:21"},{"body":{"nodeType":"YulBlock","src":"2076:35:21","statements":[{"nodeType":"YulAssignment","src":"2086:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2102:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2096:5:21"},"nodeType":"YulFunctionCall","src":"2096:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2086:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2069:6:21","type":""}],"src":"2036:75:21"},{"body":{"nodeType":"YulBlock","src":"2184:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"2289:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2291:16:21"},"nodeType":"YulFunctionCall","src":"2291:18:21"},"nodeType":"YulExpressionStatement","src":"2291:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2261:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2269:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2258:2:21"},"nodeType":"YulFunctionCall","src":"2258:30:21"},"nodeType":"YulIf","src":"2255:2:21"},{"nodeType":"YulAssignment","src":"2321:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2351:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2329:21:21"},"nodeType":"YulFunctionCall","src":"2329:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2321:4:21"}]},{"nodeType":"YulAssignment","src":"2395:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2407:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2413:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:21"},"nodeType":"YulFunctionCall","src":"2403:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2395:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2168:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2179:4:21","type":""}],"src":"2117:308:21"},{"body":{"nodeType":"YulBlock","src":"2476:51:21","statements":[{"nodeType":"YulAssignment","src":"2486:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2515:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2497:17:21"},"nodeType":"YulFunctionCall","src":"2497:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2486:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2458:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2468:7:21","type":""}],"src":"2431:96:21"},{"body":{"nodeType":"YulBlock","src":"2578:81:21","statements":[{"nodeType":"YulAssignment","src":"2588:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2603:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2610:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2599:3:21"},"nodeType":"YulFunctionCall","src":"2599:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2588:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2560:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2570:7:21","type":""}],"src":"2533:126:21"},{"body":{"nodeType":"YulBlock","src":"2714:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2724:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2733:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2728:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2793:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2818:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2823:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2814:3:21"},"nodeType":"YulFunctionCall","src":"2814:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2837:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2842:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2833:3:21"},"nodeType":"YulFunctionCall","src":"2833:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2827:5:21"},"nodeType":"YulFunctionCall","src":"2827:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2807:6:21"},"nodeType":"YulFunctionCall","src":"2807:39:21"},"nodeType":"YulExpressionStatement","src":"2807:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2754:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2757:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2751:2:21"},"nodeType":"YulFunctionCall","src":"2751:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2765:19:21","statements":[{"nodeType":"YulAssignment","src":"2767:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2776:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"2779:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2772:3:21"},"nodeType":"YulFunctionCall","src":"2772:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2767:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2747:3:21","statements":[]},"src":"2743:113:21"},{"body":{"nodeType":"YulBlock","src":"2890:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2940:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2945:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2936:3:21"},"nodeType":"YulFunctionCall","src":"2936:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2954:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2929:6:21"},"nodeType":"YulFunctionCall","src":"2929:27:21"},"nodeType":"YulExpressionStatement","src":"2929:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2871:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2874:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2868:2:21"},"nodeType":"YulFunctionCall","src":"2868:13:21"},"nodeType":"YulIf","src":"2865:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2696:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2701:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2706:6:21","type":""}],"src":"2665:307:21"},{"body":{"nodeType":"YulBlock","src":"3029:269:21","statements":[{"nodeType":"YulAssignment","src":"3039:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3053:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3059:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3049:3:21"},"nodeType":"YulFunctionCall","src":"3049:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3039:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3070:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3100:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3106:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3096:3:21"},"nodeType":"YulFunctionCall","src":"3096:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3074:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3147:51:21","statements":[{"nodeType":"YulAssignment","src":"3161:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3175:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3183:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3171:3:21"},"nodeType":"YulFunctionCall","src":"3171:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3161:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3127:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3120:6:21"},"nodeType":"YulFunctionCall","src":"3120:26:21"},"nodeType":"YulIf","src":"3117:2:21"},{"body":{"nodeType":"YulBlock","src":"3250:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3264:16:21"},"nodeType":"YulFunctionCall","src":"3264:18:21"},"nodeType":"YulExpressionStatement","src":"3264:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3214:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3237:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3245:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3234:2:21"},"nodeType":"YulFunctionCall","src":"3234:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3211:2:21"},"nodeType":"YulFunctionCall","src":"3211:38:21"},"nodeType":"YulIf","src":"3208:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3013:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3022:6:21","type":""}],"src":"2978:320:21"},{"body":{"nodeType":"YulBlock","src":"3347:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3357:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3379:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3409:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3387:21:21"},"nodeType":"YulFunctionCall","src":"3387:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3375:3:21"},"nodeType":"YulFunctionCall","src":"3375:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3361:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3526:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3528:16:21"},"nodeType":"YulFunctionCall","src":"3528:18:21"},"nodeType":"YulExpressionStatement","src":"3528:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3469:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3481:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3466:2:21"},"nodeType":"YulFunctionCall","src":"3466:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3505:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3517:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3502:2:21"},"nodeType":"YulFunctionCall","src":"3502:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3463:2:21"},"nodeType":"YulFunctionCall","src":"3463:62:21"},"nodeType":"YulIf","src":"3460:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3564:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3568:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3557:6:21"},"nodeType":"YulFunctionCall","src":"3557:22:21"},"nodeType":"YulExpressionStatement","src":"3557:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3333:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"3341:4:21","type":""}],"src":"3304:281:21"},{"body":{"nodeType":"YulBlock","src":"3619:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3636:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3639:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3629:6:21"},"nodeType":"YulFunctionCall","src":"3629:88:21"},"nodeType":"YulExpressionStatement","src":"3629:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3733:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3736:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3726:6:21"},"nodeType":"YulFunctionCall","src":"3726:15:21"},"nodeType":"YulExpressionStatement","src":"3726:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3757:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3760:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3750:6:21"},"nodeType":"YulFunctionCall","src":"3750:15:21"},"nodeType":"YulExpressionStatement","src":"3750:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3591:180:21"},{"body":{"nodeType":"YulBlock","src":"3805:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3822:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3825:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3815:6:21"},"nodeType":"YulFunctionCall","src":"3815:88:21"},"nodeType":"YulExpressionStatement","src":"3815:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3919:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3922:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3912:6:21"},"nodeType":"YulFunctionCall","src":"3912:15:21"},"nodeType":"YulExpressionStatement","src":"3912:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3943:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3936:6:21"},"nodeType":"YulFunctionCall","src":"3936:15:21"},"nodeType":"YulExpressionStatement","src":"3936:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3777:180:21"},{"body":{"nodeType":"YulBlock","src":"4011:54:21","statements":[{"nodeType":"YulAssignment","src":"4021:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4039:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4046:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4035:3:21"},"nodeType":"YulFunctionCall","src":"4035:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4051:3:21"},"nodeType":"YulFunctionCall","src":"4051:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4031:3:21"},"nodeType":"YulFunctionCall","src":"4031:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4021:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3994:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4004:6:21","type":""}],"src":"3963:102:21"},{"body":{"nodeType":"YulBlock","src":"4114:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"4171:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4180:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4183:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4173:6:21"},"nodeType":"YulFunctionCall","src":"4173:12:21"},"nodeType":"YulExpressionStatement","src":"4173:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4137:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4162:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4144:17:21"},"nodeType":"YulFunctionCall","src":"4144:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4134:2:21"},"nodeType":"YulFunctionCall","src":"4134:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4127:6:21"},"nodeType":"YulFunctionCall","src":"4127:43:21"},"nodeType":"YulIf","src":"4124:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4107:5:21","type":""}],"src":"4071:122:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001a2138038062001a218339818101604052810190620000379190620002f2565b620000576200004b620000ed60201b60201c565b620000f560201b60201c565b83600190805190602001906200006f929190620001b9565b50826002908051906020019062000088929190620001b9565b5081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060049080519060200190620000e2929190620001b9565b505050505062000567565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001c79062000472565b90600052602060002090601f016020900481019282620001eb576000855562000237565b82601f106200020657805160ff191683800117855562000237565b8280016001018555821562000237579182015b828111156200023657825182559160200191906001019062000219565b5b5090506200024691906200024a565b5090565b5b80821115620002655760008160009055506001016200024b565b5090565b6000620002806200027a84620003d2565b620003a9565b9050828152602081018484840111156200029957600080fd5b620002a68482856200043c565b509392505050565b600081519050620002bf816200054d565b92915050565b600082601f830112620002d757600080fd5b8151620002e984826020860162000269565b91505092915050565b600080600080608085870312156200030957600080fd5b600085015167ffffffffffffffff8111156200032457600080fd5b6200033287828801620002c5565b945050602085015167ffffffffffffffff8111156200035057600080fd5b6200035e87828801620002c5565b93505060406200037187828801620002ae565b925050606085015167ffffffffffffffff8111156200038f57600080fd5b6200039d87828801620002c5565b91505092959194509250565b6000620003b5620003c8565b9050620003c38282620004a8565b919050565b6000604051905090565b600067ffffffffffffffff821115620003f057620003ef6200050d565b5b620003fb826200053c565b9050602081019050919050565b600062000415826200041c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200045c5780820151818401526020810190506200043f565b838111156200046c576000848401525b50505050565b600060028204905060018216806200048b57607f821691505b60208210811415620004a257620004a1620004de565b5b50919050565b620004b3826200053c565b810181811067ffffffffffffffff82111715620004d557620004d46200050d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620005588162000408565b81146200056457600080fd5b50565b6114aa80620005776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639eab52531161008c578063ca00c70211610066578063ca00c702146101ee578063ce0fabd81461020c578063db8ddcc91461022a578063f2fde38b14610246576100cf565b80639eab525314610184578063aaf2e5d8146101a2578063b7e03bec146101d2576100cf565b80630555ff41146100d457806317d7de7c146101045780636f4d469b14610122578063715018a61461013e578063893d20e8146101485780638da5cb5b14610166575b600080fd5b6100ee60048036038101906100e99190610ccd565b610262565b6040516100fb9190610f40565b60405180910390f35b61010c610282565b6040516101199190610f5b565b60405180910390f35b61013c60048036038101906101379190610cf6565b610314565b005b610146610502565b005b610150610516565b60405161015d9190610f03565b60405180910390f35b61016e610540565b60405161017b9190610f03565b60405180910390f35b61018c610569565b6040516101999190610f1e565b60405180910390f35b6101bc60048036038101906101b79190610ccd565b6105f7565b6040516101c99190610f40565b60405180910390f35b6101ec60048036038101906101e79190610d37565b6106c8565b005b6101f66106e2565b6040516102039190610f5b565b60405180910390f35b610214610774565b6040516102219190610f5b565b60405180910390f35b610244600480360381019061023f9190610ccd565b6107fe565b005b610260600480360381019061025b9190610ccd565b610949565b005b60056020528060005260406000206000915054906101000a900460ff1681565b606060018054610291906111d4565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906111d4565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610f9d565b60405180910390fd5b60005b81518110156104fe576000600560008484815181106103ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006828281518110610483577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806104f690611237565b9150506103a7565b5050565b61050a6109cd565b6105146000610a4b565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060068054806020026020016040519081016040528092919081815260200182805480156105ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105a3575b5050505050905090565b6000806000905060005b6006805490508110156106be578373ffffffffffffffffffffffffffffffffffffffff166006828154811061065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ab57600191505b80806106b690611237565b915050610601565b5080915050919050565b80600290805190602001906106de929190610b17565b5050565b6060600280546106f1906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461071d906111d4565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b606060068054905060075414156107c2576040518060400160405280600681526020017f5369676e6564000000000000000000000000000000000000000000000000000081525090506107fb565b6040518060400160405280600881526020017f556e7369676e656400000000000000000000000000000000000000000000000081525090505b90565b6000610809826105f7565b90508061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290610fbd565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ffd565b60405180910390fd5b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160075461093f91906110f4565b6007819055505050565b6109516109cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890610f7d565b60405180910390fd5b6109ca81610a4b565b50565b6109d5610b0f565b73ffffffffffffffffffffffffffffffffffffffff166109f3610540565b73ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090610fdd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610b23906111d4565b90600052602060002090601f016020900481019282610b455760008555610b8c565b82601f10610b5e57805160ff1916838001178555610b8c565b82800160010185558215610b8c579182015b82811115610b8b578251825591602001919060010190610b70565b5b509050610b999190610b9d565b5090565b5b80821115610bb6576000816000905550600101610b9e565b5090565b6000610bcd610bc884611042565b61101d565b90508083825260208201905082856020860282011115610bec57600080fd5b60005b85811015610c1c5781610c028882610c64565b845260208401935060208301925050600181019050610bef565b5050509392505050565b6000610c39610c348461106e565b61101d565b905082815260208101848484011115610c5157600080fd5b610c5c848285611192565b509392505050565b600081359050610c738161145d565b92915050565b600082601f830112610c8a57600080fd5b8135610c9a848260208601610bba565b91505092915050565b600082601f830112610cb457600080fd5b8135610cc4848260208601610c26565b91505092915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c64565b91505092915050565b600060208284031215610d0857600080fd5b600082013567ffffffffffffffff811115610d2257600080fd5b610d2e84828501610c79565b91505092915050565b600060208284031215610d4957600080fd5b600082013567ffffffffffffffff811115610d6357600080fd5b610d6f84828501610ca3565b91505092915050565b6000610d848383610d90565b60208301905092915050565b610d998161114a565b82525050565b610da88161114a565b82525050565b6000610db9826110af565b610dc381856110d2565b9350610dce8361109f565b8060005b83811015610dff578151610de68882610d78565b9750610df1836110c5565b925050600181019050610dd2565b5085935050505092915050565b610e158161115c565b82525050565b6000610e26826110ba565b610e3081856110e3565b9350610e408185602086016111a1565b610e498161130d565b840191505092915050565b6000610e616026836110e3565b9150610e6c8261131e565b604082019050919050565b6000610e84601a836110e3565b9150610e8f8261136d565b602082019050919050565b6000610ea76024836110e3565b9150610eb282611396565b604082019050919050565b6000610eca6020836110e3565b9150610ed5826113e5565b602082019050919050565b6000610eed6021836110e3565b9150610ef88261140e565b604082019050919050565b6000602082019050610f186000830184610d9f565b92915050565b60006020820190508181036000830152610f388184610dae565b905092915050565b6000602082019050610f556000830184610e0c565b92915050565b60006020820190508181036000830152610f758184610e1b565b905092915050565b60006020820190508181036000830152610f9681610e54565b9050919050565b60006020820190508181036000830152610fb681610e77565b9050919050565b60006020820190508181036000830152610fd681610e9a565b9050919050565b60006020820190508181036000830152610ff681610ebd565b9050919050565b6000602082019050818103600083015261101681610ee0565b9050919050565b6000611027611038565b90506110338282611206565b919050565b6000604051905090565b600067ffffffffffffffff82111561105d5761105c6112de565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611089576110886112de565b5b6110928261130d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110ff82611188565b915061110a83611188565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113f5761113e611280565b5b828201905092915050565b600061115582611168565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111bf5780820151818401526020810190506111a4565b838111156111ce576000848401525b50505050565b600060028204905060018216806111ec57607f821691505b60208210811415611200576111ff6112af565b5b50919050565b61120f8261130d565b810181811067ffffffffffffffff8211171561122e5761122d6112de565b5b80604052505050565b600061124282611188565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561127557611274611280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e20616464206d656d62657273000000000000600082015250565b7f596f7520617265206e6f74206d656d626572206f66207468697320616772656560008201527f6d656e7400000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f75206861766520616c7265616479207369676e65642061677265656d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6114668161114a565b811461147157600080fd5b5056fea2646970667358221220a3f7da26c804186ee83a48cf5ab2da82db7732599b27ab18cbf6232747a9e4c464736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A21 CODESIZE SUB DUP1 PUSH3 0x1A21 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE2 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x567 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1C7 SWAP1 PUSH3 0x472 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1EB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x206 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x237 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x236 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x219 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x246 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x280 PUSH3 0x27A DUP5 PUSH3 0x3D2 JUMP JUMPDEST PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2A6 DUP5 DUP3 DUP6 PUSH3 0x43C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BF DUP2 PUSH3 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x2E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x332 DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35E DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x371 DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39D DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B5 PUSH3 0x3C8 JUMP JUMPDEST SWAP1 POP PUSH3 0x3C3 DUP3 DUP3 PUSH3 0x4A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3F0 JUMPI PUSH3 0x3EF PUSH3 0x50D JUMP JUMPDEST JUMPDEST PUSH3 0x3FB DUP3 PUSH3 0x53C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 DUP3 PUSH3 0x41C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x45C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x43F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x46C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4A2 JUMPI PUSH3 0x4A1 PUSH3 0x4DE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B3 DUP3 PUSH3 0x53C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4D5 JUMPI PUSH3 0x4D4 PUSH3 0x50D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x558 DUP2 PUSH3 0x408 JUMP JUMPDEST DUP2 EQ PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14AA DUP1 PUSH3 0x577 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EAB5253 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCA00C702 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCA00C702 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xCE0FABD8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xDB8DDCC9 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xAAF2E5D8 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB7E03BEC EQ PUSH2 0x1D2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x555FF41 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6F4D469B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x4F6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5A3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x6B6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x601 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6DE SWAP3 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5369676E65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E7369676E6564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x809 DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xA4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0xB0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F3 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB45 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB5E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB8C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB8B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB9E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD PUSH2 0xBC8 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC1C JUMPI DUP2 PUSH2 0xC02 DUP9 DUP3 PUSH2 0xC64 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBEF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH2 0xC34 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 DUP6 PUSH2 0x1192 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCC4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED DUP5 DUP3 DUP6 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2E DUP5 DUP3 DUP6 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB9 DUP3 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xDC3 DUP2 DUP6 PUSH2 0x10D2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDCE DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFF JUMPI DUP2 MLOAD PUSH2 0xDE6 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDF1 DUP4 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDD2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x115C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xE30 DUP2 DUP6 PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP PUSH2 0xE40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0x130D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x26 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 PUSH1 0x1A DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8F DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 PUSH1 0x24 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB2 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH1 0x20 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xED5 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH1 0x21 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 DUP5 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB6 DUP2 PUSH2 0xE77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x1206 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1092 DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x110A DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1200 JUMPI PUSH2 0x11FF PUSH2 0x12AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120F DUP3 PUSH2 0x130D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x12DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x1280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20616464206D656D62657273000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206D656D626572206F662074686973206167726565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479207369676E65642061677265656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1466 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xF7 0xDA 0x26 0xC8 DIV XOR PUSH15 0xE83A48CF5AB2DA82DB7732599B27AB XOR 0xCB 0xF6 0x23 0x27 SELFBALANCE 0xA9 0xE4 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"111:2038:11:-:0;;;323:235;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;472:5:11;465:4;:12;;;;;;;;;;;;:::i;:::-;;493:4;487:3;:10;;;;;;;;;;;;:::i;:::-;;517:8;507:7;;:18;;;;;;;;;;;;;;;;;;544:7;535:6;:16;;;;;;;;;;;;:::i;:::-;;323:235;;;;111:2038;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;111:2038:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:21:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:143::-;424:5;455:6;449:13;440:22;;471:33;498:5;471:33;:::i;:::-;430:80;;;;:::o;530:288::-;597:5;646:3;639:4;631:6;627:17;623:27;613:2;;664:1;661;654:12;613:2;697:6;691:13;722:90;808:3;800:6;793:4;785:6;781:17;722:90;:::i;:::-;713:99;;603:215;;;;;:::o;824:1071::-;951:6;959;967;975;1024:3;1012:9;1003:7;999:23;995:33;992:2;;;1041:1;1038;1031:12;992:2;1105:1;1094:9;1090:17;1084:24;1135:18;1127:6;1124:30;1121:2;;;1167:1;1164;1157:12;1121:2;1195:74;1261:7;1252:6;1241:9;1237:22;1195:74;:::i;:::-;1185:84;;1055:224;1339:2;1328:9;1324:18;1318:25;1370:18;1362:6;1359:30;1356:2;;;1402:1;1399;1392:12;1356:2;1430:74;1496:7;1487:6;1476:9;1472:22;1430:74;:::i;:::-;1420:84;;1289:225;1553:2;1579:64;1635:7;1626:6;1615:9;1611:22;1579:64;:::i;:::-;1569:74;;1524:129;1713:2;1702:9;1698:18;1692:25;1744:18;1736:6;1733:30;1730:2;;;1776:1;1773;1766:12;1730:2;1804:74;1870:7;1861:6;1850:9;1846:22;1804:74;:::i;:::-;1794:84;;1663:225;982:913;;;;;;;:::o;1901:129::-;1935:6;1962:20;;:::i;:::-;1952:30;;1991:33;2019:4;2011:6;1991:33;:::i;:::-;1942:88;;;:::o;2036:75::-;2069:6;2102:2;2096:9;2086:19;;2076:35;:::o;2117:308::-;2179:4;2269:18;2261:6;2258:30;2255:2;;;2291:18;;:::i;:::-;2255:2;2329:29;2351:6;2329:29;:::i;:::-;2321:37;;2413:4;2407;2403:15;2395:23;;2184:241;;;:::o;2431:96::-;2468:7;2497:24;2515:5;2497:24;:::i;:::-;2486:35;;2476:51;;;:::o;2533:126::-;2570:7;2610:42;2603:5;2599:54;2588:65;;2578:81;;;:::o;2665:307::-;2733:1;2743:113;2757:6;2754:1;2751:13;2743:113;;;2842:1;2837:3;2833:11;2827:18;2823:1;2818:3;2814:11;2807:39;2779:2;2776:1;2772:10;2767:15;;2743:113;;;2874:6;2871:1;2868:13;2865:2;;;2954:1;2945:6;2940:3;2936:16;2929:27;2865:2;2714:258;;;;:::o;2978:320::-;3022:6;3059:1;3053:4;3049:12;3039:22;;3106:1;3100:4;3096:12;3127:18;3117:2;;3183:4;3175:6;3171:17;3161:27;;3117:2;3245;3237:6;3234:14;3214:18;3211:38;3208:2;;;3264:18;;:::i;:::-;3208:2;3029:269;;;;:::o;3304:281::-;3387:27;3409:4;3387:27;:::i;:::-;3379:6;3375:40;3517:6;3505:10;3502:22;3481:18;3469:10;3466:34;3463:62;3460:2;;;3528:18;;:::i;:::-;3460:2;3568:10;3564:2;3557:22;3347:238;;;:::o;3591:180::-;3639:77;3636:1;3629:88;3736:4;3733:1;3726:15;3760:4;3757:1;3750:15;3777:180;3825:77;3822:1;3815:88;3922:4;3919:1;3912:15;3946:4;3943:1;3936:15;3963:102;4004:6;4055:2;4051:7;4046:2;4039:5;4035:14;4031:28;4021:38;;4011:54;;;:::o;4071:122::-;4144:24;4162:5;4144:24;:::i;:::-;4137:5;4134:35;4124:2;;4183:1;4180;4173:12;4124:2;4114:79;:::o;111:2038:11:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15253:21","statements":[{"body":{"nodeType":"YulBlock","src":"126:553:21","statements":[{"nodeType":"YulAssignment","src":"136:90:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:21"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:21"},"nodeType":"YulFunctionCall","src":"161:64:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:21"},"nodeType":"YulFunctionCall","src":"145:81:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:21","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:21","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:21"},"nodeType":"YulFunctionCall","src":"261:21:21"},"nodeType":"YulExpressionStatement","src":"261:21:21"},{"nodeType":"YulAssignment","src":"291:23:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:21"},"nodeType":"YulFunctionCall","src":"298:16:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:36:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"411:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"404:6:21"},"nodeType":"YulFunctionCall","src":"404:12:21"},"nodeType":"YulExpressionStatement","src":"404:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:21"},"nodeType":"YulFunctionCall","src":"356:27:21"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:21"},"nodeType":"YulFunctionCall","src":"353:36:21"},"nodeType":"YulIf","src":"350:2:21"},{"body":{"nodeType":"YulBlock","src":"495:178:21","statements":[{"nodeType":"YulVariableDeclaration","src":"510:21:21","value":{"name":"src","nodeType":"YulIdentifier","src":"528:3:21"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"514:10:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"552:3:21"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"578:10:21"},{"name":"end","nodeType":"YulIdentifier","src":"590:3:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"557:20:21"},"nodeType":"YulFunctionCall","src":"557:37:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"545:6:21"},"nodeType":"YulFunctionCall","src":"545:50:21"},"nodeType":"YulExpressionStatement","src":"545:50:21"},{"nodeType":"YulAssignment","src":"608:21:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"624:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"615:3:21"},"nodeType":"YulFunctionCall","src":"615:14:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"608:3:21"}]},{"nodeType":"YulAssignment","src":"642:21:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"653:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"658:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"649:3:21"},"nodeType":"YulFunctionCall","src":"649:14:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"642:3:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"457:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"460:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"454:2:21"},"nodeType":"YulFunctionCall","src":"454:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"468:18:21","statements":[{"nodeType":"YulAssignment","src":"470:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"479:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"482:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"475:3:21"},"nodeType":"YulFunctionCall","src":"475:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"470:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"439:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"441:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"450:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"445:1:21","type":""}]}]},"src":"435:238:21"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:21","type":""}],"src":"24:655:21"},{"body":{"nodeType":"YulBlock","src":"769:261:21","statements":[{"nodeType":"YulAssignment","src":"779:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"846:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"804:41:21"},"nodeType":"YulFunctionCall","src":"804:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"788:15:21"},"nodeType":"YulFunctionCall","src":"788:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"779:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"870:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"877:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"863:6:21"},"nodeType":"YulFunctionCall","src":"863:21:21"},"nodeType":"YulExpressionStatement","src":"863:21:21"},{"nodeType":"YulVariableDeclaration","src":"893:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"908:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"915:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"904:3:21"},"nodeType":"YulFunctionCall","src":"904:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"897:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"958:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"967:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"970:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"960:6:21"},"nodeType":"YulFunctionCall","src":"960:12:21"},"nodeType":"YulExpressionStatement","src":"960:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"939:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"935:3:21"},"nodeType":"YulFunctionCall","src":"935:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"953:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"932:2:21"},"nodeType":"YulFunctionCall","src":"932:25:21"},"nodeType":"YulIf","src":"929:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1007:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"1012:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1017:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"983:23:21"},"nodeType":"YulFunctionCall","src":"983:41:21"},"nodeType":"YulExpressionStatement","src":"983:41:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"742:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"747:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"755:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"763:5:21","type":""}],"src":"685:345:21"},{"body":{"nodeType":"YulBlock","src":"1088:87:21","statements":[{"nodeType":"YulAssignment","src":"1098:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1120:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1107:12:21"},"nodeType":"YulFunctionCall","src":"1107:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1098:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1163:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1136:26:21"},"nodeType":"YulFunctionCall","src":"1136:33:21"},"nodeType":"YulExpressionStatement","src":"1136:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1066:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1074:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1082:5:21","type":""}],"src":"1036:139:21"},{"body":{"nodeType":"YulBlock","src":"1275:226:21","statements":[{"body":{"nodeType":"YulBlock","src":"1324:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1333:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1336:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1326:6:21"},"nodeType":"YulFunctionCall","src":"1326:12:21"},"nodeType":"YulExpressionStatement","src":"1326:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1303:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1311:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:21"},"nodeType":"YulFunctionCall","src":"1299:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1318:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1295:3:21"},"nodeType":"YulFunctionCall","src":"1295:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1288:6:21"},"nodeType":"YulFunctionCall","src":"1288:35:21"},"nodeType":"YulIf","src":"1285:2:21"},{"nodeType":"YulVariableDeclaration","src":"1349:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1376:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1363:12:21"},"nodeType":"YulFunctionCall","src":"1363:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1353:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1392:103:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1468:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1464:3:21"},"nodeType":"YulFunctionCall","src":"1464:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1483:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1491:3:21"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1401:62:21"},"nodeType":"YulFunctionCall","src":"1401:94:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1392:5:21"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1253:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1261:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1269:5:21","type":""}],"src":"1198:303:21"},{"body":{"nodeType":"YulBlock","src":"1583:211:21","statements":[{"body":{"nodeType":"YulBlock","src":"1632:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1641:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1644:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1634:6:21"},"nodeType":"YulFunctionCall","src":"1634:12:21"},"nodeType":"YulExpressionStatement","src":"1634:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1611:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1619:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:21"},"nodeType":"YulFunctionCall","src":"1607:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1626:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1603:3:21"},"nodeType":"YulFunctionCall","src":"1603:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1596:6:21"},"nodeType":"YulFunctionCall","src":"1596:35:21"},"nodeType":"YulIf","src":"1593:2:21"},{"nodeType":"YulVariableDeclaration","src":"1657:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1684:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1671:12:21"},"nodeType":"YulFunctionCall","src":"1671:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1661:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1700:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1761:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1769:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1757:3:21"},"nodeType":"YulFunctionCall","src":"1757:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1776:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1784:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1709:47:21"},"nodeType":"YulFunctionCall","src":"1709:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1700:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1561:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1569:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1577:5:21","type":""}],"src":"1521:273:21"},{"body":{"nodeType":"YulBlock","src":"1866:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"1912:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1921:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1924:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1914:6:21"},"nodeType":"YulFunctionCall","src":"1914:12:21"},"nodeType":"YulExpressionStatement","src":"1914:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1896:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1883:3:21"},"nodeType":"YulFunctionCall","src":"1883:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1908:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1879:3:21"},"nodeType":"YulFunctionCall","src":"1879:32:21"},"nodeType":"YulIf","src":"1876:2:21"},{"nodeType":"YulBlock","src":"1938:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1953:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1967:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1957:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1982:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2028:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2013:3:21"},"nodeType":"YulFunctionCall","src":"2013:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2037:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1992:20:21"},"nodeType":"YulFunctionCall","src":"1992:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1982:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1836:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1847:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1859:6:21","type":""}],"src":"1800:262:21"},{"body":{"nodeType":"YulBlock","src":"2159:314:21","statements":[{"body":{"nodeType":"YulBlock","src":"2205:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2214:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2217:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2207:6:21"},"nodeType":"YulFunctionCall","src":"2207:12:21"},"nodeType":"YulExpressionStatement","src":"2207:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2180:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2189:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2176:3:21"},"nodeType":"YulFunctionCall","src":"2176:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2201:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2172:3:21"},"nodeType":"YulFunctionCall","src":"2172:32:21"},"nodeType":"YulIf","src":"2169:2:21"},{"nodeType":"YulBlock","src":"2231:235:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2246:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2277:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2288:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2273:3:21"},"nodeType":"YulFunctionCall","src":"2273:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2260:12:21"},"nodeType":"YulFunctionCall","src":"2260:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2250:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2338:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2347:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2350:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2340:6:21"},"nodeType":"YulFunctionCall","src":"2340:12:21"},"nodeType":"YulExpressionStatement","src":"2340:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2310:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2318:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2307:2:21"},"nodeType":"YulFunctionCall","src":"2307:30:21"},"nodeType":"YulIf","src":"2304:2:21"},{"nodeType":"YulAssignment","src":"2368:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2428:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2439:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2424:3:21"},"nodeType":"YulFunctionCall","src":"2424:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2448:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2378:45:21"},"nodeType":"YulFunctionCall","src":"2378:78:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2368:6:21"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2129:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2140:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2152:6:21","type":""}],"src":"2068:405:21"},{"body":{"nodeType":"YulBlock","src":"2555:299:21","statements":[{"body":{"nodeType":"YulBlock","src":"2601:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2610:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2613:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2603:6:21"},"nodeType":"YulFunctionCall","src":"2603:12:21"},"nodeType":"YulExpressionStatement","src":"2603:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2576:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2585:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2572:3:21"},"nodeType":"YulFunctionCall","src":"2572:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2597:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2568:3:21"},"nodeType":"YulFunctionCall","src":"2568:32:21"},"nodeType":"YulIf","src":"2565:2:21"},{"nodeType":"YulBlock","src":"2627:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:21"},"nodeType":"YulFunctionCall","src":"2669:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2656:12:21"},"nodeType":"YulFunctionCall","src":"2656:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2646:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2734:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2743:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2746:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2736:6:21"},"nodeType":"YulFunctionCall","src":"2736:12:21"},"nodeType":"YulExpressionStatement","src":"2736:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2706:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2714:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2703:2:21"},"nodeType":"YulFunctionCall","src":"2703:30:21"},"nodeType":"YulIf","src":"2700:2:21"},{"nodeType":"YulAssignment","src":"2764:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2809:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2820:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2805:3:21"},"nodeType":"YulFunctionCall","src":"2805:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2829:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2774:30:21"},"nodeType":"YulFunctionCall","src":"2774:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2764:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2525:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2536:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2548:6:21","type":""}],"src":"2479:375:21"},{"body":{"nodeType":"YulBlock","src":"2940:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2984:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2992:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2950:33:21"},"nodeType":"YulFunctionCall","src":"2950:46:21"},"nodeType":"YulExpressionStatement","src":"2950:46:21"},{"nodeType":"YulAssignment","src":"3005:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3023:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3028:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:21"},"nodeType":"YulFunctionCall","src":"3019:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3005:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2913:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2921:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2929:10:21","type":""}],"src":"2860:179:21"},{"body":{"nodeType":"YulBlock","src":"3100:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3117:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3140:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3122:17:21"},"nodeType":"YulFunctionCall","src":"3122:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:21"},"nodeType":"YulFunctionCall","src":"3110:37:21"},"nodeType":"YulExpressionStatement","src":"3110:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3088:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3095:3:21","type":""}],"src":"3045:108:21"},{"body":{"nodeType":"YulBlock","src":"3224:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3241:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3246:17:21"},"nodeType":"YulFunctionCall","src":"3246:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3234:6:21"},"nodeType":"YulFunctionCall","src":"3234:37:21"},"nodeType":"YulExpressionStatement","src":"3234:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3212:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3219:3:21","type":""}],"src":"3159:118:21"},{"body":{"nodeType":"YulBlock","src":"3437:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3447:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3509:5:21"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3461:47:21"},"nodeType":"YulFunctionCall","src":"3461:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3451:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3524:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3605:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3610:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3531:73:21"},"nodeType":"YulFunctionCall","src":"3531:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3524:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"3626:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3691:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3641:49:21"},"nodeType":"YulFunctionCall","src":"3641:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3630:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3706:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3720:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3710:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3796:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3810:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3837:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3831:5:21"},"nodeType":"YulFunctionCall","src":"3831:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3814:13:21","type":""}]},{"nodeType":"YulAssignment","src":"3857:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3908:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3923:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"3864:43:21"},"nodeType":"YulFunctionCall","src":"3864:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3857:3:21"}]},{"nodeType":"YulAssignment","src":"3940:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4003:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3950:52:21"},"nodeType":"YulFunctionCall","src":"3950:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3940:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3758:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"3761:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3755:2:21"},"nodeType":"YulFunctionCall","src":"3755:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3769:18:21","statements":[{"nodeType":"YulAssignment","src":"3771:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3780:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"3783:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:21"},"nodeType":"YulFunctionCall","src":"3776:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3771:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3740:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3742:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3751:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3746:1:21","type":""}]}]},"src":"3736:284:21"},{"nodeType":"YulAssignment","src":"4029:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"4036:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4029:3:21"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3416:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3423:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3432:3:21","type":""}],"src":"3313:732:21"},{"body":{"nodeType":"YulBlock","src":"4110:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4127:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4147:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4132:14:21"},"nodeType":"YulFunctionCall","src":"4132:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4120:6:21"},"nodeType":"YulFunctionCall","src":"4120:34:21"},"nodeType":"YulExpressionStatement","src":"4120:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4098:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4105:3:21","type":""}],"src":"4051:109:21"},{"body":{"nodeType":"YulBlock","src":"4258:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4268:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4315:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4282:32:21"},"nodeType":"YulFunctionCall","src":"4282:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4272:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4330:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4396:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4401:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4337:58:21"},"nodeType":"YulFunctionCall","src":"4337:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4330:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4443:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4450:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:21"},"nodeType":"YulFunctionCall","src":"4439:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"4457:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4462:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4417:21:21"},"nodeType":"YulFunctionCall","src":"4417:52:21"},"nodeType":"YulExpressionStatement","src":"4417:52:21"},{"nodeType":"YulAssignment","src":"4478:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4489:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4516:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4494:21:21"},"nodeType":"YulFunctionCall","src":"4494:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4485:3:21"},"nodeType":"YulFunctionCall","src":"4485:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4478:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4239:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4246:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4254:3:21","type":""}],"src":"4166:364:21"},{"body":{"nodeType":"YulBlock","src":"4682:220:21","statements":[{"nodeType":"YulAssignment","src":"4692:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4758:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4699:58:21"},"nodeType":"YulFunctionCall","src":"4699:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4692:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4864:3:21"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4775:88:21"},"nodeType":"YulFunctionCall","src":"4775:93:21"},"nodeType":"YulExpressionStatement","src":"4775:93:21"},{"nodeType":"YulAssignment","src":"4877:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4888:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:21"},"nodeType":"YulFunctionCall","src":"4884:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4877:3:21"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4670:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4678:3:21","type":""}],"src":"4536:366:21"},{"body":{"nodeType":"YulBlock","src":"5054:220:21","statements":[{"nodeType":"YulAssignment","src":"5064:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5130:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:21","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5071:58:21"},"nodeType":"YulFunctionCall","src":"5071:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5064:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5236:3:21"}],"functionName":{"name":"store_literal_in_memory_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a","nodeType":"YulIdentifier","src":"5147:88:21"},"nodeType":"YulFunctionCall","src":"5147:93:21"},"nodeType":"YulExpressionStatement","src":"5147:93:21"},{"nodeType":"YulAssignment","src":"5249:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5260:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5256:3:21"},"nodeType":"YulFunctionCall","src":"5256:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5249:3:21"}]}]},"name":"abi_encode_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5042:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5050:3:21","type":""}],"src":"4908:366:21"},{"body":{"nodeType":"YulBlock","src":"5426:220:21","statements":[{"nodeType":"YulAssignment","src":"5436:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5502:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5443:58:21"},"nodeType":"YulFunctionCall","src":"5443:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5436:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5608:3:21"}],"functionName":{"name":"store_literal_in_memory_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0","nodeType":"YulIdentifier","src":"5519:88:21"},"nodeType":"YulFunctionCall","src":"5519:93:21"},"nodeType":"YulExpressionStatement","src":"5519:93:21"},{"nodeType":"YulAssignment","src":"5621:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5632:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5637:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5628:3:21"},"nodeType":"YulFunctionCall","src":"5628:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5621:3:21"}]}]},"name":"abi_encode_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5414:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5422:3:21","type":""}],"src":"5280:366:21"},{"body":{"nodeType":"YulBlock","src":"5798:220:21","statements":[{"nodeType":"YulAssignment","src":"5808:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5874:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5879:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5815:58:21"},"nodeType":"YulFunctionCall","src":"5815:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5808:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:21"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"5891:88:21"},"nodeType":"YulFunctionCall","src":"5891:93:21"},"nodeType":"YulExpressionStatement","src":"5891:93:21"},{"nodeType":"YulAssignment","src":"5993:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6004:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6009:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6000:3:21"},"nodeType":"YulFunctionCall","src":"6000:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5993:3:21"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5786:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5794:3:21","type":""}],"src":"5652:366:21"},{"body":{"nodeType":"YulBlock","src":"6170:220:21","statements":[{"nodeType":"YulAssignment","src":"6180:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6246:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6251:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6187:58:21"},"nodeType":"YulFunctionCall","src":"6187:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6180:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6352:3:21"}],"functionName":{"name":"store_literal_in_memory_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9","nodeType":"YulIdentifier","src":"6263:88:21"},"nodeType":"YulFunctionCall","src":"6263:93:21"},"nodeType":"YulExpressionStatement","src":"6263:93:21"},{"nodeType":"YulAssignment","src":"6365:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6376:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:21"},"nodeType":"YulFunctionCall","src":"6372:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6365:3:21"}]}]},"name":"abi_encode_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6158:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6166:3:21","type":""}],"src":"6024:366:21"},{"body":{"nodeType":"YulBlock","src":"6494:124:21","statements":[{"nodeType":"YulAssignment","src":"6504:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6516:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6527:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:21"},"nodeType":"YulFunctionCall","src":"6512:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6504:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6584:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6597:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6608:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6593:3:21"},"nodeType":"YulFunctionCall","src":"6593:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6540:43:21"},"nodeType":"YulFunctionCall","src":"6540:71:21"},"nodeType":"YulExpressionStatement","src":"6540:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6466:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6478:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6489:4:21","type":""}],"src":"6396:222:21"},{"body":{"nodeType":"YulBlock","src":"6772:225:21","statements":[{"nodeType":"YulAssignment","src":"6782:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6794:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6805:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6790:3:21"},"nodeType":"YulFunctionCall","src":"6790:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6782:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6840:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:21"},"nodeType":"YulFunctionCall","src":"6825:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6848:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6844:3:21"},"nodeType":"YulFunctionCall","src":"6844:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6818:6:21"},"nodeType":"YulFunctionCall","src":"6818:47:21"},"nodeType":"YulExpressionStatement","src":"6818:47:21"},{"nodeType":"YulAssignment","src":"6874:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6976:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"6985:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6882:93:21"},"nodeType":"YulFunctionCall","src":"6882:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6874:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6744:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6756:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6767:4:21","type":""}],"src":"6624:373:21"},{"body":{"nodeType":"YulBlock","src":"7095:118:21","statements":[{"nodeType":"YulAssignment","src":"7105:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7117:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7128:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:21"},"nodeType":"YulFunctionCall","src":"7113:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7105:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7179:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7203:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7188:3:21"},"nodeType":"YulFunctionCall","src":"7188:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"7141:37:21"},"nodeType":"YulFunctionCall","src":"7141:65:21"},"nodeType":"YulExpressionStatement","src":"7141:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7067:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7090:4:21","type":""}],"src":"7003:210:21"},{"body":{"nodeType":"YulBlock","src":"7337:195:21","statements":[{"nodeType":"YulAssignment","src":"7347:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7359:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7370:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7355:3:21"},"nodeType":"YulFunctionCall","src":"7355:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7347:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7394:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7405:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7390:3:21"},"nodeType":"YulFunctionCall","src":"7390:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7413:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7409:3:21"},"nodeType":"YulFunctionCall","src":"7409:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7383:6:21"},"nodeType":"YulFunctionCall","src":"7383:47:21"},"nodeType":"YulExpressionStatement","src":"7383:47:21"},{"nodeType":"YulAssignment","src":"7439:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7511:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"7520:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7447:63:21"},"nodeType":"YulFunctionCall","src":"7447:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7439:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7309:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7321:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7332:4:21","type":""}],"src":"7219:313:21"},{"body":{"nodeType":"YulBlock","src":"7709:248:21","statements":[{"nodeType":"YulAssignment","src":"7719:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7742:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7727:3:21"},"nodeType":"YulFunctionCall","src":"7727:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7719:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7766:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7777:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:21"},"nodeType":"YulFunctionCall","src":"7762:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7785:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7791:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7781:3:21"},"nodeType":"YulFunctionCall","src":"7781:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7755:6:21"},"nodeType":"YulFunctionCall","src":"7755:47:21"},"nodeType":"YulExpressionStatement","src":"7755:47:21"},{"nodeType":"YulAssignment","src":"7811:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7945:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7819:124:21"},"nodeType":"YulFunctionCall","src":"7819:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7811:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7689:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7704:4:21","type":""}],"src":"7538:419:21"},{"body":{"nodeType":"YulBlock","src":"8134:248:21","statements":[{"nodeType":"YulAssignment","src":"8144:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8156:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8167:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:21"},"nodeType":"YulFunctionCall","src":"8152:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8144:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8191:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8202:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8187:3:21"},"nodeType":"YulFunctionCall","src":"8187:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8210:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8216:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8206:3:21"},"nodeType":"YulFunctionCall","src":"8206:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8180:6:21"},"nodeType":"YulFunctionCall","src":"8180:47:21"},"nodeType":"YulExpressionStatement","src":"8180:47:21"},{"nodeType":"YulAssignment","src":"8236:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8370:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8244:124:21"},"nodeType":"YulFunctionCall","src":"8244:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8236:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8114:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8129:4:21","type":""}],"src":"7963:419:21"},{"body":{"nodeType":"YulBlock","src":"8559:248:21","statements":[{"nodeType":"YulAssignment","src":"8569:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8592:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:21"},"nodeType":"YulFunctionCall","src":"8577:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8569:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8627:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8612:3:21"},"nodeType":"YulFunctionCall","src":"8612:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8635:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8631:3:21"},"nodeType":"YulFunctionCall","src":"8631:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8605:6:21"},"nodeType":"YulFunctionCall","src":"8605:47:21"},"nodeType":"YulExpressionStatement","src":"8605:47:21"},{"nodeType":"YulAssignment","src":"8661:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8795:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8669:124:21"},"nodeType":"YulFunctionCall","src":"8669:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8661:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8539:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8554:4:21","type":""}],"src":"8388:419:21"},{"body":{"nodeType":"YulBlock","src":"8984:248:21","statements":[{"nodeType":"YulAssignment","src":"8994:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9006:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9017:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9002:3:21"},"nodeType":"YulFunctionCall","src":"9002:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8994:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9041:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9052:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9037:3:21"},"nodeType":"YulFunctionCall","src":"9037:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9060:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9066:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9056:3:21"},"nodeType":"YulFunctionCall","src":"9056:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9030:6:21"},"nodeType":"YulFunctionCall","src":"9030:47:21"},"nodeType":"YulExpressionStatement","src":"9030:47:21"},{"nodeType":"YulAssignment","src":"9086:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9220:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9094:124:21"},"nodeType":"YulFunctionCall","src":"9094:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9086:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8964:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8979:4:21","type":""}],"src":"8813:419:21"},{"body":{"nodeType":"YulBlock","src":"9409:248:21","statements":[{"nodeType":"YulAssignment","src":"9419:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9431:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9442:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9427:3:21"},"nodeType":"YulFunctionCall","src":"9427:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9419:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9466:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9477:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:21"},"nodeType":"YulFunctionCall","src":"9462:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9485:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9491:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9481:3:21"},"nodeType":"YulFunctionCall","src":"9481:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9455:6:21"},"nodeType":"YulFunctionCall","src":"9455:47:21"},"nodeType":"YulExpressionStatement","src":"9455:47:21"},{"nodeType":"YulAssignment","src":"9511:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9645:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9519:124:21"},"nodeType":"YulFunctionCall","src":"9519:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9511:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9389:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9404:4:21","type":""}],"src":"9238:419:21"},{"body":{"nodeType":"YulBlock","src":"9704:88:21","statements":[{"nodeType":"YulAssignment","src":"9714:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"9724:18:21"},"nodeType":"YulFunctionCall","src":"9724:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9714:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9773:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"9781:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"9753:19:21"},"nodeType":"YulFunctionCall","src":"9753:33:21"},"nodeType":"YulExpressionStatement","src":"9753:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"9688:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9697:6:21","type":""}],"src":"9663:129:21"},{"body":{"nodeType":"YulBlock","src":"9838:35:21","statements":[{"nodeType":"YulAssignment","src":"9848:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9864:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9858:5:21"},"nodeType":"YulFunctionCall","src":"9858:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9848:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9831:6:21","type":""}],"src":"9798:75:21"},{"body":{"nodeType":"YulBlock","src":"9961:229:21","statements":[{"body":{"nodeType":"YulBlock","src":"10066:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10068:16:21"},"nodeType":"YulFunctionCall","src":"10068:18:21"},"nodeType":"YulExpressionStatement","src":"10068:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10038:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10046:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10035:2:21"},"nodeType":"YulFunctionCall","src":"10035:30:21"},"nodeType":"YulIf","src":"10032:2:21"},{"nodeType":"YulAssignment","src":"10098:25:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10110:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10118:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10106:3:21"},"nodeType":"YulFunctionCall","src":"10106:17:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10098:4:21"}]},{"nodeType":"YulAssignment","src":"10160:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10172:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10178:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10168:3:21"},"nodeType":"YulFunctionCall","src":"10168:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10160:4:21"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9945:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9956:4:21","type":""}],"src":"9879:311:21"},{"body":{"nodeType":"YulBlock","src":"10263:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"10368:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10370:16:21"},"nodeType":"YulFunctionCall","src":"10370:18:21"},"nodeType":"YulExpressionStatement","src":"10370:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10340:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10348:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10337:2:21"},"nodeType":"YulFunctionCall","src":"10337:30:21"},"nodeType":"YulIf","src":"10334:2:21"},{"nodeType":"YulAssignment","src":"10400:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10430:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10408:21:21"},"nodeType":"YulFunctionCall","src":"10408:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10400:4:21"}]},{"nodeType":"YulAssignment","src":"10474:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10486:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"10492:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10482:3:21"},"nodeType":"YulFunctionCall","src":"10482:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10474:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10247:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10258:4:21","type":""}],"src":"10196:308:21"},{"body":{"nodeType":"YulBlock","src":"10582:60:21","statements":[{"nodeType":"YulAssignment","src":"10592:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10600:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10592:4:21"}]},{"nodeType":"YulAssignment","src":"10613:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10625:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10630:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:21"},"nodeType":"YulFunctionCall","src":"10621:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10613:4:21"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10569:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10577:4:21","type":""}],"src":"10510:132:21"},{"body":{"nodeType":"YulBlock","src":"10722:40:21","statements":[{"nodeType":"YulAssignment","src":"10733:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10749:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10743:5:21"},"nodeType":"YulFunctionCall","src":"10743:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10733:6:21"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10705:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10715:6:21","type":""}],"src":"10648:114:21"},{"body":{"nodeType":"YulBlock","src":"10827:40:21","statements":[{"nodeType":"YulAssignment","src":"10838:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10854:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10848:5:21"},"nodeType":"YulFunctionCall","src":"10848:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10838:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10810:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10820:6:21","type":""}],"src":"10768:99:21"},{"body":{"nodeType":"YulBlock","src":"10948:38:21","statements":[{"nodeType":"YulAssignment","src":"10958:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10970:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10975:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10966:3:21"},"nodeType":"YulFunctionCall","src":"10966:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10958:4:21"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10935:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10943:4:21","type":""}],"src":"10873:113:21"},{"body":{"nodeType":"YulBlock","src":"11103:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11120:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11125:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11113:6:21"},"nodeType":"YulFunctionCall","src":"11113:19:21"},"nodeType":"YulExpressionStatement","src":"11113:19:21"},{"nodeType":"YulAssignment","src":"11141:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11160:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11165:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11156:3:21"},"nodeType":"YulFunctionCall","src":"11156:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11141:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11075:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"11080:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11091:11:21","type":""}],"src":"10992:184:21"},{"body":{"nodeType":"YulBlock","src":"11278:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11295:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11300:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11288:6:21"},"nodeType":"YulFunctionCall","src":"11288:19:21"},"nodeType":"YulExpressionStatement","src":"11288:19:21"},{"nodeType":"YulAssignment","src":"11316:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11335:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11340:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11331:3:21"},"nodeType":"YulFunctionCall","src":"11331:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11316:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11250:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"11255:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11266:11:21","type":""}],"src":"11182:169:21"},{"body":{"nodeType":"YulBlock","src":"11401:261:21","statements":[{"nodeType":"YulAssignment","src":"11411:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11434:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11416:17:21"},"nodeType":"YulFunctionCall","src":"11416:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11411:1:21"}]},{"nodeType":"YulAssignment","src":"11445:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11468:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11450:17:21"},"nodeType":"YulFunctionCall","src":"11450:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11445:1:21"}]},{"body":{"nodeType":"YulBlock","src":"11608:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11610:16:21"},"nodeType":"YulFunctionCall","src":"11610:18:21"},"nodeType":"YulExpressionStatement","src":"11610:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11529:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11536:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"11604:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11532:3:21"},"nodeType":"YulFunctionCall","src":"11532:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11526:2:21"},"nodeType":"YulFunctionCall","src":"11526:81:21"},"nodeType":"YulIf","src":"11523:2:21"},{"nodeType":"YulAssignment","src":"11640:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11651:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11654:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:21"},"nodeType":"YulFunctionCall","src":"11647:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11640:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11388:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11391:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11397:3:21","type":""}],"src":"11357:305:21"},{"body":{"nodeType":"YulBlock","src":"11713:51:21","statements":[{"nodeType":"YulAssignment","src":"11723:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11752:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11734:17:21"},"nodeType":"YulFunctionCall","src":"11734:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11723:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11695:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11705:7:21","type":""}],"src":"11668:96:21"},{"body":{"nodeType":"YulBlock","src":"11812:48:21","statements":[{"nodeType":"YulAssignment","src":"11822:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11847:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11840:6:21"},"nodeType":"YulFunctionCall","src":"11840:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11833:6:21"},"nodeType":"YulFunctionCall","src":"11833:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11822:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11794:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11804:7:21","type":""}],"src":"11770:90:21"},{"body":{"nodeType":"YulBlock","src":"11911:81:21","statements":[{"nodeType":"YulAssignment","src":"11921:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11936:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11943:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11932:3:21"},"nodeType":"YulFunctionCall","src":"11932:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11921:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11893:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11903:7:21","type":""}],"src":"11866:126:21"},{"body":{"nodeType":"YulBlock","src":"12043:32:21","statements":[{"nodeType":"YulAssignment","src":"12053:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"12064:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12053:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12025:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12035:7:21","type":""}],"src":"11998:77:21"},{"body":{"nodeType":"YulBlock","src":"12132:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12155:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"12160:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"12165:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12142:12:21"},"nodeType":"YulFunctionCall","src":"12142:30:21"},"nodeType":"YulExpressionStatement","src":"12142:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12213:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"12218:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12209:3:21"},"nodeType":"YulFunctionCall","src":"12209:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"12227:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12202:6:21"},"nodeType":"YulFunctionCall","src":"12202:27:21"},"nodeType":"YulExpressionStatement","src":"12202:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12114:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12119:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"12124:6:21","type":""}],"src":"12081:154:21"},{"body":{"nodeType":"YulBlock","src":"12290:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12300:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12309:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12304:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12369:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12394:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"12399:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12390:3:21"},"nodeType":"YulFunctionCall","src":"12390:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12413:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"12418:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12409:3:21"},"nodeType":"YulFunctionCall","src":"12409:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12403:5:21"},"nodeType":"YulFunctionCall","src":"12403:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12383:6:21"},"nodeType":"YulFunctionCall","src":"12383:39:21"},"nodeType":"YulExpressionStatement","src":"12383:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12330:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"12333:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12327:2:21"},"nodeType":"YulFunctionCall","src":"12327:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12341:19:21","statements":[{"nodeType":"YulAssignment","src":"12343:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12352:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"12355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12348:3:21"},"nodeType":"YulFunctionCall","src":"12348:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12343:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"12323:3:21","statements":[]},"src":"12319:113:21"},{"body":{"nodeType":"YulBlock","src":"12466:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12516:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"12521:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12512:3:21"},"nodeType":"YulFunctionCall","src":"12512:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"12530:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12505:6:21"},"nodeType":"YulFunctionCall","src":"12505:27:21"},"nodeType":"YulExpressionStatement","src":"12505:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12447:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"12450:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12444:2:21"},"nodeType":"YulFunctionCall","src":"12444:13:21"},"nodeType":"YulIf","src":"12441:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12272:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12277:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"12282:6:21","type":""}],"src":"12241:307:21"},{"body":{"nodeType":"YulBlock","src":"12605:269:21","statements":[{"nodeType":"YulAssignment","src":"12615:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12629:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"12635:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12625:3:21"},"nodeType":"YulFunctionCall","src":"12625:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12615:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"12646:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12676:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"12682:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12672:3:21"},"nodeType":"YulFunctionCall","src":"12672:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12650:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12723:51:21","statements":[{"nodeType":"YulAssignment","src":"12737:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12751:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12759:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12747:3:21"},"nodeType":"YulFunctionCall","src":"12747:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12737:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12703:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12696:6:21"},"nodeType":"YulFunctionCall","src":"12696:26:21"},"nodeType":"YulIf","src":"12693:2:21"},{"body":{"nodeType":"YulBlock","src":"12826:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12840:16:21"},"nodeType":"YulFunctionCall","src":"12840:18:21"},"nodeType":"YulExpressionStatement","src":"12840:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12790:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12813:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12821:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12810:2:21"},"nodeType":"YulFunctionCall","src":"12810:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12787:2:21"},"nodeType":"YulFunctionCall","src":"12787:38:21"},"nodeType":"YulIf","src":"12784:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12589:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12598:6:21","type":""}],"src":"12554:320:21"},{"body":{"nodeType":"YulBlock","src":"12923:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12933:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12955:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12985:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12963:21:21"},"nodeType":"YulFunctionCall","src":"12963:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12951:3:21"},"nodeType":"YulFunctionCall","src":"12951:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"12937:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13102:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13104:16:21"},"nodeType":"YulFunctionCall","src":"13104:18:21"},"nodeType":"YulExpressionStatement","src":"13104:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13045:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"13057:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13042:2:21"},"nodeType":"YulFunctionCall","src":"13042:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13081:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13093:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13078:2:21"},"nodeType":"YulFunctionCall","src":"13078:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13039:2:21"},"nodeType":"YulFunctionCall","src":"13039:62:21"},"nodeType":"YulIf","src":"13036:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13140:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13144:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13133:6:21"},"nodeType":"YulFunctionCall","src":"13133:22:21"},"nodeType":"YulExpressionStatement","src":"13133:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12909:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"12917:4:21","type":""}],"src":"12880:281:21"},{"body":{"nodeType":"YulBlock","src":"13210:190:21","statements":[{"nodeType":"YulAssignment","src":"13220:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13247:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13229:17:21"},"nodeType":"YulFunctionCall","src":"13229:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13220:5:21"}]},{"body":{"nodeType":"YulBlock","src":"13343:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13345:16:21"},"nodeType":"YulFunctionCall","src":"13345:18:21"},"nodeType":"YulExpressionStatement","src":"13345:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13268:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13275:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13265:2:21"},"nodeType":"YulFunctionCall","src":"13265:77:21"},"nodeType":"YulIf","src":"13262:2:21"},{"nodeType":"YulAssignment","src":"13374:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13385:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13392:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13381:3:21"},"nodeType":"YulFunctionCall","src":"13381:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13374:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13196:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13206:3:21","type":""}],"src":"13167:233:21"},{"body":{"nodeType":"YulBlock","src":"13434:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13451:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13454:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13444:6:21"},"nodeType":"YulFunctionCall","src":"13444:88:21"},"nodeType":"YulExpressionStatement","src":"13444:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13548:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13551:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13541:6:21"},"nodeType":"YulFunctionCall","src":"13541:15:21"},"nodeType":"YulExpressionStatement","src":"13541:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13572:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13575:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13565:6:21"},"nodeType":"YulFunctionCall","src":"13565:15:21"},"nodeType":"YulExpressionStatement","src":"13565:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13406:180:21"},{"body":{"nodeType":"YulBlock","src":"13620:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13637:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13640:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13630:6:21"},"nodeType":"YulFunctionCall","src":"13630:88:21"},"nodeType":"YulExpressionStatement","src":"13630:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13734:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13737:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13727:6:21"},"nodeType":"YulFunctionCall","src":"13727:15:21"},"nodeType":"YulExpressionStatement","src":"13727:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13758:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13761:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13751:6:21"},"nodeType":"YulFunctionCall","src":"13751:15:21"},"nodeType":"YulExpressionStatement","src":"13751:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13592:180:21"},{"body":{"nodeType":"YulBlock","src":"13806:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13823:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13826:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13816:6:21"},"nodeType":"YulFunctionCall","src":"13816:88:21"},"nodeType":"YulExpressionStatement","src":"13816:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13920:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13923:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13913:6:21"},"nodeType":"YulFunctionCall","src":"13913:15:21"},"nodeType":"YulExpressionStatement","src":"13913:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13944:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13947:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13937:6:21"},"nodeType":"YulFunctionCall","src":"13937:15:21"},"nodeType":"YulExpressionStatement","src":"13937:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13778:180:21"},{"body":{"nodeType":"YulBlock","src":"14012:54:21","statements":[{"nodeType":"YulAssignment","src":"14022:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14040:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14047:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14036:3:21"},"nodeType":"YulFunctionCall","src":"14036:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14056:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14052:3:21"},"nodeType":"YulFunctionCall","src":"14052:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14032:3:21"},"nodeType":"YulFunctionCall","src":"14032:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14022:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13995:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"14005:6:21","type":""}],"src":"13964:102:21"},{"body":{"nodeType":"YulBlock","src":"14178:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14200:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14208:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14196:3:21"},"nodeType":"YulFunctionCall","src":"14196:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"14212:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14189:6:21"},"nodeType":"YulFunctionCall","src":"14189:58:21"},"nodeType":"YulExpressionStatement","src":"14189:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14268:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14276:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14264:3:21"},"nodeType":"YulFunctionCall","src":"14264:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"14281:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14257:6:21"},"nodeType":"YulFunctionCall","src":"14257:33:21"},"nodeType":"YulExpressionStatement","src":"14257:33:21"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14170:6:21","type":""}],"src":"14072:225:21"},{"body":{"nodeType":"YulBlock","src":"14409:70:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14431:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14439:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14427:3:21"},"nodeType":"YulFunctionCall","src":"14427:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"14443:28:21","type":"","value":"Only owner can add members"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14420:6:21"},"nodeType":"YulFunctionCall","src":"14420:52:21"},"nodeType":"YulExpressionStatement","src":"14420:52:21"}]},"name":"store_literal_in_memory_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14401:6:21","type":""}],"src":"14303:176:21"},{"body":{"nodeType":"YulBlock","src":"14591:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14613:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14621:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14609:3:21"},"nodeType":"YulFunctionCall","src":"14609:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"14625:34:21","type":"","value":"You are not member of this agree"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14602:6:21"},"nodeType":"YulFunctionCall","src":"14602:58:21"},"nodeType":"YulExpressionStatement","src":"14602:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14681:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14689:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14677:3:21"},"nodeType":"YulFunctionCall","src":"14677:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"14694:6:21","type":"","value":"ment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14670:6:21"},"nodeType":"YulFunctionCall","src":"14670:31:21"},"nodeType":"YulExpressionStatement","src":"14670:31:21"}]},"name":"store_literal_in_memory_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14583:6:21","type":""}],"src":"14485:223:21"},{"body":{"nodeType":"YulBlock","src":"14820:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14842:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14850:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14838:3:21"},"nodeType":"YulFunctionCall","src":"14838:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"14854:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14831:6:21"},"nodeType":"YulFunctionCall","src":"14831:58:21"},"nodeType":"YulExpressionStatement","src":"14831:58:21"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14812:6:21","type":""}],"src":"14714:182:21"},{"body":{"nodeType":"YulBlock","src":"15008:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15030:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15038:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15026:3:21"},"nodeType":"YulFunctionCall","src":"15026:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"15042:34:21","type":"","value":"You have already signed agreemen"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15019:6:21"},"nodeType":"YulFunctionCall","src":"15019:58:21"},"nodeType":"YulExpressionStatement","src":"15019:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15098:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15106:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15094:3:21"},"nodeType":"YulFunctionCall","src":"15094:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"15111:3:21","type":"","value":"t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15087:6:21"},"nodeType":"YulFunctionCall","src":"15087:28:21"},"nodeType":"YulExpressionStatement","src":"15087:28:21"}]},"name":"store_literal_in_memory_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15000:6:21","type":""}],"src":"14902:220:21"},{"body":{"nodeType":"YulBlock","src":"15171:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"15228:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15237:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15240:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15230:6:21"},"nodeType":"YulFunctionCall","src":"15230:12:21"},"nodeType":"YulExpressionStatement","src":"15230:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15194:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15219:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15201:17:21"},"nodeType":"YulFunctionCall","src":"15201:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15191:2:21"},"nodeType":"YulFunctionCall","src":"15191:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15184:6:21"},"nodeType":"YulFunctionCall","src":"15184:43:21"},"nodeType":"YulIf","src":"15181:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15164:5:21","type":""}],"src":"15128:122:21"}]},"contents":"{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5d11bdf7da4986108b2553831a75ea9a93e596b50a31ae810d05afc8bf8c6e5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can add members\")\n\n    }\n\n    function store_literal_in_memory_9138349e565b3a1d205b52360fb4c0c532524fe41275ae875a3969a552d547d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not member of this agree\")\n\n        mstore(add(memPtr, 32), \"ment\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d97614a3e4fc70b7f2bae5b0ac8447a4086b391d9abcf8c65ad4959a648772e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already signed agreemen\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639eab52531161008c578063ca00c70211610066578063ca00c702146101ee578063ce0fabd81461020c578063db8ddcc91461022a578063f2fde38b14610246576100cf565b80639eab525314610184578063aaf2e5d8146101a2578063b7e03bec146101d2576100cf565b80630555ff41146100d457806317d7de7c146101045780636f4d469b14610122578063715018a61461013e578063893d20e8146101485780638da5cb5b14610166575b600080fd5b6100ee60048036038101906100e99190610ccd565b610262565b6040516100fb9190610f40565b60405180910390f35b61010c610282565b6040516101199190610f5b565b60405180910390f35b61013c60048036038101906101379190610cf6565b610314565b005b610146610502565b005b610150610516565b60405161015d9190610f03565b60405180910390f35b61016e610540565b60405161017b9190610f03565b60405180910390f35b61018c610569565b6040516101999190610f1e565b60405180910390f35b6101bc60048036038101906101b79190610ccd565b6105f7565b6040516101c99190610f40565b60405180910390f35b6101ec60048036038101906101e79190610d37565b6106c8565b005b6101f66106e2565b6040516102039190610f5b565b60405180910390f35b610214610774565b6040516102219190610f5b565b60405180910390f35b610244600480360381019061023f9190610ccd565b6107fe565b005b610260600480360381019061025b9190610ccd565b610949565b005b60056020528060005260406000206000915054906101000a900460ff1681565b606060018054610291906111d4565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906111d4565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610f9d565b60405180910390fd5b60005b81518110156104fe576000600560008484815181106103ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006828281518110610483577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806104f690611237565b9150506103a7565b5050565b61050a6109cd565b6105146000610a4b565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060068054806020026020016040519081016040528092919081815260200182805480156105ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105a3575b5050505050905090565b6000806000905060005b6006805490508110156106be578373ffffffffffffffffffffffffffffffffffffffff166006828154811061065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ab57600191505b80806106b690611237565b915050610601565b5080915050919050565b80600290805190602001906106de929190610b17565b5050565b6060600280546106f1906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461071d906111d4565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b606060068054905060075414156107c2576040518060400160405280600681526020017f5369676e6564000000000000000000000000000000000000000000000000000081525090506107fb565b6040518060400160405280600881526020017f556e7369676e656400000000000000000000000000000000000000000000000081525090505b90565b6000610809826105f7565b90508061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290610fbd565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ffd565b60405180910390fd5b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160075461093f91906110f4565b6007819055505050565b6109516109cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890610f7d565b60405180910390fd5b6109ca81610a4b565b50565b6109d5610b0f565b73ffffffffffffffffffffffffffffffffffffffff166109f3610540565b73ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090610fdd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610b23906111d4565b90600052602060002090601f016020900481019282610b455760008555610b8c565b82601f10610b5e57805160ff1916838001178555610b8c565b82800160010185558215610b8c579182015b82811115610b8b578251825591602001919060010190610b70565b5b509050610b999190610b9d565b5090565b5b80821115610bb6576000816000905550600101610b9e565b5090565b6000610bcd610bc884611042565b61101d565b90508083825260208201905082856020860282011115610bec57600080fd5b60005b85811015610c1c5781610c028882610c64565b845260208401935060208301925050600181019050610bef565b5050509392505050565b6000610c39610c348461106e565b61101d565b905082815260208101848484011115610c5157600080fd5b610c5c848285611192565b509392505050565b600081359050610c738161145d565b92915050565b600082601f830112610c8a57600080fd5b8135610c9a848260208601610bba565b91505092915050565b600082601f830112610cb457600080fd5b8135610cc4848260208601610c26565b91505092915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c64565b91505092915050565b600060208284031215610d0857600080fd5b600082013567ffffffffffffffff811115610d2257600080fd5b610d2e84828501610c79565b91505092915050565b600060208284031215610d4957600080fd5b600082013567ffffffffffffffff811115610d6357600080fd5b610d6f84828501610ca3565b91505092915050565b6000610d848383610d90565b60208301905092915050565b610d998161114a565b82525050565b610da88161114a565b82525050565b6000610db9826110af565b610dc381856110d2565b9350610dce8361109f565b8060005b83811015610dff578151610de68882610d78565b9750610df1836110c5565b925050600181019050610dd2565b5085935050505092915050565b610e158161115c565b82525050565b6000610e26826110ba565b610e3081856110e3565b9350610e408185602086016111a1565b610e498161130d565b840191505092915050565b6000610e616026836110e3565b9150610e6c8261131e565b604082019050919050565b6000610e84601a836110e3565b9150610e8f8261136d565b602082019050919050565b6000610ea76024836110e3565b9150610eb282611396565b604082019050919050565b6000610eca6020836110e3565b9150610ed5826113e5565b602082019050919050565b6000610eed6021836110e3565b9150610ef88261140e565b604082019050919050565b6000602082019050610f186000830184610d9f565b92915050565b60006020820190508181036000830152610f388184610dae565b905092915050565b6000602082019050610f556000830184610e0c565b92915050565b60006020820190508181036000830152610f758184610e1b565b905092915050565b60006020820190508181036000830152610f9681610e54565b9050919050565b60006020820190508181036000830152610fb681610e77565b9050919050565b60006020820190508181036000830152610fd681610e9a565b9050919050565b60006020820190508181036000830152610ff681610ebd565b9050919050565b6000602082019050818103600083015261101681610ee0565b9050919050565b6000611027611038565b90506110338282611206565b919050565b6000604051905090565b600067ffffffffffffffff82111561105d5761105c6112de565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611089576110886112de565b5b6110928261130d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110ff82611188565b915061110a83611188565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113f5761113e611280565b5b828201905092915050565b600061115582611168565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111bf5780820151818401526020810190506111a4565b838111156111ce576000848401525b50505050565b600060028204905060018216806111ec57607f821691505b60208210811415611200576111ff6112af565b5b50919050565b61120f8261130d565b810181811067ffffffffffffffff8211171561122e5761122d6112de565b5b80604052505050565b600061124282611188565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561127557611274611280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e20616464206d656d62657273000000000000600082015250565b7f596f7520617265206e6f74206d656d626572206f66207468697320616772656560008201527f6d656e7400000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f75206861766520616c7265616479207369676e65642061677265656d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6114668161114a565b811461147157600080fd5b5056fea2646970667358221220a3f7da26c804186ee83a48cf5ab2da82db7732599b27ab18cbf6232747a9e4c464736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EAB5253 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCA00C702 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCA00C702 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xCE0FABD8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xDB8DDCC9 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xAAF2E5D8 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB7E03BEC EQ PUSH2 0x1D2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x555FF41 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6F4D469B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x4F6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5A3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x6B6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x601 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6DE SWAP3 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5369676E65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E7369676E6564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x809 DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xA4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0xB0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F3 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB45 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB5E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB8C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB8B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB9E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD PUSH2 0xBC8 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC1C JUMPI DUP2 PUSH2 0xC02 DUP9 DUP3 PUSH2 0xC64 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBEF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH2 0xC34 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 DUP6 PUSH2 0x1192 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCC4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED DUP5 DUP3 DUP6 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2E DUP5 DUP3 DUP6 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB9 DUP3 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xDC3 DUP2 DUP6 PUSH2 0x10D2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDCE DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFF JUMPI DUP2 MLOAD PUSH2 0xDE6 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDF1 DUP4 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDD2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x115C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xE30 DUP2 DUP6 PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP PUSH2 0xE40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0x130D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x26 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 PUSH1 0x1A DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8F DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 PUSH1 0x24 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB2 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH1 0x20 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xED5 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH1 0x21 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 DUP5 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB6 DUP2 PUSH2 0xE77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x1206 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1092 DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x110A DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1200 JUMPI PUSH2 0x11FF PUSH2 0x12AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120F DUP3 PUSH2 0x130D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x12DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x1280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20616464206D656D62657273000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206D656D626572206F662074686973206167726565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479207369676E65642061677265656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1466 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xF7 0xDA 0x26 0xC8 DIV XOR PUSH15 0xE83A48CF5AB2DA82DB7732599B27AB XOR 0xCB 0xF6 0x23 0x27 SELFBALANCE 0xA9 0xE4 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"111:2038:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1814:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;2066:81:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1716:92:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1990:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1903:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1501:209;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1173:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;228:38:11;;;;;;;;;;;;;;;;;;;;;;:::o;1814:83::-;1854:13;1886:4;1879:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:83;:::o;564:286::-;650:7;;;;;;;;;;;636:21;;:10;:21;;;628:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;703:9;698:146;722:8;:15;718:1;:19;698:146;;;789:5;758:6;:28;773:8;782:1;773:11;;;;;;;;;;;;;;;;;;;;;;758:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;808:7;821:8;830:1;821:11;;;;;;;;;;;;;;;;;;;;;;808:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:3;;;;;:::i;:::-;;;;698:146;;;;564:286;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2066:81:11:-;2107:7;2133;;;;;;;;;;;2126:14;;2066:81;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1716:92:11:-;1759:16;1794:7;1787:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:92;:::o;856:311::-;921:4;937:19;959:5;937:27;;979:9;974:156;998:7;:14;;;;994:1;:18;974:156;;;1051:13;1037:27;;:7;1045:1;1037:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1033:87;;;1101:4;1084:21;;1033:87;1014:3;;;;;:::i;:::-;;;;974:156;;;;1146:14;1139:21;;;856:311;;;:::o;1990:70::-;2049:4;2043:3;:10;;;;;;;;;;;;:::i;:::-;;1990:70;:::o;1903:81::-;1942:13;1974:3;1967:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1903:81;:::o;1501:209::-;1554:13;1600:7;:14;;;;1583:13;;:31;1579:125;;;1630:15;;;;;;;;;;;;;;;;;;;;;1579:125;1676:17;;;;;;;;;;;;;;;;;;;1501:209;;:::o;1173:322::-;1229:19;1251;1263:6;1251:11;:19::i;:::-;1229:41;;1288:14;1280:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1362:6;:14;1369:6;1362:14;;;;;;;;;;;;;;;;;;;;;;;;;1361:15;1353:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1441:4;1424:6;:14;1431:6;1424:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1487:1;1471:13;;:17;;;;:::i;:::-;1455:13;:33;;;;1173:322;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:655:21:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;414:1;411;404:12;350:2;450:1;435:238;460:6;457:1;454:13;435:238;;;528:3;557:37;590:3;578:10;557:37;:::i;:::-;552:3;545:50;624:4;619:3;615:14;608:21;;658:4;653:3;649:14;642:21;;495:178;482:1;479;475:9;470:14;;435:238;;;439:14;126:553;;;;;;;:::o;685:345::-;763:5;788:66;804:49;846:6;804:49;:::i;:::-;788:66;:::i;:::-;779:75;;877:6;870:5;863:21;915:4;908:5;904:16;953:3;944:6;939:3;935:16;932:25;929:2;;;970:1;967;960:12;929:2;983:41;1017:6;1012:3;1007;983:41;:::i;:::-;769:261;;;;;;:::o;1036:139::-;1082:5;1120:6;1107:20;1098:29;;1136:33;1163:5;1136:33;:::i;:::-;1088:87;;;;:::o;1198:303::-;1269:5;1318:3;1311:4;1303:6;1299:17;1295:27;1285:2;;1336:1;1333;1326:12;1285:2;1376:6;1363:20;1401:94;1491:3;1483:6;1476:4;1468:6;1464:17;1401:94;:::i;:::-;1392:103;;1275:226;;;;;:::o;1521:273::-;1577:5;1626:3;1619:4;1611:6;1607:17;1603:27;1593:2;;1644:1;1641;1634:12;1593:2;1684:6;1671:20;1709:79;1784:3;1776:6;1769:4;1761:6;1757:17;1709:79;:::i;:::-;1700:88;;1583:211;;;;;:::o;1800:262::-;1859:6;1908:2;1896:9;1887:7;1883:23;1879:32;1876:2;;;1924:1;1921;1914:12;1876:2;1967:1;1992:53;2037:7;2028:6;2017:9;2013:22;1992:53;:::i;:::-;1982:63;;1938:117;1866:196;;;;:::o;2068:405::-;2152:6;2201:2;2189:9;2180:7;2176:23;2172:32;2169:2;;;2217:1;2214;2207:12;2169:2;2288:1;2277:9;2273:17;2260:31;2318:18;2310:6;2307:30;2304:2;;;2350:1;2347;2340:12;2304:2;2378:78;2448:7;2439:6;2428:9;2424:22;2378:78;:::i;:::-;2368:88;;2231:235;2159:314;;;;:::o;2479:375::-;2548:6;2597:2;2585:9;2576:7;2572:23;2568:32;2565:2;;;2613:1;2610;2603:12;2565:2;2684:1;2673:9;2669:17;2656:31;2714:18;2706:6;2703:30;2700:2;;;2746:1;2743;2736:12;2700:2;2774:63;2829:7;2820:6;2809:9;2805:22;2774:63;:::i;:::-;2764:73;;2627:220;2555:299;;;;:::o;2860:179::-;2929:10;2950:46;2992:3;2984:6;2950:46;:::i;:::-;3028:4;3023:3;3019:14;3005:28;;2940:99;;;;:::o;3045:108::-;3122:24;3140:5;3122:24;:::i;:::-;3117:3;3110:37;3100:53;;:::o;3159:118::-;3246:24;3264:5;3246:24;:::i;:::-;3241:3;3234:37;3224:53;;:::o;3313:732::-;3432:3;3461:54;3509:5;3461:54;:::i;:::-;3531:86;3610:6;3605:3;3531:86;:::i;:::-;3524:93;;3641:56;3691:5;3641:56;:::i;:::-;3720:7;3751:1;3736:284;3761:6;3758:1;3755:13;3736:284;;;3837:6;3831:13;3864:63;3923:3;3908:13;3864:63;:::i;:::-;3857:70;;3950:60;4003:6;3950:60;:::i;:::-;3940:70;;3796:224;3783:1;3780;3776:9;3771:14;;3736:284;;;3740:14;4036:3;4029:10;;3437:608;;;;;;;:::o;4051:109::-;4132:21;4147:5;4132:21;:::i;:::-;4127:3;4120:34;4110:50;;:::o;4166:364::-;4254:3;4282:39;4315:5;4282:39;:::i;:::-;4337:71;4401:6;4396:3;4337:71;:::i;:::-;4330:78;;4417:52;4462:6;4457:3;4450:4;4443:5;4439:16;4417:52;:::i;:::-;4494:29;4516:6;4494:29;:::i;:::-;4489:3;4485:39;4478:46;;4258:272;;;;;:::o;4536:366::-;4678:3;4699:67;4763:2;4758:3;4699:67;:::i;:::-;4692:74;;4775:93;4864:3;4775:93;:::i;:::-;4893:2;4888:3;4884:12;4877:19;;4682:220;;;:::o;4908:366::-;5050:3;5071:67;5135:2;5130:3;5071:67;:::i;:::-;5064:74;;5147:93;5236:3;5147:93;:::i;:::-;5265:2;5260:3;5256:12;5249:19;;5054:220;;;:::o;5280:366::-;5422:3;5443:67;5507:2;5502:3;5443:67;:::i;:::-;5436:74;;5519:93;5608:3;5519:93;:::i;:::-;5637:2;5632:3;5628:12;5621:19;;5426:220;;;:::o;5652:366::-;5794:3;5815:67;5879:2;5874:3;5815:67;:::i;:::-;5808:74;;5891:93;5980:3;5891:93;:::i;:::-;6009:2;6004:3;6000:12;5993:19;;5798:220;;;:::o;6024:366::-;6166:3;6187:67;6251:2;6246:3;6187:67;:::i;:::-;6180:74;;6263:93;6352:3;6263:93;:::i;:::-;6381:2;6376:3;6372:12;6365:19;;6170:220;;;:::o;6396:222::-;6489:4;6527:2;6516:9;6512:18;6504:26;;6540:71;6608:1;6597:9;6593:17;6584:6;6540:71;:::i;:::-;6494:124;;;;:::o;6624:373::-;6767:4;6805:2;6794:9;6790:18;6782:26;;6854:9;6848:4;6844:20;6840:1;6829:9;6825:17;6818:47;6882:108;6985:4;6976:6;6882:108;:::i;:::-;6874:116;;6772:225;;;;:::o;7003:210::-;7090:4;7128:2;7117:9;7113:18;7105:26;;7141:65;7203:1;7192:9;7188:17;7179:6;7141:65;:::i;:::-;7095:118;;;;:::o;7219:313::-;7332:4;7370:2;7359:9;7355:18;7347:26;;7419:9;7413:4;7409:20;7405:1;7394:9;7390:17;7383:47;7447:78;7520:4;7511:6;7447:78;:::i;:::-;7439:86;;7337:195;;;;:::o;7538:419::-;7704:4;7742:2;7731:9;7727:18;7719:26;;7791:9;7785:4;7781:20;7777:1;7766:9;7762:17;7755:47;7819:131;7945:4;7819:131;:::i;:::-;7811:139;;7709:248;;;:::o;7963:419::-;8129:4;8167:2;8156:9;8152:18;8144:26;;8216:9;8210:4;8206:20;8202:1;8191:9;8187:17;8180:47;8244:131;8370:4;8244:131;:::i;:::-;8236:139;;8134:248;;;:::o;8388:419::-;8554:4;8592:2;8581:9;8577:18;8569:26;;8641:9;8635:4;8631:20;8627:1;8616:9;8612:17;8605:47;8669:131;8795:4;8669:131;:::i;:::-;8661:139;;8559:248;;;:::o;8813:419::-;8979:4;9017:2;9006:9;9002:18;8994:26;;9066:9;9060:4;9056:20;9052:1;9041:9;9037:17;9030:47;9094:131;9220:4;9094:131;:::i;:::-;9086:139;;8984:248;;;:::o;9238:419::-;9404:4;9442:2;9431:9;9427:18;9419:26;;9491:9;9485:4;9481:20;9477:1;9466:9;9462:17;9455:47;9519:131;9645:4;9519:131;:::i;:::-;9511:139;;9409:248;;;:::o;9663:129::-;9697:6;9724:20;;:::i;:::-;9714:30;;9753:33;9781:4;9773:6;9753:33;:::i;:::-;9704:88;;;:::o;9798:75::-;9831:6;9864:2;9858:9;9848:19;;9838:35;:::o;9879:311::-;9956:4;10046:18;10038:6;10035:30;10032:2;;;10068:18;;:::i;:::-;10032:2;10118:4;10110:6;10106:17;10098:25;;10178:4;10172;10168:15;10160:23;;9961:229;;;:::o;10196:308::-;10258:4;10348:18;10340:6;10337:30;10334:2;;;10370:18;;:::i;:::-;10334:2;10408:29;10430:6;10408:29;:::i;:::-;10400:37;;10492:4;10486;10482:15;10474:23;;10263:241;;;:::o;10510:132::-;10577:4;10600:3;10592:11;;10630:4;10625:3;10621:14;10613:22;;10582:60;;;:::o;10648:114::-;10715:6;10749:5;10743:12;10733:22;;10722:40;;;:::o;10768:99::-;10820:6;10854:5;10848:12;10838:22;;10827:40;;;:::o;10873:113::-;10943:4;10975;10970:3;10966:14;10958:22;;10948:38;;;:::o;10992:184::-;11091:11;11125:6;11120:3;11113:19;11165:4;11160:3;11156:14;11141:29;;11103:73;;;;:::o;11182:169::-;11266:11;11300:6;11295:3;11288:19;11340:4;11335:3;11331:14;11316:29;;11278:73;;;;:::o;11357:305::-;11397:3;11416:20;11434:1;11416:20;:::i;:::-;11411:25;;11450:20;11468:1;11450:20;:::i;:::-;11445:25;;11604:1;11536:66;11532:74;11529:1;11526:81;11523:2;;;11610:18;;:::i;:::-;11523:2;11654:1;11651;11647:9;11640:16;;11401:261;;;;:::o;11668:96::-;11705:7;11734:24;11752:5;11734:24;:::i;:::-;11723:35;;11713:51;;;:::o;11770:90::-;11804:7;11847:5;11840:13;11833:21;11822:32;;11812:48;;;:::o;11866:126::-;11903:7;11943:42;11936:5;11932:54;11921:65;;11911:81;;;:::o;11998:77::-;12035:7;12064:5;12053:16;;12043:32;;;:::o;12081:154::-;12165:6;12160:3;12155;12142:30;12227:1;12218:6;12213:3;12209:16;12202:27;12132:103;;;:::o;12241:307::-;12309:1;12319:113;12333:6;12330:1;12327:13;12319:113;;;12418:1;12413:3;12409:11;12403:18;12399:1;12394:3;12390:11;12383:39;12355:2;12352:1;12348:10;12343:15;;12319:113;;;12450:6;12447:1;12444:13;12441:2;;;12530:1;12521:6;12516:3;12512:16;12505:27;12441:2;12290:258;;;;:::o;12554:320::-;12598:6;12635:1;12629:4;12625:12;12615:22;;12682:1;12676:4;12672:12;12703:18;12693:2;;12759:4;12751:6;12747:17;12737:27;;12693:2;12821;12813:6;12810:14;12790:18;12787:38;12784:2;;;12840:18;;:::i;:::-;12784:2;12605:269;;;;:::o;12880:281::-;12963:27;12985:4;12963:27;:::i;:::-;12955:6;12951:40;13093:6;13081:10;13078:22;13057:18;13045:10;13042:34;13039:62;13036:2;;;13104:18;;:::i;:::-;13036:2;13144:10;13140:2;13133:22;12923:238;;;:::o;13167:233::-;13206:3;13229:24;13247:5;13229:24;:::i;:::-;13220:33;;13275:66;13268:5;13265:77;13262:2;;;13345:18;;:::i;:::-;13262:2;13392:1;13385:5;13381:13;13374:20;;13210:190;;;:::o;13406:180::-;13454:77;13451:1;13444:88;13551:4;13548:1;13541:15;13575:4;13572:1;13565:15;13592:180;13640:77;13637:1;13630:88;13737:4;13734:1;13727:15;13761:4;13758:1;13751:15;13778:180;13826:77;13823:1;13816:88;13923:4;13920:1;13913:15;13947:4;13944:1;13937:15;13964:102;14005:6;14056:2;14052:7;14047:2;14040:5;14036:14;14032:28;14022:38;;14012:54;;;:::o;14072:225::-;14212:34;14208:1;14200:6;14196:14;14189:58;14281:8;14276:2;14268:6;14264:15;14257:33;14178:119;:::o;14303:176::-;14443:28;14439:1;14431:6;14427:14;14420:52;14409:70;:::o;14485:223::-;14625:34;14621:1;14613:6;14609:14;14602:58;14694:6;14689:2;14681:6;14677:15;14670:31;14591:117;:::o;14714:182::-;14854:34;14850:1;14842:6;14838:14;14831:58;14820:76;:::o;14902:220::-;15042:34;15038:1;15030:6;15026:14;15019:58;15111:3;15106:2;15098:6;15094:15;15087:28;15008:114;:::o;15128:122::-;15201:24;15219:5;15201:24;:::i;:::-;15194:5;15191:35;15181:2;;15240:1;15237;15230:12;15181:2;15171:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1058000","executionCost":"infinite","totalCost":"infinite"},"external":{"addMembers(address[])":"infinite","checkAgreementStatus()":"infinite","checkMember(address)":"infinite","getCid()":"infinite","getMembers()":"infinite","getName()":"infinite","getOwner()":"1311","owner()":"1333","renounceOwnership()":"24465","setCid(string)":"infinite","signAgreement(address)":"infinite","signed(address)":"1546","transferOwnership(address)":"24835"}},"methodIdentifiers":{"addMembers(address[])":"6f4d469b","checkAgreementStatus()":"ce0fabd8","checkMember(address)":"aaf2e5d8","getCid()":"ca00c702","getMembers()":"9eab5253","getName()":"17d7de7c","getOwner()":"893d20e8","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setCid(string)":"b7e03bec","signAgreement(address)":"db8ddcc9","signed(address)":"0555ff41","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_status\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"addMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAgreementStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"checkMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"}],\"name\":\"setCid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"signAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrypticAgreement.sol\":\"CrypticAgreement\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CrypticAgreement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CrypticAgreement is Ownable {\\n    string name;\\n    string cid;\\n    address creator;\\n    string status;\\n\\n    mapping(address => bool) public signed;\\n    address[] members;\\n    uint256 signedMembers;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _cid,\\n        address _creator,\\n        string memory _status\\n    ) {\\n        name = _name;\\n        cid = _cid;\\n        creator = _creator;\\n        status = _status;\\n    }\\n\\n    function addMembers(address[] memory _members) public {\\n        require(msg.sender == creator, \\\"Only owner can add members\\\");\\n        for (uint256 i = 0; i < _members.length; i++) {\\n            signed[address(_members[i])] = false;\\n            members.push(_members[i]);\\n        }\\n    }\\n\\n    function checkMember(address memberAddress) public view returns (bool) {\\n        bool containsMember = false;\\n        for (uint256 i = 0; i < members.length; i++) {\\n            if (members[i] == memberAddress) {\\n                containsMember = true;\\n            }\\n        }\\n        return containsMember;\\n    }\\n\\n    function signAgreement(address signer) public {\\n        bool containsMember = checkMember(signer);\\n        require(containsMember, \\\"You are not member of this agreement\\\");\\n        require(!signed[signer], \\\"You have already signed agreement\\\");\\n        signed[signer] = true;\\n        signedMembers = signedMembers + 1;\\n    }\\n\\n    function checkAgreementStatus() public view returns (string memory) {\\n        if (signedMembers == members.length) {\\n            return \\\"Signed\\\";\\n        } else {\\n            return \\\"Unsigned\\\";\\n        }\\n    }\\n\\n    function getMembers() public view returns (address[] memory) {\\n        return members;\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return name;\\n    }\\n\\n    function getCid() public view returns (string memory) {\\n        return cid;\\n    }\\n\\n    function setCid(string memory _cid) public {\\n        cid = _cid;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return creator;\\n    }\\n}\\n\",\"keccak256\":\"0xc8bb14d1df95317b71d062545e0a615064792206ede6f9fc1b604039d385aedc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1782,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1784,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"cid","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1786,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"creator","offset":0,"slot":"3","type":"t_address"},{"astId":1788,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"status","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1792,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"signed","offset":0,"slot":"5","type":"t_mapping(t_address,t_bool)"},{"astId":1795,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"members","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":1797,"contract":"contracts/CrypticAgreement.sol:CrypticAgreement","label":"signedMembers","offset":0,"slot":"7","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CrypticAgreementFactory.sol":{"CrypticAgreementFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"agreement","type":"address"}],"name":"agreementCreated","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"cid","type":"string"},{"internalType":"string","name":"status","type":"string"}],"name":"createAgreement","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getAgrrements","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61253d8061010d6000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80632de333ed14620000635780633c02634e1462000099578063715018a614620000cf5780638da5cb5b14620000db578063f2fde38b14620000fd575b600080fd5b6200008160048036038101906200007b9190620005c8565b6200011d565b604051620000909190620007e7565b60405180910390f35b620000b76004803603810190620000b19190620005f4565b620001ec565b604051620000c69190620007ca565b60405180910390f35b620000d962000314565b005b620000e56200032c565b604051620000f49190620007ca565b60405180910390f35b6200011b6004803603810190620001159190620005c8565b62000355565b005b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620001e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000195575b50505050509050919050565b60008084843385604051620002019062000531565b6200021094939291906200080b565b604051809103906000f0801580156200022d573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc198bc12e1e578171c6d418ea57e66e7da901e80b2dc144ac43a334d6b0c145f81604051620003019190620007ca565b60405180910390a1809150509392505050565b6200031e620003e0565b6200032a600062000465565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200035f620003e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620003d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c9906200086d565b60405180910390fd5b620003dd8162000465565b50565b620003ea62000529565b73ffffffffffffffffffffffffffffffffffffffff166200040a6200032c565b73ffffffffffffffffffffffffffffffffffffffff161462000463576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200045a906200088f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b611a218062000ae783390190565b6000620005566200055084620008da565b620008b1565b9050828152602081018484840111156200056f57600080fd5b6200057c84828562000999565b509392505050565b600081359050620005958162000acc565b92915050565b600082601f830112620005ad57600080fd5b8135620005bf8482602086016200053f565b91505092915050565b600060208284031215620005db57600080fd5b6000620005eb8482850162000584565b91505092915050565b6000806000606084860312156200060a57600080fd5b600084013567ffffffffffffffff8111156200062557600080fd5b62000633868287016200059b565b935050602084013567ffffffffffffffff8111156200065157600080fd5b6200065f868287016200059b565b925050604084013567ffffffffffffffff8111156200067d57600080fd5b6200068b868287016200059b565b9150509250925092565b6000620006a38383620006af565b60208301905092915050565b620006ba8162000965565b82525050565b620006cb8162000965565b82525050565b6000620006de8262000920565b620006ea818562000943565b9350620006f78362000910565b8060005b838110156200072e57815162000712888262000695565b97506200071f8362000936565b925050600181019050620006fb565b5085935050505092915050565b600062000748826200092b565b62000754818562000954565b935062000766818560208601620009a8565b620007718162000a43565b840191505092915050565b60006200078b60268362000954565b9150620007988262000a54565b604082019050919050565b6000620007b260208362000954565b9150620007bf8262000aa3565b602082019050919050565b6000602082019050620007e16000830184620006c0565b92915050565b60006020820190508181036000830152620008038184620006d1565b905092915050565b600060808201905081810360008301526200082781876200073b565b905081810360208301526200083d81866200073b565b90506200084e6040830185620006c0565b81810360608301526200086281846200073b565b905095945050505050565b6000602082019050818103600083015262000888816200077c565b9050919050565b60006020820190508181036000830152620008aa81620007a3565b9050919050565b6000620008bd620008d0565b9050620008cb8282620009de565b919050565b6000604051905090565b600067ffffffffffffffff821115620008f857620008f762000a14565b5b620009038262000a43565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620009728262000979565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015620009c8578082015181840152602081019050620009ab565b83811115620009d8576000848401525b50505050565b620009e98262000a43565b810181811067ffffffffffffffff8211171562000a0b5762000a0a62000a14565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b62000ad78162000965565b811462000ae357600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001a2138038062001a218339818101604052810190620000379190620002f2565b620000576200004b620000ed60201b60201c565b620000f560201b60201c565b83600190805190602001906200006f929190620001b9565b50826002908051906020019062000088929190620001b9565b5081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060049080519060200190620000e2929190620001b9565b505050505062000567565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001c79062000472565b90600052602060002090601f016020900481019282620001eb576000855562000237565b82601f106200020657805160ff191683800117855562000237565b8280016001018555821562000237579182015b828111156200023657825182559160200191906001019062000219565b5b5090506200024691906200024a565b5090565b5b80821115620002655760008160009055506001016200024b565b5090565b6000620002806200027a84620003d2565b620003a9565b9050828152602081018484840111156200029957600080fd5b620002a68482856200043c565b509392505050565b600081519050620002bf816200054d565b92915050565b600082601f830112620002d757600080fd5b8151620002e984826020860162000269565b91505092915050565b600080600080608085870312156200030957600080fd5b600085015167ffffffffffffffff8111156200032457600080fd5b6200033287828801620002c5565b945050602085015167ffffffffffffffff8111156200035057600080fd5b6200035e87828801620002c5565b93505060406200037187828801620002ae565b925050606085015167ffffffffffffffff8111156200038f57600080fd5b6200039d87828801620002c5565b91505092959194509250565b6000620003b5620003c8565b9050620003c38282620004a8565b919050565b6000604051905090565b600067ffffffffffffffff821115620003f057620003ef6200050d565b5b620003fb826200053c565b9050602081019050919050565b600062000415826200041c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200045c5780820151818401526020810190506200043f565b838111156200046c576000848401525b50505050565b600060028204905060018216806200048b57607f821691505b60208210811415620004a257620004a1620004de565b5b50919050565b620004b3826200053c565b810181811067ffffffffffffffff82111715620004d557620004d46200050d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620005588162000408565b81146200056457600080fd5b50565b6114aa80620005776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639eab52531161008c578063ca00c70211610066578063ca00c702146101ee578063ce0fabd81461020c578063db8ddcc91461022a578063f2fde38b14610246576100cf565b80639eab525314610184578063aaf2e5d8146101a2578063b7e03bec146101d2576100cf565b80630555ff41146100d457806317d7de7c146101045780636f4d469b14610122578063715018a61461013e578063893d20e8146101485780638da5cb5b14610166575b600080fd5b6100ee60048036038101906100e99190610ccd565b610262565b6040516100fb9190610f40565b60405180910390f35b61010c610282565b6040516101199190610f5b565b60405180910390f35b61013c60048036038101906101379190610cf6565b610314565b005b610146610502565b005b610150610516565b60405161015d9190610f03565b60405180910390f35b61016e610540565b60405161017b9190610f03565b60405180910390f35b61018c610569565b6040516101999190610f1e565b60405180910390f35b6101bc60048036038101906101b79190610ccd565b6105f7565b6040516101c99190610f40565b60405180910390f35b6101ec60048036038101906101e79190610d37565b6106c8565b005b6101f66106e2565b6040516102039190610f5b565b60405180910390f35b610214610774565b6040516102219190610f5b565b60405180910390f35b610244600480360381019061023f9190610ccd565b6107fe565b005b610260600480360381019061025b9190610ccd565b610949565b005b60056020528060005260406000206000915054906101000a900460ff1681565b606060018054610291906111d4565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906111d4565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610f9d565b60405180910390fd5b60005b81518110156104fe576000600560008484815181106103ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006828281518110610483577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806104f690611237565b9150506103a7565b5050565b61050a6109cd565b6105146000610a4b565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060068054806020026020016040519081016040528092919081815260200182805480156105ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105a3575b5050505050905090565b6000806000905060005b6006805490508110156106be578373ffffffffffffffffffffffffffffffffffffffff166006828154811061065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ab57600191505b80806106b690611237565b915050610601565b5080915050919050565b80600290805190602001906106de929190610b17565b5050565b6060600280546106f1906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461071d906111d4565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b606060068054905060075414156107c2576040518060400160405280600681526020017f5369676e6564000000000000000000000000000000000000000000000000000081525090506107fb565b6040518060400160405280600881526020017f556e7369676e656400000000000000000000000000000000000000000000000081525090505b90565b6000610809826105f7565b90508061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290610fbd565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ffd565b60405180910390fd5b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160075461093f91906110f4565b6007819055505050565b6109516109cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890610f7d565b60405180910390fd5b6109ca81610a4b565b50565b6109d5610b0f565b73ffffffffffffffffffffffffffffffffffffffff166109f3610540565b73ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090610fdd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610b23906111d4565b90600052602060002090601f016020900481019282610b455760008555610b8c565b82601f10610b5e57805160ff1916838001178555610b8c565b82800160010185558215610b8c579182015b82811115610b8b578251825591602001919060010190610b70565b5b509050610b999190610b9d565b5090565b5b80821115610bb6576000816000905550600101610b9e565b5090565b6000610bcd610bc884611042565b61101d565b90508083825260208201905082856020860282011115610bec57600080fd5b60005b85811015610c1c5781610c028882610c64565b845260208401935060208301925050600181019050610bef565b5050509392505050565b6000610c39610c348461106e565b61101d565b905082815260208101848484011115610c5157600080fd5b610c5c848285611192565b509392505050565b600081359050610c738161145d565b92915050565b600082601f830112610c8a57600080fd5b8135610c9a848260208601610bba565b91505092915050565b600082601f830112610cb457600080fd5b8135610cc4848260208601610c26565b91505092915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c64565b91505092915050565b600060208284031215610d0857600080fd5b600082013567ffffffffffffffff811115610d2257600080fd5b610d2e84828501610c79565b91505092915050565b600060208284031215610d4957600080fd5b600082013567ffffffffffffffff811115610d6357600080fd5b610d6f84828501610ca3565b91505092915050565b6000610d848383610d90565b60208301905092915050565b610d998161114a565b82525050565b610da88161114a565b82525050565b6000610db9826110af565b610dc381856110d2565b9350610dce8361109f565b8060005b83811015610dff578151610de68882610d78565b9750610df1836110c5565b925050600181019050610dd2565b5085935050505092915050565b610e158161115c565b82525050565b6000610e26826110ba565b610e3081856110e3565b9350610e408185602086016111a1565b610e498161130d565b840191505092915050565b6000610e616026836110e3565b9150610e6c8261131e565b604082019050919050565b6000610e84601a836110e3565b9150610e8f8261136d565b602082019050919050565b6000610ea76024836110e3565b9150610eb282611396565b604082019050919050565b6000610eca6020836110e3565b9150610ed5826113e5565b602082019050919050565b6000610eed6021836110e3565b9150610ef88261140e565b604082019050919050565b6000602082019050610f186000830184610d9f565b92915050565b60006020820190508181036000830152610f388184610dae565b905092915050565b6000602082019050610f556000830184610e0c565b92915050565b60006020820190508181036000830152610f758184610e1b565b905092915050565b60006020820190508181036000830152610f9681610e54565b9050919050565b60006020820190508181036000830152610fb681610e77565b9050919050565b60006020820190508181036000830152610fd681610e9a565b9050919050565b60006020820190508181036000830152610ff681610ebd565b9050919050565b6000602082019050818103600083015261101681610ee0565b9050919050565b6000611027611038565b90506110338282611206565b919050565b6000604051905090565b600067ffffffffffffffff82111561105d5761105c6112de565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611089576110886112de565b5b6110928261130d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110ff82611188565b915061110a83611188565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113f5761113e611280565b5b828201905092915050565b600061115582611168565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111bf5780820151818401526020810190506111a4565b838111156111ce576000848401525b50505050565b600060028204905060018216806111ec57607f821691505b60208210811415611200576111ff6112af565b5b50919050565b61120f8261130d565b810181811067ffffffffffffffff8211171561122e5761122d6112de565b5b80604052505050565b600061124282611188565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561127557611274611280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e20616464206d656d62657273000000000000600082015250565b7f596f7520617265206e6f74206d656d626572206f66207468697320616772656560008201527f6d656e7400000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f75206861766520616c7265616479207369676e65642061677265656d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6114668161114a565b811461147157600080fd5b5056fea2646970667358221220a3f7da26c804186ee83a48cf5ab2da82db7732599b27ab18cbf6232747a9e4c464736f6c63430008040033a26469706673582212200c3a43ab1a0bf923f19c879cdfa1878d23ed887b7e00383abe9ebc205da7abe664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x253D DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DE333ED EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0x3C02634E EQ PUSH3 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x7B SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST PUSH3 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xB1 SWAP2 SWAP1 PUSH3 0x5F4 JUMP JUMPDEST PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD9 PUSH3 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xE5 PUSH3 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST PUSH3 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x1E0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x195 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 CALLER DUP6 PUSH1 0x40 MLOAD PUSH3 0x201 SWAP1 PUSH3 0x531 JUMP JUMPDEST PUSH3 0x210 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x22D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC198BC12E1E578171C6D418EA57E66E7DA901E80B2DC144AC43A334D6B0C145F DUP2 PUSH1 0x40 MLOAD PUSH3 0x301 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x31E PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x32A PUSH1 0x0 PUSH3 0x465 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x35F PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C9 SWAP1 PUSH3 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3DD DUP2 PUSH3 0x465 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA PUSH3 0x529 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x40A PUSH3 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x45A SWAP1 PUSH3 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A21 DUP1 PUSH3 0xAE7 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x8DA JUMP JUMPDEST PUSH3 0x8B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x57C DUP5 DUP3 DUP6 PUSH3 0x999 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x595 DUP2 PUSH3 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x5BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x53F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x5EB DUP5 DUP3 DUP6 ADD PUSH3 0x584 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x633 DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x65F DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x68B DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A3 DUP4 DUP4 PUSH3 0x6AF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6BA DUP2 PUSH3 0x965 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x6CB DUP2 PUSH3 0x965 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6DE DUP3 PUSH3 0x920 JUMP JUMPDEST PUSH3 0x6EA DUP2 DUP6 PUSH3 0x943 JUMP JUMPDEST SWAP4 POP PUSH3 0x6F7 DUP4 PUSH3 0x910 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x72E JUMPI DUP2 MLOAD PUSH3 0x712 DUP9 DUP3 PUSH3 0x695 JUMP JUMPDEST SWAP8 POP PUSH3 0x71F DUP4 PUSH3 0x936 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6FB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x748 DUP3 PUSH3 0x92B JUMP JUMPDEST PUSH3 0x754 DUP2 DUP6 PUSH3 0x954 JUMP JUMPDEST SWAP4 POP PUSH3 0x766 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x9A8 JUMP JUMPDEST PUSH3 0x771 DUP2 PUSH3 0xA43 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78B PUSH1 0x26 DUP4 PUSH3 0x954 JUMP JUMPDEST SWAP2 POP PUSH3 0x798 DUP3 PUSH3 0xA54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B2 PUSH1 0x20 DUP4 PUSH3 0x954 JUMP JUMPDEST SWAP2 POP PUSH3 0x7BF DUP3 PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x803 DUP2 DUP5 PUSH3 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x827 DUP2 DUP8 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x83D DUP2 DUP7 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP PUSH3 0x84E PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x6C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x862 DUP2 DUP5 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x888 DUP2 PUSH3 0x77C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8AA DUP2 PUSH3 0x7A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BD PUSH3 0x8D0 JUMP JUMPDEST SWAP1 POP PUSH3 0x8CB DUP3 DUP3 PUSH3 0x9DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x8F8 JUMPI PUSH3 0x8F7 PUSH3 0xA14 JUMP JUMPDEST JUMPDEST PUSH3 0x903 DUP3 PUSH3 0xA43 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x972 DUP3 PUSH3 0x979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x9D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x9E9 DUP3 PUSH3 0xA43 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xA0B JUMPI PUSH3 0xA0A PUSH3 0xA14 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0xAD7 DUP2 PUSH3 0x965 JUMP JUMPDEST DUP2 EQ PUSH3 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A21 CODESIZE SUB DUP1 PUSH3 0x1A21 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE2 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x567 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1C7 SWAP1 PUSH3 0x472 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1EB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x206 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x237 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x236 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x219 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x246 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x280 PUSH3 0x27A DUP5 PUSH3 0x3D2 JUMP JUMPDEST PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2A6 DUP5 DUP3 DUP6 PUSH3 0x43C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BF DUP2 PUSH3 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x2E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x332 DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35E DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x371 DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39D DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B5 PUSH3 0x3C8 JUMP JUMPDEST SWAP1 POP PUSH3 0x3C3 DUP3 DUP3 PUSH3 0x4A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3F0 JUMPI PUSH3 0x3EF PUSH3 0x50D JUMP JUMPDEST JUMPDEST PUSH3 0x3FB DUP3 PUSH3 0x53C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 DUP3 PUSH3 0x41C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x45C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x43F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x46C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4A2 JUMPI PUSH3 0x4A1 PUSH3 0x4DE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B3 DUP3 PUSH3 0x53C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4D5 JUMPI PUSH3 0x4D4 PUSH3 0x50D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x558 DUP2 PUSH3 0x408 JUMP JUMPDEST DUP2 EQ PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14AA DUP1 PUSH3 0x577 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EAB5253 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCA00C702 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCA00C702 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xCE0FABD8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xDB8DDCC9 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xAAF2E5D8 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB7E03BEC EQ PUSH2 0x1D2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x555FF41 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6F4D469B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x4F6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5A3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x6B6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x601 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6DE SWAP3 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5369676E65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E7369676E6564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x809 DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xA4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0xB0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F3 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB45 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB5E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB8C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB8B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB9E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD PUSH2 0xBC8 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC1C JUMPI DUP2 PUSH2 0xC02 DUP9 DUP3 PUSH2 0xC64 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBEF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH2 0xC34 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 DUP6 PUSH2 0x1192 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCC4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED DUP5 DUP3 DUP6 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2E DUP5 DUP3 DUP6 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB9 DUP3 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xDC3 DUP2 DUP6 PUSH2 0x10D2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDCE DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFF JUMPI DUP2 MLOAD PUSH2 0xDE6 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDF1 DUP4 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDD2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x115C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xE30 DUP2 DUP6 PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP PUSH2 0xE40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0x130D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x26 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 PUSH1 0x1A DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8F DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 PUSH1 0x24 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB2 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH1 0x20 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xED5 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH1 0x21 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 DUP5 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB6 DUP2 PUSH2 0xE77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x1206 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1092 DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x110A DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1200 JUMPI PUSH2 0x11FF PUSH2 0x12AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120F DUP3 PUSH2 0x130D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x12DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x1280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20616464206D656D62657273000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206D656D626572206F662074686973206167726565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479207369676E65642061677265656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1466 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xF7 0xDA 0x26 0xC8 DIV XOR PUSH15 0xE83A48CF5AB2DA82DB7732599B27AB XOR 0xCB 0xF6 0x23 0x27 SELFBALANCE 0xA9 0xE4 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GASPRICE NUMBER 0xAB BYTE SIGNEXTEND 0xF9 0x23 CALL SWAP13 DUP8 SWAP13 0xDF LOG1 DUP8 DUP14 0x23 0xED DUP9 PUSH28 0x7E00383ABE9EBC205DA7ABE664736F6C634300080400330000000000 ","sourceMap":"144:787:12:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;144:787:12;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;144:787:12:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9764:21","statements":[{"body":{"nodeType":"YulBlock","src":"91:261:21","statements":[{"nodeType":"YulAssignment","src":"101:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:21"},"nodeType":"YulFunctionCall","src":"126:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:21"},"nodeType":"YulFunctionCall","src":"110:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:21"},"nodeType":"YulFunctionCall","src":"185:21:21"},"nodeType":"YulExpressionStatement","src":"185:21:21"},{"nodeType":"YulVariableDeclaration","src":"215:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:21"},"nodeType":"YulFunctionCall","src":"226:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"289:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"292:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"282:6:21"},"nodeType":"YulFunctionCall","src":"282:12:21"},"nodeType":"YulExpressionStatement","src":"282:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:21"},"nodeType":"YulFunctionCall","src":"257:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:21"},"nodeType":"YulFunctionCall","src":"254:25:21"},"nodeType":"YulIf","src":"251:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"329:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"334:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"339:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"305:23:21"},"nodeType":"YulFunctionCall","src":"305:41:21"},"nodeType":"YulExpressionStatement","src":"305:41:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:21","type":""}],"src":"7:345:21"},{"body":{"nodeType":"YulBlock","src":"410:87:21","statements":[{"nodeType":"YulAssignment","src":"420:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"442:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"429:12:21"},"nodeType":"YulFunctionCall","src":"429:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"420:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"458:26:21"},"nodeType":"YulFunctionCall","src":"458:33:21"},"nodeType":"YulExpressionStatement","src":"458:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"388:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"396:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"404:5:21","type":""}],"src":"358:139:21"},{"body":{"nodeType":"YulBlock","src":"579:211:21","statements":[{"body":{"nodeType":"YulBlock","src":"628:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"637:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"640:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"630:6:21"},"nodeType":"YulFunctionCall","src":"630:12:21"},"nodeType":"YulExpressionStatement","src":"630:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"607:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"615:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:21"},"nodeType":"YulFunctionCall","src":"603:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"622:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"599:3:21"},"nodeType":"YulFunctionCall","src":"599:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"592:6:21"},"nodeType":"YulFunctionCall","src":"592:35:21"},"nodeType":"YulIf","src":"589:2:21"},{"nodeType":"YulVariableDeclaration","src":"653:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"680:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"667:12:21"},"nodeType":"YulFunctionCall","src":"667:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"657:6:21","type":""}]},{"nodeType":"YulAssignment","src":"696:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"757:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"765:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:21"},"nodeType":"YulFunctionCall","src":"753:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"772:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"780:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"705:47:21"},"nodeType":"YulFunctionCall","src":"705:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"696:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"557:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"565:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"573:5:21","type":""}],"src":"517:273:21"},{"body":{"nodeType":"YulBlock","src":"862:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"908:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"917:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"910:6:21"},"nodeType":"YulFunctionCall","src":"910:12:21"},"nodeType":"YulExpressionStatement","src":"910:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"879:3:21"},"nodeType":"YulFunctionCall","src":"879:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"904:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"875:3:21"},"nodeType":"YulFunctionCall","src":"875:32:21"},"nodeType":"YulIf","src":"872:2:21"},{"nodeType":"YulBlock","src":"934:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"949:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"963:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"953:6:21","type":""}]},{"nodeType":"YulAssignment","src":"978:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1013:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1024:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:21"},"nodeType":"YulFunctionCall","src":"1009:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1033:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"988:20:21"},"nodeType":"YulFunctionCall","src":"988:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"978:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"832:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"843:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"855:6:21","type":""}],"src":"796:262:21"},{"body":{"nodeType":"YulBlock","src":"1194:761:21","statements":[{"body":{"nodeType":"YulBlock","src":"1240:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1249:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1252:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1242:6:21"},"nodeType":"YulFunctionCall","src":"1242:12:21"},"nodeType":"YulExpressionStatement","src":"1242:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1215:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1224:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1211:3:21"},"nodeType":"YulFunctionCall","src":"1211:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1236:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1207:3:21"},"nodeType":"YulFunctionCall","src":"1207:32:21"},"nodeType":"YulIf","src":"1204:2:21"},{"nodeType":"YulBlock","src":"1266:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1281:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1312:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1323:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:21"},"nodeType":"YulFunctionCall","src":"1308:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1295:12:21"},"nodeType":"YulFunctionCall","src":"1295:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1285:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1373:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1382:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1385:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1375:6:21"},"nodeType":"YulFunctionCall","src":"1375:12:21"},"nodeType":"YulExpressionStatement","src":"1375:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1345:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1353:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1342:2:21"},"nodeType":"YulFunctionCall","src":"1342:30:21"},"nodeType":"YulIf","src":"1339:2:21"},{"nodeType":"YulAssignment","src":"1403:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1459:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1444:3:21"},"nodeType":"YulFunctionCall","src":"1444:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1468:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1413:30:21"},"nodeType":"YulFunctionCall","src":"1413:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1403:6:21"}]}]},{"nodeType":"YulBlock","src":"1496:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1511:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:21"},"nodeType":"YulFunctionCall","src":"1538:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1525:12:21"},"nodeType":"YulFunctionCall","src":"1525:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1515:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1604:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1613:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1616:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1606:6:21"},"nodeType":"YulFunctionCall","src":"1606:12:21"},"nodeType":"YulExpressionStatement","src":"1606:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1576:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1584:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1573:2:21"},"nodeType":"YulFunctionCall","src":"1573:30:21"},"nodeType":"YulIf","src":"1570:2:21"},{"nodeType":"YulAssignment","src":"1634:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1679:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1690:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1675:3:21"},"nodeType":"YulFunctionCall","src":"1675:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1699:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1644:30:21"},"nodeType":"YulFunctionCall","src":"1644:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1634:6:21"}]}]},{"nodeType":"YulBlock","src":"1727:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1742:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1769:3:21"},"nodeType":"YulFunctionCall","src":"1769:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1756:12:21"},"nodeType":"YulFunctionCall","src":"1756:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1746:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1835:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1844:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1847:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1837:6:21"},"nodeType":"YulFunctionCall","src":"1837:12:21"},"nodeType":"YulExpressionStatement","src":"1837:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1807:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1815:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1804:2:21"},"nodeType":"YulFunctionCall","src":"1804:30:21"},"nodeType":"YulIf","src":"1801:2:21"},{"nodeType":"YulAssignment","src":"1865:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1921:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:21"},"nodeType":"YulFunctionCall","src":"1906:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1930:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1875:30:21"},"nodeType":"YulFunctionCall","src":"1875:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1865:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1148:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1159:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1171:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1179:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1187:6:21","type":""}],"src":"1064:891:21"},{"body":{"nodeType":"YulBlock","src":"2041:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2085:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2093:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2051:33:21"},"nodeType":"YulFunctionCall","src":"2051:46:21"},"nodeType":"YulExpressionStatement","src":"2051:46:21"},{"nodeType":"YulAssignment","src":"2106:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2124:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2129:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2120:3:21"},"nodeType":"YulFunctionCall","src":"2120:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2106:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2014:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2022:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2030:10:21","type":""}],"src":"1961:179:21"},{"body":{"nodeType":"YulBlock","src":"2201:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2218:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2241:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2223:17:21"},"nodeType":"YulFunctionCall","src":"2223:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:21"},"nodeType":"YulFunctionCall","src":"2211:37:21"},"nodeType":"YulExpressionStatement","src":"2211:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2189:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2196:3:21","type":""}],"src":"2146:108:21"},{"body":{"nodeType":"YulBlock","src":"2325:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2342:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2365:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2347:17:21"},"nodeType":"YulFunctionCall","src":"2347:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2335:6:21"},"nodeType":"YulFunctionCall","src":"2335:37:21"},"nodeType":"YulExpressionStatement","src":"2335:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2313:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2320:3:21","type":""}],"src":"2260:118:21"},{"body":{"nodeType":"YulBlock","src":"2538:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2548:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2610:5:21"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2562:47:21"},"nodeType":"YulFunctionCall","src":"2562:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2552:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2625:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2706:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2711:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2632:73:21"},"nodeType":"YulFunctionCall","src":"2632:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2625:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"2727:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2792:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2742:49:21"},"nodeType":"YulFunctionCall","src":"2742:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"2731:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2807:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"2821:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2811:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2897:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2911:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2938:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:21"},"nodeType":"YulFunctionCall","src":"2932:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"2915:13:21","type":""}]},{"nodeType":"YulAssignment","src":"2958:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3009:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3024:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"2965:43:21"},"nodeType":"YulFunctionCall","src":"2965:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:21"}]},{"nodeType":"YulAssignment","src":"3041:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3104:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3051:52:21"},"nodeType":"YulFunctionCall","src":"3051:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3041:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2859:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2862:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2856:2:21"},"nodeType":"YulFunctionCall","src":"2856:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2870:18:21","statements":[{"nodeType":"YulAssignment","src":"2872:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2881:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"2884:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2877:3:21"},"nodeType":"YulFunctionCall","src":"2877:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2872:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2841:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2843:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2852:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2847:1:21","type":""}]}]},"src":"2837:284:21"},{"nodeType":"YulAssignment","src":"3130:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"3137:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3130:3:21"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2517:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2524:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2533:3:21","type":""}],"src":"2414:732:21"},{"body":{"nodeType":"YulBlock","src":"3244:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3254:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3301:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3268:32:21"},"nodeType":"YulFunctionCall","src":"3268:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3258:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3316:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3382:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3387:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3323:58:21"},"nodeType":"YulFunctionCall","src":"3323:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3316:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3429:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3436:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3425:3:21"},"nodeType":"YulFunctionCall","src":"3425:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3443:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3448:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3403:21:21"},"nodeType":"YulFunctionCall","src":"3403:52:21"},"nodeType":"YulExpressionStatement","src":"3403:52:21"},{"nodeType":"YulAssignment","src":"3464:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3475:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3502:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3480:21:21"},"nodeType":"YulFunctionCall","src":"3480:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3471:3:21"},"nodeType":"YulFunctionCall","src":"3471:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3464:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3225:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3232:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3240:3:21","type":""}],"src":"3152:364:21"},{"body":{"nodeType":"YulBlock","src":"3668:220:21","statements":[{"nodeType":"YulAssignment","src":"3678:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3744:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3685:58:21"},"nodeType":"YulFunctionCall","src":"3685:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3678:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3850:3:21"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3761:88:21"},"nodeType":"YulFunctionCall","src":"3761:93:21"},"nodeType":"YulExpressionStatement","src":"3761:93:21"},{"nodeType":"YulAssignment","src":"3863:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3874:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3879:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:21"},"nodeType":"YulFunctionCall","src":"3870:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3863:3:21"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3656:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3664:3:21","type":""}],"src":"3522:366:21"},{"body":{"nodeType":"YulBlock","src":"4040:220:21","statements":[{"nodeType":"YulAssignment","src":"4050:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4116:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4057:58:21"},"nodeType":"YulFunctionCall","src":"4057:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4050:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:21"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"4133:88:21"},"nodeType":"YulFunctionCall","src":"4133:93:21"},"nodeType":"YulExpressionStatement","src":"4133:93:21"},{"nodeType":"YulAssignment","src":"4235:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4246:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4251:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:21"},"nodeType":"YulFunctionCall","src":"4242:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4235:3:21"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4028:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4036:3:21","type":""}],"src":"3894:366:21"},{"body":{"nodeType":"YulBlock","src":"4364:124:21","statements":[{"nodeType":"YulAssignment","src":"4374:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4382:3:21"},"nodeType":"YulFunctionCall","src":"4382:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4374:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4454:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4478:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4463:3:21"},"nodeType":"YulFunctionCall","src":"4463:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4410:43:21"},"nodeType":"YulFunctionCall","src":"4410:71:21"},"nodeType":"YulExpressionStatement","src":"4410:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4336:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4348:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4359:4:21","type":""}],"src":"4266:222:21"},{"body":{"nodeType":"YulBlock","src":"4642:225:21","statements":[{"nodeType":"YulAssignment","src":"4652:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4664:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4675:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4660:3:21"},"nodeType":"YulFunctionCall","src":"4660:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4652:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4710:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4695:3:21"},"nodeType":"YulFunctionCall","src":"4695:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4718:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4714:3:21"},"nodeType":"YulFunctionCall","src":"4714:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:21"},"nodeType":"YulFunctionCall","src":"4688:47:21"},"nodeType":"YulExpressionStatement","src":"4688:47:21"},{"nodeType":"YulAssignment","src":"4744:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4846:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"4855:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4752:93:21"},"nodeType":"YulFunctionCall","src":"4752:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4744:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4614:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4626:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4637:4:21","type":""}],"src":"4494:373:21"},{"body":{"nodeType":"YulBlock","src":"5115:584:21","statements":[{"nodeType":"YulAssignment","src":"5125:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5148:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:21"},"nodeType":"YulFunctionCall","src":"5133:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5125:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5173:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5184:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5169:3:21"},"nodeType":"YulFunctionCall","src":"5169:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5192:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5198:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5188:3:21"},"nodeType":"YulFunctionCall","src":"5188:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5162:6:21"},"nodeType":"YulFunctionCall","src":"5162:47:21"},"nodeType":"YulExpressionStatement","src":"5162:47:21"},{"nodeType":"YulAssignment","src":"5218:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5290:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5299:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5226:63:21"},"nodeType":"YulFunctionCall","src":"5226:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5218:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5325:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5336:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:21"},"nodeType":"YulFunctionCall","src":"5321:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5345:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5351:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5341:3:21"},"nodeType":"YulFunctionCall","src":"5341:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5314:6:21"},"nodeType":"YulFunctionCall","src":"5314:48:21"},"nodeType":"YulExpressionStatement","src":"5314:48:21"},{"nodeType":"YulAssignment","src":"5371:86:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5443:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5452:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5379:63:21"},"nodeType":"YulFunctionCall","src":"5379:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5371:4:21"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5511:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5524:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:21"},"nodeType":"YulFunctionCall","src":"5520:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5467:43:21"},"nodeType":"YulFunctionCall","src":"5467:72:21"},"nodeType":"YulExpressionStatement","src":"5467:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5560:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5571:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:21"},"nodeType":"YulFunctionCall","src":"5556:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5580:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5586:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5576:3:21"},"nodeType":"YulFunctionCall","src":"5576:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5549:6:21"},"nodeType":"YulFunctionCall","src":"5549:48:21"},"nodeType":"YulExpressionStatement","src":"5549:48:21"},{"nodeType":"YulAssignment","src":"5606:86:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5678:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5687:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5614:63:21"},"nodeType":"YulFunctionCall","src":"5614:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5606:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5063:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5075:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5083:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5091:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5099:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5110:4:21","type":""}],"src":"4873:826:21"},{"body":{"nodeType":"YulBlock","src":"5876:248:21","statements":[{"nodeType":"YulAssignment","src":"5886:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5909:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:21"},"nodeType":"YulFunctionCall","src":"5894:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5886:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5933:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5944:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5929:3:21"},"nodeType":"YulFunctionCall","src":"5929:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5952:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5958:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5948:3:21"},"nodeType":"YulFunctionCall","src":"5948:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5922:6:21"},"nodeType":"YulFunctionCall","src":"5922:47:21"},"nodeType":"YulExpressionStatement","src":"5922:47:21"},{"nodeType":"YulAssignment","src":"5978:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6112:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5986:124:21"},"nodeType":"YulFunctionCall","src":"5986:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5978:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5856:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5871:4:21","type":""}],"src":"5705:419:21"},{"body":{"nodeType":"YulBlock","src":"6301:248:21","statements":[{"nodeType":"YulAssignment","src":"6311:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6323:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6334:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:21"},"nodeType":"YulFunctionCall","src":"6319:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6311:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6358:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6369:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:21"},"nodeType":"YulFunctionCall","src":"6354:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6377:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6383:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6373:3:21"},"nodeType":"YulFunctionCall","src":"6373:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6347:6:21"},"nodeType":"YulFunctionCall","src":"6347:47:21"},"nodeType":"YulExpressionStatement","src":"6347:47:21"},{"nodeType":"YulAssignment","src":"6403:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6537:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6411:124:21"},"nodeType":"YulFunctionCall","src":"6411:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6403:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6281:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6296:4:21","type":""}],"src":"6130:419:21"},{"body":{"nodeType":"YulBlock","src":"6596:88:21","statements":[{"nodeType":"YulAssignment","src":"6606:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6616:18:21"},"nodeType":"YulFunctionCall","src":"6616:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6606:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6665:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"6673:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6645:19:21"},"nodeType":"YulFunctionCall","src":"6645:33:21"},"nodeType":"YulExpressionStatement","src":"6645:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6580:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6589:6:21","type":""}],"src":"6555:129:21"},{"body":{"nodeType":"YulBlock","src":"6730:35:21","statements":[{"nodeType":"YulAssignment","src":"6740:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6756:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6750:5:21"},"nodeType":"YulFunctionCall","src":"6750:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6740:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6723:6:21","type":""}],"src":"6690:75:21"},{"body":{"nodeType":"YulBlock","src":"6838:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"6943:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6945:16:21"},"nodeType":"YulFunctionCall","src":"6945:18:21"},"nodeType":"YulExpressionStatement","src":"6945:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6915:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6923:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6912:2:21"},"nodeType":"YulFunctionCall","src":"6912:30:21"},"nodeType":"YulIf","src":"6909:2:21"},{"nodeType":"YulAssignment","src":"6975:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7005:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6983:21:21"},"nodeType":"YulFunctionCall","src":"6983:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6975:4:21"}]},{"nodeType":"YulAssignment","src":"7049:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7061:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"7067:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:21"},"nodeType":"YulFunctionCall","src":"7057:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7049:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6822:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6833:4:21","type":""}],"src":"6771:308:21"},{"body":{"nodeType":"YulBlock","src":"7157:60:21","statements":[{"nodeType":"YulAssignment","src":"7167:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7175:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7167:4:21"}]},{"nodeType":"YulAssignment","src":"7188:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7200:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7205:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7196:3:21"},"nodeType":"YulFunctionCall","src":"7196:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7188:4:21"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7144:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7152:4:21","type":""}],"src":"7085:132:21"},{"body":{"nodeType":"YulBlock","src":"7297:40:21","statements":[{"nodeType":"YulAssignment","src":"7308:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7324:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7318:5:21"},"nodeType":"YulFunctionCall","src":"7318:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7308:6:21"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7280:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7290:6:21","type":""}],"src":"7223:114:21"},{"body":{"nodeType":"YulBlock","src":"7402:40:21","statements":[{"nodeType":"YulAssignment","src":"7413:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7429:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7423:5:21"},"nodeType":"YulFunctionCall","src":"7423:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7413:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7385:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7395:6:21","type":""}],"src":"7343:99:21"},{"body":{"nodeType":"YulBlock","src":"7523:38:21","statements":[{"nodeType":"YulAssignment","src":"7533:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7545:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7550:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7541:3:21"},"nodeType":"YulFunctionCall","src":"7541:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7533:4:21"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7510:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7518:4:21","type":""}],"src":"7448:113:21"},{"body":{"nodeType":"YulBlock","src":"7678:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7695:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7700:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7688:6:21"},"nodeType":"YulFunctionCall","src":"7688:19:21"},"nodeType":"YulExpressionStatement","src":"7688:19:21"},{"nodeType":"YulAssignment","src":"7716:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7735:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7740:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7731:3:21"},"nodeType":"YulFunctionCall","src":"7731:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7716:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7650:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"7655:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7666:11:21","type":""}],"src":"7567:184:21"},{"body":{"nodeType":"YulBlock","src":"7853:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7870:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7875:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7863:6:21"},"nodeType":"YulFunctionCall","src":"7863:19:21"},"nodeType":"YulExpressionStatement","src":"7863:19:21"},{"nodeType":"YulAssignment","src":"7891:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7910:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7915:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7906:3:21"},"nodeType":"YulFunctionCall","src":"7906:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7891:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7825:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"7830:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7841:11:21","type":""}],"src":"7757:169:21"},{"body":{"nodeType":"YulBlock","src":"7977:51:21","statements":[{"nodeType":"YulAssignment","src":"7987:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8016:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7998:17:21"},"nodeType":"YulFunctionCall","src":"7998:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7987:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7959:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7969:7:21","type":""}],"src":"7932:96:21"},{"body":{"nodeType":"YulBlock","src":"8079:81:21","statements":[{"nodeType":"YulAssignment","src":"8089:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8104:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8111:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8100:3:21"},"nodeType":"YulFunctionCall","src":"8100:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8089:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8061:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8071:7:21","type":""}],"src":"8034:126:21"},{"body":{"nodeType":"YulBlock","src":"8217:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8240:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"8245:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8250:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8227:12:21"},"nodeType":"YulFunctionCall","src":"8227:30:21"},"nodeType":"YulExpressionStatement","src":"8227:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8298:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8303:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8294:3:21"},"nodeType":"YulFunctionCall","src":"8294:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"8312:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8287:6:21"},"nodeType":"YulFunctionCall","src":"8287:27:21"},"nodeType":"YulExpressionStatement","src":"8287:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8199:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8204:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8209:6:21","type":""}],"src":"8166:154:21"},{"body":{"nodeType":"YulBlock","src":"8375:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8385:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8394:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8389:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8454:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8479:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"8484:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8475:3:21"},"nodeType":"YulFunctionCall","src":"8475:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8498:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"8503:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8494:3:21"},"nodeType":"YulFunctionCall","src":"8494:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8488:5:21"},"nodeType":"YulFunctionCall","src":"8488:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8468:6:21"},"nodeType":"YulFunctionCall","src":"8468:39:21"},"nodeType":"YulExpressionStatement","src":"8468:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8415:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"8418:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8412:2:21"},"nodeType":"YulFunctionCall","src":"8412:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8426:19:21","statements":[{"nodeType":"YulAssignment","src":"8428:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8437:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"8440:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8433:3:21"},"nodeType":"YulFunctionCall","src":"8433:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8428:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"8408:3:21","statements":[]},"src":"8404:113:21"},{"body":{"nodeType":"YulBlock","src":"8551:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8601:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8606:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:21"},"nodeType":"YulFunctionCall","src":"8597:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"8615:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:21"},"nodeType":"YulFunctionCall","src":"8590:27:21"},"nodeType":"YulExpressionStatement","src":"8590:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8532:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"8535:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8529:2:21"},"nodeType":"YulFunctionCall","src":"8529:13:21"},"nodeType":"YulIf","src":"8526:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8357:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8362:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8367:6:21","type":""}],"src":"8326:307:21"},{"body":{"nodeType":"YulBlock","src":"8682:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8692:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8714:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8744:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8722:21:21"},"nodeType":"YulFunctionCall","src":"8722:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8710:3:21"},"nodeType":"YulFunctionCall","src":"8710:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8696:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8861:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8863:16:21"},"nodeType":"YulFunctionCall","src":"8863:18:21"},"nodeType":"YulExpressionStatement","src":"8863:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8804:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"8816:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8801:2:21"},"nodeType":"YulFunctionCall","src":"8801:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8840:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8852:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8837:2:21"},"nodeType":"YulFunctionCall","src":"8837:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8798:2:21"},"nodeType":"YulFunctionCall","src":"8798:62:21"},"nodeType":"YulIf","src":"8795:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8899:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8903:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8892:6:21"},"nodeType":"YulFunctionCall","src":"8892:22:21"},"nodeType":"YulExpressionStatement","src":"8892:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8668:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"8676:4:21","type":""}],"src":"8639:281:21"},{"body":{"nodeType":"YulBlock","src":"8954:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8971:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8974:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8964:6:21"},"nodeType":"YulFunctionCall","src":"8964:88:21"},"nodeType":"YulExpressionStatement","src":"8964:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9068:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9071:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9061:6:21"},"nodeType":"YulFunctionCall","src":"9061:15:21"},"nodeType":"YulExpressionStatement","src":"9061:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9092:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9095:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9085:6:21"},"nodeType":"YulFunctionCall","src":"9085:15:21"},"nodeType":"YulExpressionStatement","src":"9085:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8926:180:21"},{"body":{"nodeType":"YulBlock","src":"9160:54:21","statements":[{"nodeType":"YulAssignment","src":"9170:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9188:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9195:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9184:3:21"},"nodeType":"YulFunctionCall","src":"9184:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9204:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9200:3:21"},"nodeType":"YulFunctionCall","src":"9200:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9180:3:21"},"nodeType":"YulFunctionCall","src":"9180:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9170:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9143:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9153:6:21","type":""}],"src":"9112:102:21"},{"body":{"nodeType":"YulBlock","src":"9326:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9348:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9356:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9344:3:21"},"nodeType":"YulFunctionCall","src":"9344:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"9360:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:21"},"nodeType":"YulFunctionCall","src":"9337:58:21"},"nodeType":"YulExpressionStatement","src":"9337:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9416:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9424:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9412:3:21"},"nodeType":"YulFunctionCall","src":"9412:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"9429:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9405:6:21"},"nodeType":"YulFunctionCall","src":"9405:33:21"},"nodeType":"YulExpressionStatement","src":"9405:33:21"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9318:6:21","type":""}],"src":"9220:225:21"},{"body":{"nodeType":"YulBlock","src":"9557:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9579:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9587:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9575:3:21"},"nodeType":"YulFunctionCall","src":"9575:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"9591:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9568:6:21"},"nodeType":"YulFunctionCall","src":"9568:58:21"},"nodeType":"YulExpressionStatement","src":"9568:58:21"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9549:6:21","type":""}],"src":"9451:182:21"},{"body":{"nodeType":"YulBlock","src":"9682:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"9739:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9748:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9751:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9741:6:21"},"nodeType":"YulFunctionCall","src":"9741:12:21"},"nodeType":"YulExpressionStatement","src":"9741:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9705:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9730:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9712:17:21"},"nodeType":"YulFunctionCall","src":"9712:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9702:2:21"},"nodeType":"YulFunctionCall","src":"9702:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9695:6:21"},"nodeType":"YulFunctionCall","src":"9695:43:21"},"nodeType":"YulIf","src":"9692:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9675:5:21","type":""}],"src":"9639:122:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80632de333ed14620000635780633c02634e1462000099578063715018a614620000cf5780638da5cb5b14620000db578063f2fde38b14620000fd575b600080fd5b6200008160048036038101906200007b9190620005c8565b6200011d565b604051620000909190620007e7565b60405180910390f35b620000b76004803603810190620000b19190620005f4565b620001ec565b604051620000c69190620007ca565b60405180910390f35b620000d962000314565b005b620000e56200032c565b604051620000f49190620007ca565b60405180910390f35b6200011b6004803603810190620001159190620005c8565b62000355565b005b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620001e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000195575b50505050509050919050565b60008084843385604051620002019062000531565b6200021094939291906200080b565b604051809103906000f0801580156200022d573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc198bc12e1e578171c6d418ea57e66e7da901e80b2dc144ac43a334d6b0c145f81604051620003019190620007ca565b60405180910390a1809150509392505050565b6200031e620003e0565b6200032a600062000465565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200035f620003e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620003d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c9906200086d565b60405180910390fd5b620003dd8162000465565b50565b620003ea62000529565b73ffffffffffffffffffffffffffffffffffffffff166200040a6200032c565b73ffffffffffffffffffffffffffffffffffffffff161462000463576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200045a906200088f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b611a218062000ae783390190565b6000620005566200055084620008da565b620008b1565b9050828152602081018484840111156200056f57600080fd5b6200057c84828562000999565b509392505050565b600081359050620005958162000acc565b92915050565b600082601f830112620005ad57600080fd5b8135620005bf8482602086016200053f565b91505092915050565b600060208284031215620005db57600080fd5b6000620005eb8482850162000584565b91505092915050565b6000806000606084860312156200060a57600080fd5b600084013567ffffffffffffffff8111156200062557600080fd5b62000633868287016200059b565b935050602084013567ffffffffffffffff8111156200065157600080fd5b6200065f868287016200059b565b925050604084013567ffffffffffffffff8111156200067d57600080fd5b6200068b868287016200059b565b9150509250925092565b6000620006a38383620006af565b60208301905092915050565b620006ba8162000965565b82525050565b620006cb8162000965565b82525050565b6000620006de8262000920565b620006ea818562000943565b9350620006f78362000910565b8060005b838110156200072e57815162000712888262000695565b97506200071f8362000936565b925050600181019050620006fb565b5085935050505092915050565b600062000748826200092b565b62000754818562000954565b935062000766818560208601620009a8565b620007718162000a43565b840191505092915050565b60006200078b60268362000954565b9150620007988262000a54565b604082019050919050565b6000620007b260208362000954565b9150620007bf8262000aa3565b602082019050919050565b6000602082019050620007e16000830184620006c0565b92915050565b60006020820190508181036000830152620008038184620006d1565b905092915050565b600060808201905081810360008301526200082781876200073b565b905081810360208301526200083d81866200073b565b90506200084e6040830185620006c0565b81810360608301526200086281846200073b565b905095945050505050565b6000602082019050818103600083015262000888816200077c565b9050919050565b60006020820190508181036000830152620008aa81620007a3565b9050919050565b6000620008bd620008d0565b9050620008cb8282620009de565b919050565b6000604051905090565b600067ffffffffffffffff821115620008f857620008f762000a14565b5b620009038262000a43565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620009728262000979565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015620009c8578082015181840152602081019050620009ab565b83811115620009d8576000848401525b50505050565b620009e98262000a43565b810181811067ffffffffffffffff8211171562000a0b5762000a0a62000a14565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b62000ad78162000965565b811462000ae357600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001a2138038062001a218339818101604052810190620000379190620002f2565b620000576200004b620000ed60201b60201c565b620000f560201b60201c565b83600190805190602001906200006f929190620001b9565b50826002908051906020019062000088929190620001b9565b5081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060049080519060200190620000e2929190620001b9565b505050505062000567565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001c79062000472565b90600052602060002090601f016020900481019282620001eb576000855562000237565b82601f106200020657805160ff191683800117855562000237565b8280016001018555821562000237579182015b828111156200023657825182559160200191906001019062000219565b5b5090506200024691906200024a565b5090565b5b80821115620002655760008160009055506001016200024b565b5090565b6000620002806200027a84620003d2565b620003a9565b9050828152602081018484840111156200029957600080fd5b620002a68482856200043c565b509392505050565b600081519050620002bf816200054d565b92915050565b600082601f830112620002d757600080fd5b8151620002e984826020860162000269565b91505092915050565b600080600080608085870312156200030957600080fd5b600085015167ffffffffffffffff8111156200032457600080fd5b6200033287828801620002c5565b945050602085015167ffffffffffffffff8111156200035057600080fd5b6200035e87828801620002c5565b93505060406200037187828801620002ae565b925050606085015167ffffffffffffffff8111156200038f57600080fd5b6200039d87828801620002c5565b91505092959194509250565b6000620003b5620003c8565b9050620003c38282620004a8565b919050565b6000604051905090565b600067ffffffffffffffff821115620003f057620003ef6200050d565b5b620003fb826200053c565b9050602081019050919050565b600062000415826200041c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200045c5780820151818401526020810190506200043f565b838111156200046c576000848401525b50505050565b600060028204905060018216806200048b57607f821691505b60208210811415620004a257620004a1620004de565b5b50919050565b620004b3826200053c565b810181811067ffffffffffffffff82111715620004d557620004d46200050d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620005588162000408565b81146200056457600080fd5b50565b6114aa80620005776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639eab52531161008c578063ca00c70211610066578063ca00c702146101ee578063ce0fabd81461020c578063db8ddcc91461022a578063f2fde38b14610246576100cf565b80639eab525314610184578063aaf2e5d8146101a2578063b7e03bec146101d2576100cf565b80630555ff41146100d457806317d7de7c146101045780636f4d469b14610122578063715018a61461013e578063893d20e8146101485780638da5cb5b14610166575b600080fd5b6100ee60048036038101906100e99190610ccd565b610262565b6040516100fb9190610f40565b60405180910390f35b61010c610282565b6040516101199190610f5b565b60405180910390f35b61013c60048036038101906101379190610cf6565b610314565b005b610146610502565b005b610150610516565b60405161015d9190610f03565b60405180910390f35b61016e610540565b60405161017b9190610f03565b60405180910390f35b61018c610569565b6040516101999190610f1e565b60405180910390f35b6101bc60048036038101906101b79190610ccd565b6105f7565b6040516101c99190610f40565b60405180910390f35b6101ec60048036038101906101e79190610d37565b6106c8565b005b6101f66106e2565b6040516102039190610f5b565b60405180910390f35b610214610774565b6040516102219190610f5b565b60405180910390f35b610244600480360381019061023f9190610ccd565b6107fe565b005b610260600480360381019061025b9190610ccd565b610949565b005b60056020528060005260406000206000915054906101000a900460ff1681565b606060018054610291906111d4565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906111d4565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610f9d565b60405180910390fd5b60005b81518110156104fe576000600560008484815181106103ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006828281518110610483577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806104f690611237565b9150506103a7565b5050565b61050a6109cd565b6105146000610a4b565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060068054806020026020016040519081016040528092919081815260200182805480156105ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105a3575b5050505050905090565b6000806000905060005b6006805490508110156106be578373ffffffffffffffffffffffffffffffffffffffff166006828154811061065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ab57600191505b80806106b690611237565b915050610601565b5080915050919050565b80600290805190602001906106de929190610b17565b5050565b6060600280546106f1906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461071d906111d4565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b606060068054905060075414156107c2576040518060400160405280600681526020017f5369676e6564000000000000000000000000000000000000000000000000000081525090506107fb565b6040518060400160405280600881526020017f556e7369676e656400000000000000000000000000000000000000000000000081525090505b90565b6000610809826105f7565b90508061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290610fbd565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610ffd565b60405180910390fd5b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160075461093f91906110f4565b6007819055505050565b6109516109cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890610f7d565b60405180910390fd5b6109ca81610a4b565b50565b6109d5610b0f565b73ffffffffffffffffffffffffffffffffffffffff166109f3610540565b73ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090610fdd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610b23906111d4565b90600052602060002090601f016020900481019282610b455760008555610b8c565b82601f10610b5e57805160ff1916838001178555610b8c565b82800160010185558215610b8c579182015b82811115610b8b578251825591602001919060010190610b70565b5b509050610b999190610b9d565b5090565b5b80821115610bb6576000816000905550600101610b9e565b5090565b6000610bcd610bc884611042565b61101d565b90508083825260208201905082856020860282011115610bec57600080fd5b60005b85811015610c1c5781610c028882610c64565b845260208401935060208301925050600181019050610bef565b5050509392505050565b6000610c39610c348461106e565b61101d565b905082815260208101848484011115610c5157600080fd5b610c5c848285611192565b509392505050565b600081359050610c738161145d565b92915050565b600082601f830112610c8a57600080fd5b8135610c9a848260208601610bba565b91505092915050565b600082601f830112610cb457600080fd5b8135610cc4848260208601610c26565b91505092915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c64565b91505092915050565b600060208284031215610d0857600080fd5b600082013567ffffffffffffffff811115610d2257600080fd5b610d2e84828501610c79565b91505092915050565b600060208284031215610d4957600080fd5b600082013567ffffffffffffffff811115610d6357600080fd5b610d6f84828501610ca3565b91505092915050565b6000610d848383610d90565b60208301905092915050565b610d998161114a565b82525050565b610da88161114a565b82525050565b6000610db9826110af565b610dc381856110d2565b9350610dce8361109f565b8060005b83811015610dff578151610de68882610d78565b9750610df1836110c5565b925050600181019050610dd2565b5085935050505092915050565b610e158161115c565b82525050565b6000610e26826110ba565b610e3081856110e3565b9350610e408185602086016111a1565b610e498161130d565b840191505092915050565b6000610e616026836110e3565b9150610e6c8261131e565b604082019050919050565b6000610e84601a836110e3565b9150610e8f8261136d565b602082019050919050565b6000610ea76024836110e3565b9150610eb282611396565b604082019050919050565b6000610eca6020836110e3565b9150610ed5826113e5565b602082019050919050565b6000610eed6021836110e3565b9150610ef88261140e565b604082019050919050565b6000602082019050610f186000830184610d9f565b92915050565b60006020820190508181036000830152610f388184610dae565b905092915050565b6000602082019050610f556000830184610e0c565b92915050565b60006020820190508181036000830152610f758184610e1b565b905092915050565b60006020820190508181036000830152610f9681610e54565b9050919050565b60006020820190508181036000830152610fb681610e77565b9050919050565b60006020820190508181036000830152610fd681610e9a565b9050919050565b60006020820190508181036000830152610ff681610ebd565b9050919050565b6000602082019050818103600083015261101681610ee0565b9050919050565b6000611027611038565b90506110338282611206565b919050565b6000604051905090565b600067ffffffffffffffff82111561105d5761105c6112de565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611089576110886112de565b5b6110928261130d565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110ff82611188565b915061110a83611188565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113f5761113e611280565b5b828201905092915050565b600061115582611168565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111bf5780820151818401526020810190506111a4565b838111156111ce576000848401525b50505050565b600060028204905060018216806111ec57607f821691505b60208210811415611200576111ff6112af565b5b50919050565b61120f8261130d565b810181811067ffffffffffffffff8211171561122e5761122d6112de565b5b80604052505050565b600061124282611188565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561127557611274611280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e20616464206d656d62657273000000000000600082015250565b7f596f7520617265206e6f74206d656d626572206f66207468697320616772656560008201527f6d656e7400000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f75206861766520616c7265616479207369676e65642061677265656d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6114668161114a565b811461147157600080fd5b5056fea2646970667358221220a3f7da26c804186ee83a48cf5ab2da82db7732599b27ab18cbf6232747a9e4c464736f6c63430008040033a26469706673582212200c3a43ab1a0bf923f19c879cdfa1878d23ed887b7e00383abe9ebc205da7abe664736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DE333ED EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0x3C02634E EQ PUSH3 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x7B SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST PUSH3 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xB1 SWAP2 SWAP1 PUSH3 0x5F4 JUMP JUMPDEST PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD9 PUSH3 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xE5 PUSH3 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST PUSH3 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x1E0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x195 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 CALLER DUP6 PUSH1 0x40 MLOAD PUSH3 0x201 SWAP1 PUSH3 0x531 JUMP JUMPDEST PUSH3 0x210 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x22D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC198BC12E1E578171C6D418EA57E66E7DA901E80B2DC144AC43A334D6B0C145F DUP2 PUSH1 0x40 MLOAD PUSH3 0x301 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x31E PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x32A PUSH1 0x0 PUSH3 0x465 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x35F PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C9 SWAP1 PUSH3 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3DD DUP2 PUSH3 0x465 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x3EA PUSH3 0x529 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x40A PUSH3 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x45A SWAP1 PUSH3 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A21 DUP1 PUSH3 0xAE7 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x556 PUSH3 0x550 DUP5 PUSH3 0x8DA JUMP JUMPDEST PUSH3 0x8B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x57C DUP5 DUP3 DUP6 PUSH3 0x999 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x595 DUP2 PUSH3 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x5BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x53F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x5EB DUP5 DUP3 DUP6 ADD PUSH3 0x584 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x633 DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x65F DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x68B DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A3 DUP4 DUP4 PUSH3 0x6AF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6BA DUP2 PUSH3 0x965 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x6CB DUP2 PUSH3 0x965 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6DE DUP3 PUSH3 0x920 JUMP JUMPDEST PUSH3 0x6EA DUP2 DUP6 PUSH3 0x943 JUMP JUMPDEST SWAP4 POP PUSH3 0x6F7 DUP4 PUSH3 0x910 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x72E JUMPI DUP2 MLOAD PUSH3 0x712 DUP9 DUP3 PUSH3 0x695 JUMP JUMPDEST SWAP8 POP PUSH3 0x71F DUP4 PUSH3 0x936 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6FB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x748 DUP3 PUSH3 0x92B JUMP JUMPDEST PUSH3 0x754 DUP2 DUP6 PUSH3 0x954 JUMP JUMPDEST SWAP4 POP PUSH3 0x766 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x9A8 JUMP JUMPDEST PUSH3 0x771 DUP2 PUSH3 0xA43 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78B PUSH1 0x26 DUP4 PUSH3 0x954 JUMP JUMPDEST SWAP2 POP PUSH3 0x798 DUP3 PUSH3 0xA54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B2 PUSH1 0x20 DUP4 PUSH3 0x954 JUMP JUMPDEST SWAP2 POP PUSH3 0x7BF DUP3 PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x803 DUP2 DUP5 PUSH3 0x6D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x827 DUP2 DUP8 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x83D DUP2 DUP7 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP PUSH3 0x84E PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x6C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x862 DUP2 DUP5 PUSH3 0x73B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x888 DUP2 PUSH3 0x77C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8AA DUP2 PUSH3 0x7A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BD PUSH3 0x8D0 JUMP JUMPDEST SWAP1 POP PUSH3 0x8CB DUP3 DUP3 PUSH3 0x9DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x8F8 JUMPI PUSH3 0x8F7 PUSH3 0xA14 JUMP JUMPDEST JUMPDEST PUSH3 0x903 DUP3 PUSH3 0xA43 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x972 DUP3 PUSH3 0x979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x9C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x9D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x9E9 DUP3 PUSH3 0xA43 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xA0B JUMPI PUSH3 0xA0A PUSH3 0xA14 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0xAD7 DUP2 PUSH3 0x965 JUMP JUMPDEST DUP2 EQ PUSH3 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A21 CODESIZE SUB DUP1 PUSH3 0x1A21 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE2 SWAP3 SWAP2 SWAP1 PUSH3 0x1B9 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x567 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1C7 SWAP1 PUSH3 0x472 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1EB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x206 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x237 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x237 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x236 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x219 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x246 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x280 PUSH3 0x27A DUP5 PUSH3 0x3D2 JUMP JUMPDEST PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2A6 DUP5 DUP3 DUP6 PUSH3 0x43C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BF DUP2 PUSH3 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x2E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x332 DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35E DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x371 DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39D DUP8 DUP3 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B5 PUSH3 0x3C8 JUMP JUMPDEST SWAP1 POP PUSH3 0x3C3 DUP3 DUP3 PUSH3 0x4A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3F0 JUMPI PUSH3 0x3EF PUSH3 0x50D JUMP JUMPDEST JUMPDEST PUSH3 0x3FB DUP3 PUSH3 0x53C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 DUP3 PUSH3 0x41C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x45C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x43F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x46C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x48B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4A2 JUMPI PUSH3 0x4A1 PUSH3 0x4DE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B3 DUP3 PUSH3 0x53C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4D5 JUMPI PUSH3 0x4D4 PUSH3 0x50D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x558 DUP2 PUSH3 0x408 JUMP JUMPDEST DUP2 EQ PUSH3 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14AA DUP1 PUSH3 0x577 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EAB5253 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCA00C702 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCA00C702 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xCE0FABD8 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xDB8DDCC9 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x9EAB5253 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xAAF2E5D8 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB7E03BEC EQ PUSH2 0x1D2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x555FF41 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x6F4D469B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x4F6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5A3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6AB JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x6B6 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x601 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6DE SWAP3 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F1 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5369676E65640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E7369676E6564000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x809 DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CF SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x951 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CA DUP2 PUSH2 0xA4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D5 PUSH2 0xB0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F3 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB23 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB45 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB5E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB8C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB8C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB8B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB99 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB9E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD PUSH2 0xBC8 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC1C JUMPI DUP2 PUSH2 0xC02 DUP9 DUP3 PUSH2 0xC64 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBEF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH2 0xC34 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 DUP6 PUSH2 0x1192 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCC4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED DUP5 DUP3 DUP6 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2E DUP5 DUP3 DUP6 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD99 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB9 DUP3 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xDC3 DUP2 DUP6 PUSH2 0x10D2 JUMP JUMPDEST SWAP4 POP PUSH2 0xDCE DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFF JUMPI DUP2 MLOAD PUSH2 0xDE6 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDF1 DUP4 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDD2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x115C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xE30 DUP2 DUP6 PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP PUSH2 0xE40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0x130D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 PUSH1 0x26 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6C DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 PUSH1 0x1A DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8F DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 PUSH1 0x24 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB2 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH1 0x20 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xED5 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEED PUSH1 0x21 DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF8 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 DUP5 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB6 DUP2 PUSH2 0xE77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x1206 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x12DE JUMP JUMPDEST JUMPDEST PUSH2 0x1092 DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH2 0x110A DUP4 PUSH2 0x1188 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x1280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x1168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1200 JUMPI PUSH2 0x11FF PUSH2 0x12AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120F DUP3 PUSH2 0x130D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x12DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x1280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E20616464206D656D62657273000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206D656D626572206F662074686973206167726565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479207369676E65642061677265656D656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1466 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xF7 0xDA 0x26 0xC8 DIV XOR PUSH15 0xE83A48CF5AB2DA82DB7732599B27AB XOR 0xCB 0xF6 0x23 0x27 SELFBALANCE 0xA9 0xE4 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GASPRICE NUMBER 0xAB BYTE SIGNEXTEND 0xF9 0x23 CALL SWAP13 DUP8 SWAP13 0xDF LOG1 DUP8 DUP14 0x23 0xED DUP9 PUSH28 0x7E00383ABE9EBC205DA7ABE664736F6C634300080400330000000000 ","sourceMap":"144:787:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:470;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;772:157:12;861:16;900:9;:22;910:11;900:22;;;;;;;;;;;;;;;893:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:157;;;:::o;296:470::-;428:7;447:34;518:4;536:3;553:10;577:6;484:109;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;447:146;;603:9;:21;613:10;603:21;;;;;;;;;;;;;;;638:17;603:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:44;697:17;672:44;;;;;;:::i;:::-;;;;;;;;741:17;726:33;;;296:470;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:345:21:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;404:5;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;517:273::-;573:5;622:3;615:4;607:6;603:17;599:27;589:2;;640:1;637;630:12;589:2;680:6;667:20;705:79;780:3;772:6;765:4;757:6;753:17;705:79;:::i;:::-;696:88;;579:211;;;;;:::o;796:262::-;855:6;904:2;892:9;883:7;879:23;875:32;872:2;;;920:1;917;910:12;872:2;963:1;988:53;1033:7;1024:6;1013:9;1009:22;988:53;:::i;:::-;978:63;;934:117;862:196;;;;:::o;1064:891::-;1171:6;1179;1187;1236:2;1224:9;1215:7;1211:23;1207:32;1204:2;;;1252:1;1249;1242:12;1204:2;1323:1;1312:9;1308:17;1295:31;1353:18;1345:6;1342:30;1339:2;;;1385:1;1382;1375:12;1339:2;1413:63;1468:7;1459:6;1448:9;1444:22;1413:63;:::i;:::-;1403:73;;1266:220;1553:2;1542:9;1538:18;1525:32;1584:18;1576:6;1573:30;1570:2;;;1616:1;1613;1606:12;1570:2;1644:63;1699:7;1690:6;1679:9;1675:22;1644:63;:::i;:::-;1634:73;;1496:221;1784:2;1773:9;1769:18;1756:32;1815:18;1807:6;1804:30;1801:2;;;1847:1;1844;1837:12;1801:2;1875:63;1930:7;1921:6;1910:9;1906:22;1875:63;:::i;:::-;1865:73;;1727:221;1194:761;;;;;:::o;1961:179::-;2030:10;2051:46;2093:3;2085:6;2051:46;:::i;:::-;2129:4;2124:3;2120:14;2106:28;;2041:99;;;;:::o;2146:108::-;2223:24;2241:5;2223:24;:::i;:::-;2218:3;2211:37;2201:53;;:::o;2260:118::-;2347:24;2365:5;2347:24;:::i;:::-;2342:3;2335:37;2325:53;;:::o;2414:732::-;2533:3;2562:54;2610:5;2562:54;:::i;:::-;2632:86;2711:6;2706:3;2632:86;:::i;:::-;2625:93;;2742:56;2792:5;2742:56;:::i;:::-;2821:7;2852:1;2837:284;2862:6;2859:1;2856:13;2837:284;;;2938:6;2932:13;2965:63;3024:3;3009:13;2965:63;:::i;:::-;2958:70;;3051:60;3104:6;3051:60;:::i;:::-;3041:70;;2897:224;2884:1;2881;2877:9;2872:14;;2837:284;;;2841:14;3137:3;3130:10;;2538:608;;;;;;;:::o;3152:364::-;3240:3;3268:39;3301:5;3268:39;:::i;:::-;3323:71;3387:6;3382:3;3323:71;:::i;:::-;3316:78;;3403:52;3448:6;3443:3;3436:4;3429:5;3425:16;3403:52;:::i;:::-;3480:29;3502:6;3480:29;:::i;:::-;3475:3;3471:39;3464:46;;3244:272;;;;;:::o;3522:366::-;3664:3;3685:67;3749:2;3744:3;3685:67;:::i;:::-;3678:74;;3761:93;3850:3;3761:93;:::i;:::-;3879:2;3874:3;3870:12;3863:19;;3668:220;;;:::o;3894:366::-;4036:3;4057:67;4121:2;4116:3;4057:67;:::i;:::-;4050:74;;4133:93;4222:3;4133:93;:::i;:::-;4251:2;4246:3;4242:12;4235:19;;4040:220;;;:::o;4266:222::-;4359:4;4397:2;4386:9;4382:18;4374:26;;4410:71;4478:1;4467:9;4463:17;4454:6;4410:71;:::i;:::-;4364:124;;;;:::o;4494:373::-;4637:4;4675:2;4664:9;4660:18;4652:26;;4724:9;4718:4;4714:20;4710:1;4699:9;4695:17;4688:47;4752:108;4855:4;4846:6;4752:108;:::i;:::-;4744:116;;4642:225;;;;:::o;4873:826::-;5110:4;5148:3;5137:9;5133:19;5125:27;;5198:9;5192:4;5188:20;5184:1;5173:9;5169:17;5162:47;5226:78;5299:4;5290:6;5226:78;:::i;:::-;5218:86;;5351:9;5345:4;5341:20;5336:2;5325:9;5321:18;5314:48;5379:78;5452:4;5443:6;5379:78;:::i;:::-;5371:86;;5467:72;5535:2;5524:9;5520:18;5511:6;5467:72;:::i;:::-;5586:9;5580:4;5576:20;5571:2;5560:9;5556:18;5549:48;5614:78;5687:4;5678:6;5614:78;:::i;:::-;5606:86;;5115:584;;;;;;;:::o;5705:419::-;5871:4;5909:2;5898:9;5894:18;5886:26;;5958:9;5952:4;5948:20;5944:1;5933:9;5929:17;5922:47;5986:131;6112:4;5986:131;:::i;:::-;5978:139;;5876:248;;;:::o;6130:419::-;6296:4;6334:2;6323:9;6319:18;6311:26;;6383:9;6377:4;6373:20;6369:1;6358:9;6354:17;6347:47;6411:131;6537:4;6411:131;:::i;:::-;6403:139;;6301:248;;;:::o;6555:129::-;6589:6;6616:20;;:::i;:::-;6606:30;;6645:33;6673:4;6665:6;6645:33;:::i;:::-;6596:88;;;:::o;6690:75::-;6723:6;6756:2;6750:9;6740:19;;6730:35;:::o;6771:308::-;6833:4;6923:18;6915:6;6912:30;6909:2;;;6945:18;;:::i;:::-;6909:2;6983:29;7005:6;6983:29;:::i;:::-;6975:37;;7067:4;7061;7057:15;7049:23;;6838:241;;;:::o;7085:132::-;7152:4;7175:3;7167:11;;7205:4;7200:3;7196:14;7188:22;;7157:60;;;:::o;7223:114::-;7290:6;7324:5;7318:12;7308:22;;7297:40;;;:::o;7343:99::-;7395:6;7429:5;7423:12;7413:22;;7402:40;;;:::o;7448:113::-;7518:4;7550;7545:3;7541:14;7533:22;;7523:38;;;:::o;7567:184::-;7666:11;7700:6;7695:3;7688:19;7740:4;7735:3;7731:14;7716:29;;7678:73;;;;:::o;7757:169::-;7841:11;7875:6;7870:3;7863:19;7915:4;7910:3;7906:14;7891:29;;7853:73;;;;:::o;7932:96::-;7969:7;7998:24;8016:5;7998:24;:::i;:::-;7987:35;;7977:51;;;:::o;8034:126::-;8071:7;8111:42;8104:5;8100:54;8089:65;;8079:81;;;:::o;8166:154::-;8250:6;8245:3;8240;8227:30;8312:1;8303:6;8298:3;8294:16;8287:27;8217:103;;;:::o;8326:307::-;8394:1;8404:113;8418:6;8415:1;8412:13;8404:113;;;8503:1;8498:3;8494:11;8488:18;8484:1;8479:3;8475:11;8468:39;8440:2;8437:1;8433:10;8428:15;;8404:113;;;8535:6;8532:1;8529:13;8526:2;;;8615:1;8606:6;8601:3;8597:16;8590:27;8526:2;8375:258;;;;:::o;8639:281::-;8722:27;8744:4;8722:27;:::i;:::-;8714:6;8710:40;8852:6;8840:10;8837:22;8816:18;8804:10;8801:34;8798:62;8795:2;;;8863:18;;:::i;:::-;8795:2;8903:10;8899:2;8892:22;8682:238;;;:::o;8926:180::-;8974:77;8971:1;8964:88;9071:4;9068:1;9061:15;9095:4;9092:1;9085:15;9112:102;9153:6;9204:2;9200:7;9195:2;9188:5;9184:14;9180:28;9170:38;;9160:54;;;:::o;9220:225::-;9360:34;9356:1;9348:6;9344:14;9337:58;9429:8;9424:2;9416:6;9412:15;9405:33;9326:119;:::o;9451:182::-;9591:34;9587:1;9579:6;9575:14;9568:58;9557:76;:::o;9639:122::-;9712:24;9730:5;9712:24;:::i;:::-;9705:5;9702:35;9692:2;;9751:1;9748;9741:12;9692:2;9682:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1906600","executionCost":"infinite","totalCost":"infinite"},"external":{"createAgreement(string,string,string)":"infinite","getAgrrements(address)":"infinite","owner()":"1266","renounceOwnership()":"24420","transferOwnership(address)":"24813"}},"methodIdentifiers":{"createAgreement(string,string,string)":"3c02634e","getAgrrements(address)":"2de333ed","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agreement\",\"type\":\"address\"}],\"name\":\"agreementCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"}],\"name\":\"createAgreement\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getAgrrements\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrypticAgreementFactory.sol\":\"CrypticAgreementFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CrypticAgreement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CrypticAgreement is Ownable {\\n    string name;\\n    string cid;\\n    address creator;\\n    string status;\\n\\n    mapping(address => bool) public signed;\\n    address[] members;\\n    uint256 signedMembers;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _cid,\\n        address _creator,\\n        string memory _status\\n    ) {\\n        name = _name;\\n        cid = _cid;\\n        creator = _creator;\\n        status = _status;\\n    }\\n\\n    function addMembers(address[] memory _members) public {\\n        require(msg.sender == creator, \\\"Only owner can add members\\\");\\n        for (uint256 i = 0; i < _members.length; i++) {\\n            signed[address(_members[i])] = false;\\n            members.push(_members[i]);\\n        }\\n    }\\n\\n    function checkMember(address memberAddress) public view returns (bool) {\\n        bool containsMember = false;\\n        for (uint256 i = 0; i < members.length; i++) {\\n            if (members[i] == memberAddress) {\\n                containsMember = true;\\n            }\\n        }\\n        return containsMember;\\n    }\\n\\n    function signAgreement(address signer) public {\\n        bool containsMember = checkMember(signer);\\n        require(containsMember, \\\"You are not member of this agreement\\\");\\n        require(!signed[signer], \\\"You have already signed agreement\\\");\\n        signed[signer] = true;\\n        signedMembers = signedMembers + 1;\\n    }\\n\\n    function checkAgreementStatus() public view returns (string memory) {\\n        if (signedMembers == members.length) {\\n            return \\\"Signed\\\";\\n        } else {\\n            return \\\"Unsigned\\\";\\n        }\\n    }\\n\\n    function getMembers() public view returns (address[] memory) {\\n        return members;\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return name;\\n    }\\n\\n    function getCid() public view returns (string memory) {\\n        return cid;\\n    }\\n\\n    function setCid(string memory _cid) public {\\n        cid = _cid;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return creator;\\n    }\\n}\\n\",\"keccak256\":\"0xc8bb14d1df95317b71d062545e0a615064792206ede6f9fc1b604039d385aedc\",\"license\":\"MIT\"},\"contracts/CrypticAgreementFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./CrypticAgreement.sol\\\";\\n\\ncontract CrypticAgreementFactory is Ownable {\\n    mapping(address => address[]) private agreemets;\\n\\n    event agreementCreated(address agreement);\\n\\n    function createAgreement(\\n        string memory name,\\n        string memory cid,\\n        string memory status\\n    ) public returns (address) {\\n        CrypticAgreement agreementContract = new CrypticAgreement(\\n            name,\\n            cid,\\n            msg.sender,\\n            status\\n        );\\n        agreemets[msg.sender].push(address(agreementContract));\\n        emit agreementCreated(address(agreementContract));\\n        return address(agreementContract);\\n    }\\n\\n    function getAgrrements(address userAddress)\\n        public\\n        view\\n        returns (address[] memory)\\n    {\\n        return agreemets[userAddress];\\n    }\\n}\\n\",\"keccak256\":\"0xe6a83ec0dec70d972f05a2c0a0bdadc9663a9d749878cd339f5e01020637aa9d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/CrypticAgreementFactory.sol:CrypticAgreementFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2019,"contract":"contracts/CrypticAgreementFactory.sol:CrypticAgreementFactory","label":"agreemets","offset":0,"slot":"1","type":"t_mapping(t_address,t_array(t_address)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CrypticVault.sol":{"CrypticVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"","type":"address"},{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"TokenCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"","type":"address"},{"indexed":false,"internalType":"address","name":"","type":"address"},{"indexed":false,"internalType":"address","name":"","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"TokenTransfered","type":"event"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"name":"bulkMintERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"message","type":"string"}],"name":"createEmergencyAlert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"cid","type":"string"}],"name":"createMembers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"cid","type":"string"}],"name":"createNotes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"name":"createToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"oldCid","type":"string"},{"internalType":"string","name":"newCid","type":"string"},{"internalType":"address","name":"userAddress","type":"address"}],"name":"findAndReplace","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getDocuments","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getEmergencyAlert","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct CrypticVault.emergencyAlert","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"getLoginStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getMembers","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getNotes","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"memberAddress","type":"address"}],"name":"getTransferStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"setTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"string","name":"cid","type":"string"}],"name":"storeDocuments","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address payable","name":"to","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5248 DUP1 PUSH3 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x148 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xBD JUMPI DUP1 PUSH4 0xDDC8BE3B GT PUSH3 0x7B JUMPI DUP1 PUSH4 0xDDC8BE3B EQ PUSH3 0x39F JUMPI DUP1 PUSH4 0xE95FD155 EQ PUSH3 0x3D5 JUMPI DUP1 PUSH4 0xED0704B0 EQ PUSH3 0x40B JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH3 0x42B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x461 JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x2E7 JUMPI DUP1 PUSH4 0xA894B1E4 EQ PUSH3 0x309 JUMPI DUP1 PUSH4 0xB33DF448 EQ PUSH3 0x329 JUMPI DUP1 PUSH4 0xB8D7B669 EQ PUSH3 0x349 JUMPI DUP1 PUSH4 0xC7C82D1C EQ PUSH3 0x37F JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x3E953859 GT PUSH3 0x10B JUMPI DUP1 PUSH4 0x3E953859 EQ PUSH3 0x22F JUMPI DUP1 PUSH4 0x523070E2 EQ PUSH3 0x24F JUMPI DUP1 PUSH4 0x6A663FBC EQ PUSH3 0x26F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x2A5 JUMPI DUP1 PUSH4 0x78544629 EQ PUSH3 0x2B1 JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x10A50690 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x27F50A2D EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0x2C54DE4F EQ PUSH3 0x1B9 JUMPI DUP1 PUSH4 0x2F2F2D56 EQ PUSH3 0x1D9 JUMPI DUP1 PUSH4 0x3B1A0174 EQ PUSH3 0x1F9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17A SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x19B SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B0 SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1D1 SWAP2 SWAP1 PUSH3 0x1808 JUMP JUMPDEST PUSH3 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1F1 SWAP2 SWAP1 PUSH3 0x19ED JUMP JUMPDEST PUSH3 0x814 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x211 SWAP2 SWAP1 PUSH3 0x17C7 JUMP JUMPDEST PUSH3 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x226 SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x247 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x267 SWAP2 SWAP1 PUSH3 0x1997 JUMP JUMPDEST PUSH3 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x287 SWAP2 SWAP1 PUSH3 0x1A60 JUMP JUMPDEST PUSH3 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x29C SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2AF PUSH3 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2C9 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2DE SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2F1 PUSH3 0xEF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x300 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x321 SWAP2 SWAP1 PUSH3 0x18CE JUMP JUMPDEST PUSH3 0xF1E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x341 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0xFE0 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x361 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x376 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x397 SWAP2 SWAP1 PUSH3 0x1956 JUMP JUMPDEST PUSH3 0x10C8 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3CC SWAP2 SWAP1 PUSH3 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3ED SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x402 SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x423 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0x134B JUMP JUMPDEST STOP JUMPDEST PUSH3 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x443 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x458 SWAP2 SWAP1 PUSH3 0x1F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x479 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x1413 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x598 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0x504 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x532 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x583 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x557 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x583 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x565 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x6BA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0x626 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x654 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6A5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x679 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x687 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x604 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68155EC1 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x706 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1DAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA7814AAF178D6C8E61B2703F3DC1B8328DD6C99CBB405BF8F1BB0CB1BBB051A5 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH3 0x806 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH3 0x826 SWAP1 PUSH3 0x15EF JUMP JUMPDEST PUSH3 0x833 SWAP3 SWAP2 SWAP1 PUSH3 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH32 0xD5F9BDF12ADF29DAB0248C349842C3822D53AE2BB4F36352F301630D018C8139 CALLER DUP3 PUSH1 0x40 MLOAD PUSH3 0x886 SWAP3 SWAP2 SWAP1 PUSH3 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9A1 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA3A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40D097C3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F0 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xA20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH3 0xA31 SWAP1 PUSH3 0x219D JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9AC JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xB2A CALLER PUSH1 0x1 DUP4 PUSH3 0xB24 SWAP2 SWAP1 PUSH3 0x2017 JUMP JUMPDEST PUSH3 0x10C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH3 0xDAE JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0xBFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0xC13 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC41 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC92 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC74 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xCAC SWAP2 SWAP1 PUSH3 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xCD5 SWAP2 SWAP1 PUSH3 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH3 0xD97 JUMPI DUP5 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0xD6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD8A SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP PUSH3 0xDB4 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xDA5 SWAP1 PUSH3 0x219D JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB37 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0xDC5 PUSH3 0x149E JUMP JUMPDEST PUSH3 0xDD1 PUSH1 0x0 PUSH3 0x1523 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0xEEA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0xE56 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xE84 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xED5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xEA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xED5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xEB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xE34 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFBE SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFD9 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x105A SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH3 0x111A PUSH3 0x168E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x11CC SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x11FA SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x124B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x121F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x124B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x122D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH3 0x1266 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x1294 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x12E5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x12B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x12E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x12C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x13C5 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x141D PUSH3 0x149E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1487 SWAP1 PUSH3 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x149B DUP2 PUSH3 0x1523 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x14A8 PUSH3 0x15E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x14C8 PUSH3 0xEF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1521 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1518 SWAP1 PUSH3 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2EC3 DUP1 PUSH3 0x2350 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x160B SWAP1 PUSH3 0x2131 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x162F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x167B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x164A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x167B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x167B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x167A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x165D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x168A SWAP2 SWAP1 PUSH3 0x16C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16E0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x16C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16FB PUSH3 0x16F5 DUP5 PUSH3 0x1F70 JUMP JUMPDEST PUSH3 0x1F47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1721 DUP5 DUP3 DUP6 PUSH3 0x20EC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x173A DUP2 PUSH3 0x2301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1751 DUP2 PUSH3 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x177B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1795 DUP2 PUSH3 0x2335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17BE DUP5 DUP3 DUP6 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17EB DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x17FE DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x182F DUP8 DUP3 DUP9 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x1842 DUP8 DUP3 DUP9 ADD PUSH3 0x1740 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x1855 DUP8 DUP3 DUP9 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x1868 DUP8 DUP3 DUP9 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1898 DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x18B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x18C4 DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x18F4 DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1920 DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x194C DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x197A DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x198D DUP6 DUP3 DUP7 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x19BD DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x19D0 DUP7 DUP3 DUP8 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x19E3 DUP7 DUP3 DUP8 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A2A DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A56 DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A9F DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1ACB DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1ADE DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AF6 DUP4 DUP4 PUSH3 0x1BD4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1B09 DUP2 PUSH3 0x20B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B1A DUP2 PUSH3 0x2066 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B2B DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B3C DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B4F DUP3 PUSH3 0x1FB6 JUMP JUMPDEST PUSH3 0x1B5B DUP2 DUP6 PUSH3 0x1FD9 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH3 0x1B6F DUP6 PUSH3 0x1FA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x1BB1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH3 0x1B8F DUP6 DUP3 PUSH3 0x1AE8 JUMP JUMPDEST SWAP5 POP PUSH3 0x1B9C DUP4 PUSH3 0x1FCC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1B73 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1BCE DUP2 PUSH3 0x207A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BE1 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1BED DUP2 DUP6 PUSH3 0x1FEA JUMP JUMPDEST SWAP4 POP PUSH3 0x1BFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST PUSH3 0x1C0A DUP2 PUSH3 0x2278 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C22 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1C2E DUP2 DUP6 PUSH3 0x1FFB JUMP JUMPDEST SWAP4 POP PUSH3 0x1C40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST PUSH3 0x1C4B DUP2 PUSH3 0x2278 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C63 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1C6F DUP2 DUP6 PUSH3 0x200C JUMP JUMPDEST SWAP4 POP PUSH3 0x1C81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C9C PUSH1 0x26 DUP4 PUSH3 0x1FFB JUMP JUMPDEST SWAP2 POP PUSH3 0x1CA9 DUP3 PUSH3 0x2289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CC3 PUSH1 0x20 DUP4 PUSH3 0x1FFB JUMP JUMPDEST SWAP2 POP PUSH3 0x1CD0 DUP3 PUSH3 0x22D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH3 0x1CF5 PUSH1 0x0 DUP7 ADD DUP3 PUSH3 0x1B20 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH3 0x1D0F DUP3 DUP3 PUSH3 0x1BD4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH3 0x1D2B DUP3 DUP3 PUSH3 0x1BD4 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1D43 DUP2 PUSH3 0x20A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D57 DUP3 DUP5 PUSH3 0x1C56 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1D79 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1D96 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1B31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1DC3 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DD2 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1B0F JUMP JUMPDEST PUSH3 0x1DE1 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DF0 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1E10 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1E1F PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1AFE JUMP JUMPDEST PUSH3 0x1E2E PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1E3D PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1E62 DUP2 DUP5 PUSH3 0x1B42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1E81 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EA3 DUP2 DUP6 PUSH3 0x1C15 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x1EB9 DUP2 DUP5 PUSH3 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EDD DUP2 PUSH3 0x1C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EFF DUP2 PUSH3 0x1CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1F22 DUP2 DUP5 PUSH3 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1F41 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F53 PUSH3 0x1F66 JUMP JUMPDEST SWAP1 POP PUSH3 0x1F61 DUP3 DUP3 PUSH3 0x2167 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F8E JUMPI PUSH3 0x1F8D PUSH3 0x2249 JUMP JUMPDEST JUMPDEST PUSH3 0x1F99 DUP3 PUSH3 0x2278 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2024 DUP3 PUSH3 0x20A6 JUMP JUMPDEST SWAP2 POP PUSH3 0x2031 DUP4 PUSH3 0x20A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x2047 JUMPI PUSH3 0x2046 PUSH3 0x21EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x205F DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2073 DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20BD DUP3 PUSH3 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20D1 DUP3 PUSH3 0x20D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20E5 DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x211B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20FE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x212B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x214A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2161 JUMPI PUSH3 0x2160 PUSH3 0x221A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2172 DUP3 PUSH3 0x2278 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2194 JUMPI PUSH3 0x2193 PUSH3 0x2249 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21AA DUP3 PUSH3 0x20A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH3 0x21E0 JUMPI PUSH3 0x21DF PUSH3 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x230C DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP2 EQ PUSH3 0x2318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2326 DUP2 PUSH3 0x2066 JUMP JUMPDEST DUP2 EQ PUSH3 0x2332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2340 DUP2 PUSH3 0x20A6 JUMP JUMPDEST DUP2 EQ PUSH3 0x234C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EC3 CODESIZE SUB DUP1 PUSH3 0x2EC3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x197 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x37A JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x83 SWAP1 PUSH3 0x29F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x106 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x107 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13C PUSH3 0x136 DUP5 PUSH3 0x233 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x162 DUP5 DUP3 DUP6 PUSH3 0x269 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D4 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x200 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x216 PUSH3 0x229 JUMP JUMPDEST SWAP1 POP PUSH3 0x224 DUP3 DUP3 PUSH3 0x2D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x33A JUMP JUMPDEST JUMPDEST PUSH3 0x25C DUP3 PUSH3 0x369 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x289 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x26C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x30B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E0 DUP3 PUSH3 0x369 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x302 JUMPI PUSH3 0x301 PUSH3 0x33A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B39 DUP1 PUSH3 0x38A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x68155EC1 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F4 DUP3 PUSH2 0xB9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0xC72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5DD JUMPI POP PUSH2 0x5DC DUP2 PUSH2 0x5D7 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x635 DUP4 DUP3 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 PUSH1 0x6 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x69C PUSH1 0x6 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x6A6 DUP3 DUP3 PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x899 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x992 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x9F4 PUSH2 0xC72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0A PUSH2 0xC72 JUMP JUMPDEST DUP4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1227 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6C DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST DUP1 PUSH2 0xADF DUP5 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCED DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDF7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDF DUP5 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE08 JUMPI POP PUSH2 0xE07 DUP2 DUP6 PUSH2 0xB08 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE31 DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEE SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x0 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB4 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1073 DUP4 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1232 DUP5 DUP5 DUP5 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x123E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12A9 DUP5 PUSH2 0x15BA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1320 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x139D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CB JUMP JUMPDEST ISZERO PUSH2 0x15AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x146D PUSH2 0xC72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14DA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x155D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154C SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x163E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1634 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16A1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16F6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1745 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x173B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1790 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1786 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186A DUP2 PUSH2 0xC06 JUMP JUMPDEST ISZERO PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH2 0x19FC DUP5 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A24 DUP5 DUP3 DUP6 PUSH2 0x251E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3B DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A50 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACE DUP2 PUSH2 0x2AEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2F DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B6E DUP8 DUP3 DUP9 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B7F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B90 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE1 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C20 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C31 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5A DUP8 DUP3 DUP9 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP5 DUP3 DUP6 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x24E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D91 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH2 0x1D9B DUP2 DUP6 PUSH2 0x23AB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCA DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1DD4 DUP2 DUP6 PUSH2 0x23BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DED DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1E0D DUP2 DUP6 PUSH2 0x23CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E36 PUSH1 0x32 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP3 PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x25 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7C PUSH1 0x1C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9F PUSH1 0x24 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC2 PUSH1 0x19 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 PUSH1 0x38 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2B PUSH1 0x2A DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F36 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x29 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F71 PUSH1 0x22 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7C DUP3 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x2F DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFD PUSH1 0x21 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x2008 DUP3 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 PUSH1 0x31 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x20B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 DUP5 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213C DUP2 DUP5 PUSH2 0x1DBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215D DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217D DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BD DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DD DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x223D DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227D DUP2 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22BD DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DD DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2349 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH2 0x2355 DUP3 DUP3 PUSH2 0x2592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x237F JUMPI PUSH2 0x237E PUSH2 0x2621 JUMP JUMPDEST JUMPDEST PUSH2 0x2388 DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x23EE DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2439 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x250C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x254B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2530 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2578 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259B DUP3 PUSH2 0x2650 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x2621 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AB0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2492 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBC 0xE6 CODESIZE 0x49 MSIZE 0x22 SLT 0xF7 0xC 0xD7 0xEF 0xDA SAR 0xD8 DUP3 CODECOPY 0xC5 PUSH22 0x192637041649B08062EBB9F12964736F6C6343000804 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD DUP5 0x2B 0xB5 0x2B 0xD8 SWAP1 SWAP5 XOR CALLDATACOPY 0xCF NOT EQ DUP16 DUP14 0x5D INVALID 0xAE PUSH17 0x6B1EBC9A6928B62E343F00B6C164736F6C PUSH4 0x43000804 STOP CALLER ","sourceMap":"204:4452:13:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;204:4452:13;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;204:4452:13:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21323:21","statements":[{"body":{"nodeType":"YulBlock","src":"91:261:21","statements":[{"nodeType":"YulAssignment","src":"101:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:21"},"nodeType":"YulFunctionCall","src":"126:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:21"},"nodeType":"YulFunctionCall","src":"110:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:21"},"nodeType":"YulFunctionCall","src":"185:21:21"},"nodeType":"YulExpressionStatement","src":"185:21:21"},{"nodeType":"YulVariableDeclaration","src":"215:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:21"},"nodeType":"YulFunctionCall","src":"226:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"289:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"292:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"282:6:21"},"nodeType":"YulFunctionCall","src":"282:12:21"},"nodeType":"YulExpressionStatement","src":"282:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:21"},"nodeType":"YulFunctionCall","src":"257:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:21"},"nodeType":"YulFunctionCall","src":"254:25:21"},"nodeType":"YulIf","src":"251:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"329:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"334:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"339:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"305:23:21"},"nodeType":"YulFunctionCall","src":"305:41:21"},"nodeType":"YulExpressionStatement","src":"305:41:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:21","type":""}],"src":"7:345:21"},{"body":{"nodeType":"YulBlock","src":"410:87:21","statements":[{"nodeType":"YulAssignment","src":"420:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"442:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"429:12:21"},"nodeType":"YulFunctionCall","src":"429:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"420:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"458:26:21"},"nodeType":"YulFunctionCall","src":"458:33:21"},"nodeType":"YulExpressionStatement","src":"458:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"388:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"396:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"404:5:21","type":""}],"src":"358:139:21"},{"body":{"nodeType":"YulBlock","src":"563:95:21","statements":[{"nodeType":"YulAssignment","src":"573:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"595:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"582:12:21"},"nodeType":"YulFunctionCall","src":"582:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"573:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"646:5:21"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"611:34:21"},"nodeType":"YulFunctionCall","src":"611:41:21"},"nodeType":"YulExpressionStatement","src":"611:41:21"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"541:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"549:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"557:5:21","type":""}],"src":"503:155:21"},{"body":{"nodeType":"YulBlock","src":"740:211:21","statements":[{"body":{"nodeType":"YulBlock","src":"789:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"798:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"801:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"791:6:21"},"nodeType":"YulFunctionCall","src":"791:12:21"},"nodeType":"YulExpressionStatement","src":"791:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"768:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"776:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:21"},"nodeType":"YulFunctionCall","src":"764:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"783:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"760:3:21"},"nodeType":"YulFunctionCall","src":"760:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"753:6:21"},"nodeType":"YulFunctionCall","src":"753:35:21"},"nodeType":"YulIf","src":"750:2:21"},{"nodeType":"YulVariableDeclaration","src":"814:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"841:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"828:12:21"},"nodeType":"YulFunctionCall","src":"828:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"818:6:21","type":""}]},{"nodeType":"YulAssignment","src":"857:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"918:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"926:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"914:3:21"},"nodeType":"YulFunctionCall","src":"914:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"933:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"941:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"866:47:21"},"nodeType":"YulFunctionCall","src":"866:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"857:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"718:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"726:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"734:5:21","type":""}],"src":"678:273:21"},{"body":{"nodeType":"YulBlock","src":"1009:87:21","statements":[{"nodeType":"YulAssignment","src":"1019:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1041:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1028:12:21"},"nodeType":"YulFunctionCall","src":"1028:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1084:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1057:26:21"},"nodeType":"YulFunctionCall","src":"1057:33:21"},"nodeType":"YulExpressionStatement","src":"1057:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"987:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"995:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1003:5:21","type":""}],"src":"957:139:21"},{"body":{"nodeType":"YulBlock","src":"1168:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"1214:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1223:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1226:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1216:6:21"},"nodeType":"YulFunctionCall","src":"1216:12:21"},"nodeType":"YulExpressionStatement","src":"1216:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1189:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1198:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1185:3:21"},"nodeType":"YulFunctionCall","src":"1185:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1210:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1181:3:21"},"nodeType":"YulFunctionCall","src":"1181:32:21"},"nodeType":"YulIf","src":"1178:2:21"},{"nodeType":"YulBlock","src":"1240:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1269:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1259:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1284:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1330:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1339:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1294:20:21"},"nodeType":"YulFunctionCall","src":"1294:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1284:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1138:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1149:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1161:6:21","type":""}],"src":"1102:262:21"},{"body":{"nodeType":"YulBlock","src":"1453:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"1499:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1501:6:21"},"nodeType":"YulFunctionCall","src":"1501:12:21"},"nodeType":"YulExpressionStatement","src":"1501:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1474:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1470:3:21"},"nodeType":"YulFunctionCall","src":"1470:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1495:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1466:3:21"},"nodeType":"YulFunctionCall","src":"1466:32:21"},"nodeType":"YulIf","src":"1463:2:21"},{"nodeType":"YulBlock","src":"1525:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1540:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1554:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1544:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1569:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1604:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1615:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1600:3:21"},"nodeType":"YulFunctionCall","src":"1600:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1624:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1579:20:21"},"nodeType":"YulFunctionCall","src":"1579:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1569:6:21"}]}]},{"nodeType":"YulBlock","src":"1652:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1667:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1681:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1671:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1697:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1732:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1743:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1728:3:21"},"nodeType":"YulFunctionCall","src":"1728:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1752:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1707:20:21"},"nodeType":"YulFunctionCall","src":"1707:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1697:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1415:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1426:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1438:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1446:6:21","type":""}],"src":"1370:407:21"},{"body":{"nodeType":"YulBlock","src":"1908:589:21","statements":[{"body":{"nodeType":"YulBlock","src":"1955:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1964:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1967:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1957:6:21"},"nodeType":"YulFunctionCall","src":"1957:12:21"},"nodeType":"YulExpressionStatement","src":"1957:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1929:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1938:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1925:3:21"},"nodeType":"YulFunctionCall","src":"1925:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1950:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1921:3:21"},"nodeType":"YulFunctionCall","src":"1921:33:21"},"nodeType":"YulIf","src":"1918:2:21"},{"nodeType":"YulBlock","src":"1981:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1996:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2010:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2000:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2025:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2060:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2071:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2056:3:21"},"nodeType":"YulFunctionCall","src":"2056:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2080:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2035:20:21"},"nodeType":"YulFunctionCall","src":"2035:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2025:6:21"}]}]},{"nodeType":"YulBlock","src":"2108:126:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2123:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2137:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2127:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2153:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2196:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2207:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2192:3:21"},"nodeType":"YulFunctionCall","src":"2192:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2216:7:21"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2163:28:21"},"nodeType":"YulFunctionCall","src":"2163:61:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2153:6:21"}]}]},{"nodeType":"YulBlock","src":"2244:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2259:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2273:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2263:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2289:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2324:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2335:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2320:3:21"},"nodeType":"YulFunctionCall","src":"2320:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2344:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2299:20:21"},"nodeType":"YulFunctionCall","src":"2299:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2289:6:21"}]}]},{"nodeType":"YulBlock","src":"2372:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2387:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2401:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2391:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2417:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2452:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2463:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2448:3:21"},"nodeType":"YulFunctionCall","src":"2448:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2472:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2427:20:21"},"nodeType":"YulFunctionCall","src":"2427:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2417:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_payablet_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1854:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1865:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1877:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1885:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1893:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1901:6:21","type":""}],"src":"1783:714:21"},{"body":{"nodeType":"YulBlock","src":"2596:427:21","statements":[{"body":{"nodeType":"YulBlock","src":"2642:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2651:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2654:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2644:6:21"},"nodeType":"YulFunctionCall","src":"2644:12:21"},"nodeType":"YulExpressionStatement","src":"2644:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2617:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2626:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2613:3:21"},"nodeType":"YulFunctionCall","src":"2613:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2638:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2609:3:21"},"nodeType":"YulFunctionCall","src":"2609:32:21"},"nodeType":"YulIf","src":"2606:2:21"},{"nodeType":"YulBlock","src":"2668:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2683:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2697:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2687:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2712:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2747:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2758:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2743:3:21"},"nodeType":"YulFunctionCall","src":"2743:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2767:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2722:20:21"},"nodeType":"YulFunctionCall","src":"2722:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2712:6:21"}]}]},{"nodeType":"YulBlock","src":"2795:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2810:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2841:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2852:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2837:3:21"},"nodeType":"YulFunctionCall","src":"2837:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2824:12:21"},"nodeType":"YulFunctionCall","src":"2824:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2814:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2903:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2912:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2915:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2905:6:21"},"nodeType":"YulFunctionCall","src":"2905:12:21"},"nodeType":"YulExpressionStatement","src":"2905:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2883:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2872:2:21"},"nodeType":"YulFunctionCall","src":"2872:30:21"},"nodeType":"YulIf","src":"2869:2:21"},{"nodeType":"YulAssignment","src":"2933:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2978:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2989:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2974:3:21"},"nodeType":"YulFunctionCall","src":"2974:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2998:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2943:30:21"},"nodeType":"YulFunctionCall","src":"2943:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2558:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2569:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2581:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2589:6:21","type":""}],"src":"2503:520:21"},{"body":{"nodeType":"YulBlock","src":"3149:658:21","statements":[{"body":{"nodeType":"YulBlock","src":"3195:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3204:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3207:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3197:6:21"},"nodeType":"YulFunctionCall","src":"3197:12:21"},"nodeType":"YulExpressionStatement","src":"3197:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3170:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3179:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3166:3:21"},"nodeType":"YulFunctionCall","src":"3166:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3191:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3162:3:21"},"nodeType":"YulFunctionCall","src":"3162:32:21"},"nodeType":"YulIf","src":"3159:2:21"},{"nodeType":"YulBlock","src":"3221:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3236:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3250:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3240:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3265:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3300:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3311:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3296:3:21"},"nodeType":"YulFunctionCall","src":"3296:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3320:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3275:20:21"},"nodeType":"YulFunctionCall","src":"3275:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3265:6:21"}]}]},{"nodeType":"YulBlock","src":"3348:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3363:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3394:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3390:3:21"},"nodeType":"YulFunctionCall","src":"3390:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3377:12:21"},"nodeType":"YulFunctionCall","src":"3377:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3367:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3456:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3465:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3458:6:21"},"nodeType":"YulFunctionCall","src":"3458:12:21"},"nodeType":"YulExpressionStatement","src":"3458:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3428:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3436:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3425:2:21"},"nodeType":"YulFunctionCall","src":"3425:30:21"},"nodeType":"YulIf","src":"3422:2:21"},{"nodeType":"YulAssignment","src":"3486:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3531:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3542:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:21"},"nodeType":"YulFunctionCall","src":"3527:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3551:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3496:30:21"},"nodeType":"YulFunctionCall","src":"3496:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3486:6:21"}]}]},{"nodeType":"YulBlock","src":"3579:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3594:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3625:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3636:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:21"},"nodeType":"YulFunctionCall","src":"3621:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3608:12:21"},"nodeType":"YulFunctionCall","src":"3608:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3598:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3687:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3696:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3699:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3689:6:21"},"nodeType":"YulFunctionCall","src":"3689:12:21"},"nodeType":"YulExpressionStatement","src":"3689:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3659:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3667:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3656:2:21"},"nodeType":"YulFunctionCall","src":"3656:30:21"},"nodeType":"YulIf","src":"3653:2:21"},{"nodeType":"YulAssignment","src":"3717:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3762:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3773:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3758:3:21"},"nodeType":"YulFunctionCall","src":"3758:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3782:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3727:30:21"},"nodeType":"YulFunctionCall","src":"3727:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3717:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3103:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3114:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3126:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3134:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3142:6:21","type":""}],"src":"3029:778:21"},{"body":{"nodeType":"YulBlock","src":"3896:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"3942:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3951:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3954:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3944:6:21"},"nodeType":"YulFunctionCall","src":"3944:12:21"},"nodeType":"YulExpressionStatement","src":"3944:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3917:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3926:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3913:3:21"},"nodeType":"YulFunctionCall","src":"3913:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3938:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3909:3:21"},"nodeType":"YulFunctionCall","src":"3909:32:21"},"nodeType":"YulIf","src":"3906:2:21"},{"nodeType":"YulBlock","src":"3968:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3983:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3997:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3987:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4012:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4058:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:21"},"nodeType":"YulFunctionCall","src":"4043:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4067:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4022:20:21"},"nodeType":"YulFunctionCall","src":"4022:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4012:6:21"}]}]},{"nodeType":"YulBlock","src":"4095:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4110:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4124:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4114:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4140:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4175:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4186:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4171:3:21"},"nodeType":"YulFunctionCall","src":"4171:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4195:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4150:20:21"},"nodeType":"YulFunctionCall","src":"4150:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4140:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3858:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3869:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3881:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3889:6:21","type":""}],"src":"3813:407:21"},{"body":{"nodeType":"YulBlock","src":"4326:452:21","statements":[{"body":{"nodeType":"YulBlock","src":"4372:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4381:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4384:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4374:6:21"},"nodeType":"YulFunctionCall","src":"4374:12:21"},"nodeType":"YulExpressionStatement","src":"4374:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4347:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4356:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4343:3:21"},"nodeType":"YulFunctionCall","src":"4343:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4368:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4339:3:21"},"nodeType":"YulFunctionCall","src":"4339:32:21"},"nodeType":"YulIf","src":"4336:2:21"},{"nodeType":"YulBlock","src":"4398:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4413:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4427:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4417:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4442:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4477:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4488:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4473:3:21"},"nodeType":"YulFunctionCall","src":"4473:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4497:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4452:20:21"},"nodeType":"YulFunctionCall","src":"4452:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4442:6:21"}]}]},{"nodeType":"YulBlock","src":"4525:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4540:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4554:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4544:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4570:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4605:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4616:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4601:3:21"},"nodeType":"YulFunctionCall","src":"4601:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4625:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4580:20:21"},"nodeType":"YulFunctionCall","src":"4580:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4570:6:21"}]}]},{"nodeType":"YulBlock","src":"4653:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4668:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4682:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4672:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4698:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4744:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4729:3:21"},"nodeType":"YulFunctionCall","src":"4729:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4753:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4708:20:21"},"nodeType":"YulFunctionCall","src":"4708:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4698:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4280:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4291:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4303:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4311:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4319:6:21","type":""}],"src":"4226:552:21"},{"body":{"nodeType":"YulBlock","src":"4887:530:21","statements":[{"body":{"nodeType":"YulBlock","src":"4933:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4942:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4945:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4935:6:21"},"nodeType":"YulFunctionCall","src":"4935:12:21"},"nodeType":"YulExpressionStatement","src":"4935:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4908:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4917:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4904:3:21"},"nodeType":"YulFunctionCall","src":"4904:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4929:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4900:3:21"},"nodeType":"YulFunctionCall","src":"4900:32:21"},"nodeType":"YulIf","src":"4897:2:21"},{"nodeType":"YulBlock","src":"4959:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4974:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5016:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5001:3:21"},"nodeType":"YulFunctionCall","src":"5001:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4988:12:21"},"nodeType":"YulFunctionCall","src":"4988:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4978:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5066:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5075:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5078:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5068:6:21"},"nodeType":"YulFunctionCall","src":"5068:12:21"},"nodeType":"YulExpressionStatement","src":"5068:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5038:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5046:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5035:2:21"},"nodeType":"YulFunctionCall","src":"5035:30:21"},"nodeType":"YulIf","src":"5032:2:21"},{"nodeType":"YulAssignment","src":"5096:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5141:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5152:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5137:3:21"},"nodeType":"YulFunctionCall","src":"5137:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5161:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5106:30:21"},"nodeType":"YulFunctionCall","src":"5106:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5096:6:21"}]}]},{"nodeType":"YulBlock","src":"5189:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5204:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5246:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5231:3:21"},"nodeType":"YulFunctionCall","src":"5231:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5218:12:21"},"nodeType":"YulFunctionCall","src":"5218:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5208:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5297:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5306:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5309:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5299:6:21"},"nodeType":"YulFunctionCall","src":"5299:12:21"},"nodeType":"YulExpressionStatement","src":"5299:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5269:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5277:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5266:2:21"},"nodeType":"YulFunctionCall","src":"5266:30:21"},"nodeType":"YulIf","src":"5263:2:21"},{"nodeType":"YulAssignment","src":"5327:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5368:3:21"},"nodeType":"YulFunctionCall","src":"5368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5392:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5337:30:21"},"nodeType":"YulFunctionCall","src":"5337:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5327:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4849:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4860:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4872:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4880:6:21","type":""}],"src":"4784:633:21"},{"body":{"nodeType":"YulBlock","src":"5543:658:21","statements":[{"body":{"nodeType":"YulBlock","src":"5589:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5598:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5601:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5591:6:21"},"nodeType":"YulFunctionCall","src":"5591:12:21"},"nodeType":"YulExpressionStatement","src":"5591:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5564:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5573:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5560:3:21"},"nodeType":"YulFunctionCall","src":"5560:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5585:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5556:3:21"},"nodeType":"YulFunctionCall","src":"5556:32:21"},"nodeType":"YulIf","src":"5553:2:21"},{"nodeType":"YulBlock","src":"5615:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5630:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5661:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5672:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5657:3:21"},"nodeType":"YulFunctionCall","src":"5657:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5644:12:21"},"nodeType":"YulFunctionCall","src":"5644:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5634:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5722:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5731:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5734:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5724:6:21"},"nodeType":"YulFunctionCall","src":"5724:12:21"},"nodeType":"YulExpressionStatement","src":"5724:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5694:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5702:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5691:2:21"},"nodeType":"YulFunctionCall","src":"5691:30:21"},"nodeType":"YulIf","src":"5688:2:21"},{"nodeType":"YulAssignment","src":"5752:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5797:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5808:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5793:3:21"},"nodeType":"YulFunctionCall","src":"5793:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5817:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5762:30:21"},"nodeType":"YulFunctionCall","src":"5762:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5752:6:21"}]}]},{"nodeType":"YulBlock","src":"5845:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5860:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5902:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:21"},"nodeType":"YulFunctionCall","src":"5887:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5874:12:21"},"nodeType":"YulFunctionCall","src":"5874:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5864:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5953:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5962:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5965:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5955:6:21"},"nodeType":"YulFunctionCall","src":"5955:12:21"},"nodeType":"YulExpressionStatement","src":"5955:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5925:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5933:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5922:2:21"},"nodeType":"YulFunctionCall","src":"5922:30:21"},"nodeType":"YulIf","src":"5919:2:21"},{"nodeType":"YulAssignment","src":"5983:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6039:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:21"},"nodeType":"YulFunctionCall","src":"6024:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6048:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5993:30:21"},"nodeType":"YulFunctionCall","src":"5993:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5983:6:21"}]}]},{"nodeType":"YulBlock","src":"6076:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6091:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6105:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6095:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6121:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6156:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6167:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6152:3:21"},"nodeType":"YulFunctionCall","src":"6152:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6176:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6131:20:21"},"nodeType":"YulFunctionCall","src":"6131:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6121:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5497:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5508:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5520:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5528:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5536:6:21","type":""}],"src":"5423:778:21"},{"body":{"nodeType":"YulBlock","src":"6307:96:21","statements":[{"nodeType":"YulAssignment","src":"6317:80:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6385:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"6393:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6331:53:21"},"nodeType":"YulFunctionCall","src":"6331:66:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6317:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6280:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6288:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6296:10:21","type":""}],"src":"6207:196:21"},{"body":{"nodeType":"YulBlock","src":"6482:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6499:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6543:5:21"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"6504:38:21"},"nodeType":"YulFunctionCall","src":"6504:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6492:6:21"},"nodeType":"YulFunctionCall","src":"6492:58:21"},"nodeType":"YulExpressionStatement","src":"6492:58:21"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6470:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6477:3:21","type":""}],"src":"6409:147:21"},{"body":{"nodeType":"YulBlock","src":"6643:61:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6660:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6691:5:21"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"6665:25:21"},"nodeType":"YulFunctionCall","src":"6665:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:21"},"nodeType":"YulFunctionCall","src":"6653:45:21"},"nodeType":"YulExpressionStatement","src":"6653:45:21"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6631:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6638:3:21","type":""}],"src":"6562:142:21"},{"body":{"nodeType":"YulBlock","src":"6765:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6782:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6805:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6787:17:21"},"nodeType":"YulFunctionCall","src":"6787:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6775:6:21"},"nodeType":"YulFunctionCall","src":"6775:37:21"},"nodeType":"YulExpressionStatement","src":"6775:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6753:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6760:3:21","type":""}],"src":"6710:108:21"},{"body":{"nodeType":"YulBlock","src":"6889:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6906:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6929:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6911:17:21"},"nodeType":"YulFunctionCall","src":"6911:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6899:6:21"},"nodeType":"YulFunctionCall","src":"6899:37:21"},"nodeType":"YulExpressionStatement","src":"6899:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6877:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6884:3:21","type":""}],"src":"6824:118:21"},{"body":{"nodeType":"YulBlock","src":"7120:847:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7130:78:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7202:5:21"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7144:57:21"},"nodeType":"YulFunctionCall","src":"7144:64:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7134:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7217:103:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7308:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7313:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7224:83:21"},"nodeType":"YulFunctionCall","src":"7224:96:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7217:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"7329:20:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"7346:3:21"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"7333:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7358:39:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7374:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7383:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7391:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7379:3:21"},"nodeType":"YulFunctionCall","src":"7379:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7370:3:21"},"nodeType":"YulFunctionCall","src":"7370:27:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7362:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7406:81:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7481:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7421:59:21"},"nodeType":"YulFunctionCall","src":"7421:66:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7410:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7496:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7510:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7500:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7586:336:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7607:3:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7616:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7622:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7612:3:21"},"nodeType":"YulFunctionCall","src":"7612:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7600:6:21"},"nodeType":"YulFunctionCall","src":"7600:33:21"},"nodeType":"YulExpressionStatement","src":"7600:33:21"},{"nodeType":"YulVariableDeclaration","src":"7646:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7673:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7667:5:21"},"nodeType":"YulFunctionCall","src":"7667:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7650:13:21","type":""}]},{"nodeType":"YulAssignment","src":"7693:92:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7765:13:21"},{"name":"tail","nodeType":"YulIdentifier","src":"7780:4:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7701:63:21"},"nodeType":"YulFunctionCall","src":"7701:84:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7693:4:21"}]},{"nodeType":"YulAssignment","src":"7798:80:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7871:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7808:62:21"},"nodeType":"YulFunctionCall","src":"7808:70:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7798:6:21"}]},{"nodeType":"YulAssignment","src":"7891:21:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7902:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7907:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7898:3:21"},"nodeType":"YulFunctionCall","src":"7898:14:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7891:3:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7548:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"7551:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7545:2:21"},"nodeType":"YulFunctionCall","src":"7545:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7559:18:21","statements":[{"nodeType":"YulAssignment","src":"7561:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7570:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7573:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7566:3:21"},"nodeType":"YulFunctionCall","src":"7566:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7561:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7530:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7532:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7541:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7536:1:21","type":""}]}]},"src":"7526:396:21"},{"nodeType":"YulAssignment","src":"7931:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"7938:4:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7931:3:21"}]},{"nodeType":"YulAssignment","src":"7951:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"7958:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7951:3:21"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7099:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7106:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7115:3:21","type":""}],"src":"6976:991:21"},{"body":{"nodeType":"YulBlock","src":"8032:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8049:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8069:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8054:14:21"},"nodeType":"YulFunctionCall","src":"8054:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:21"},"nodeType":"YulFunctionCall","src":"8042:34:21"},"nodeType":"YulExpressionStatement","src":"8042:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8020:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8027:3:21","type":""}],"src":"7973:109:21"},{"body":{"nodeType":"YulBlock","src":"8170:262:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8180:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8227:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8194:32:21"},"nodeType":"YulFunctionCall","src":"8194:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8184:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8242:68:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8298:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8303:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8249:48:21"},"nodeType":"YulFunctionCall","src":"8249:61:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8242:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8345:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8352:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8341:3:21"},"nodeType":"YulFunctionCall","src":"8341:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"8359:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8364:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8319:21:21"},"nodeType":"YulFunctionCall","src":"8319:52:21"},"nodeType":"YulExpressionStatement","src":"8319:52:21"},{"nodeType":"YulAssignment","src":"8380:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8391:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8418:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8396:21:21"},"nodeType":"YulFunctionCall","src":"8396:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8387:3:21"},"nodeType":"YulFunctionCall","src":"8387:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8380:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8151:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8158:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8166:3:21","type":""}],"src":"8088:344:21"},{"body":{"nodeType":"YulBlock","src":"8530:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8540:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8554:32:21"},"nodeType":"YulFunctionCall","src":"8554:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8544:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8602:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8668:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8673:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8609:58:21"},"nodeType":"YulFunctionCall","src":"8609:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8602:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8715:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8722:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8711:3:21"},"nodeType":"YulFunctionCall","src":"8711:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"8729:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8734:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8689:21:21"},"nodeType":"YulFunctionCall","src":"8689:52:21"},"nodeType":"YulExpressionStatement","src":"8689:52:21"},{"nodeType":"YulAssignment","src":"8750:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8761:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8788:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8766:21:21"},"nodeType":"YulFunctionCall","src":"8766:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8757:3:21"},"nodeType":"YulFunctionCall","src":"8757:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8750:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8511:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8518:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8526:3:21","type":""}],"src":"8438:364:21"},{"body":{"nodeType":"YulBlock","src":"8918:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8928:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8975:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8942:32:21"},"nodeType":"YulFunctionCall","src":"8942:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8932:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8990:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9074:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9079:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8997:76:21"},"nodeType":"YulFunctionCall","src":"8997:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8990:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9121:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9128:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9117:3:21"},"nodeType":"YulFunctionCall","src":"9117:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"9135:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9140:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9095:21:21"},"nodeType":"YulFunctionCall","src":"9095:52:21"},"nodeType":"YulExpressionStatement","src":"9095:52:21"},{"nodeType":"YulAssignment","src":"9156:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9167:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9172:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9163:3:21"},"nodeType":"YulFunctionCall","src":"9163:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9156:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8899:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8906:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8914:3:21","type":""}],"src":"8808:377:21"},{"body":{"nodeType":"YulBlock","src":"9337:220:21","statements":[{"nodeType":"YulAssignment","src":"9347:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9413:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9418:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9354:58:21"},"nodeType":"YulFunctionCall","src":"9354:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9347:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9519:3:21"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"9430:88:21"},"nodeType":"YulFunctionCall","src":"9430:93:21"},"nodeType":"YulExpressionStatement","src":"9430:93:21"},{"nodeType":"YulAssignment","src":"9532:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9543:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9548:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9539:3:21"},"nodeType":"YulFunctionCall","src":"9539:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9532:3:21"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9325:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9333:3:21","type":""}],"src":"9191:366:21"},{"body":{"nodeType":"YulBlock","src":"9709:220:21","statements":[{"nodeType":"YulAssignment","src":"9719:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9785:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9790:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9726:58:21"},"nodeType":"YulFunctionCall","src":"9726:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9719:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9891:3:21"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"9802:88:21"},"nodeType":"YulFunctionCall","src":"9802:93:21"},"nodeType":"YulExpressionStatement","src":"9802:93:21"},{"nodeType":"YulAssignment","src":"9904:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9915:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9920:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9911:3:21"},"nodeType":"YulFunctionCall","src":"9911:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9904:3:21"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9697:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9705:3:21","type":""}],"src":"9563:366:21"},{"body":{"nodeType":"YulBlock","src":"10153:733:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10163:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10184:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:21"},"nodeType":"YulFunctionCall","src":"10175:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10167:4:21","type":""}]},{"nodeType":"YulBlock","src":"10199:164:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10234:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10264:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10271:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10260:3:21"},"nodeType":"YulFunctionCall","src":"10260:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10254:5:21"},"nodeType":"YulFunctionCall","src":"10254:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10238:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10324:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10342:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10347:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10338:3:21"},"nodeType":"YulFunctionCall","src":"10338:14:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"10290:33:21"},"nodeType":"YulFunctionCall","src":"10290:63:21"},"nodeType":"YulExpressionStatement","src":"10290:63:21"}]},{"nodeType":"YulBlock","src":"10373:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10411:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10441:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10448:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10437:3:21"},"nodeType":"YulFunctionCall","src":"10437:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10431:5:21"},"nodeType":"YulFunctionCall","src":"10431:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10415:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10479:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10484:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10475:3:21"},"nodeType":"YulFunctionCall","src":"10475:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10495:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10501:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10491:3:21"},"nodeType":"YulFunctionCall","src":"10491:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10468:6:21"},"nodeType":"YulFunctionCall","src":"10468:38:21"},"nodeType":"YulExpressionStatement","src":"10468:38:21"},{"nodeType":"YulAssignment","src":"10519:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10581:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"10595:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10527:53:21"},"nodeType":"YulFunctionCall","src":"10527:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10519:4:21"}]}]},{"nodeType":"YulBlock","src":"10621:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10659:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10689:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10696:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10685:3:21"},"nodeType":"YulFunctionCall","src":"10685:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10679:5:21"},"nodeType":"YulFunctionCall","src":"10679:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10663:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10727:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10732:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:21"},"nodeType":"YulFunctionCall","src":"10723:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10743:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10749:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10739:3:21"},"nodeType":"YulFunctionCall","src":"10739:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10716:6:21"},"nodeType":"YulFunctionCall","src":"10716:38:21"},"nodeType":"YulExpressionStatement","src":"10716:38:21"},{"nodeType":"YulAssignment","src":"10767:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10829:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"10843:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10775:53:21"},"nodeType":"YulFunctionCall","src":"10775:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10767:4:21"}]}]},{"nodeType":"YulAssignment","src":"10869:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"10876:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10869:3:21"}]}]},"name":"abi_encode_t_struct$_emergencyAlert_$2099_memory_ptr_to_t_struct$_emergencyAlert_$2099_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10132:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10139:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10148:3:21","type":""}],"src":"10015:871:21"},{"body":{"nodeType":"YulBlock","src":"10957:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10974:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10997:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10979:17:21"},"nodeType":"YulFunctionCall","src":"10979:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10967:6:21"},"nodeType":"YulFunctionCall","src":"10967:37:21"},"nodeType":"YulExpressionStatement","src":"10967:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10945:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10952:3:21","type":""}],"src":"10892:118:21"},{"body":{"nodeType":"YulBlock","src":"11152:139:21","statements":[{"nodeType":"YulAssignment","src":"11163:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11252:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11261:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11170:81:21"},"nodeType":"YulFunctionCall","src":"11170:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11163:3:21"}]},{"nodeType":"YulAssignment","src":"11275:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"11282:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11275:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11131:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11137:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11148:3:21","type":""}],"src":"11016:275:21"},{"body":{"nodeType":"YulBlock","src":"11395:124:21","statements":[{"nodeType":"YulAssignment","src":"11405:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:21"},"nodeType":"YulFunctionCall","src":"11413:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11485:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11509:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11494:3:21"},"nodeType":"YulFunctionCall","src":"11494:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11441:43:21"},"nodeType":"YulFunctionCall","src":"11441:71:21"},"nodeType":"YulExpressionStatement","src":"11441:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11367:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11379:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:21","type":""}],"src":"11297:222:21"},{"body":{"nodeType":"YulBlock","src":"11651:206:21","statements":[{"nodeType":"YulAssignment","src":"11661:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11684:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11669:3:21"},"nodeType":"YulFunctionCall","src":"11669:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11661:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11741:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11754:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11765:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11750:3:21"},"nodeType":"YulFunctionCall","src":"11750:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11697:43:21"},"nodeType":"YulFunctionCall","src":"11697:71:21"},"nodeType":"YulExpressionStatement","src":"11697:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11822:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11846:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:21"},"nodeType":"YulFunctionCall","src":"11831:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11778:43:21"},"nodeType":"YulFunctionCall","src":"11778:72:21"},"nodeType":"YulExpressionStatement","src":"11778:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11615:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11627:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11635:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11646:4:21","type":""}],"src":"11525:332:21"},{"body":{"nodeType":"YulBlock","src":"12061:387:21","statements":[{"nodeType":"YulAssignment","src":"12071:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12094:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:21"},"nodeType":"YulFunctionCall","src":"12079:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12071:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12152:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12176:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12161:3:21"},"nodeType":"YulFunctionCall","src":"12161:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12108:43:21"},"nodeType":"YulFunctionCall","src":"12108:71:21"},"nodeType":"YulExpressionStatement","src":"12108:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12249:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12262:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12273:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12258:3:21"},"nodeType":"YulFunctionCall","src":"12258:18:21"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"12189:59:21"},"nodeType":"YulFunctionCall","src":"12189:88:21"},"nodeType":"YulExpressionStatement","src":"12189:88:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12331:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12355:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12340:3:21"},"nodeType":"YulFunctionCall","src":"12340:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12287:43:21"},"nodeType":"YulFunctionCall","src":"12287:72:21"},"nodeType":"YulExpressionStatement","src":"12287:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12413:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12437:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12422:3:21"},"nodeType":"YulFunctionCall","src":"12422:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12369:43:21"},"nodeType":"YulFunctionCall","src":"12369:72:21"},"nodeType":"YulExpressionStatement","src":"12369:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_address_t_uint256__to_t_address_t_address_payable_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12009:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12021:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12029:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12037:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12045:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12056:4:21","type":""}],"src":"11863:585:21"},{"body":{"nodeType":"YulBlock","src":"12644:379:21","statements":[{"nodeType":"YulAssignment","src":"12654:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12666:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12677:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12662:3:21"},"nodeType":"YulFunctionCall","src":"12662:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12654:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12735:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12748:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12759:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12744:3:21"},"nodeType":"YulFunctionCall","src":"12744:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12691:43:21"},"nodeType":"YulFunctionCall","src":"12691:71:21"},"nodeType":"YulExpressionStatement","src":"12691:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12824:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12848:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12833:3:21"},"nodeType":"YulFunctionCall","src":"12833:18:21"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12772:51:21"},"nodeType":"YulFunctionCall","src":"12772:80:21"},"nodeType":"YulExpressionStatement","src":"12772:80:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12906:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12919:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12930:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12915:3:21"},"nodeType":"YulFunctionCall","src":"12915:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12862:43:21"},"nodeType":"YulFunctionCall","src":"12862:72:21"},"nodeType":"YulExpressionStatement","src":"12862:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12988:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13012:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:21"},"nodeType":"YulFunctionCall","src":"12997:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12944:43:21"},"nodeType":"YulFunctionCall","src":"12944:72:21"},"nodeType":"YulExpressionStatement","src":"12944:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12592:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12604:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12612:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12620:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12628:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12639:4:21","type":""}],"src":"12454:569:21"},{"body":{"nodeType":"YulBlock","src":"13197:245:21","statements":[{"nodeType":"YulAssignment","src":"13207:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13219:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13230:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13215:3:21"},"nodeType":"YulFunctionCall","src":"13215:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13207:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13254:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13265:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13250:3:21"},"nodeType":"YulFunctionCall","src":"13250:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13273:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13279:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13269:3:21"},"nodeType":"YulFunctionCall","src":"13269:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13243:6:21"},"nodeType":"YulFunctionCall","src":"13243:47:21"},"nodeType":"YulExpressionStatement","src":"13243:47:21"},{"nodeType":"YulAssignment","src":"13299:136:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13421:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"13430:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13307:113:21"},"nodeType":"YulFunctionCall","src":"13307:128:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13299:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13169:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13181:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13192:4:21","type":""}],"src":"13029:413:21"},{"body":{"nodeType":"YulBlock","src":"13540:118:21","statements":[{"nodeType":"YulAssignment","src":"13550:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13562:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13573:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13558:3:21"},"nodeType":"YulFunctionCall","src":"13558:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13624:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13637:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13648:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13633:3:21"},"nodeType":"YulFunctionCall","src":"13633:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13586:37:21"},"nodeType":"YulFunctionCall","src":"13586:65:21"},"nodeType":"YulExpressionStatement","src":"13586:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13512:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13524:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13535:4:21","type":""}],"src":"13448:210:21"},{"body":{"nodeType":"YulBlock","src":"13830:348:21","statements":[{"nodeType":"YulAssignment","src":"13840:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13863:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13848:3:21"},"nodeType":"YulFunctionCall","src":"13848:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13840:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13887:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13898:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13883:3:21"},"nodeType":"YulFunctionCall","src":"13883:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13906:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13912:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13902:3:21"},"nodeType":"YulFunctionCall","src":"13902:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13876:6:21"},"nodeType":"YulFunctionCall","src":"13876:47:21"},"nodeType":"YulExpressionStatement","src":"13876:47:21"},{"nodeType":"YulAssignment","src":"13932:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14004:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"14013:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13940:63:21"},"nodeType":"YulFunctionCall","src":"13940:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13932:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14039:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14050:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14035:3:21"},"nodeType":"YulFunctionCall","src":"14035:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14059:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14065:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14055:3:21"},"nodeType":"YulFunctionCall","src":"14055:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14028:6:21"},"nodeType":"YulFunctionCall","src":"14028:48:21"},"nodeType":"YulExpressionStatement","src":"14028:48:21"},{"nodeType":"YulAssignment","src":"14085:86:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14157:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"14166:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14093:63:21"},"nodeType":"YulFunctionCall","src":"14093:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14085:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13794:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13806:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13814:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13825:4:21","type":""}],"src":"13664:514:21"},{"body":{"nodeType":"YulBlock","src":"14355:248:21","statements":[{"nodeType":"YulAssignment","src":"14365:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14388:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14373:3:21"},"nodeType":"YulFunctionCall","src":"14373:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14365:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14412:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14423:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14408:3:21"},"nodeType":"YulFunctionCall","src":"14408:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14431:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14437:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14427:3:21"},"nodeType":"YulFunctionCall","src":"14427:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14401:6:21"},"nodeType":"YulFunctionCall","src":"14401:47:21"},"nodeType":"YulExpressionStatement","src":"14401:47:21"},{"nodeType":"YulAssignment","src":"14457:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14591:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14465:124:21"},"nodeType":"YulFunctionCall","src":"14465:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14457:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14335:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14350:4:21","type":""}],"src":"14184:419:21"},{"body":{"nodeType":"YulBlock","src":"14780:248:21","statements":[{"nodeType":"YulAssignment","src":"14790:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14802:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:21"},"nodeType":"YulFunctionCall","src":"14798:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14790:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14848:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14833:3:21"},"nodeType":"YulFunctionCall","src":"14833:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14856:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14852:3:21"},"nodeType":"YulFunctionCall","src":"14852:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14826:6:21"},"nodeType":"YulFunctionCall","src":"14826:47:21"},"nodeType":"YulExpressionStatement","src":"14826:47:21"},{"nodeType":"YulAssignment","src":"14882:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15016:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14890:124:21"},"nodeType":"YulFunctionCall","src":"14890:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14882:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14760:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14775:4:21","type":""}],"src":"14609:419:21"},{"body":{"nodeType":"YulBlock","src":"15196:239:21","statements":[{"nodeType":"YulAssignment","src":"15206:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15218:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15229:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15214:3:21"},"nodeType":"YulFunctionCall","src":"15214:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15206:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15253:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15264:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15249:3:21"},"nodeType":"YulFunctionCall","src":"15249:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15272:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15278:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15268:3:21"},"nodeType":"YulFunctionCall","src":"15268:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15242:6:21"},"nodeType":"YulFunctionCall","src":"15242:47:21"},"nodeType":"YulExpressionStatement","src":"15242:47:21"},{"nodeType":"YulAssignment","src":"15298:130:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15414:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"15423:4:21"}],"functionName":{"name":"abi_encode_t_struct$_emergencyAlert_$2099_memory_ptr_to_t_struct$_emergencyAlert_$2099_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15306:107:21"},"nodeType":"YulFunctionCall","src":"15306:122:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15298:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_emergencyAlert_$2099_memory_ptr__to_t_struct$_emergencyAlert_$2099_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15168:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15180:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15191:4:21","type":""}],"src":"15034:401:21"},{"body":{"nodeType":"YulBlock","src":"15539:124:21","statements":[{"nodeType":"YulAssignment","src":"15549:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15561:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15572:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15557:3:21"},"nodeType":"YulFunctionCall","src":"15557:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15549:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15629:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15642:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15653:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:21"},"nodeType":"YulFunctionCall","src":"15638:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15585:43:21"},"nodeType":"YulFunctionCall","src":"15585:71:21"},"nodeType":"YulExpressionStatement","src":"15585:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15511:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15523:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15534:4:21","type":""}],"src":"15441:222:21"},{"body":{"nodeType":"YulBlock","src":"15710:88:21","statements":[{"nodeType":"YulAssignment","src":"15720:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15730:18:21"},"nodeType":"YulFunctionCall","src":"15730:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15720:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15779:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"15787:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15759:19:21"},"nodeType":"YulFunctionCall","src":"15759:33:21"},"nodeType":"YulExpressionStatement","src":"15759:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15694:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15703:6:21","type":""}],"src":"15669:129:21"},{"body":{"nodeType":"YulBlock","src":"15844:35:21","statements":[{"nodeType":"YulAssignment","src":"15854:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15870:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15864:5:21"},"nodeType":"YulFunctionCall","src":"15864:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15854:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15837:6:21","type":""}],"src":"15804:75:21"},{"body":{"nodeType":"YulBlock","src":"15952:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"16057:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16059:16:21"},"nodeType":"YulFunctionCall","src":"16059:18:21"},"nodeType":"YulExpressionStatement","src":"16059:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16029:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16037:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16026:2:21"},"nodeType":"YulFunctionCall","src":"16026:30:21"},"nodeType":"YulIf","src":"16023:2:21"},{"nodeType":"YulAssignment","src":"16089:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16119:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16097:21:21"},"nodeType":"YulFunctionCall","src":"16097:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16089:4:21"}]},{"nodeType":"YulAssignment","src":"16163:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16175:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"16181:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16171:3:21"},"nodeType":"YulFunctionCall","src":"16171:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16163:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"15936:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"15947:4:21","type":""}],"src":"15885:308:21"},{"body":{"nodeType":"YulBlock","src":"16281:60:21","statements":[{"nodeType":"YulAssignment","src":"16291:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16299:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16291:4:21"}]},{"nodeType":"YulAssignment","src":"16312:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16324:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16329:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16320:3:21"},"nodeType":"YulFunctionCall","src":"16320:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16312:4:21"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16268:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16276:4:21","type":""}],"src":"16199:142:21"},{"body":{"nodeType":"YulBlock","src":"16431:40:21","statements":[{"nodeType":"YulAssignment","src":"16442:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16458:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16452:5:21"},"nodeType":"YulFunctionCall","src":"16452:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16442:6:21"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16414:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16424:6:21","type":""}],"src":"16347:124:21"},{"body":{"nodeType":"YulBlock","src":"16536:40:21","statements":[{"nodeType":"YulAssignment","src":"16547:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16563:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16557:5:21"},"nodeType":"YulFunctionCall","src":"16557:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16547:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16519:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16529:6:21","type":""}],"src":"16477:99:21"},{"body":{"nodeType":"YulBlock","src":"16667:38:21","statements":[{"nodeType":"YulAssignment","src":"16677:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16689:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16694:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16685:3:21"},"nodeType":"YulFunctionCall","src":"16685:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16677:4:21"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16654:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16662:4:21","type":""}],"src":"16582:123:21"},{"body":{"nodeType":"YulBlock","src":"16832:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16849:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16854:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16842:6:21"},"nodeType":"YulFunctionCall","src":"16842:19:21"},"nodeType":"YulExpressionStatement","src":"16842:19:21"},{"nodeType":"YulAssignment","src":"16870:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16889:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16894:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16885:3:21"},"nodeType":"YulFunctionCall","src":"16885:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16870:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16804:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16809:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16820:11:21","type":""}],"src":"16711:194:21"},{"body":{"nodeType":"YulBlock","src":"16997:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17014:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17019:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17007:6:21"},"nodeType":"YulFunctionCall","src":"17007:19:21"},"nodeType":"YulExpressionStatement","src":"17007:19:21"},{"nodeType":"YulAssignment","src":"17035:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17054:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17059:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17050:3:21"},"nodeType":"YulFunctionCall","src":"17050:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17035:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16969:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16974:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16985:11:21","type":""}],"src":"16911:159:21"},{"body":{"nodeType":"YulBlock","src":"17172:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17189:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17194:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17182:6:21"},"nodeType":"YulFunctionCall","src":"17182:19:21"},"nodeType":"YulExpressionStatement","src":"17182:19:21"},{"nodeType":"YulAssignment","src":"17210:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17229:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17234:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17225:3:21"},"nodeType":"YulFunctionCall","src":"17225:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17210:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17144:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17149:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17160:11:21","type":""}],"src":"17076:169:21"},{"body":{"nodeType":"YulBlock","src":"17365:34:21","statements":[{"nodeType":"YulAssignment","src":"17375:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"17390:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17375:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17337:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17342:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17353:11:21","type":""}],"src":"17251:148:21"},{"body":{"nodeType":"YulBlock","src":"17450:146:21","statements":[{"nodeType":"YulAssignment","src":"17460:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17483:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17465:17:21"},"nodeType":"YulFunctionCall","src":"17465:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17460:1:21"}]},{"nodeType":"YulAssignment","src":"17494:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17517:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17499:17:21"},"nodeType":"YulFunctionCall","src":"17499:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17494:1:21"}]},{"body":{"nodeType":"YulBlock","src":"17541:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17543:16:21"},"nodeType":"YulFunctionCall","src":"17543:18:21"},"nodeType":"YulExpressionStatement","src":"17543:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17535:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"17538:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17532:2:21"},"nodeType":"YulFunctionCall","src":"17532:8:21"},"nodeType":"YulIf","src":"17529:2:21"},{"nodeType":"YulAssignment","src":"17573:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17585:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"17588:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17581:3:21"},"nodeType":"YulFunctionCall","src":"17581:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17573:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17436:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"17439:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17445:4:21","type":""}],"src":"17405:191:21"},{"body":{"nodeType":"YulBlock","src":"17647:51:21","statements":[{"nodeType":"YulAssignment","src":"17657:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17686:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17668:17:21"},"nodeType":"YulFunctionCall","src":"17668:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17657:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17629:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17639:7:21","type":""}],"src":"17602:96:21"},{"body":{"nodeType":"YulBlock","src":"17757:51:21","statements":[{"nodeType":"YulAssignment","src":"17767:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17796:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17778:17:21"},"nodeType":"YulFunctionCall","src":"17778:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17767:7:21"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17739:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17749:7:21","type":""}],"src":"17704:104:21"},{"body":{"nodeType":"YulBlock","src":"17856:48:21","statements":[{"nodeType":"YulAssignment","src":"17866:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17891:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17884:6:21"},"nodeType":"YulFunctionCall","src":"17884:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17877:6:21"},"nodeType":"YulFunctionCall","src":"17877:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17866:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17838:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17848:7:21","type":""}],"src":"17814:90:21"},{"body":{"nodeType":"YulBlock","src":"17955:81:21","statements":[{"nodeType":"YulAssignment","src":"17965:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17980:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17987:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17976:3:21"},"nodeType":"YulFunctionCall","src":"17976:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17965:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17937:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17947:7:21","type":""}],"src":"17910:126:21"},{"body":{"nodeType":"YulBlock","src":"18087:32:21","statements":[{"nodeType":"YulAssignment","src":"18097:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"18108:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18097:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18069:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18079:7:21","type":""}],"src":"18042:77:21"},{"body":{"nodeType":"YulBlock","src":"18193:66:21","statements":[{"nodeType":"YulAssignment","src":"18203:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18247:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"18216:30:21"},"nodeType":"YulFunctionCall","src":"18216:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18203:9:21"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18173:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18183:9:21","type":""}],"src":"18125:134:21"},{"body":{"nodeType":"YulBlock","src":"18325:66:21","statements":[{"nodeType":"YulAssignment","src":"18335:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18379:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"18348:30:21"},"nodeType":"YulFunctionCall","src":"18348:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18335:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18305:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18315:9:21","type":""}],"src":"18265:126:21"},{"body":{"nodeType":"YulBlock","src":"18457:53:21","statements":[{"nodeType":"YulAssignment","src":"18467:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18498:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18480:17:21"},"nodeType":"YulFunctionCall","src":"18480:24:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18467:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18437:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18447:9:21","type":""}],"src":"18397:113:21"},{"body":{"nodeType":"YulBlock","src":"18567:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18590:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"18595:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18600:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18577:12:21"},"nodeType":"YulFunctionCall","src":"18577:30:21"},"nodeType":"YulExpressionStatement","src":"18577:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18648:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18653:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18644:3:21"},"nodeType":"YulFunctionCall","src":"18644:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"18662:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18637:6:21"},"nodeType":"YulFunctionCall","src":"18637:27:21"},"nodeType":"YulExpressionStatement","src":"18637:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18549:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18554:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18559:6:21","type":""}],"src":"18516:154:21"},{"body":{"nodeType":"YulBlock","src":"18725:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18735:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18744:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18739:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18804:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18829:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"18834:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18825:3:21"},"nodeType":"YulFunctionCall","src":"18825:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18848:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"18853:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18844:3:21"},"nodeType":"YulFunctionCall","src":"18844:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18838:5:21"},"nodeType":"YulFunctionCall","src":"18838:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18818:6:21"},"nodeType":"YulFunctionCall","src":"18818:39:21"},"nodeType":"YulExpressionStatement","src":"18818:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18765:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"18768:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18762:2:21"},"nodeType":"YulFunctionCall","src":"18762:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18776:19:21","statements":[{"nodeType":"YulAssignment","src":"18778:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18787:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"18790:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18783:3:21"},"nodeType":"YulFunctionCall","src":"18783:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18778:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"18758:3:21","statements":[]},"src":"18754:113:21"},{"body":{"nodeType":"YulBlock","src":"18901:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18956:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18947:3:21"},"nodeType":"YulFunctionCall","src":"18947:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"18965:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18940:6:21"},"nodeType":"YulFunctionCall","src":"18940:27:21"},"nodeType":"YulExpressionStatement","src":"18940:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18882:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"18885:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18879:2:21"},"nodeType":"YulFunctionCall","src":"18879:13:21"},"nodeType":"YulIf","src":"18876:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18707:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18712:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18717:6:21","type":""}],"src":"18676:307:21"},{"body":{"nodeType":"YulBlock","src":"19040:269:21","statements":[{"nodeType":"YulAssignment","src":"19050:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19064:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"19070:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19060:3:21"},"nodeType":"YulFunctionCall","src":"19060:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19050:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"19081:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19111:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"19117:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19107:3:21"},"nodeType":"YulFunctionCall","src":"19107:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19085:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"19158:51:21","statements":[{"nodeType":"YulAssignment","src":"19172:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19186:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19194:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19182:3:21"},"nodeType":"YulFunctionCall","src":"19182:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19172:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19138:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19131:6:21"},"nodeType":"YulFunctionCall","src":"19131:26:21"},"nodeType":"YulIf","src":"19128:2:21"},{"body":{"nodeType":"YulBlock","src":"19261:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19275:16:21"},"nodeType":"YulFunctionCall","src":"19275:18:21"},"nodeType":"YulExpressionStatement","src":"19275:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19225:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19248:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19256:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19245:2:21"},"nodeType":"YulFunctionCall","src":"19245:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19222:2:21"},"nodeType":"YulFunctionCall","src":"19222:38:21"},"nodeType":"YulIf","src":"19219:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19024:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19033:6:21","type":""}],"src":"18989:320:21"},{"body":{"nodeType":"YulBlock","src":"19358:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19368:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19390:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19420:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19398:21:21"},"nodeType":"YulFunctionCall","src":"19398:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19386:3:21"},"nodeType":"YulFunctionCall","src":"19386:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19372:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"19537:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19539:16:21"},"nodeType":"YulFunctionCall","src":"19539:18:21"},"nodeType":"YulExpressionStatement","src":"19539:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19480:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"19492:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19477:2:21"},"nodeType":"YulFunctionCall","src":"19477:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19516:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19528:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19513:2:21"},"nodeType":"YulFunctionCall","src":"19513:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19474:2:21"},"nodeType":"YulFunctionCall","src":"19474:62:21"},"nodeType":"YulIf","src":"19471:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19575:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19579:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19568:6:21"},"nodeType":"YulFunctionCall","src":"19568:22:21"},"nodeType":"YulExpressionStatement","src":"19568:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19344:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"19352:4:21","type":""}],"src":"19315:281:21"},{"body":{"nodeType":"YulBlock","src":"19645:190:21","statements":[{"nodeType":"YulAssignment","src":"19655:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19682:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19664:17:21"},"nodeType":"YulFunctionCall","src":"19664:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19655:5:21"}]},{"body":{"nodeType":"YulBlock","src":"19778:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19780:16:21"},"nodeType":"YulFunctionCall","src":"19780:18:21"},"nodeType":"YulExpressionStatement","src":"19780:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19703:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19710:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19700:2:21"},"nodeType":"YulFunctionCall","src":"19700:77:21"},"nodeType":"YulIf","src":"19697:2:21"},{"nodeType":"YulAssignment","src":"19809:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19820:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19827:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19816:3:21"},"nodeType":"YulFunctionCall","src":"19816:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19809:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19631:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19641:3:21","type":""}],"src":"19602:233:21"},{"body":{"nodeType":"YulBlock","src":"19869:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19886:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19889:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19879:6:21"},"nodeType":"YulFunctionCall","src":"19879:88:21"},"nodeType":"YulExpressionStatement","src":"19879:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19983:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19986:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19976:6:21"},"nodeType":"YulFunctionCall","src":"19976:15:21"},"nodeType":"YulExpressionStatement","src":"19976:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20007:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20010:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20000:6:21"},"nodeType":"YulFunctionCall","src":"20000:15:21"},"nodeType":"YulExpressionStatement","src":"20000:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19841:180:21"},{"body":{"nodeType":"YulBlock","src":"20055:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20072:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20075:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20065:6:21"},"nodeType":"YulFunctionCall","src":"20065:88:21"},"nodeType":"YulExpressionStatement","src":"20065:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20169:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20172:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20162:6:21"},"nodeType":"YulFunctionCall","src":"20162:15:21"},"nodeType":"YulExpressionStatement","src":"20162:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20193:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20196:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20186:6:21"},"nodeType":"YulFunctionCall","src":"20186:15:21"},"nodeType":"YulExpressionStatement","src":"20186:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20027:180:21"},{"body":{"nodeType":"YulBlock","src":"20241:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20258:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20261:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20251:6:21"},"nodeType":"YulFunctionCall","src":"20251:88:21"},"nodeType":"YulExpressionStatement","src":"20251:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20355:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20358:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20348:6:21"},"nodeType":"YulFunctionCall","src":"20348:15:21"},"nodeType":"YulExpressionStatement","src":"20348:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20379:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20382:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20372:6:21"},"nodeType":"YulFunctionCall","src":"20372:15:21"},"nodeType":"YulExpressionStatement","src":"20372:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20213:180:21"},{"body":{"nodeType":"YulBlock","src":"20447:54:21","statements":[{"nodeType":"YulAssignment","src":"20457:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20475:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20482:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20471:3:21"},"nodeType":"YulFunctionCall","src":"20471:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20491:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20487:3:21"},"nodeType":"YulFunctionCall","src":"20487:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20467:3:21"},"nodeType":"YulFunctionCall","src":"20467:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20457:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20430:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20440:6:21","type":""}],"src":"20399:102:21"},{"body":{"nodeType":"YulBlock","src":"20613:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20635:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20643:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20631:3:21"},"nodeType":"YulFunctionCall","src":"20631:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"20647:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20624:6:21"},"nodeType":"YulFunctionCall","src":"20624:58:21"},"nodeType":"YulExpressionStatement","src":"20624:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20703:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20711:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20699:3:21"},"nodeType":"YulFunctionCall","src":"20699:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"20716:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20692:6:21"},"nodeType":"YulFunctionCall","src":"20692:33:21"},"nodeType":"YulExpressionStatement","src":"20692:33:21"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20605:6:21","type":""}],"src":"20507:225:21"},{"body":{"nodeType":"YulBlock","src":"20844:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20866:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20874:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20862:3:21"},"nodeType":"YulFunctionCall","src":"20862:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"20878:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20855:6:21"},"nodeType":"YulFunctionCall","src":"20855:58:21"},"nodeType":"YulExpressionStatement","src":"20855:58:21"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20836:6:21","type":""}],"src":"20738:182:21"},{"body":{"nodeType":"YulBlock","src":"20969:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"21026:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21035:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21038:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21028:6:21"},"nodeType":"YulFunctionCall","src":"21028:12:21"},"nodeType":"YulExpressionStatement","src":"21028:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20992:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21017:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"20999:17:21"},"nodeType":"YulFunctionCall","src":"20999:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20989:2:21"},"nodeType":"YulFunctionCall","src":"20989:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20982:6:21"},"nodeType":"YulFunctionCall","src":"20982:43:21"},"nodeType":"YulIf","src":"20979:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20962:5:21","type":""}],"src":"20926:122:21"},{"body":{"nodeType":"YulBlock","src":"21105:87:21","statements":[{"body":{"nodeType":"YulBlock","src":"21170:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21179:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21182:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21172:6:21"},"nodeType":"YulFunctionCall","src":"21172:12:21"},"nodeType":"YulExpressionStatement","src":"21172:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21161:5:21"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"21135:25:21"},"nodeType":"YulFunctionCall","src":"21135:32:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21125:2:21"},"nodeType":"YulFunctionCall","src":"21125:43:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21118:6:21"},"nodeType":"YulFunctionCall","src":"21118:51:21"},"nodeType":"YulIf","src":"21115:2:21"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21098:5:21","type":""}],"src":"21054:138:21"},{"body":{"nodeType":"YulBlock","src":"21241:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"21298:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21307:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21310:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21300:6:21"},"nodeType":"YulFunctionCall","src":"21300:12:21"},"nodeType":"YulExpressionStatement","src":"21300:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21264:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21289:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21271:17:21"},"nodeType":"YulFunctionCall","src":"21271:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21261:2:21"},"nodeType":"YulFunctionCall","src":"21261:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21254:6:21"},"nodeType":"YulFunctionCall","src":"21254:43:21"},"nodeType":"YulIf","src":"21251:2:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21234:5:21","type":""}],"src":"21198:122:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct CrypticVault.emergencyAlert -> struct CrypticVault.emergencyAlert\n    function abi_encode_t_struct$_emergencyAlert_$2099_memory_ptr_to_t_struct$_emergencyAlert_$2099_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // subject\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // message\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_address_t_uint256__to_t_address_t_address_payable_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_emergencyAlert_$2099_memory_ptr__to_t_struct$_emergencyAlert_$2099_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_emergencyAlert_$2099_memory_ptr_to_t_struct$_emergencyAlert_$2099_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060043610620001485760003560e01c80638da5cb5b11620000bd578063ddc8be3b116200007b578063ddc8be3b146200039f578063e95fd15514620003d5578063ed0704b0146200040b578063f1537686146200042b578063f2fde38b14620004615762000148565b80638da5cb5b14620002e7578063a894b1e41462000309578063b33df4481462000329578063b8d7b6691462000349578063c7c82d1c146200037f5762000148565b80633e953859116200010b5780633e953859146200022f578063523070e2146200024f5780636a663fbc146200026f578063715018a614620002a55780637854462914620002b15762000148565b806310a50690146200014d57806327f50a2d14620001835780632c54de4f14620001b95780632f2f2d5614620001d95780633b1a017414620001f9575b600080fd5b6200016b60048036038101906200016591906200179b565b62000481565b6040516200017a919062001e46565b60405180910390f35b620001a160048036038101906200019b91906200179b565b620005a3565b604051620001b0919062001e46565b60405180910390f35b620001d76004803603810190620001d1919062001808565b620006c5565b005b620001f76004803603810190620001f19190620019ed565b62000814565b005b620002176004803603810190620002119190620017c7565b62000893565b60405162000226919062001e6a565b60405180910390f35b6200024d600480360381019062000247919062001874565b62000927565b005b6200026d600480360381019062000267919062001997565b620009a6565b005b6200028d600480360381019062000287919062001a60565b62000b2f565b6040516200029c919062001e6a565b60405180910390f35b620002af62000dbb565b005b620002cf6004803603810190620002c991906200179b565b62000dd3565b604051620002de919062001e46565b60405180910390f35b620002f162000ef5565b60405162000300919062001d62565b60405180910390f35b620003276004803603810190620003219190620018ce565b62000f1e565b005b62000347600480360381019062000341919062001874565b62000fe0565b005b6200036760048036038101906200036191906200179b565b6200105f565b60405162000376919062001d62565b60405180910390f35b6200039d600480360381019062000397919062001956565b620010c8565b005b620003bd6004803603810190620003b791906200179b565b62001110565b604051620003cc919062001f06565b60405180910390f35b620003f36004803603810190620003ed91906200179b565b620012f5565b60405162000402919062001e6a565b60405180910390f35b62000429600480360381019062000423919062001874565b6200134b565b005b6200044960048036038101906200044391906200179b565b620013ca565b60405162000458919062001f2a565b60405180910390f35b6200047f60048036038101906200047991906200179b565b62001413565b005b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000598578382906000526020600020018054620005049062002131565b80601f0160208091040260200160405190810160405280929190818152602001828054620005329062002131565b8015620005835780601f10620005575761010080835404028352916020019162000583565b820191906000526020600020905b8154815290600101906020018083116200056557829003601f168201915b505050505081526020019060010190620004e2565b505050509050919050565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015620006ba578382906000526020600020018054620006269062002131565b80601f0160208091040260200160405190810160405280929190818152602001828054620006549062002131565b8015620006a55780601f106200067957610100808354040283529160200191620006a5565b820191906000526020600020905b8154815290600101906020018083116200068757829003601f168201915b50505050508152602001906001019062000604565b505050509050919050565b8173ffffffffffffffffffffffffffffffffffffffff166368155ec1858585856040518563ffffffff1660e01b815260040162000706949392919062001dac565b600060405180830381600087803b1580156200072157600080fd5b505af115801562000736573d6000803e3d6000fd5b505050506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa7814aaf178d6c8e61b2703f3dc1b8328dd6c99cbb405bf8f1bb0cb1bbb051a58484848460405162000806949392919062001df9565b60405180910390a150505050565b600082826040516200082690620015ef565b6200083392919062001e87565b604051809103906000f08015801562000850573d6000803e3d6000fd5b5090507fd5f9bdf12adf29dab0248c349842c3822d53ae2bb4f36352f301630d018c813933826040516200088692919062001d7f565b60405180910390a1505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190620009a1929190620015fd565b505050565b60008290505b8181101562000a3a578373ffffffffffffffffffffffffffffffffffffffff166340d097c3336040518263ffffffff1660e01b8152600401620009f0919062001d62565b600060405180830381600087803b15801562000a0b57600080fd5b505af115801562000a20573d6000803e3d6000fd5b50505050808062000a31906200219d565b915050620009ac565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000b2a3360018362000b24919062002017565b620010c8565b505050565b600080600090505b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081101562000dae576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811062000bfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001805462000c139062002131565b80601f016020809104026020016040519081016040528092919081815260200182805462000c419062002131565b801562000c925780601f1062000c665761010080835404028352916020019162000c92565b820191906000526020600020905b81548152906001019060200180831162000c7457829003601f168201915b505050505090508560405160200162000cac919062001d49565b604051602081830303815290604052805190602001208160405160200162000cd5919062001d49565b60405160208183030381529060405280519060200120141562000d975784600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811062000d6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001908051906020019062000d8a929190620015fd565b5060019250505062000db4565b50808062000da5906200219d565b91505062000b37565b50600090505b9392505050565b62000dc56200149e565b62000dd1600062001523565b565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000eea57838290600052602060002001805462000e569062002131565b80601f016020809104026020016040519081016040528092919081815260200182805462000e849062002131565b801562000ed55780601f1062000ea95761010080835404028352916020019162000ed5565b820191906000526020600020905b81548152906001019060200180831162000eb757829003601f168201915b50505050508152602001906001019062000e34565b505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050838160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600101908051906020019062000fbe929190620015fd565b508181600201908051906020019062000fd9929190620015fd565b5050505050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906200105a929190620015fd565b505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6200111a6200168e565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054620011cc9062002131565b80601f0160208091040260200160405190810160405280929190818152602001828054620011fa9062002131565b80156200124b5780601f106200121f576101008083540402835291602001916200124b565b820191906000526020600020905b8154815290600101906020018083116200122d57829003601f168201915b50505050508152602001600282018054620012669062002131565b80601f0160208091040260200160405190810160405280929190818152602001828054620012949062002131565b8015620012e55780601f10620012b957610100808354040283529160200191620012e5565b820191906000526020600020905b815481529060010190602001808311620012c757829003601f168201915b5050505050815250509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190620013c5929190620015fd565b505050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6200141d6200149e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562001490576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620014879062001ec2565b60405180910390fd5b6200149b8162001523565b50565b620014a8620015e7565b73ffffffffffffffffffffffffffffffffffffffff16620014c862000ef5565b73ffffffffffffffffffffffffffffffffffffffff161462001521576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620015189062001ee4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b612ec3806200235083390190565b8280546200160b9062002131565b90600052602060002090601f0160209004810192826200162f57600085556200167b565b82601f106200164a57805160ff19168380011785556200167b565b828001600101855582156200167b579182015b828111156200167a5782518255916020019190600101906200165d565b5b5090506200168a9190620016c5565b5090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b5b80821115620016e0576000816000905550600101620016c6565b5090565b6000620016fb620016f58462001f70565b62001f47565b9050828152602081018484840111156200171457600080fd5b62001721848285620020ec565b509392505050565b6000813590506200173a8162002301565b92915050565b60008135905062001751816200231b565b92915050565b600082601f8301126200176957600080fd5b81356200177b848260208601620016e4565b91505092915050565b600081359050620017958162002335565b92915050565b600060208284031215620017ae57600080fd5b6000620017be8482850162001729565b91505092915050565b60008060408385031215620017db57600080fd5b6000620017eb8582860162001729565b9250506020620017fe8582860162001729565b9150509250929050565b600080600080608085870312156200181f57600080fd5b60006200182f8782880162001729565b9450506020620018428782880162001740565b9350506040620018558782880162001729565b9250506060620018688782880162001784565b91505092959194509250565b600080604083850312156200188857600080fd5b6000620018988582860162001729565b925050602083013567ffffffffffffffff811115620018b657600080fd5b620018c48582860162001757565b9150509250929050565b600080600060608486031215620018e457600080fd5b6000620018f48682870162001729565b935050602084013567ffffffffffffffff8111156200191257600080fd5b620019208682870162001757565b925050604084013567ffffffffffffffff8111156200193e57600080fd5b6200194c8682870162001757565b9150509250925092565b600080604083850312156200196a57600080fd5b60006200197a8582860162001729565b92505060206200198d8582860162001784565b9150509250929050565b600080600060608486031215620019ad57600080fd5b6000620019bd8682870162001729565b9350506020620019d08682870162001784565b9250506040620019e38682870162001784565b9150509250925092565b6000806040838503121562001a0157600080fd5b600083013567ffffffffffffffff81111562001a1c57600080fd5b62001a2a8582860162001757565b925050602083013567ffffffffffffffff81111562001a4857600080fd5b62001a568582860162001757565b9150509250929050565b60008060006060848603121562001a7657600080fd5b600084013567ffffffffffffffff81111562001a9157600080fd5b62001a9f8682870162001757565b935050602084013567ffffffffffffffff81111562001abd57600080fd5b62001acb8682870162001757565b925050604062001ade8682870162001729565b9150509250925092565b600062001af6838362001bd4565b905092915050565b62001b0981620020b0565b82525050565b62001b1a8162002066565b82525050565b62001b2b8162002052565b82525050565b62001b3c8162002052565b82525050565b600062001b4f8262001fb6565b62001b5b818562001fd9565b93508360208202850162001b6f8562001fa6565b8060005b8581101562001bb1578484038952815162001b8f858262001ae8565b945062001b9c8362001fcc565b925060208a0199505060018101905062001b73565b50829750879550505050505092915050565b62001bce816200207a565b82525050565b600062001be18262001fc1565b62001bed818562001fea565b935062001bff818560208601620020fb565b62001c0a8162002278565b840191505092915050565b600062001c228262001fc1565b62001c2e818562001ffb565b935062001c40818560208601620020fb565b62001c4b8162002278565b840191505092915050565b600062001c638262001fc1565b62001c6f81856200200c565b935062001c81818560208601620020fb565b80840191505092915050565b600062001c9c60268362001ffb565b915062001ca98262002289565b604082019050919050565b600062001cc360208362001ffb565b915062001cd082620022d8565b602082019050919050565b600060608301600083015162001cf5600086018262001b20565b506020830151848203602086015262001d0f828262001bd4565b9150506040830151848203604086015262001d2b828262001bd4565b9150508091505092915050565b62001d4381620020a6565b82525050565b600062001d57828462001c56565b915081905092915050565b600060208201905062001d79600083018462001b31565b92915050565b600060408201905062001d96600083018562001b31565b62001da5602083018462001b31565b9392505050565b600060808201905062001dc3600083018762001b31565b62001dd2602083018662001b0f565b62001de1604083018562001b31565b62001df0606083018462001d38565b95945050505050565b600060808201905062001e10600083018762001b31565b62001e1f602083018662001afe565b62001e2e604083018562001b31565b62001e3d606083018462001d38565b95945050505050565b6000602082019050818103600083015262001e62818462001b42565b905092915050565b600060208201905062001e81600083018462001bc3565b92915050565b6000604082019050818103600083015262001ea3818562001c15565b9050818103602083015262001eb9818462001c15565b90509392505050565b6000602082019050818103600083015262001edd8162001c8d565b9050919050565b6000602082019050818103600083015262001eff8162001cb4565b9050919050565b6000602082019050818103600083015262001f22818462001cdb565b905092915050565b600060208201905062001f41600083018462001d38565b92915050565b600062001f5362001f66565b905062001f61828262002167565b919050565b6000604051905090565b600067ffffffffffffffff82111562001f8e5762001f8d62002249565b5b62001f998262002278565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006200202482620020a6565b91506200203183620020a6565b925082821015620020475762002046620021eb565b5b828203905092915050565b60006200205f8262002086565b9050919050565b6000620020738262002086565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620020bd82620020c4565b9050919050565b6000620020d182620020d8565b9050919050565b6000620020e58262002086565b9050919050565b82818337600083830152505050565b60005b838110156200211b578082015181840152602081019050620020fe565b838111156200212b576000848401525b50505050565b600060028204905060018216806200214a57607f821691505b602082108114156200216157620021606200221a565b5b50919050565b620021728262002278565b810181811067ffffffffffffffff8211171562002194576200219362002249565b5b80604052505050565b6000620021aa82620020a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620021e057620021df620021eb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6200230c8162002052565b81146200231857600080fd5b50565b620023268162002066565b81146200233257600080fd5b50565b6200234081620020a6565b81146200234c57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002ec338038062002ec3833981810160405281019062000037919062000197565b818181600090805190602001906200005192919062000075565b5080600190805190602001906200006a92919062000075565b50505050506200037a565b82805462000083906200029f565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b60006200013c620001368462000233565b6200020a565b9050828152602081018484840111156200015557600080fd5b6200016284828562000269565b509392505050565b600082601f8301126200017c57600080fd5b81516200018e84826020860162000125565b91505092915050565b60008060408385031215620001ab57600080fd5b600083015167ffffffffffffffff811115620001c657600080fd5b620001d4858286016200016a565b925050602083015167ffffffffffffffff811115620001f257600080fd5b62000200858286016200016a565b9150509250929050565b60006200021662000229565b9050620002248282620002d5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200025157620002506200033a565b5b6200025c8262000369565b9050602081019050919050565b60005b83811015620002895780820151818401526020810190506200026c565b8381111562000299576000848401525b50505050565b60006002820490506001821680620002b857607f821691505b60208210811415620002cf57620002ce6200030b565b5b50919050565b620002e08262000369565b810181811067ffffffffffffffff821117156200030257620003016200033a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612b39806200038a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610282578063b88d4fde1461029e578063c87b56dd146102ba578063e985e9c5146102ea576100f5565b80636352211e146101e857806368155ec11461021857806370a082311461023457806395d89b4114610264576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806340d097c3146101b057806342842e0e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f9190611cde565b61031a565b6040516101219190612107565b60405180910390f35b6101326103fc565b60405161013f9190612122565b60405180910390f35b610162600480360381019061015d9190611d30565b61048e565b60405161016f9190612069565b60405180910390f35b610192600480360381019061018d9190611ca2565b610513565b005b6101ae60048036038101906101a99190611b9c565b61062b565b005b6101ca60048036038101906101c59190611ad4565b610684565b005b6101e660048036038101906101e19190611b9c565b6106aa565b005b61020260048036038101906101fd9190611d30565b6106ca565b60405161020f9190612069565b60405180910390f35b610232600480360381019061022d9190611b39565b61077c565b005b61024e60048036038101906102499190611ad4565b61089f565b60405161025b9190612324565b60405180910390f35b61026c610957565b6040516102799190612122565b60405180910390f35b61029c60048036038101906102979190611c66565b6109e9565b005b6102b860048036038101906102b39190611beb565b6109ff565b005b6102d460048036038101906102cf9190611d30565b610a61565b6040516102e19190612122565b60405180910390f35b61030460048036038101906102ff9190611afd565b610b08565b6040516103119190612107565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f557506103f482610b9c565b5b9050919050565b60606000805461040b90612560565b80601f016020809104026020016040519081016040528092919081815260200182805461043790612560565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610c06565b6104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf906122a4565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061051e826106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906122e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ae610c72565b73ffffffffffffffffffffffffffffffffffffffff1614806105dd57506105dc816105d7610c72565b610b08565b5b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390612204565b60405180910390fd5b6106268383610c7a565b505050565b6106358382610d33565b610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90612304565b60405180910390fd5b61067f838383610e11565b505050565b60006106906006611078565b905061069c6006611086565b6106a6828261109c565b5050565b6106c5838383604051806020016040528060008152506109ff565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90612244565b60405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610824578173ffffffffffffffffffffffffffffffffffffffff166323b872dd8585846040518463ffffffff1660e01b81526004016107ed93929190612084565b600060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b50505050610899565b8273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90612264565b60405180910390fd5b5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790612224565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461096690612560565b80601f016020809104026020016040519081016040528092919081815260200182805461099290612560565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b5050505050905090565b6109fb6109f4610c72565b83836110ba565b5050565b610a10610a0a610c72565b83610d33565b610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690612304565b60405180910390fd5b610a5b84848484611227565b50505050565b6060610a6c82610c06565b610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa2906122c4565b60405180910390fd5b6000610ab5611283565b90506000815111610ad55760405180602001604052806000815250610b00565b80610adf8461129a565b604051602001610af0929190612045565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ced836106ca565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d3e82610c06565b610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d74906121e4565b60405180910390fd5b6000610d88836106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610df757508373ffffffffffffffffffffffffffffffffffffffff16610ddf8461048e565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e085750610e078185610b08565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e31826106ca565b73ffffffffffffffffffffffffffffffffffffffff1614610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90612164565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eee906121a4565b60405180910390fd5b610f028383836113be565b610f0d600082610c7a565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5d919061242e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fb491906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110738383836113c3565b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6110b68282604051806020016040528060008152506113c8565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611120906121c4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161121a9190612107565b60405180910390a3505050565b611232848484610e11565b61123e84848484611423565b61127d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127490612144565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016112a9846115ba565b01905060008167ffffffffffffffff8111156112ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113205781602001600182028036833780820191505090505b509050600082602001820190505b6001156113b3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161139d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156113ae576113b3565b61132e565b819350505050919050565b505050565b505050565b6113d283836117f1565b6113df6000848484611423565b61141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590612144565b60405180910390fd5b505050565b60006114448473ffffffffffffffffffffffffffffffffffffffff166119cb565b156115ad578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261146d610c72565b8786866040518563ffffffff1660e01b815260040161148f94939291906120bb565b602060405180830381600087803b1580156114a957600080fd5b505af19250505080156114da57506040513d601f19601f820116820180604052508101906114d79190611d07565b60015b61155d573d806000811461150a576040519150601f19603f3d011682016040523d82523d6000602084013e61150f565b606091505b50600081511415611555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154c90612144565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506115b2565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061163e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611634577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116a1576d04ee2d6d415b85acef81000000008381611697577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106116f657662386f26fc1000083816116ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611745576305f5e100838161173b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611790576127108381611786577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b606483106117d957606483816117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106117e8576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890612284565b60405180910390fd5b61186a81610c06565b156118aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a190612184565b60405180910390fd5b6118b6600083836113be565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461190691906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119c7600083836113c3565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611a016119fc84612364565b61233f565b905082815260208101848484011115611a1957600080fd5b611a2484828561251e565b509392505050565b600081359050611a3b81612a90565b92915050565b600081359050611a5081612aa7565b92915050565b600081359050611a6581612abe565b92915050565b600081359050611a7a81612ad5565b92915050565b600081519050611a8f81612ad5565b92915050565b600082601f830112611aa657600080fd5b8135611ab68482602086016119ee565b91505092915050565b600081359050611ace81612aec565b92915050565b600060208284031215611ae657600080fd5b6000611af484828501611a2c565b91505092915050565b60008060408385031215611b1057600080fd5b6000611b1e85828601611a2c565b9250506020611b2f85828601611a2c565b9150509250929050565b60008060008060808587031215611b4f57600080fd5b6000611b5d87828801611a2c565b9450506020611b6e87828801611a41565b9350506040611b7f87828801611a2c565b9250506060611b9087828801611abf565b91505092959194509250565b600080600060608486031215611bb157600080fd5b6000611bbf86828701611a2c565b9350506020611bd086828701611a2c565b9250506040611be186828701611abf565b9150509250925092565b60008060008060808587031215611c0157600080fd5b6000611c0f87828801611a2c565b9450506020611c2087828801611a2c565b9350506040611c3187828801611abf565b925050606085013567ffffffffffffffff811115611c4e57600080fd5b611c5a87828801611a95565b91505092959194509250565b60008060408385031215611c7957600080fd5b6000611c8785828601611a2c565b9250506020611c9885828601611a56565b9150509250929050565b60008060408385031215611cb557600080fd5b6000611cc385828601611a2c565b9250506020611cd485828601611abf565b9150509250929050565b600060208284031215611cf057600080fd5b6000611cfe84828501611a6b565b91505092915050565b600060208284031215611d1957600080fd5b6000611d2784828501611a80565b91505092915050565b600060208284031215611d4257600080fd5b6000611d5084828501611abf565b91505092915050565b611d62816124e8565b82525050565b611d7181612462565b82525050565b611d8081612486565b82525050565b6000611d9182612395565b611d9b81856123ab565b9350611dab81856020860161252d565b611db481612650565b840191505092915050565b6000611dca826123a0565b611dd481856123bc565b9350611de481856020860161252d565b611ded81612650565b840191505092915050565b6000611e03826123a0565b611e0d81856123cd565b9350611e1d81856020860161252d565b80840191505092915050565b6000611e366032836123bc565b9150611e4182612661565b604082019050919050565b6000611e596025836123bc565b9150611e64826126b0565b604082019050919050565b6000611e7c601c836123bc565b9150611e87826126ff565b602082019050919050565b6000611e9f6024836123bc565b9150611eaa82612728565b604082019050919050565b6000611ec26019836123bc565b9150611ecd82612777565b602082019050919050565b6000611ee5602c836123bc565b9150611ef0826127a0565b604082019050919050565b6000611f086038836123bc565b9150611f13826127ef565b604082019050919050565b6000611f2b602a836123bc565b9150611f368261283e565b604082019050919050565b6000611f4e6029836123bc565b9150611f598261288d565b604082019050919050565b6000611f716022836123bc565b9150611f7c826128dc565b604082019050919050565b6000611f946020836123bc565b9150611f9f8261292b565b602082019050919050565b6000611fb7602c836123bc565b9150611fc282612954565b604082019050919050565b6000611fda602f836123bc565b9150611fe5826129a3565b604082019050919050565b6000611ffd6021836123bc565b9150612008826129f2565b604082019050919050565b60006120206031836123bc565b915061202b82612a41565b604082019050919050565b61203f816124de565b82525050565b60006120518285611df8565b915061205d8284611df8565b91508190509392505050565b600060208201905061207e6000830184611d68565b92915050565b60006060820190506120996000830186611d68565b6120a66020830185611d59565b6120b36040830184612036565b949350505050565b60006080820190506120d06000830187611d68565b6120dd6020830186611d68565b6120ea6040830185612036565b81810360608301526120fc8184611d86565b905095945050505050565b600060208201905061211c6000830184611d77565b92915050565b6000602082019050818103600083015261213c8184611dbf565b905092915050565b6000602082019050818103600083015261215d81611e29565b9050919050565b6000602082019050818103600083015261217d81611e4c565b9050919050565b6000602082019050818103600083015261219d81611e6f565b9050919050565b600060208201905081810360008301526121bd81611e92565b9050919050565b600060208201905081810360008301526121dd81611eb5565b9050919050565b600060208201905081810360008301526121fd81611ed8565b9050919050565b6000602082019050818103600083015261221d81611efb565b9050919050565b6000602082019050818103600083015261223d81611f1e565b9050919050565b6000602082019050818103600083015261225d81611f41565b9050919050565b6000602082019050818103600083015261227d81611f64565b9050919050565b6000602082019050818103600083015261229d81611f87565b9050919050565b600060208201905081810360008301526122bd81611faa565b9050919050565b600060208201905081810360008301526122dd81611fcd565b9050919050565b600060208201905081810360008301526122fd81611ff0565b9050919050565b6000602082019050818103600083015261231d81612013565b9050919050565b60006020820190506123396000830184612036565b92915050565b600061234961235a565b90506123558282612592565b919050565b6000604051905090565b600067ffffffffffffffff82111561237f5761237e612621565b5b61238882612650565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006123e3826124de565b91506123ee836124de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612423576124226125c3565b5b828201905092915050565b6000612439826124de565b9150612444836124de565b925082821015612457576124566125c3565b5b828203905092915050565b600061246d826124be565b9050919050565b600061247f826124be565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006124f3826124fa565b9050919050565b60006125058261250c565b9050919050565b6000612517826124be565b9050919050565b82818337600083830152505050565b60005b8381101561254b578082015181840152602081019050612530565b8381111561255a576000848401525b50505050565b6000600282049050600182168061257857607f821691505b6020821081141561258c5761258b6125f2565b5b50919050565b61259b82612650565b810181811067ffffffffffffffff821117156125ba576125b9612621565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206f662045544820746f207265636569766572206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b612a9981612462565b8114612aa457600080fd5b50565b612ab081612474565b8114612abb57600080fd5b50565b612ac781612486565b8114612ad257600080fd5b50565b612ade81612492565b8114612ae957600080fd5b50565b612af5816124de565b8114612b0057600080fd5b5056fea264697066735822122015bce63849592212f70cd7efda1dd88239c575192637041649b08062ebb9f12964736f6c63430008040033a264697066735822122051842bb52bd890941837cf19148f8d5dfeae706b1ebc9a6928b62e343f00b6c164736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x148 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xBD JUMPI DUP1 PUSH4 0xDDC8BE3B GT PUSH3 0x7B JUMPI DUP1 PUSH4 0xDDC8BE3B EQ PUSH3 0x39F JUMPI DUP1 PUSH4 0xE95FD155 EQ PUSH3 0x3D5 JUMPI DUP1 PUSH4 0xED0704B0 EQ PUSH3 0x40B JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH3 0x42B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x461 JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x2E7 JUMPI DUP1 PUSH4 0xA894B1E4 EQ PUSH3 0x309 JUMPI DUP1 PUSH4 0xB33DF448 EQ PUSH3 0x329 JUMPI DUP1 PUSH4 0xB8D7B669 EQ PUSH3 0x349 JUMPI DUP1 PUSH4 0xC7C82D1C EQ PUSH3 0x37F JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x3E953859 GT PUSH3 0x10B JUMPI DUP1 PUSH4 0x3E953859 EQ PUSH3 0x22F JUMPI DUP1 PUSH4 0x523070E2 EQ PUSH3 0x24F JUMPI DUP1 PUSH4 0x6A663FBC EQ PUSH3 0x26F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x2A5 JUMPI DUP1 PUSH4 0x78544629 EQ PUSH3 0x2B1 JUMPI PUSH3 0x148 JUMP JUMPDEST DUP1 PUSH4 0x10A50690 EQ PUSH3 0x14D JUMPI DUP1 PUSH4 0x27F50A2D EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0x2C54DE4F EQ PUSH3 0x1B9 JUMPI DUP1 PUSH4 0x2F2F2D56 EQ PUSH3 0x1D9 JUMPI DUP1 PUSH4 0x3B1A0174 EQ PUSH3 0x1F9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x17A SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x19B SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B0 SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1D1 SWAP2 SWAP1 PUSH3 0x1808 JUMP JUMPDEST PUSH3 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x1F1 SWAP2 SWAP1 PUSH3 0x19ED JUMP JUMPDEST PUSH3 0x814 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x211 SWAP2 SWAP1 PUSH3 0x17C7 JUMP JUMPDEST PUSH3 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x226 SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x247 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x267 SWAP2 SWAP1 PUSH3 0x1997 JUMP JUMPDEST PUSH3 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x287 SWAP2 SWAP1 PUSH3 0x1A60 JUMP JUMPDEST PUSH3 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x29C SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2AF PUSH3 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH3 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2C9 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2DE SWAP2 SWAP1 PUSH3 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x2F1 PUSH3 0xEF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x300 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x321 SWAP2 SWAP1 PUSH3 0x18CE JUMP JUMPDEST PUSH3 0xF1E JUMP JUMPDEST STOP JUMPDEST PUSH3 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x341 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0xFE0 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x361 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x376 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x397 SWAP2 SWAP1 PUSH3 0x1956 JUMP JUMPDEST PUSH3 0x10C8 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3CC SWAP2 SWAP1 PUSH3 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3ED SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x402 SWAP2 SWAP1 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x423 SWAP2 SWAP1 PUSH3 0x1874 JUMP JUMPDEST PUSH3 0x134B JUMP JUMPDEST STOP JUMPDEST PUSH3 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x443 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x458 SWAP2 SWAP1 PUSH3 0x1F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x479 SWAP2 SWAP1 PUSH3 0x179B JUMP JUMPDEST PUSH3 0x1413 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x598 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0x504 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x532 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x583 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x557 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x583 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x565 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x6BA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0x626 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x654 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6A5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x679 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x687 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x604 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68155EC1 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x706 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1DAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xA7814AAF178D6C8E61B2703F3DC1B8328DD6C99CBB405BF8F1BB0CB1BBB051A5 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH3 0x806 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH3 0x826 SWAP1 PUSH3 0x15EF JUMP JUMPDEST PUSH3 0x833 SWAP3 SWAP2 SWAP1 PUSH3 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH32 0xD5F9BDF12ADF29DAB0248C349842C3822D53AE2BB4F36352F301630D018C8139 CALLER DUP3 PUSH1 0x40 MLOAD PUSH3 0x886 SWAP3 SWAP2 SWAP1 PUSH3 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9A1 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA3A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40D097C3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F0 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xA20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH3 0xA31 SWAP1 PUSH3 0x219D JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9AC JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xB2A CALLER PUSH1 0x1 DUP4 PUSH3 0xB24 SWAP2 SWAP1 PUSH3 0x2017 JUMP JUMPDEST PUSH3 0x10C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH3 0xDAE JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0xBFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0xC13 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xC41 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC92 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xC66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xC74 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xCAC SWAP2 SWAP1 PUSH3 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xCD5 SWAP2 SWAP1 PUSH3 0x1D49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH3 0xD97 JUMPI DUP5 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0xD6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD8A SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP PUSH3 0xDB4 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0xDA5 SWAP1 PUSH3 0x219D JUMP JUMPDEST SWAP2 POP POP PUSH3 0xB37 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0xDC5 PUSH3 0x149E JUMP JUMPDEST PUSH3 0xDD1 PUSH1 0x0 PUSH3 0x1523 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0xEEA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH3 0xE56 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xE84 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xED5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xEA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xED5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xEB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xE34 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFBE SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFD9 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x105A SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH3 0x111A PUSH3 0x168E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x11CC SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x11FA SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x124B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x121F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x124B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x122D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH3 0x1266 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x1294 SWAP1 PUSH3 0x2131 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x12E5 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x12B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x12E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x12C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x13C5 SWAP3 SWAP2 SWAP1 PUSH3 0x15FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x141D PUSH3 0x149E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1487 SWAP1 PUSH3 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x149B DUP2 PUSH3 0x1523 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x14A8 PUSH3 0x15E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x14C8 PUSH3 0xEF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1521 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1518 SWAP1 PUSH3 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2EC3 DUP1 PUSH3 0x2350 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x160B SWAP1 PUSH3 0x2131 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x162F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x167B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x164A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x167B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x167B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x167A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x165D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x168A SWAP2 SWAP1 PUSH3 0x16C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16E0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x16C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16FB PUSH3 0x16F5 DUP5 PUSH3 0x1F70 JUMP JUMPDEST PUSH3 0x1F47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1721 DUP5 DUP3 DUP6 PUSH3 0x20EC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x173A DUP2 PUSH3 0x2301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1751 DUP2 PUSH3 0x231B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x177B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1795 DUP2 PUSH3 0x2335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x17AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17BE DUP5 DUP3 DUP6 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17EB DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x17FE DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x182F DUP8 DUP3 DUP9 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x1842 DUP8 DUP3 DUP9 ADD PUSH3 0x1740 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x1855 DUP8 DUP3 DUP9 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x1868 DUP8 DUP3 DUP9 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1898 DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x18B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x18C4 DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x18F4 DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1920 DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x194C DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x197A DUP6 DUP3 DUP7 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x198D DUP6 DUP3 DUP7 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x19BD DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x19D0 DUP7 DUP3 DUP8 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x19E3 DUP7 DUP3 DUP8 ADD PUSH3 0x1784 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A2A DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A56 DUP6 DUP3 DUP7 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1A91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A9F DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1ACB DUP7 DUP3 DUP8 ADD PUSH3 0x1757 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1ADE DUP7 DUP3 DUP8 ADD PUSH3 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AF6 DUP4 DUP4 PUSH3 0x1BD4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1B09 DUP2 PUSH3 0x20B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B1A DUP2 PUSH3 0x2066 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B2B DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1B3C DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B4F DUP3 PUSH3 0x1FB6 JUMP JUMPDEST PUSH3 0x1B5B DUP2 DUP6 PUSH3 0x1FD9 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH3 0x1B6F DUP6 PUSH3 0x1FA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x1BB1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH3 0x1B8F DUP6 DUP3 PUSH3 0x1AE8 JUMP JUMPDEST SWAP5 POP PUSH3 0x1B9C DUP4 PUSH3 0x1FCC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1B73 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1BCE DUP2 PUSH3 0x207A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BE1 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1BED DUP2 DUP6 PUSH3 0x1FEA JUMP JUMPDEST SWAP4 POP PUSH3 0x1BFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST PUSH3 0x1C0A DUP2 PUSH3 0x2278 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C22 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1C2E DUP2 DUP6 PUSH3 0x1FFB JUMP JUMPDEST SWAP4 POP PUSH3 0x1C40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST PUSH3 0x1C4B DUP2 PUSH3 0x2278 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C63 DUP3 PUSH3 0x1FC1 JUMP JUMPDEST PUSH3 0x1C6F DUP2 DUP6 PUSH3 0x200C JUMP JUMPDEST SWAP4 POP PUSH3 0x1C81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x20FB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C9C PUSH1 0x26 DUP4 PUSH3 0x1FFB JUMP JUMPDEST SWAP2 POP PUSH3 0x1CA9 DUP3 PUSH3 0x2289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CC3 PUSH1 0x20 DUP4 PUSH3 0x1FFB JUMP JUMPDEST SWAP2 POP PUSH3 0x1CD0 DUP3 PUSH3 0x22D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH3 0x1CF5 PUSH1 0x0 DUP7 ADD DUP3 PUSH3 0x1B20 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH3 0x1D0F DUP3 DUP3 PUSH3 0x1BD4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH3 0x1D2B DUP3 DUP3 PUSH3 0x1BD4 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1D43 DUP2 PUSH3 0x20A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D57 DUP3 DUP5 PUSH3 0x1C56 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1D79 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1D96 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1B31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1DC3 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DD2 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1B0F JUMP JUMPDEST PUSH3 0x1DE1 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1DF0 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1E10 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1E1F PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1AFE JUMP JUMPDEST PUSH3 0x1E2E PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1B31 JUMP JUMPDEST PUSH3 0x1E3D PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1E62 DUP2 DUP5 PUSH3 0x1B42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1E81 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1BC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EA3 DUP2 DUP6 PUSH3 0x1C15 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x1EB9 DUP2 DUP5 PUSH3 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EDD DUP2 PUSH3 0x1C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1EFF DUP2 PUSH3 0x1CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1F22 DUP2 DUP5 PUSH3 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1F41 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F53 PUSH3 0x1F66 JUMP JUMPDEST SWAP1 POP PUSH3 0x1F61 DUP3 DUP3 PUSH3 0x2167 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F8E JUMPI PUSH3 0x1F8D PUSH3 0x2249 JUMP JUMPDEST JUMPDEST PUSH3 0x1F99 DUP3 PUSH3 0x2278 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2024 DUP3 PUSH3 0x20A6 JUMP JUMPDEST SWAP2 POP PUSH3 0x2031 DUP4 PUSH3 0x20A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x2047 JUMPI PUSH3 0x2046 PUSH3 0x21EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x205F DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2073 DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20BD DUP3 PUSH3 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20D1 DUP3 PUSH3 0x20D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20E5 DUP3 PUSH3 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x211B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20FE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x212B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x214A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2161 JUMPI PUSH3 0x2160 PUSH3 0x221A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2172 DUP3 PUSH3 0x2278 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2194 JUMPI PUSH3 0x2193 PUSH3 0x2249 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21AA DUP3 PUSH3 0x20A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH3 0x21E0 JUMPI PUSH3 0x21DF PUSH3 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x230C DUP2 PUSH3 0x2052 JUMP JUMPDEST DUP2 EQ PUSH3 0x2318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2326 DUP2 PUSH3 0x2066 JUMP JUMPDEST DUP2 EQ PUSH3 0x2332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2340 DUP2 PUSH3 0x20A6 JUMP JUMPDEST DUP2 EQ PUSH3 0x234C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EC3 CODESIZE SUB DUP1 PUSH3 0x2EC3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x197 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x37A JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x83 SWAP1 PUSH3 0x29F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x106 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x107 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13C PUSH3 0x136 DUP5 PUSH3 0x233 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x162 DUP5 DUP3 DUP6 PUSH3 0x269 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D4 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x200 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x216 PUSH3 0x229 JUMP JUMPDEST SWAP1 POP PUSH3 0x224 DUP3 DUP3 PUSH3 0x2D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x33A JUMP JUMPDEST JUMPDEST PUSH3 0x25C DUP3 PUSH3 0x369 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x289 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x26C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x30B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E0 DUP3 PUSH3 0x369 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x302 JUMPI PUSH3 0x301 PUSH3 0x33A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B39 DUP1 PUSH3 0x38A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x68155EC1 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F4 DUP3 PUSH2 0xB9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0xC72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5DD JUMPI POP PUSH2 0x5DC DUP2 PUSH2 0x5D7 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x635 DUP4 DUP3 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 PUSH1 0x6 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x69C PUSH1 0x6 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x6A6 DUP3 DUP3 PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x899 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x992 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x9F4 PUSH2 0xC72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0A PUSH2 0xC72 JUMP JUMPDEST DUP4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1227 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6C DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST DUP1 PUSH2 0xADF DUP5 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCED DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDF7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDF DUP5 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE08 JUMPI POP PUSH2 0xE07 DUP2 DUP6 PUSH2 0xB08 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE31 DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEE SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x0 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB4 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1073 DUP4 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1232 DUP5 DUP5 DUP5 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x123E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12A9 DUP5 PUSH2 0x15BA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1320 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x139D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CB JUMP JUMPDEST ISZERO PUSH2 0x15AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x146D PUSH2 0xC72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14DA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x155D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154C SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x163E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1634 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16A1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16F6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1745 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x173B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1790 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1786 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186A DUP2 PUSH2 0xC06 JUMP JUMPDEST ISZERO PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH2 0x19FC DUP5 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A24 DUP5 DUP3 DUP6 PUSH2 0x251E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3B DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A50 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACE DUP2 PUSH2 0x2AEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2F DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B6E DUP8 DUP3 DUP9 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B7F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B90 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE1 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C20 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C31 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5A DUP8 DUP3 DUP9 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP5 DUP3 DUP6 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x24E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D91 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH2 0x1D9B DUP2 DUP6 PUSH2 0x23AB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCA DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1DD4 DUP2 DUP6 PUSH2 0x23BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DED DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1E0D DUP2 DUP6 PUSH2 0x23CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E36 PUSH1 0x32 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP3 PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x25 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7C PUSH1 0x1C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9F PUSH1 0x24 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC2 PUSH1 0x19 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 PUSH1 0x38 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2B PUSH1 0x2A DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F36 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x29 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F71 PUSH1 0x22 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7C DUP3 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x2F DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFD PUSH1 0x21 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x2008 DUP3 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 PUSH1 0x31 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x20B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 DUP5 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213C DUP2 DUP5 PUSH2 0x1DBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215D DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217D DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BD DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DD DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x223D DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227D DUP2 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22BD DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DD DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2349 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH2 0x2355 DUP3 DUP3 PUSH2 0x2592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x237F JUMPI PUSH2 0x237E PUSH2 0x2621 JUMP JUMPDEST JUMPDEST PUSH2 0x2388 DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x23EE DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2439 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x250C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x254B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2530 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2578 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259B DUP3 PUSH2 0x2650 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x2621 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AB0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2492 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBC 0xE6 CODESIZE 0x49 MSIZE 0x22 SLT 0xF7 0xC 0xD7 0xEF 0xDA SAR 0xD8 DUP3 CODECOPY 0xC5 PUSH22 0x192637041649B08062EBB9F12964736F6C6343000804 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD DUP5 0x2B 0xB5 0x2B 0xD8 SWAP1 SWAP5 XOR CALLDATACOPY 0xCF NOT EQ DUP16 DUP14 0x5D INVALID 0xAE PUSH17 0x6B1EBC9A6928B62E343F00B6C164736F6C PUSH4 0x43000804 STOP CALLER ","sourceMap":"204:4452:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3964:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2475:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;997:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3645:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2349:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1342:533;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4117:537;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;2759:151:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2916:313:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2636:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2197:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3404:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3235:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;881:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3845:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3523:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3964:147:13;4048:15;4086:5;:18;4092:11;4086:18;;;;;;;;;;;;;;;4079:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3964:147;;;:::o;2475:155::-;2563:15;2601:9;:22;2611:11;2601:22;;;;;;;;;;;;;;;2594:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:155;;;:::o;1881:310::-;2042:5;2024:39;;;2064:4;2070:2;2074:5;2081:6;2024:64;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2125:4;2098:14;:20;2113:4;2098:20;;;;;;;;;;;;;;;:24;2119:2;2098:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2144:40;2160:4;2166:2;2170:5;2177:6;2144:40;;;;;;;;;:::i;:::-;;;;;;;;1881:310;;;;:::o;997:339::-;1077:16;1126:4;1132:6;1104:35;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1077:63;;1295:34;1308:10;1320:8;1295:34;;;;;;;:::i;:::-;;;;;;;;997:339;;;:::o;3645:194::-;3762:4;3789:14;:28;3804:12;3789:28;;;;;;;;;;;;;;;:43;3818:13;3789:43;;;;;;;;;;;;;;;;;;;;;;;;;3782:50;;3645:194;;;;:::o;2349:120::-;2430:9;:22;2440:11;2430:22;;;;;;;;;;;;;;;2458:3;2430:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2349:120;;:::o;1342:533::-;1468:9;1480:5;1468:17;;1463:115;1491:3;1487:1;:7;1463:115;;;1533:12;1515:40;;;1556:10;1515:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:3;;;;;:::i;:::-;;;;1463:115;;;;1613:4;1587:11;:23;1599:10;1587:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1724:12;1704:5;:17;1710:10;1704:17;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1837:31;1848:10;1866:1;1860:3;:7;;;;:::i;:::-;1837:10;:31::i;:::-;1342:533;;;:::o;4117:537::-;4252:4;4273:9;4285:1;4273:13;;4268:358;4292:5;:18;4298:11;4292:18;;;;;;;;;;;;;;;:25;;;;4288:1;:29;4268:358;;;4338:21;4362:5;:18;4368:11;4362:18;;;;;;;;;;;;;;;4381:1;4362:21;;;;;;;;;;;;;;;;;;;;;;;4338:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4501:6;4484:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;4474:35;;;;;;4445:7;4428:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;4418:36;;;;;;:91;4397:219;;;4566:6;4542:5;:18;4548:11;4542:18;;;;;;;;;;;;;;;4561:1;4542:21;;;;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;4597:4;4590:11;;;;;;4397:219;4268:358;4319:3;;;;;:::i;:::-;;;;4268:358;;;;4642:5;4635:12;;4117:537;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2759:151:13:-;2845:15;2883:7;:20;2891:11;2883:20;;;;;;;;;;;;;;;2876:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:151;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2916:313:13:-;3060:31;3094:6;:19;3101:11;3094:19;;;;;;;;;;;;;;;3060:53;;3139:11;3123:8;:13;;;:27;;;;;;;;;;;;;;;;;;3179:7;3160:8;:16;;:26;;;;;;;;;;;;:::i;:::-;;3215:7;3196:8;:16;;:26;;;;;;;;;;;;:::i;:::-;;2916:313;;;;:::o;2636:117::-;2716:7;:20;2724:11;2716:20;;;;;;;;;;;;;;;2742:3;2716:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2636:117;;:::o;2197:146::-;2288:7;2318:5;:18;2324:11;2318:18;;;;;;;;;;;;;;;;;;;;;;;;;2311:25;;2197:146;;;:::o;3404:113::-;3503:7;3479:8;:21;3488:11;3479:21;;;;;;;;;;;;;;;:31;;;;3404:113;;:::o;3235:163::-;3328:21;;:::i;:::-;3372:6;:19;3379:11;3372:19;;;;;;;;;;;;;;;3365:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:163;;;:::o;881:110::-;942:4;965:11;:19;977:6;965:19;;;;;;;;;;;;;;;;;;;;;;;;;958:26;;881:110;;;:::o;3845:113::-;3923:5;:18;3929:11;3923:18;;;;;;;;;;;;;;;3947:3;3923:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3845:113;;:::o;3523:116::-;3585:7;3611:8;:21;3620:11;3611:21;;;;;;;;;;;;;;;;3604:28;;3523:116;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:21:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;404:5;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;503:155::-;557:5;595:6;582:20;573:29;;611:41;646:5;611:41;:::i;:::-;563:95;;;;:::o;678:273::-;734:5;783:3;776:4;768:6;764:17;760:27;750:2;;801:1;798;791:12;750:2;841:6;828:20;866:79;941:3;933:6;926:4;918:6;914:17;866:79;:::i;:::-;857:88;;740:211;;;;;:::o;957:139::-;1003:5;1041:6;1028:20;1019:29;;1057:33;1084:5;1057:33;:::i;:::-;1009:87;;;;:::o;1102:262::-;1161:6;1210:2;1198:9;1189:7;1185:23;1181:32;1178:2;;;1226:1;1223;1216:12;1178:2;1269:1;1294:53;1339:7;1330:6;1319:9;1315:22;1294:53;:::i;:::-;1284:63;;1240:117;1168:196;;;;:::o;1370:407::-;1438:6;1446;1495:2;1483:9;1474:7;1470:23;1466:32;1463:2;;;1511:1;1508;1501:12;1463:2;1554:1;1579:53;1624:7;1615:6;1604:9;1600:22;1579:53;:::i;:::-;1569:63;;1525:117;1681:2;1707:53;1752:7;1743:6;1732:9;1728:22;1707:53;:::i;:::-;1697:63;;1652:118;1453:324;;;;;:::o;1783:714::-;1877:6;1885;1893;1901;1950:3;1938:9;1929:7;1925:23;1921:33;1918:2;;;1967:1;1964;1957:12;1918:2;2010:1;2035:53;2080:7;2071:6;2060:9;2056:22;2035:53;:::i;:::-;2025:63;;1981:117;2137:2;2163:61;2216:7;2207:6;2196:9;2192:22;2163:61;:::i;:::-;2153:71;;2108:126;2273:2;2299:53;2344:7;2335:6;2324:9;2320:22;2299:53;:::i;:::-;2289:63;;2244:118;2401:2;2427:53;2472:7;2463:6;2452:9;2448:22;2427:53;:::i;:::-;2417:63;;2372:118;1908:589;;;;;;;:::o;2503:520::-;2581:6;2589;2638:2;2626:9;2617:7;2613:23;2609:32;2606:2;;;2654:1;2651;2644:12;2606:2;2697:1;2722:53;2767:7;2758:6;2747:9;2743:22;2722:53;:::i;:::-;2712:63;;2668:117;2852:2;2841:9;2837:18;2824:32;2883:18;2875:6;2872:30;2869:2;;;2915:1;2912;2905:12;2869:2;2943:63;2998:7;2989:6;2978:9;2974:22;2943:63;:::i;:::-;2933:73;;2795:221;2596:427;;;;;:::o;3029:778::-;3126:6;3134;3142;3191:2;3179:9;3170:7;3166:23;3162:32;3159:2;;;3207:1;3204;3197:12;3159:2;3250:1;3275:53;3320:7;3311:6;3300:9;3296:22;3275:53;:::i;:::-;3265:63;;3221:117;3405:2;3394:9;3390:18;3377:32;3436:18;3428:6;3425:30;3422:2;;;3468:1;3465;3458:12;3422:2;3496:63;3551:7;3542:6;3531:9;3527:22;3496:63;:::i;:::-;3486:73;;3348:221;3636:2;3625:9;3621:18;3608:32;3667:18;3659:6;3656:30;3653:2;;;3699:1;3696;3689:12;3653:2;3727:63;3782:7;3773:6;3762:9;3758:22;3727:63;:::i;:::-;3717:73;;3579:221;3149:658;;;;;:::o;3813:407::-;3881:6;3889;3938:2;3926:9;3917:7;3913:23;3909:32;3906:2;;;3954:1;3951;3944:12;3906:2;3997:1;4022:53;4067:7;4058:6;4047:9;4043:22;4022:53;:::i;:::-;4012:63;;3968:117;4124:2;4150:53;4195:7;4186:6;4175:9;4171:22;4150:53;:::i;:::-;4140:63;;4095:118;3896:324;;;;;:::o;4226:552::-;4303:6;4311;4319;4368:2;4356:9;4347:7;4343:23;4339:32;4336:2;;;4384:1;4381;4374:12;4336:2;4427:1;4452:53;4497:7;4488:6;4477:9;4473:22;4452:53;:::i;:::-;4442:63;;4398:117;4554:2;4580:53;4625:7;4616:6;4605:9;4601:22;4580:53;:::i;:::-;4570:63;;4525:118;4682:2;4708:53;4753:7;4744:6;4733:9;4729:22;4708:53;:::i;:::-;4698:63;;4653:118;4326:452;;;;;:::o;4784:633::-;4872:6;4880;4929:2;4917:9;4908:7;4904:23;4900:32;4897:2;;;4945:1;4942;4935:12;4897:2;5016:1;5005:9;5001:17;4988:31;5046:18;5038:6;5035:30;5032:2;;;5078:1;5075;5068:12;5032:2;5106:63;5161:7;5152:6;5141:9;5137:22;5106:63;:::i;:::-;5096:73;;4959:220;5246:2;5235:9;5231:18;5218:32;5277:18;5269:6;5266:30;5263:2;;;5309:1;5306;5299:12;5263:2;5337:63;5392:7;5383:6;5372:9;5368:22;5337:63;:::i;:::-;5327:73;;5189:221;4887:530;;;;;:::o;5423:778::-;5520:6;5528;5536;5585:2;5573:9;5564:7;5560:23;5556:32;5553:2;;;5601:1;5598;5591:12;5553:2;5672:1;5661:9;5657:17;5644:31;5702:18;5694:6;5691:30;5688:2;;;5734:1;5731;5724:12;5688:2;5762:63;5817:7;5808:6;5797:9;5793:22;5762:63;:::i;:::-;5752:73;;5615:220;5902:2;5891:9;5887:18;5874:32;5933:18;5925:6;5922:30;5919:2;;;5965:1;5962;5955:12;5919:2;5993:63;6048:7;6039:6;6028:9;6024:22;5993:63;:::i;:::-;5983:73;;5845:221;6105:2;6131:53;6176:7;6167:6;6156:9;6152:22;6131:53;:::i;:::-;6121:63;;6076:118;5543:658;;;;;:::o;6207:196::-;6296:10;6331:66;6393:3;6385:6;6331:66;:::i;:::-;6317:80;;6307:96;;;;:::o;6409:147::-;6504:45;6543:5;6504:45;:::i;:::-;6499:3;6492:58;6482:74;;:::o;6562:142::-;6665:32;6691:5;6665:32;:::i;:::-;6660:3;6653:45;6643:61;;:::o;6710:108::-;6787:24;6805:5;6787:24;:::i;:::-;6782:3;6775:37;6765:53;;:::o;6824:118::-;6911:24;6929:5;6911:24;:::i;:::-;6906:3;6899:37;6889:53;;:::o;6976:991::-;7115:3;7144:64;7202:5;7144:64;:::i;:::-;7224:96;7313:6;7308:3;7224:96;:::i;:::-;7217:103;;7346:3;7391:4;7383:6;7379:17;7374:3;7370:27;7421:66;7481:5;7421:66;:::i;:::-;7510:7;7541:1;7526:396;7551:6;7548:1;7545:13;7526:396;;;7622:9;7616:4;7612:20;7607:3;7600:33;7673:6;7667:13;7701:84;7780:4;7765:13;7701:84;:::i;:::-;7693:92;;7808:70;7871:6;7808:70;:::i;:::-;7798:80;;7907:4;7902:3;7898:14;7891:21;;7586:336;7573:1;7570;7566:9;7561:14;;7526:396;;;7530:14;7938:4;7931:11;;7958:3;7951:10;;7120:847;;;;;;;;;:::o;7973:109::-;8054:21;8069:5;8054:21;:::i;:::-;8049:3;8042:34;8032:50;;:::o;8088:344::-;8166:3;8194:39;8227:5;8194:39;:::i;:::-;8249:61;8303:6;8298:3;8249:61;:::i;:::-;8242:68;;8319:52;8364:6;8359:3;8352:4;8345:5;8341:16;8319:52;:::i;:::-;8396:29;8418:6;8396:29;:::i;:::-;8391:3;8387:39;8380:46;;8170:262;;;;;:::o;8438:364::-;8526:3;8554:39;8587:5;8554:39;:::i;:::-;8609:71;8673:6;8668:3;8609:71;:::i;:::-;8602:78;;8689:52;8734:6;8729:3;8722:4;8715:5;8711:16;8689:52;:::i;:::-;8766:29;8788:6;8766:29;:::i;:::-;8761:3;8757:39;8750:46;;8530:272;;;;;:::o;8808:377::-;8914:3;8942:39;8975:5;8942:39;:::i;:::-;8997:89;9079:6;9074:3;8997:89;:::i;:::-;8990:96;;9095:52;9140:6;9135:3;9128:4;9121:5;9117:16;9095:52;:::i;:::-;9172:6;9167:3;9163:16;9156:23;;8918:267;;;;;:::o;9191:366::-;9333:3;9354:67;9418:2;9413:3;9354:67;:::i;:::-;9347:74;;9430:93;9519:3;9430:93;:::i;:::-;9548:2;9543:3;9539:12;9532:19;;9337:220;;;:::o;9563:366::-;9705:3;9726:67;9790:2;9785:3;9726:67;:::i;:::-;9719:74;;9802:93;9891:3;9802:93;:::i;:::-;9920:2;9915:3;9911:12;9904:19;;9709:220;;;:::o;10015:871::-;10148:3;10184:4;10179:3;10175:14;10271:4;10264:5;10260:16;10254:23;10290:63;10347:4;10342:3;10338:14;10324:12;10290:63;:::i;:::-;10199:164;10448:4;10441:5;10437:16;10431:23;10501:3;10495:4;10491:14;10484:4;10479:3;10475:14;10468:38;10527:73;10595:4;10581:12;10527:73;:::i;:::-;10519:81;;10373:238;10696:4;10689:5;10685:16;10679:23;10749:3;10743:4;10739:14;10732:4;10727:3;10723:14;10716:38;10775:73;10843:4;10829:12;10775:73;:::i;:::-;10767:81;;10621:238;10876:4;10869:11;;10153:733;;;;;:::o;10892:118::-;10979:24;10997:5;10979:24;:::i;:::-;10974:3;10967:37;10957:53;;:::o;11016:275::-;11148:3;11170:95;11261:3;11252:6;11170:95;:::i;:::-;11163:102;;11282:3;11275:10;;11152:139;;;;:::o;11297:222::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11441:71;11509:1;11498:9;11494:17;11485:6;11441:71;:::i;:::-;11395:124;;;;:::o;11525:332::-;11646:4;11684:2;11673:9;11669:18;11661:26;;11697:71;11765:1;11754:9;11750:17;11741:6;11697:71;:::i;:::-;11778:72;11846:2;11835:9;11831:18;11822:6;11778:72;:::i;:::-;11651:206;;;;;:::o;11863:585::-;12056:4;12094:3;12083:9;12079:19;12071:27;;12108:71;12176:1;12165:9;12161:17;12152:6;12108:71;:::i;:::-;12189:88;12273:2;12262:9;12258:18;12249:6;12189:88;:::i;:::-;12287:72;12355:2;12344:9;12340:18;12331:6;12287:72;:::i;:::-;12369;12437:2;12426:9;12422:18;12413:6;12369:72;:::i;:::-;12061:387;;;;;;;:::o;12454:569::-;12639:4;12677:3;12666:9;12662:19;12654:27;;12691:71;12759:1;12748:9;12744:17;12735:6;12691:71;:::i;:::-;12772:80;12848:2;12837:9;12833:18;12824:6;12772:80;:::i;:::-;12862:72;12930:2;12919:9;12915:18;12906:6;12862:72;:::i;:::-;12944;13012:2;13001:9;12997:18;12988:6;12944:72;:::i;:::-;12644:379;;;;;;;:::o;13029:413::-;13192:4;13230:2;13219:9;13215:18;13207:26;;13279:9;13273:4;13269:20;13265:1;13254:9;13250:17;13243:47;13307:128;13430:4;13421:6;13307:128;:::i;:::-;13299:136;;13197:245;;;;:::o;13448:210::-;13535:4;13573:2;13562:9;13558:18;13550:26;;13586:65;13648:1;13637:9;13633:17;13624:6;13586:65;:::i;:::-;13540:118;;;;:::o;13664:514::-;13825:4;13863:2;13852:9;13848:18;13840:26;;13912:9;13906:4;13902:20;13898:1;13887:9;13883:17;13876:47;13940:78;14013:4;14004:6;13940:78;:::i;:::-;13932:86;;14065:9;14059:4;14055:20;14050:2;14039:9;14035:18;14028:48;14093:78;14166:4;14157:6;14093:78;:::i;:::-;14085:86;;13830:348;;;;;:::o;14184:419::-;14350:4;14388:2;14377:9;14373:18;14365:26;;14437:9;14431:4;14427:20;14423:1;14412:9;14408:17;14401:47;14465:131;14591:4;14465:131;:::i;:::-;14457:139;;14355:248;;;:::o;14609:419::-;14775:4;14813:2;14802:9;14798:18;14790:26;;14862:9;14856:4;14852:20;14848:1;14837:9;14833:17;14826:47;14890:131;15016:4;14890:131;:::i;:::-;14882:139;;14780:248;;;:::o;15034:401::-;15191:4;15229:2;15218:9;15214:18;15206:26;;15278:9;15272:4;15268:20;15264:1;15253:9;15249:17;15242:47;15306:122;15423:4;15414:6;15306:122;:::i;:::-;15298:130;;15196:239;;;;:::o;15441:222::-;15534:4;15572:2;15561:9;15557:18;15549:26;;15585:71;15653:1;15642:9;15638:17;15629:6;15585:71;:::i;:::-;15539:124;;;;:::o;15669:129::-;15703:6;15730:20;;:::i;:::-;15720:30;;15759:33;15787:4;15779:6;15759:33;:::i;:::-;15710:88;;;:::o;15804:75::-;15837:6;15870:2;15864:9;15854:19;;15844:35;:::o;15885:308::-;15947:4;16037:18;16029:6;16026:30;16023:2;;;16059:18;;:::i;:::-;16023:2;16097:29;16119:6;16097:29;:::i;:::-;16089:37;;16181:4;16175;16171:15;16163:23;;15952:241;;;:::o;16199:142::-;16276:4;16299:3;16291:11;;16329:4;16324:3;16320:14;16312:22;;16281:60;;;:::o;16347:124::-;16424:6;16458:5;16452:12;16442:22;;16431:40;;;:::o;16477:99::-;16529:6;16563:5;16557:12;16547:22;;16536:40;;;:::o;16582:123::-;16662:4;16694;16689:3;16685:14;16677:22;;16667:38;;;:::o;16711:194::-;16820:11;16854:6;16849:3;16842:19;16894:4;16889:3;16885:14;16870:29;;16832:73;;;;:::o;16911:159::-;16985:11;17019:6;17014:3;17007:19;17059:4;17054:3;17050:14;17035:29;;16997:73;;;;:::o;17076:169::-;17160:11;17194:6;17189:3;17182:19;17234:4;17229:3;17225:14;17210:29;;17172:73;;;;:::o;17251:148::-;17353:11;17390:3;17375:18;;17365:34;;;;:::o;17405:191::-;17445:4;17465:20;17483:1;17465:20;:::i;:::-;17460:25;;17499:20;17517:1;17499:20;:::i;:::-;17494:25;;17538:1;17535;17532:8;17529:2;;;17543:18;;:::i;:::-;17529:2;17588:1;17585;17581:9;17573:17;;17450:146;;;;:::o;17602:96::-;17639:7;17668:24;17686:5;17668:24;:::i;:::-;17657:35;;17647:51;;;:::o;17704:104::-;17749:7;17778:24;17796:5;17778:24;:::i;:::-;17767:35;;17757:51;;;:::o;17814:90::-;17848:7;17891:5;17884:13;17877:21;17866:32;;17856:48;;;:::o;17910:126::-;17947:7;17987:42;17980:5;17976:54;17965:65;;17955:81;;;:::o;18042:77::-;18079:7;18108:5;18097:16;;18087:32;;;:::o;18125:134::-;18183:9;18216:37;18247:5;18216:37;:::i;:::-;18203:50;;18193:66;;;:::o;18265:126::-;18315:9;18348:37;18379:5;18348:37;:::i;:::-;18335:50;;18325:66;;;:::o;18397:113::-;18447:9;18480:24;18498:5;18480:24;:::i;:::-;18467:37;;18457:53;;;:::o;18516:154::-;18600:6;18595:3;18590;18577:30;18662:1;18653:6;18648:3;18644:16;18637:27;18567:103;;;:::o;18676:307::-;18744:1;18754:113;18768:6;18765:1;18762:13;18754:113;;;18853:1;18848:3;18844:11;18838:18;18834:1;18829:3;18825:11;18818:39;18790:2;18787:1;18783:10;18778:15;;18754:113;;;18885:6;18882:1;18879:13;18876:2;;;18965:1;18956:6;18951:3;18947:16;18940:27;18876:2;18725:258;;;;:::o;18989:320::-;19033:6;19070:1;19064:4;19060:12;19050:22;;19117:1;19111:4;19107:12;19138:18;19128:2;;19194:4;19186:6;19182:17;19172:27;;19128:2;19256;19248:6;19245:14;19225:18;19222:38;19219:2;;;19275:18;;:::i;:::-;19219:2;19040:269;;;;:::o;19315:281::-;19398:27;19420:4;19398:27;:::i;:::-;19390:6;19386:40;19528:6;19516:10;19513:22;19492:18;19480:10;19477:34;19474:62;19471:2;;;19539:18;;:::i;:::-;19471:2;19579:10;19575:2;19568:22;19358:238;;;:::o;19602:233::-;19641:3;19664:24;19682:5;19664:24;:::i;:::-;19655:33;;19710:66;19703:5;19700:77;19697:2;;;19780:18;;:::i;:::-;19697:2;19827:1;19820:5;19816:13;19809:20;;19645:190;;;:::o;19841:180::-;19889:77;19886:1;19879:88;19986:4;19983:1;19976:15;20010:4;20007:1;20000:15;20027:180;20075:77;20072:1;20065:88;20172:4;20169:1;20162:15;20196:4;20193:1;20186:15;20213:180;20261:77;20258:1;20251:88;20358:4;20355:1;20348:15;20382:4;20379:1;20372:15;20399:102;20440:6;20491:2;20487:7;20482:2;20475:5;20471:14;20467:28;20457:38;;20447:54;;;:::o;20507:225::-;20647:34;20643:1;20635:6;20631:14;20624:58;20716:8;20711:2;20703:6;20699:15;20692:33;20613:119;:::o;20738:182::-;20878:34;20874:1;20866:6;20862:14;20855:58;20844:76;:::o;20926:122::-;20999:24;21017:5;20999:24;:::i;:::-;20992:5;20989:35;20979:2;;21038:1;21035;21028:12;20979:2;20969:79;:::o;21054:138::-;21135:32;21161:5;21135:32;:::i;:::-;21128:5;21125:43;21115:2;;21182:1;21179;21172:12;21115:2;21105:87;:::o;21198:122::-;21271:24;21289:5;21271:24;:::i;:::-;21264:5;21261:35;21251:2;;21310:1;21307;21300:12;21251:2;21241:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4212800","executionCost":"infinite","totalCost":"infinite"},"external":{"bulkMintERC721(address,uint256,uint256)":"infinite","createEmergencyAlert(address,string,string)":"infinite","createMembers(address,string)":"infinite","createNotes(address,string)":"infinite","createToken(string,string)":"infinite","findAndReplace(string,string,address)":"infinite","getDocuments(address)":"infinite","getEmergencyAlert(address)":"infinite","getLoginStatus(address)":"1627","getMembers(address)":"infinite","getNotes(address)":"infinite","getTokenAddress(address)":"infinite","getTokenId(address)":"1629","getTransferStatus(address,address)":"infinite","owner()":"1245","renounceOwnership()":"24487","setTokenId(address,uint256)":"20843","storeDocuments(address,string)":"infinite","transferOwnership(address)":"24857","transferToken(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{"bulkMintERC721(address,uint256,uint256)":"523070e2","createEmergencyAlert(address,string,string)":"a894b1e4","createMembers(address,string)":"b33df448","createNotes(address,string)":"ed0704b0","createToken(string,string)":"2f2f2d56","findAndReplace(string,string,address)":"6a663fbc","getDocuments(address)":"27f50a2d","getEmergencyAlert(address)":"ddc8be3b","getLoginStatus(address)":"e95fd155","getMembers(address)":"78544629","getNotes(address)":"10a50690","getTokenAddress(address)":"b8d7b669","getTokenId(address)":"f1537686","getTransferStatus(address,address)":"3b1a0174","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setTokenId(address,uint256)":"c7c82d1c","storeDocuments(address,string)":"3e953859","transferOwnership(address)":"f2fde38b","transferToken(address,address,address,uint256)":"2c54de4f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenTransfered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"bulkMintERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"createEmergencyAlert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"createMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"createNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"oldCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newCid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"findAndReplace\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getDocuments\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getEmergencyAlert\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct CrypticVault.emergencyAlert\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"getLoginStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getNotes\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"}],\"name\":\"getTransferStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"storeDocuments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrypticVault.sol\":\"CrypticVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/CrypticVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"./CrypticVaultToken.sol\\\";\\n\\ncontract CrypticVault is Ownable {\\n    struct emergencyAlert {\\n        address user;\\n        string subject;\\n        string message;\\n    }\\n\\n    mapping(address => bool) private loginStatus;\\n    mapping(address => mapping(address => bool)) private transferStatus;\\n    mapping(address => address) private users;\\n    mapping(address => string[]) private members;\\n\\n    mapping(address => uint256) private tokenIds;\\n    mapping(address => emergencyAlert) private alerts;\\n    mapping(address => string[]) private documents;\\n    mapping(address => string[]) private notes;\\n\\n    event TokenCreated(address, address);\\n    event TokenTransfered(address, address, address, uint256);\\n\\n    function getLoginStatus(address caller) public view returns (bool) {\\n        return loginStatus[caller];\\n    }\\n\\n    function createToken(string memory name, string memory symbol) public {\\n        address _address = address(new CrypticVaultToken(name, symbol)); // Created Token contract.\\n        // here add if else if conditions with argument module and store the address in their relevent variable.\\n        emit TokenCreated(msg.sender, _address);\\n    }\\n\\n    function bulkMintERC721(\\n        address tokenAddress,\\n        uint256 start,\\n        uint256 end\\n    ) public {\\n        for (uint256 i = start; i < end; i++) {\\n            CrypticVaultToken(tokenAddress).safeMint(msg.sender);\\n        }\\n        loginStatus[msg.sender] = true;\\n        // Remove the next line. Will do that step in create token function.\\n        users[msg.sender] = tokenAddress;\\n        // Here we will also have token address to set the token Id of particular token's.\\n        setTokenId(msg.sender, end - 1);\\n    }\\n\\n    function transferToken(\\n        address from,\\n        address payable to,\\n        address token,\\n        uint256 amount\\n    ) public {\\n        CrypticVaultToken(token).transferTokens(from, to, token, amount);\\n        transferStatus[from][to] = true;\\n        emit TokenTransfered(from, to, token, amount);\\n    }\\n\\n    function getTokenAddress(address userAddress)\\n        public\\n        view\\n        returns (address)\\n    {\\n        return users[userAddress];\\n    }\\n\\n    function storeDocuments(address userAddress, string memory cid) public {\\n        documents[userAddress].push(cid);\\n    }\\n\\n    function getDocuments(address userAddress)\\n        public\\n        view\\n        returns (string[] memory)\\n    {\\n        return documents[userAddress];\\n    }\\n\\n    function createMembers(address userAddress, string memory cid) public {\\n        members[userAddress].push(cid);\\n    }\\n\\n    function getMembers(address userAddress)\\n        public\\n        view\\n        returns (string[] memory)\\n    {\\n        return members[userAddress];\\n    }\\n\\n    function createEmergencyAlert(\\n        address userAddress,\\n        string memory subject,\\n        string memory message\\n    ) public {\\n        emergencyAlert storage newAlert = alerts[userAddress];\\n        newAlert.user = userAddress;\\n        newAlert.subject = subject;\\n        newAlert.message = message;\\n    }\\n\\n    function getEmergencyAlert(address userAddress)\\n        public\\n        view\\n        returns (emergencyAlert memory)\\n    {\\n        return alerts[userAddress];\\n    }\\n\\n    function setTokenId(address userAddress, uint256 tokenId) public {\\n        tokenIds[userAddress] = tokenId;\\n    }\\n\\n    function getTokenId(address userAddress) public view returns (uint256) {\\n        return tokenIds[userAddress];\\n    }\\n\\n    function getTransferStatus(address adminAddress, address memberAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return transferStatus[adminAddress][memberAddress];\\n    }\\n\\n    function createNotes(address userAddress, string memory cid) public {\\n        notes[userAddress].push(cid);\\n    }\\n\\n    function getNotes(address userAddress)\\n        public\\n        view\\n        returns (string[] memory)\\n    {\\n        return notes[userAddress];\\n    }\\n\\n    function findAndReplace(\\n        string memory oldCid,\\n        string memory newCid,\\n        address userAddress\\n    ) public returns (bool) {\\n        for (uint256 i = 0; i < notes[userAddress].length; i++) {\\n            string memory noteCid = notes[userAddress][i];\\n            if (\\n                keccak256(abi.encodePacked(noteCid)) ==\\n                keccak256(abi.encodePacked(oldCid))\\n            ) {\\n                notes[userAddress][i] = newCid;\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xef86648e8de2dde76a289aa34691c8928d19755192853c836e2df384f4481fd3\",\"license\":\"MIT\"},\"contracts/CrypticVaultToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./comman/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract CrypticVaultToken is ERC721 {\\n    using Counters for Counters.Counter;\\n\\n    Counters.Counter private _tokenIdCounter;\\n\\n    constructor(string memory _name, string memory _symbol)\\n        ERC721(_name, _symbol)\\n    {}\\n\\n    function safeMint(address to) public {\\n        uint256 tokenId = _tokenIdCounter.current();\\n        _tokenIdCounter.increment();\\n        _safeMint(to, tokenId);\\n    }\\n\\n    function transferTokens(\\n        address from,\\n        address payable to,\\n        address token,\\n        uint256 amount\\n    ) public {\\n        if (token != address(0)) {\\n            IERC721(token).transferFrom(from, to, amount);\\n        } else {\\n            require(to.send(amount), \\\"Transfer of ETH to receiver failed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x37e90ec33f858484662dadb74c4e08355af1972e9d3fbcad8f4dd2c21d94c078\",\"license\":\"MIT\"},\"contracts/comman/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC165, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        address owner = _owners[tokenId];\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: owner query for nonexistent token\\\"\\n        );\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\n        );\\n\\n        string memory baseURI = _baseURI();\\n        return\\n            bytes(baseURI).length > 0\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n                : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved)\\n        public\\n        virtual\\n        override\\n    {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bool)\\n    {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(\\n            _isApprovedOrOwner(from, tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(\\n            _isApprovedOrOwner(_msgSender(), tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(\\n            _checkOnERC721Received(from, to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\\n        internal\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner ||\\n            getApproved(tokenId) == spender ||\\n            isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(\\n            ERC721.ownerOf(tokenId) == from,\\n            \\\"ERC721: transfer from incorrect owner\\\"\\n        );\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try\\n                IERC721Receiver(to).onERC721Received(\\n                    _msgSender(),\\n                    from,\\n                    tokenId,\\n                    _data\\n                )\\n            returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n                    );\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xae8de655157eb9dbaa5a38ed6383b730b49faf4c6a2f2f50660d7df2d71c0183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2103,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"loginStatus","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":2109,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"transferStatus","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2113,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"users","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":2118,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"members","offset":0,"slot":"4","type":"t_mapping(t_address,t_array(t_string_storage)dyn_storage)"},{"astId":2122,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"tokenIds","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2127,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"alerts","offset":0,"slot":"6","type":"t_mapping(t_address,t_struct(emergencyAlert)2099_storage)"},{"astId":2132,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"documents","offset":0,"slot":"7","type":"t_mapping(t_address,t_array(t_string_storage)dyn_storage)"},{"astId":2137,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"notes","offset":0,"slot":"8","type":"t_mapping(t_address,t_array(t_string_storage)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_string_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => string[])","numberOfBytes":"32","value":"t_array(t_string_storage)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_struct(emergencyAlert)2099_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CrypticVault.emergencyAlert)","numberOfBytes":"32","value":"t_struct(emergencyAlert)2099_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(emergencyAlert)2099_storage":{"encoding":"inplace","label":"struct CrypticVault.emergencyAlert","members":[{"astId":2094,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"user","offset":0,"slot":"0","type":"t_address"},{"astId":2096,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"subject","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2098,"contract":"contracts/CrypticVault.sol:CrypticVault","label":"message","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CrypticVaultToken.sol":{"CrypticVaultToken":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address payable","name":"to","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:21","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:21","statements":[{"nodeType":"YulAssignment","src":"112:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:21"},"nodeType":"YulFunctionCall","src":"137:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:21"},"nodeType":"YulFunctionCall","src":"121:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:21"},"nodeType":"YulFunctionCall","src":"196:21:21"},"nodeType":"YulExpressionStatement","src":"196:21:21"},{"nodeType":"YulVariableDeclaration","src":"226:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:21"},"nodeType":"YulFunctionCall","src":"237:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:21"},"nodeType":"YulFunctionCall","src":"293:12:21"},"nodeType":"YulExpressionStatement","src":"293:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:21"},"nodeType":"YulFunctionCall","src":"268:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:21"},"nodeType":"YulFunctionCall","src":"265:25:21"},"nodeType":"YulIf","src":"262:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:21"},"nodeType":"YulFunctionCall","src":"316:39:21"},"nodeType":"YulExpressionStatement","src":"316:39:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:21","type":""}],"src":"7:354:21"},{"body":{"nodeType":"YulBlock","src":"454:215:21","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:21"},"nodeType":"YulFunctionCall","src":"505:12:21"},"nodeType":"YulExpressionStatement","src":"505:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:21"},"nodeType":"YulFunctionCall","src":"478:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:21"},"nodeType":"YulFunctionCall","src":"474:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:21"},"nodeType":"YulFunctionCall","src":"467:35:21"},"nodeType":"YulIf","src":"464:2:21"},{"nodeType":"YulVariableDeclaration","src":"528:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:21"},"nodeType":"YulFunctionCall","src":"542:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:21","type":""}]},{"nodeType":"YulAssignment","src":"564:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:21"},"nodeType":"YulFunctionCall","src":"632:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:21"},"nodeType":"YulFunctionCall","src":"573:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:21","type":""}],"src":"381:288:21"},{"body":{"nodeType":"YulBlock","src":"789:538:21","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:21"},"nodeType":"YulFunctionCall","src":"837:12:21"},"nodeType":"YulExpressionStatement","src":"837:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:21"},"nodeType":"YulFunctionCall","src":"806:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:21"},"nodeType":"YulFunctionCall","src":"802:32:21"},"nodeType":"YulIf","src":"799:2:21"},{"nodeType":"YulBlock","src":"861:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:21"},"nodeType":"YulFunctionCall","src":"896:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:21"},"nodeType":"YulFunctionCall","src":"890:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:21"},"nodeType":"YulFunctionCall","src":"963:12:21"},"nodeType":"YulExpressionStatement","src":"963:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:21"},"nodeType":"YulFunctionCall","src":"930:30:21"},"nodeType":"YulIf","src":"927:2:21"},{"nodeType":"YulAssignment","src":"991:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:21"},"nodeType":"YulFunctionCall","src":"1043:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:21"},"nodeType":"YulFunctionCall","src":"1001:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:21"}]}]},{"nodeType":"YulBlock","src":"1095:225:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:21"},"nodeType":"YulFunctionCall","src":"1130:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:21"},"nodeType":"YulFunctionCall","src":"1124:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:21"},"nodeType":"YulFunctionCall","src":"1198:12:21"},"nodeType":"YulExpressionStatement","src":"1198:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:21"},"nodeType":"YulFunctionCall","src":"1165:30:21"},"nodeType":"YulIf","src":"1162:2:21"},{"nodeType":"YulAssignment","src":"1226:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:21"},"nodeType":"YulFunctionCall","src":"1278:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:21"},"nodeType":"YulFunctionCall","src":"1236:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:21","type":""}],"src":"675:652:21"},{"body":{"nodeType":"YulBlock","src":"1374:88:21","statements":[{"nodeType":"YulAssignment","src":"1384:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:21"},"nodeType":"YulFunctionCall","src":"1394:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:21"},"nodeType":"YulFunctionCall","src":"1423:33:21"},"nodeType":"YulExpressionStatement","src":"1423:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:21","type":""}],"src":"1333:129:21"},{"body":{"nodeType":"YulBlock","src":"1508:35:21","statements":[{"nodeType":"YulAssignment","src":"1518:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:21"},"nodeType":"YulFunctionCall","src":"1528:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:21","type":""}],"src":"1468:75:21"},{"body":{"nodeType":"YulBlock","src":"1616:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:21"},"nodeType":"YulFunctionCall","src":"1723:18:21"},"nodeType":"YulExpressionStatement","src":"1723:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:21"},"nodeType":"YulFunctionCall","src":"1690:30:21"},"nodeType":"YulIf","src":"1687:2:21"},{"nodeType":"YulAssignment","src":"1753:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:21"},"nodeType":"YulFunctionCall","src":"1761:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:21"}]},{"nodeType":"YulAssignment","src":"1827:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:21"},"nodeType":"YulFunctionCall","src":"1835:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:21","type":""}],"src":"1549:308:21"},{"body":{"nodeType":"YulBlock","src":"1912:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:21"},"nodeType":"YulFunctionCall","src":"2012:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:21"},"nodeType":"YulFunctionCall","src":"2031:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:21"},"nodeType":"YulFunctionCall","src":"2025:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:21"},"nodeType":"YulFunctionCall","src":"2005:39:21"},"nodeType":"YulExpressionStatement","src":"2005:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:21"},"nodeType":"YulFunctionCall","src":"1949:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:21","statements":[{"nodeType":"YulAssignment","src":"1965:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:21"},"nodeType":"YulFunctionCall","src":"1970:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:21","statements":[]},"src":"1941:113:21"},{"body":{"nodeType":"YulBlock","src":"2088:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:21"},"nodeType":"YulFunctionCall","src":"2134:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:21"},"nodeType":"YulFunctionCall","src":"2127:27:21"},"nodeType":"YulExpressionStatement","src":"2127:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:21"},"nodeType":"YulFunctionCall","src":"2066:13:21"},"nodeType":"YulIf","src":"2063:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:21","type":""}],"src":"1863:307:21"},{"body":{"nodeType":"YulBlock","src":"2227:269:21","statements":[{"nodeType":"YulAssignment","src":"2237:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:21"},"nodeType":"YulFunctionCall","src":"2247:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:21"},"nodeType":"YulFunctionCall","src":"2294:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:21","statements":[{"nodeType":"YulAssignment","src":"2359:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:21"},"nodeType":"YulFunctionCall","src":"2369:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:21"},"nodeType":"YulFunctionCall","src":"2318:26:21"},"nodeType":"YulIf","src":"2315:2:21"},{"body":{"nodeType":"YulBlock","src":"2448:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:21"},"nodeType":"YulFunctionCall","src":"2462:18:21"},"nodeType":"YulExpressionStatement","src":"2462:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:21"},"nodeType":"YulFunctionCall","src":"2432:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:21"},"nodeType":"YulFunctionCall","src":"2409:38:21"},"nodeType":"YulIf","src":"2406:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:21","type":""}],"src":"2176:320:21"},{"body":{"nodeType":"YulBlock","src":"2545:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:21"},"nodeType":"YulFunctionCall","src":"2585:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:21"},"nodeType":"YulFunctionCall","src":"2573:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:21"},"nodeType":"YulFunctionCall","src":"2726:18:21"},"nodeType":"YulExpressionStatement","src":"2726:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:21"},"nodeType":"YulFunctionCall","src":"2664:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:21"},"nodeType":"YulFunctionCall","src":"2700:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:21"},"nodeType":"YulFunctionCall","src":"2661:62:21"},"nodeType":"YulIf","src":"2658:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:21"},"nodeType":"YulFunctionCall","src":"2755:22:21"},"nodeType":"YulExpressionStatement","src":"2755:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:21","type":""}],"src":"2502:281:21"},{"body":{"nodeType":"YulBlock","src":"2817:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:21"},"nodeType":"YulFunctionCall","src":"2827:88:21"},"nodeType":"YulExpressionStatement","src":"2827:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:21"},"nodeType":"YulFunctionCall","src":"2924:15:21"},"nodeType":"YulExpressionStatement","src":"2924:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:21"},"nodeType":"YulFunctionCall","src":"2948:15:21"},"nodeType":"YulExpressionStatement","src":"2948:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:21"},{"body":{"nodeType":"YulBlock","src":"3003:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:21"},"nodeType":"YulFunctionCall","src":"3013:88:21"},"nodeType":"YulExpressionStatement","src":"3013:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:21"},"nodeType":"YulFunctionCall","src":"3110:15:21"},"nodeType":"YulExpressionStatement","src":"3110:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:21"},"nodeType":"YulFunctionCall","src":"3134:15:21"},"nodeType":"YulExpressionStatement","src":"3134:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:21"},{"body":{"nodeType":"YulBlock","src":"3209:54:21","statements":[{"nodeType":"YulAssignment","src":"3219:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:21"},"nodeType":"YulFunctionCall","src":"3233:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:21"},"nodeType":"YulFunctionCall","src":"3249:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:21"},"nodeType":"YulFunctionCall","src":"3229:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:21","type":""}],"src":"3161:102:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002ec338038062002ec3833981810160405281019062000037919062000197565b818181600090805190602001906200005192919062000075565b5080600190805190602001906200006a92919062000075565b50505050506200037a565b82805462000083906200029f565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b60006200013c620001368462000233565b6200020a565b9050828152602081018484840111156200015557600080fd5b6200016284828562000269565b509392505050565b600082601f8301126200017c57600080fd5b81516200018e84826020860162000125565b91505092915050565b60008060408385031215620001ab57600080fd5b600083015167ffffffffffffffff811115620001c657600080fd5b620001d4858286016200016a565b925050602083015167ffffffffffffffff811115620001f257600080fd5b62000200858286016200016a565b9150509250929050565b60006200021662000229565b9050620002248282620002d5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200025157620002506200033a565b5b6200025c8262000369565b9050602081019050919050565b60005b83811015620002895780820151818401526020810190506200026c565b8381111562000299576000848401525b50505050565b60006002820490506001821680620002b857607f821691505b60208210811415620002cf57620002ce6200030b565b5b50919050565b620002e08262000369565b810181811067ffffffffffffffff821117156200030257620003016200033a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612b39806200038a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610282578063b88d4fde1461029e578063c87b56dd146102ba578063e985e9c5146102ea576100f5565b80636352211e146101e857806368155ec11461021857806370a082311461023457806395d89b4114610264576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806340d097c3146101b057806342842e0e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f9190611cde565b61031a565b6040516101219190612107565b60405180910390f35b6101326103fc565b60405161013f9190612122565b60405180910390f35b610162600480360381019061015d9190611d30565b61048e565b60405161016f9190612069565b60405180910390f35b610192600480360381019061018d9190611ca2565b610513565b005b6101ae60048036038101906101a99190611b9c565b61062b565b005b6101ca60048036038101906101c59190611ad4565b610684565b005b6101e660048036038101906101e19190611b9c565b6106aa565b005b61020260048036038101906101fd9190611d30565b6106ca565b60405161020f9190612069565b60405180910390f35b610232600480360381019061022d9190611b39565b61077c565b005b61024e60048036038101906102499190611ad4565b61089f565b60405161025b9190612324565b60405180910390f35b61026c610957565b6040516102799190612122565b60405180910390f35b61029c60048036038101906102979190611c66565b6109e9565b005b6102b860048036038101906102b39190611beb565b6109ff565b005b6102d460048036038101906102cf9190611d30565b610a61565b6040516102e19190612122565b60405180910390f35b61030460048036038101906102ff9190611afd565b610b08565b6040516103119190612107565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f557506103f482610b9c565b5b9050919050565b60606000805461040b90612560565b80601f016020809104026020016040519081016040528092919081815260200182805461043790612560565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610c06565b6104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf906122a4565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061051e826106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906122e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ae610c72565b73ffffffffffffffffffffffffffffffffffffffff1614806105dd57506105dc816105d7610c72565b610b08565b5b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390612204565b60405180910390fd5b6106268383610c7a565b505050565b6106358382610d33565b610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90612304565b60405180910390fd5b61067f838383610e11565b505050565b60006106906006611078565b905061069c6006611086565b6106a6828261109c565b5050565b6106c5838383604051806020016040528060008152506109ff565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90612244565b60405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610824578173ffffffffffffffffffffffffffffffffffffffff166323b872dd8585846040518463ffffffff1660e01b81526004016107ed93929190612084565b600060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b50505050610899565b8273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90612264565b60405180910390fd5b5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790612224565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461096690612560565b80601f016020809104026020016040519081016040528092919081815260200182805461099290612560565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b5050505050905090565b6109fb6109f4610c72565b83836110ba565b5050565b610a10610a0a610c72565b83610d33565b610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690612304565b60405180910390fd5b610a5b84848484611227565b50505050565b6060610a6c82610c06565b610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa2906122c4565b60405180910390fd5b6000610ab5611283565b90506000815111610ad55760405180602001604052806000815250610b00565b80610adf8461129a565b604051602001610af0929190612045565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ced836106ca565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d3e82610c06565b610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d74906121e4565b60405180910390fd5b6000610d88836106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610df757508373ffffffffffffffffffffffffffffffffffffffff16610ddf8461048e565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e085750610e078185610b08565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e31826106ca565b73ffffffffffffffffffffffffffffffffffffffff1614610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90612164565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eee906121a4565b60405180910390fd5b610f028383836113be565b610f0d600082610c7a565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5d919061242e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fb491906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110738383836113c3565b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6110b68282604051806020016040528060008152506113c8565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611120906121c4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161121a9190612107565b60405180910390a3505050565b611232848484610e11565b61123e84848484611423565b61127d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127490612144565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016112a9846115ba565b01905060008167ffffffffffffffff8111156112ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113205781602001600182028036833780820191505090505b509050600082602001820190505b6001156113b3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161139d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156113ae576113b3565b61132e565b819350505050919050565b505050565b505050565b6113d283836117f1565b6113df6000848484611423565b61141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590612144565b60405180910390fd5b505050565b60006114448473ffffffffffffffffffffffffffffffffffffffff166119cb565b156115ad578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261146d610c72565b8786866040518563ffffffff1660e01b815260040161148f94939291906120bb565b602060405180830381600087803b1580156114a957600080fd5b505af19250505080156114da57506040513d601f19601f820116820180604052508101906114d79190611d07565b60015b61155d573d806000811461150a576040519150601f19603f3d011682016040523d82523d6000602084013e61150f565b606091505b50600081511415611555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154c90612144565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506115b2565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061163e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611634577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116a1576d04ee2d6d415b85acef81000000008381611697577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106116f657662386f26fc1000083816116ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611745576305f5e100838161173b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611790576127108381611786577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b606483106117d957606483816117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106117e8576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890612284565b60405180910390fd5b61186a81610c06565b156118aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a190612184565b60405180910390fd5b6118b6600083836113be565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461190691906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119c7600083836113c3565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611a016119fc84612364565b61233f565b905082815260208101848484011115611a1957600080fd5b611a2484828561251e565b509392505050565b600081359050611a3b81612a90565b92915050565b600081359050611a5081612aa7565b92915050565b600081359050611a6581612abe565b92915050565b600081359050611a7a81612ad5565b92915050565b600081519050611a8f81612ad5565b92915050565b600082601f830112611aa657600080fd5b8135611ab68482602086016119ee565b91505092915050565b600081359050611ace81612aec565b92915050565b600060208284031215611ae657600080fd5b6000611af484828501611a2c565b91505092915050565b60008060408385031215611b1057600080fd5b6000611b1e85828601611a2c565b9250506020611b2f85828601611a2c565b9150509250929050565b60008060008060808587031215611b4f57600080fd5b6000611b5d87828801611a2c565b9450506020611b6e87828801611a41565b9350506040611b7f87828801611a2c565b9250506060611b9087828801611abf565b91505092959194509250565b600080600060608486031215611bb157600080fd5b6000611bbf86828701611a2c565b9350506020611bd086828701611a2c565b9250506040611be186828701611abf565b9150509250925092565b60008060008060808587031215611c0157600080fd5b6000611c0f87828801611a2c565b9450506020611c2087828801611a2c565b9350506040611c3187828801611abf565b925050606085013567ffffffffffffffff811115611c4e57600080fd5b611c5a87828801611a95565b91505092959194509250565b60008060408385031215611c7957600080fd5b6000611c8785828601611a2c565b9250506020611c9885828601611a56565b9150509250929050565b60008060408385031215611cb557600080fd5b6000611cc385828601611a2c565b9250506020611cd485828601611abf565b9150509250929050565b600060208284031215611cf057600080fd5b6000611cfe84828501611a6b565b91505092915050565b600060208284031215611d1957600080fd5b6000611d2784828501611a80565b91505092915050565b600060208284031215611d4257600080fd5b6000611d5084828501611abf565b91505092915050565b611d62816124e8565b82525050565b611d7181612462565b82525050565b611d8081612486565b82525050565b6000611d9182612395565b611d9b81856123ab565b9350611dab81856020860161252d565b611db481612650565b840191505092915050565b6000611dca826123a0565b611dd481856123bc565b9350611de481856020860161252d565b611ded81612650565b840191505092915050565b6000611e03826123a0565b611e0d81856123cd565b9350611e1d81856020860161252d565b80840191505092915050565b6000611e366032836123bc565b9150611e4182612661565b604082019050919050565b6000611e596025836123bc565b9150611e64826126b0565b604082019050919050565b6000611e7c601c836123bc565b9150611e87826126ff565b602082019050919050565b6000611e9f6024836123bc565b9150611eaa82612728565b604082019050919050565b6000611ec26019836123bc565b9150611ecd82612777565b602082019050919050565b6000611ee5602c836123bc565b9150611ef0826127a0565b604082019050919050565b6000611f086038836123bc565b9150611f13826127ef565b604082019050919050565b6000611f2b602a836123bc565b9150611f368261283e565b604082019050919050565b6000611f4e6029836123bc565b9150611f598261288d565b604082019050919050565b6000611f716022836123bc565b9150611f7c826128dc565b604082019050919050565b6000611f946020836123bc565b9150611f9f8261292b565b602082019050919050565b6000611fb7602c836123bc565b9150611fc282612954565b604082019050919050565b6000611fda602f836123bc565b9150611fe5826129a3565b604082019050919050565b6000611ffd6021836123bc565b9150612008826129f2565b604082019050919050565b60006120206031836123bc565b915061202b82612a41565b604082019050919050565b61203f816124de565b82525050565b60006120518285611df8565b915061205d8284611df8565b91508190509392505050565b600060208201905061207e6000830184611d68565b92915050565b60006060820190506120996000830186611d68565b6120a66020830185611d59565b6120b36040830184612036565b949350505050565b60006080820190506120d06000830187611d68565b6120dd6020830186611d68565b6120ea6040830185612036565b81810360608301526120fc8184611d86565b905095945050505050565b600060208201905061211c6000830184611d77565b92915050565b6000602082019050818103600083015261213c8184611dbf565b905092915050565b6000602082019050818103600083015261215d81611e29565b9050919050565b6000602082019050818103600083015261217d81611e4c565b9050919050565b6000602082019050818103600083015261219d81611e6f565b9050919050565b600060208201905081810360008301526121bd81611e92565b9050919050565b600060208201905081810360008301526121dd81611eb5565b9050919050565b600060208201905081810360008301526121fd81611ed8565b9050919050565b6000602082019050818103600083015261221d81611efb565b9050919050565b6000602082019050818103600083015261223d81611f1e565b9050919050565b6000602082019050818103600083015261225d81611f41565b9050919050565b6000602082019050818103600083015261227d81611f64565b9050919050565b6000602082019050818103600083015261229d81611f87565b9050919050565b600060208201905081810360008301526122bd81611faa565b9050919050565b600060208201905081810360008301526122dd81611fcd565b9050919050565b600060208201905081810360008301526122fd81611ff0565b9050919050565b6000602082019050818103600083015261231d81612013565b9050919050565b60006020820190506123396000830184612036565b92915050565b600061234961235a565b90506123558282612592565b919050565b6000604051905090565b600067ffffffffffffffff82111561237f5761237e612621565b5b61238882612650565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006123e3826124de565b91506123ee836124de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612423576124226125c3565b5b828201905092915050565b6000612439826124de565b9150612444836124de565b925082821015612457576124566125c3565b5b828203905092915050565b600061246d826124be565b9050919050565b600061247f826124be565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006124f3826124fa565b9050919050565b60006125058261250c565b9050919050565b6000612517826124be565b9050919050565b82818337600083830152505050565b60005b8381101561254b578082015181840152602081019050612530565b8381111561255a576000848401525b50505050565b6000600282049050600182168061257857607f821691505b6020821081141561258c5761258b6125f2565b5b50919050565b61259b82612650565b810181811067ffffffffffffffff821117156125ba576125b9612621565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206f662045544820746f207265636569766572206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b612a9981612462565b8114612aa457600080fd5b50565b612ab081612474565b8114612abb57600080fd5b50565b612ac781612486565b8114612ad257600080fd5b50565b612ade81612492565b8114612ae957600080fd5b50565b612af5816124de565b8114612b0057600080fd5b5056fea264697066735822122015bce63849592212f70cd7efda1dd88239c575192637041649b08062ebb9f12964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EC3 CODESIZE SUB DUP1 PUSH3 0x2EC3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x197 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x75 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x37A JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x83 SWAP1 PUSH3 0x29F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x106 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x107 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13C PUSH3 0x136 DUP5 PUSH3 0x233 JUMP JUMPDEST PUSH3 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x162 DUP5 DUP3 DUP6 PUSH3 0x269 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D4 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x200 DUP6 DUP3 DUP7 ADD PUSH3 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x216 PUSH3 0x229 JUMP JUMPDEST SWAP1 POP PUSH3 0x224 DUP3 DUP3 PUSH3 0x2D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x33A JUMP JUMPDEST JUMPDEST PUSH3 0x25C DUP3 PUSH3 0x369 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x289 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x26C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x299 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x30B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E0 DUP3 PUSH3 0x369 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x302 JUMPI PUSH3 0x301 PUSH3 0x33A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B39 DUP1 PUSH3 0x38A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x68155EC1 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F4 DUP3 PUSH2 0xB9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0xC72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5DD JUMPI POP PUSH2 0x5DC DUP2 PUSH2 0x5D7 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x635 DUP4 DUP3 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 PUSH1 0x6 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x69C PUSH1 0x6 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x6A6 DUP3 DUP3 PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x899 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x992 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x9F4 PUSH2 0xC72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0A PUSH2 0xC72 JUMP JUMPDEST DUP4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1227 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6C DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST DUP1 PUSH2 0xADF DUP5 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCED DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDF7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDF DUP5 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE08 JUMPI POP PUSH2 0xE07 DUP2 DUP6 PUSH2 0xB08 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE31 DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEE SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x0 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB4 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1073 DUP4 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1232 DUP5 DUP5 DUP5 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x123E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12A9 DUP5 PUSH2 0x15BA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1320 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x139D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CB JUMP JUMPDEST ISZERO PUSH2 0x15AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x146D PUSH2 0xC72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14DA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x155D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154C SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x163E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1634 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16A1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16F6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1745 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x173B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1790 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1786 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186A DUP2 PUSH2 0xC06 JUMP JUMPDEST ISZERO PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH2 0x19FC DUP5 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A24 DUP5 DUP3 DUP6 PUSH2 0x251E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3B DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A50 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACE DUP2 PUSH2 0x2AEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2F DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B6E DUP8 DUP3 DUP9 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B7F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B90 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE1 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C20 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C31 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5A DUP8 DUP3 DUP9 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP5 DUP3 DUP6 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x24E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D91 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH2 0x1D9B DUP2 DUP6 PUSH2 0x23AB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCA DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1DD4 DUP2 DUP6 PUSH2 0x23BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DED DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1E0D DUP2 DUP6 PUSH2 0x23CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E36 PUSH1 0x32 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP3 PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x25 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7C PUSH1 0x1C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9F PUSH1 0x24 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC2 PUSH1 0x19 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 PUSH1 0x38 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2B PUSH1 0x2A DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F36 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x29 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F71 PUSH1 0x22 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7C DUP3 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x2F DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFD PUSH1 0x21 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x2008 DUP3 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 PUSH1 0x31 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x20B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 DUP5 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213C DUP2 DUP5 PUSH2 0x1DBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215D DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217D DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BD DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DD DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x223D DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227D DUP2 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22BD DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DD DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2349 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH2 0x2355 DUP3 DUP3 PUSH2 0x2592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x237F JUMPI PUSH2 0x237E PUSH2 0x2621 JUMP JUMPDEST JUMPDEST PUSH2 0x2388 DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x23EE DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2439 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x250C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x254B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2530 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2578 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259B DUP3 PUSH2 0x2650 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x2621 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AB0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2492 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBC 0xE6 CODESIZE 0x49 MSIZE 0x22 SLT 0xF7 0xC 0xD7 0xEF 0xDA SAR 0xD8 DUP3 CODECOPY 0xC5 PUSH22 0x192637041649B08062EBB9F12964736F6C6343000804 STOP CALLER ","sourceMap":"200:743:14:-:0;;;332:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;403:5;410:7;1641:5:15;1633;:13;;;;;;;;;;;;:::i;:::-;;1666:7;1656;:17;;;;;;;;;;;;:::i;:::-;;1567:113;;332:93:14;;200:743;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:21:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;200:743:14:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30671:21","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:21","statements":[{"nodeType":"YulAssignment","src":"100:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:21"},"nodeType":"YulFunctionCall","src":"125:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:21"},"nodeType":"YulFunctionCall","src":"109:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:21"},"nodeType":"YulFunctionCall","src":"183:21:21"},"nodeType":"YulExpressionStatement","src":"183:21:21"},{"nodeType":"YulVariableDeclaration","src":"213:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:21"},"nodeType":"YulFunctionCall","src":"224:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:21"},"nodeType":"YulFunctionCall","src":"280:12:21"},"nodeType":"YulExpressionStatement","src":"280:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:21"},"nodeType":"YulFunctionCall","src":"255:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:21"},"nodeType":"YulFunctionCall","src":"252:25:21"},"nodeType":"YulIf","src":"249:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:21"},"nodeType":"YulFunctionCall","src":"303:41:21"},"nodeType":"YulExpressionStatement","src":"303:41:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:21","type":""}],"src":"7:343:21"},{"body":{"nodeType":"YulBlock","src":"408:87:21","statements":[{"nodeType":"YulAssignment","src":"418:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"440:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:21"},"nodeType":"YulFunctionCall","src":"427:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"418:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"456:26:21"},"nodeType":"YulFunctionCall","src":"456:33:21"},"nodeType":"YulExpressionStatement","src":"456:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"386:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"394:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"402:5:21","type":""}],"src":"356:139:21"},{"body":{"nodeType":"YulBlock","src":"561:95:21","statements":[{"nodeType":"YulAssignment","src":"571:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"593:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"580:12:21"},"nodeType":"YulFunctionCall","src":"580:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"644:5:21"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"609:34:21"},"nodeType":"YulFunctionCall","src":"609:41:21"},"nodeType":"YulExpressionStatement","src":"609:41:21"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"539:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"547:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"555:5:21","type":""}],"src":"501:155:21"},{"body":{"nodeType":"YulBlock","src":"711:84:21","statements":[{"nodeType":"YulAssignment","src":"721:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"743:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"730:12:21"},"nodeType":"YulFunctionCall","src":"730:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"721:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"783:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"759:23:21"},"nodeType":"YulFunctionCall","src":"759:30:21"},"nodeType":"YulExpressionStatement","src":"759:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"689:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"697:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"705:5:21","type":""}],"src":"662:133:21"},{"body":{"nodeType":"YulBlock","src":"852:86:21","statements":[{"nodeType":"YulAssignment","src":"862:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"884:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"871:12:21"},"nodeType":"YulFunctionCall","src":"871:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"862:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"926:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"900:25:21"},"nodeType":"YulFunctionCall","src":"900:32:21"},"nodeType":"YulExpressionStatement","src":"900:32:21"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"830:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"838:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"846:5:21","type":""}],"src":"801:137:21"},{"body":{"nodeType":"YulBlock","src":"1006:79:21","statements":[{"nodeType":"YulAssignment","src":"1016:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1031:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1025:5:21"},"nodeType":"YulFunctionCall","src":"1025:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1073:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1047:25:21"},"nodeType":"YulFunctionCall","src":"1047:32:21"},"nodeType":"YulExpressionStatement","src":"1047:32:21"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"984:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"992:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1000:5:21","type":""}],"src":"944:141:21"},{"body":{"nodeType":"YulBlock","src":"1165:210:21","statements":[{"body":{"nodeType":"YulBlock","src":"1214:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1223:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1226:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1216:6:21"},"nodeType":"YulFunctionCall","src":"1216:12:21"},"nodeType":"YulExpressionStatement","src":"1216:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1193:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1201:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:21"},"nodeType":"YulFunctionCall","src":"1189:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1208:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1185:3:21"},"nodeType":"YulFunctionCall","src":"1185:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1178:6:21"},"nodeType":"YulFunctionCall","src":"1178:35:21"},"nodeType":"YulIf","src":"1175:2:21"},{"nodeType":"YulVariableDeclaration","src":"1239:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1253:12:21"},"nodeType":"YulFunctionCall","src":"1253:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1243:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1282:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1342:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1350:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:21"},"nodeType":"YulFunctionCall","src":"1338:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1357:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1365:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1291:46:21"},"nodeType":"YulFunctionCall","src":"1291:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1282:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1143:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1151:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1159:5:21","type":""}],"src":"1104:271:21"},{"body":{"nodeType":"YulBlock","src":"1433:87:21","statements":[{"nodeType":"YulAssignment","src":"1443:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1465:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1452:12:21"},"nodeType":"YulFunctionCall","src":"1452:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1508:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1481:26:21"},"nodeType":"YulFunctionCall","src":"1481:33:21"},"nodeType":"YulExpressionStatement","src":"1481:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:21","type":""}],"src":"1381:139:21"},{"body":{"nodeType":"YulBlock","src":"1592:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"1638:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1647:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1650:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1640:6:21"},"nodeType":"YulFunctionCall","src":"1640:12:21"},"nodeType":"YulExpressionStatement","src":"1640:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1613:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1622:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1609:3:21"},"nodeType":"YulFunctionCall","src":"1609:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1634:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1605:3:21"},"nodeType":"YulFunctionCall","src":"1605:32:21"},"nodeType":"YulIf","src":"1602:2:21"},{"nodeType":"YulBlock","src":"1664:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1679:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1693:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1683:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1708:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1743:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1754:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:21"},"nodeType":"YulFunctionCall","src":"1739:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1763:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1718:20:21"},"nodeType":"YulFunctionCall","src":"1718:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1708:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1562:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1573:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1585:6:21","type":""}],"src":"1526:262:21"},{"body":{"nodeType":"YulBlock","src":"1877:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"1923:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1932:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1935:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1925:6:21"},"nodeType":"YulFunctionCall","src":"1925:12:21"},"nodeType":"YulExpressionStatement","src":"1925:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1898:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1907:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1894:3:21"},"nodeType":"YulFunctionCall","src":"1894:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1919:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1890:3:21"},"nodeType":"YulFunctionCall","src":"1890:32:21"},"nodeType":"YulIf","src":"1887:2:21"},{"nodeType":"YulBlock","src":"1949:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1964:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1978:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1968:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1993:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2028:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2039:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2024:3:21"},"nodeType":"YulFunctionCall","src":"2024:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2048:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2003:20:21"},"nodeType":"YulFunctionCall","src":"2003:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1993:6:21"}]}]},{"nodeType":"YulBlock","src":"2076:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2091:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2105:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2095:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2121:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2167:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:21"},"nodeType":"YulFunctionCall","src":"2152:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2176:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2131:20:21"},"nodeType":"YulFunctionCall","src":"2131:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2121:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1839:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1850:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1862:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1870:6:21","type":""}],"src":"1794:407:21"},{"body":{"nodeType":"YulBlock","src":"2332:589:21","statements":[{"body":{"nodeType":"YulBlock","src":"2379:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2388:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2391:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2381:6:21"},"nodeType":"YulFunctionCall","src":"2381:12:21"},"nodeType":"YulExpressionStatement","src":"2381:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2353:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2362:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2349:3:21"},"nodeType":"YulFunctionCall","src":"2349:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2374:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2345:3:21"},"nodeType":"YulFunctionCall","src":"2345:33:21"},"nodeType":"YulIf","src":"2342:2:21"},{"nodeType":"YulBlock","src":"2405:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2420:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2434:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2449:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2484:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2495:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2480:3:21"},"nodeType":"YulFunctionCall","src":"2480:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2504:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2459:20:21"},"nodeType":"YulFunctionCall","src":"2459:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2449:6:21"}]}]},{"nodeType":"YulBlock","src":"2532:126:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2547:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2561:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2551:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2577:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2620:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2631:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2616:3:21"},"nodeType":"YulFunctionCall","src":"2616:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2640:7:21"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2587:28:21"},"nodeType":"YulFunctionCall","src":"2587:61:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2577:6:21"}]}]},{"nodeType":"YulBlock","src":"2668:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2683:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2697:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2687:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2713:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2748:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2759:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2744:3:21"},"nodeType":"YulFunctionCall","src":"2744:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2768:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2723:20:21"},"nodeType":"YulFunctionCall","src":"2723:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2713:6:21"}]}]},{"nodeType":"YulBlock","src":"2796:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2811:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2825:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2815:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2841:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2887:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:21"},"nodeType":"YulFunctionCall","src":"2872:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2896:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2851:20:21"},"nodeType":"YulFunctionCall","src":"2851:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2841:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_payablet_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2278:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2289:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2301:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2309:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2317:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2325:6:21","type":""}],"src":"2207:714:21"},{"body":{"nodeType":"YulBlock","src":"3027:452:21","statements":[{"body":{"nodeType":"YulBlock","src":"3073:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3085:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3075:6:21"},"nodeType":"YulFunctionCall","src":"3075:12:21"},"nodeType":"YulExpressionStatement","src":"3075:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3048:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3057:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3044:3:21"},"nodeType":"YulFunctionCall","src":"3044:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3069:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3040:3:21"},"nodeType":"YulFunctionCall","src":"3040:32:21"},"nodeType":"YulIf","src":"3037:2:21"},{"nodeType":"YulBlock","src":"3099:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3114:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3128:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3118:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3143:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3178:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3189:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:21"},"nodeType":"YulFunctionCall","src":"3174:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3198:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3153:20:21"},"nodeType":"YulFunctionCall","src":"3153:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3143:6:21"}]}]},{"nodeType":"YulBlock","src":"3226:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3241:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3255:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3245:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3271:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3306:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3317:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3302:3:21"},"nodeType":"YulFunctionCall","src":"3302:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3326:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3281:20:21"},"nodeType":"YulFunctionCall","src":"3281:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3271:6:21"}]}]},{"nodeType":"YulBlock","src":"3354:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3369:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3383:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3373:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3399:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3434:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3445:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:21"},"nodeType":"YulFunctionCall","src":"3430:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3454:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3409:20:21"},"nodeType":"YulFunctionCall","src":"3409:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3399:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2981:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2992:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3004:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3012:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3020:6:21","type":""}],"src":"2927:552:21"},{"body":{"nodeType":"YulBlock","src":"3611:683:21","statements":[{"body":{"nodeType":"YulBlock","src":"3658:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3667:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3670:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3660:6:21"},"nodeType":"YulFunctionCall","src":"3660:12:21"},"nodeType":"YulExpressionStatement","src":"3660:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3632:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3628:3:21"},"nodeType":"YulFunctionCall","src":"3628:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3653:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3624:3:21"},"nodeType":"YulFunctionCall","src":"3624:33:21"},"nodeType":"YulIf","src":"3621:2:21"},{"nodeType":"YulBlock","src":"3684:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3699:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3713:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3703:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3728:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3763:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3774:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3759:3:21"},"nodeType":"YulFunctionCall","src":"3759:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3783:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3738:20:21"},"nodeType":"YulFunctionCall","src":"3738:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3728:6:21"}]}]},{"nodeType":"YulBlock","src":"3811:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3826:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3840:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3830:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3856:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3902:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:21"},"nodeType":"YulFunctionCall","src":"3887:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3911:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3866:20:21"},"nodeType":"YulFunctionCall","src":"3866:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3856:6:21"}]}]},{"nodeType":"YulBlock","src":"3939:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3954:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3968:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3958:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3984:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4019:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4030:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4015:3:21"},"nodeType":"YulFunctionCall","src":"4015:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4039:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3994:20:21"},"nodeType":"YulFunctionCall","src":"3994:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3984:6:21"}]}]},{"nodeType":"YulBlock","src":"4067:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4082:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4124:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4109:3:21"},"nodeType":"YulFunctionCall","src":"4109:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4096:12:21"},"nodeType":"YulFunctionCall","src":"4096:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4086:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4175:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4184:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4187:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4177:6:21"},"nodeType":"YulFunctionCall","src":"4177:12:21"},"nodeType":"YulExpressionStatement","src":"4177:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4147:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4155:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4144:2:21"},"nodeType":"YulFunctionCall","src":"4144:30:21"},"nodeType":"YulIf","src":"4141:2:21"},{"nodeType":"YulAssignment","src":"4205:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4249:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4260:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4245:3:21"},"nodeType":"YulFunctionCall","src":"4245:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4269:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4215:29:21"},"nodeType":"YulFunctionCall","src":"4215:62:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4205:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3557:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3568:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3580:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3588:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3596:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3604:6:21","type":""}],"src":"3485:809:21"},{"body":{"nodeType":"YulBlock","src":"4380:321:21","statements":[{"body":{"nodeType":"YulBlock","src":"4426:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4435:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4438:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4428:6:21"},"nodeType":"YulFunctionCall","src":"4428:12:21"},"nodeType":"YulExpressionStatement","src":"4428:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4401:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4410:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4397:3:21"},"nodeType":"YulFunctionCall","src":"4397:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4422:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4393:3:21"},"nodeType":"YulFunctionCall","src":"4393:32:21"},"nodeType":"YulIf","src":"4390:2:21"},{"nodeType":"YulBlock","src":"4452:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4467:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4481:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4471:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4496:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4531:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4542:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4527:3:21"},"nodeType":"YulFunctionCall","src":"4527:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4551:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4506:20:21"},"nodeType":"YulFunctionCall","src":"4506:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4496:6:21"}]}]},{"nodeType":"YulBlock","src":"4579:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4594:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4608:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4598:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4624:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4667:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4652:3:21"},"nodeType":"YulFunctionCall","src":"4652:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4634:17:21"},"nodeType":"YulFunctionCall","src":"4634:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4624:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4342:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4353:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4365:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4373:6:21","type":""}],"src":"4300:401:21"},{"body":{"nodeType":"YulBlock","src":"4790:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"4836:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4845:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4848:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4838:6:21"},"nodeType":"YulFunctionCall","src":"4838:12:21"},"nodeType":"YulExpressionStatement","src":"4838:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4820:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4807:3:21"},"nodeType":"YulFunctionCall","src":"4807:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4832:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4803:3:21"},"nodeType":"YulFunctionCall","src":"4803:32:21"},"nodeType":"YulIf","src":"4800:2:21"},{"nodeType":"YulBlock","src":"4862:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4877:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4891:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4881:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4906:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4941:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4952:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:21"},"nodeType":"YulFunctionCall","src":"4937:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4961:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4916:20:21"},"nodeType":"YulFunctionCall","src":"4916:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4906:6:21"}]}]},{"nodeType":"YulBlock","src":"4989:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5004:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5018:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5008:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5034:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5080:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:21"},"nodeType":"YulFunctionCall","src":"5065:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5089:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5044:20:21"},"nodeType":"YulFunctionCall","src":"5044:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5034:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4752:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4763:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4775:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4783:6:21","type":""}],"src":"4707:407:21"},{"body":{"nodeType":"YulBlock","src":"5185:195:21","statements":[{"body":{"nodeType":"YulBlock","src":"5231:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5240:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5243:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5233:6:21"},"nodeType":"YulFunctionCall","src":"5233:12:21"},"nodeType":"YulExpressionStatement","src":"5233:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5206:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5202:3:21"},"nodeType":"YulFunctionCall","src":"5202:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5227:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5198:3:21"},"nodeType":"YulFunctionCall","src":"5198:32:21"},"nodeType":"YulIf","src":"5195:2:21"},{"nodeType":"YulBlock","src":"5257:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5272:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5286:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5276:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5301:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5346:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:21"},"nodeType":"YulFunctionCall","src":"5331:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5355:7:21"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5311:19:21"},"nodeType":"YulFunctionCall","src":"5311:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5301:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5155:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5166:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5178:6:21","type":""}],"src":"5120:260:21"},{"body":{"nodeType":"YulBlock","src":"5462:206:21","statements":[{"body":{"nodeType":"YulBlock","src":"5508:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5517:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5520:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5510:6:21"},"nodeType":"YulFunctionCall","src":"5510:12:21"},"nodeType":"YulExpressionStatement","src":"5510:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5483:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5479:3:21"},"nodeType":"YulFunctionCall","src":"5479:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5504:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5475:3:21"},"nodeType":"YulFunctionCall","src":"5475:32:21"},"nodeType":"YulIf","src":"5472:2:21"},{"nodeType":"YulBlock","src":"5534:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5549:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5563:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5553:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5578:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5623:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5634:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5619:3:21"},"nodeType":"YulFunctionCall","src":"5619:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5643:7:21"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5588:30:21"},"nodeType":"YulFunctionCall","src":"5588:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5578:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5455:6:21","type":""}],"src":"5386:282:21"},{"body":{"nodeType":"YulBlock","src":"5740:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"5786:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5795:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5798:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5788:6:21"},"nodeType":"YulFunctionCall","src":"5788:12:21"},"nodeType":"YulExpressionStatement","src":"5788:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5761:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5770:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5757:3:21"},"nodeType":"YulFunctionCall","src":"5757:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5782:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5753:3:21"},"nodeType":"YulFunctionCall","src":"5753:32:21"},"nodeType":"YulIf","src":"5750:2:21"},{"nodeType":"YulBlock","src":"5812:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5827:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5841:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5831:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5856:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5902:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:21"},"nodeType":"YulFunctionCall","src":"5887:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5866:20:21"},"nodeType":"YulFunctionCall","src":"5866:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5856:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5710:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5721:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5733:6:21","type":""}],"src":"5674:262:21"},{"body":{"nodeType":"YulBlock","src":"6015:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6032:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6076:5:21"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"6037:38:21"},"nodeType":"YulFunctionCall","src":"6037:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6025:6:21"},"nodeType":"YulFunctionCall","src":"6025:58:21"},"nodeType":"YulExpressionStatement","src":"6025:58:21"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6003:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6010:3:21","type":""}],"src":"5942:147:21"},{"body":{"nodeType":"YulBlock","src":"6160:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6177:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6200:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6182:17:21"},"nodeType":"YulFunctionCall","src":"6182:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6170:6:21"},"nodeType":"YulFunctionCall","src":"6170:37:21"},"nodeType":"YulExpressionStatement","src":"6170:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6148:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6155:3:21","type":""}],"src":"6095:118:21"},{"body":{"nodeType":"YulBlock","src":"6278:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6295:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6315:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6300:14:21"},"nodeType":"YulFunctionCall","src":"6300:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6288:6:21"},"nodeType":"YulFunctionCall","src":"6288:34:21"},"nodeType":"YulExpressionStatement","src":"6288:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6266:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6273:3:21","type":""}],"src":"6219:109:21"},{"body":{"nodeType":"YulBlock","src":"6424:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6434:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6480:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6448:31:21"},"nodeType":"YulFunctionCall","src":"6448:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6438:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6495:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6560:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6565:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6502:57:21"},"nodeType":"YulFunctionCall","src":"6502:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6495:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6607:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6614:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6603:3:21"},"nodeType":"YulFunctionCall","src":"6603:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"6621:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6626:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6581:21:21"},"nodeType":"YulFunctionCall","src":"6581:52:21"},"nodeType":"YulExpressionStatement","src":"6581:52:21"},{"nodeType":"YulAssignment","src":"6642:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6653:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6680:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6658:21:21"},"nodeType":"YulFunctionCall","src":"6658:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6649:3:21"},"nodeType":"YulFunctionCall","src":"6649:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6642:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6405:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6412:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6420:3:21","type":""}],"src":"6334:360:21"},{"body":{"nodeType":"YulBlock","src":"6792:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6802:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6849:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6816:32:21"},"nodeType":"YulFunctionCall","src":"6816:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6806:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6864:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6930:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6935:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6871:58:21"},"nodeType":"YulFunctionCall","src":"6871:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6864:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6977:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6984:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:21"},"nodeType":"YulFunctionCall","src":"6973:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"6991:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6996:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6951:21:21"},"nodeType":"YulFunctionCall","src":"6951:52:21"},"nodeType":"YulExpressionStatement","src":"6951:52:21"},{"nodeType":"YulAssignment","src":"7012:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7023:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7050:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7028:21:21"},"nodeType":"YulFunctionCall","src":"7028:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:21"},"nodeType":"YulFunctionCall","src":"7019:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7012:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6773:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6780:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6788:3:21","type":""}],"src":"6700:364:21"},{"body":{"nodeType":"YulBlock","src":"7180:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7190:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7237:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7204:32:21"},"nodeType":"YulFunctionCall","src":"7204:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7194:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7252:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7336:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7341:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7259:76:21"},"nodeType":"YulFunctionCall","src":"7259:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7252:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7383:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7390:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7379:3:21"},"nodeType":"YulFunctionCall","src":"7379:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"7397:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7402:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7357:21:21"},"nodeType":"YulFunctionCall","src":"7357:52:21"},"nodeType":"YulExpressionStatement","src":"7357:52:21"},{"nodeType":"YulAssignment","src":"7418:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7429:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7434:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7425:3:21"},"nodeType":"YulFunctionCall","src":"7425:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7418:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7161:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7168:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7176:3:21","type":""}],"src":"7070:377:21"},{"body":{"nodeType":"YulBlock","src":"7599:220:21","statements":[{"nodeType":"YulAssignment","src":"7609:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7675:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:21","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7616:58:21"},"nodeType":"YulFunctionCall","src":"7616:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7609:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7781:3:21"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7692:88:21"},"nodeType":"YulFunctionCall","src":"7692:93:21"},"nodeType":"YulExpressionStatement","src":"7692:93:21"},{"nodeType":"YulAssignment","src":"7794:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7805:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7810:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7801:3:21"},"nodeType":"YulFunctionCall","src":"7801:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7794:3:21"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7587:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7595:3:21","type":""}],"src":"7453:366:21"},{"body":{"nodeType":"YulBlock","src":"7971:220:21","statements":[{"nodeType":"YulAssignment","src":"7981:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8047:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8052:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7988:58:21"},"nodeType":"YulFunctionCall","src":"7988:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7981:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8153:3:21"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8064:88:21"},"nodeType":"YulFunctionCall","src":"8064:93:21"},"nodeType":"YulExpressionStatement","src":"8064:93:21"},{"nodeType":"YulAssignment","src":"8166:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8177:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8182:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8173:3:21"},"nodeType":"YulFunctionCall","src":"8173:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8166:3:21"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7959:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7967:3:21","type":""}],"src":"7825:366:21"},{"body":{"nodeType":"YulBlock","src":"8343:220:21","statements":[{"nodeType":"YulAssignment","src":"8353:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8419:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8424:2:21","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8360:58:21"},"nodeType":"YulFunctionCall","src":"8360:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8353:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8525:3:21"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"8436:88:21"},"nodeType":"YulFunctionCall","src":"8436:93:21"},"nodeType":"YulExpressionStatement","src":"8436:93:21"},{"nodeType":"YulAssignment","src":"8538:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8549:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8554:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8545:3:21"},"nodeType":"YulFunctionCall","src":"8545:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8538:3:21"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8331:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8339:3:21","type":""}],"src":"8197:366:21"},{"body":{"nodeType":"YulBlock","src":"8715:220:21","statements":[{"nodeType":"YulAssignment","src":"8725:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8791:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8796:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8732:58:21"},"nodeType":"YulFunctionCall","src":"8732:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8725:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8897:3:21"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8808:88:21"},"nodeType":"YulFunctionCall","src":"8808:93:21"},"nodeType":"YulExpressionStatement","src":"8808:93:21"},{"nodeType":"YulAssignment","src":"8910:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8921:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8926:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8917:3:21"},"nodeType":"YulFunctionCall","src":"8917:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8910:3:21"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8703:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8711:3:21","type":""}],"src":"8569:366:21"},{"body":{"nodeType":"YulBlock","src":"9087:220:21","statements":[{"nodeType":"YulAssignment","src":"9097:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9163:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9168:2:21","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9104:58:21"},"nodeType":"YulFunctionCall","src":"9104:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9097:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9269:3:21"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"9180:88:21"},"nodeType":"YulFunctionCall","src":"9180:93:21"},"nodeType":"YulExpressionStatement","src":"9180:93:21"},{"nodeType":"YulAssignment","src":"9282:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9293:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9298:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9289:3:21"},"nodeType":"YulFunctionCall","src":"9289:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9282:3:21"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9075:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9083:3:21","type":""}],"src":"8941:366:21"},{"body":{"nodeType":"YulBlock","src":"9459:220:21","statements":[{"nodeType":"YulAssignment","src":"9469:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9535:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9540:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9476:58:21"},"nodeType":"YulFunctionCall","src":"9476:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9469:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9641:3:21"}],"functionName":{"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulIdentifier","src":"9552:88:21"},"nodeType":"YulFunctionCall","src":"9552:93:21"},"nodeType":"YulExpressionStatement","src":"9552:93:21"},{"nodeType":"YulAssignment","src":"9654:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9665:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9670:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9661:3:21"},"nodeType":"YulFunctionCall","src":"9661:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9654:3:21"}]}]},"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9447:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9455:3:21","type":""}],"src":"9313:366:21"},{"body":{"nodeType":"YulBlock","src":"9831:220:21","statements":[{"nodeType":"YulAssignment","src":"9841:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9907:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9912:2:21","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9848:58:21"},"nodeType":"YulFunctionCall","src":"9848:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9841:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10013:3:21"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"9924:88:21"},"nodeType":"YulFunctionCall","src":"9924:93:21"},"nodeType":"YulExpressionStatement","src":"9924:93:21"},{"nodeType":"YulAssignment","src":"10026:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10037:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10042:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10033:3:21"},"nodeType":"YulFunctionCall","src":"10033:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10026:3:21"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9819:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9827:3:21","type":""}],"src":"9685:366:21"},{"body":{"nodeType":"YulBlock","src":"10203:220:21","statements":[{"nodeType":"YulAssignment","src":"10213:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10279:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10284:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10220:58:21"},"nodeType":"YulFunctionCall","src":"10220:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10213:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10385:3:21"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"10296:88:21"},"nodeType":"YulFunctionCall","src":"10296:93:21"},"nodeType":"YulExpressionStatement","src":"10296:93:21"},{"nodeType":"YulAssignment","src":"10398:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10409:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10414:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10405:3:21"},"nodeType":"YulFunctionCall","src":"10405:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10398:3:21"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10191:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10199:3:21","type":""}],"src":"10057:366:21"},{"body":{"nodeType":"YulBlock","src":"10575:220:21","statements":[{"nodeType":"YulAssignment","src":"10585:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10651:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10656:2:21","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10592:58:21"},"nodeType":"YulFunctionCall","src":"10592:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10585:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10757:3:21"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"10668:88:21"},"nodeType":"YulFunctionCall","src":"10668:93:21"},"nodeType":"YulExpressionStatement","src":"10668:93:21"},{"nodeType":"YulAssignment","src":"10770:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10781:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10786:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10777:3:21"},"nodeType":"YulFunctionCall","src":"10777:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10770:3:21"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10563:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10571:3:21","type":""}],"src":"10429:366:21"},{"body":{"nodeType":"YulBlock","src":"10947:220:21","statements":[{"nodeType":"YulAssignment","src":"10957:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11023:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11028:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10964:58:21"},"nodeType":"YulFunctionCall","src":"10964:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10957:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11129:3:21"}],"functionName":{"name":"store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54","nodeType":"YulIdentifier","src":"11040:88:21"},"nodeType":"YulFunctionCall","src":"11040:93:21"},"nodeType":"YulExpressionStatement","src":"11040:93:21"},{"nodeType":"YulAssignment","src":"11142:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11153:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11158:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11149:3:21"},"nodeType":"YulFunctionCall","src":"11149:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11142:3:21"}]}]},"name":"abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10935:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10943:3:21","type":""}],"src":"10801:366:21"},{"body":{"nodeType":"YulBlock","src":"11319:220:21","statements":[{"nodeType":"YulAssignment","src":"11329:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11395:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11400:2:21","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11336:58:21"},"nodeType":"YulFunctionCall","src":"11336:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11329:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11501:3:21"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"11412:88:21"},"nodeType":"YulFunctionCall","src":"11412:93:21"},"nodeType":"YulExpressionStatement","src":"11412:93:21"},{"nodeType":"YulAssignment","src":"11514:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11525:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11530:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:21"},"nodeType":"YulFunctionCall","src":"11521:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11514:3:21"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11307:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11315:3:21","type":""}],"src":"11173:366:21"},{"body":{"nodeType":"YulBlock","src":"11691:220:21","statements":[{"nodeType":"YulAssignment","src":"11701:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11767:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11772:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11708:58:21"},"nodeType":"YulFunctionCall","src":"11708:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11701:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11873:3:21"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"11784:88:21"},"nodeType":"YulFunctionCall","src":"11784:93:21"},"nodeType":"YulExpressionStatement","src":"11784:93:21"},{"nodeType":"YulAssignment","src":"11886:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11897:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11902:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11893:3:21"},"nodeType":"YulFunctionCall","src":"11893:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11886:3:21"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11679:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11687:3:21","type":""}],"src":"11545:366:21"},{"body":{"nodeType":"YulBlock","src":"12063:220:21","statements":[{"nodeType":"YulAssignment","src":"12073:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12139:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12144:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12080:58:21"},"nodeType":"YulFunctionCall","src":"12080:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12073:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12245:3:21"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"12156:88:21"},"nodeType":"YulFunctionCall","src":"12156:93:21"},"nodeType":"YulExpressionStatement","src":"12156:93:21"},{"nodeType":"YulAssignment","src":"12258:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12269:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12274:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12265:3:21"},"nodeType":"YulFunctionCall","src":"12265:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12258:3:21"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12051:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12059:3:21","type":""}],"src":"11917:366:21"},{"body":{"nodeType":"YulBlock","src":"12435:220:21","statements":[{"nodeType":"YulAssignment","src":"12445:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12516:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12452:58:21"},"nodeType":"YulFunctionCall","src":"12452:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12445:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12617:3:21"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"12528:88:21"},"nodeType":"YulFunctionCall","src":"12528:93:21"},"nodeType":"YulExpressionStatement","src":"12528:93:21"},{"nodeType":"YulAssignment","src":"12630:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12641:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12646:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12637:3:21"},"nodeType":"YulFunctionCall","src":"12637:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12630:3:21"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12423:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12431:3:21","type":""}],"src":"12289:366:21"},{"body":{"nodeType":"YulBlock","src":"12807:220:21","statements":[{"nodeType":"YulAssignment","src":"12817:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12883:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12888:2:21","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12824:58:21"},"nodeType":"YulFunctionCall","src":"12824:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12817:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12989:3:21"}],"functionName":{"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulIdentifier","src":"12900:88:21"},"nodeType":"YulFunctionCall","src":"12900:93:21"},"nodeType":"YulExpressionStatement","src":"12900:93:21"},{"nodeType":"YulAssignment","src":"13002:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13013:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13018:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13009:3:21"},"nodeType":"YulFunctionCall","src":"13009:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13002:3:21"}]}]},"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12795:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12803:3:21","type":""}],"src":"12661:366:21"},{"body":{"nodeType":"YulBlock","src":"13098:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13115:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13138:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13120:17:21"},"nodeType":"YulFunctionCall","src":"13120:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13108:6:21"},"nodeType":"YulFunctionCall","src":"13108:37:21"},"nodeType":"YulExpressionStatement","src":"13108:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13086:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13093:3:21","type":""}],"src":"13033:118:21"},{"body":{"nodeType":"YulBlock","src":"13341:251:21","statements":[{"nodeType":"YulAssignment","src":"13352:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13441:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13450:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13359:81:21"},"nodeType":"YulFunctionCall","src":"13359:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13352:3:21"}]},{"nodeType":"YulAssignment","src":"13464:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13553:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13562:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13471:81:21"},"nodeType":"YulFunctionCall","src":"13471:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13464:3:21"}]},{"nodeType":"YulAssignment","src":"13576:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"13583:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13576:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13312:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13318:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13326:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13337:3:21","type":""}],"src":"13157:435:21"},{"body":{"nodeType":"YulBlock","src":"13696:124:21","statements":[{"nodeType":"YulAssignment","src":"13706:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13718:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13729:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13714:3:21"},"nodeType":"YulFunctionCall","src":"13714:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13706:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13786:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13799:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13795:3:21"},"nodeType":"YulFunctionCall","src":"13795:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13742:43:21"},"nodeType":"YulFunctionCall","src":"13742:71:21"},"nodeType":"YulExpressionStatement","src":"13742:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13668:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13680:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13691:4:21","type":""}],"src":"13598:222:21"},{"body":{"nodeType":"YulBlock","src":"13988:296:21","statements":[{"nodeType":"YulAssignment","src":"13998:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14010:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14021:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14006:3:21"},"nodeType":"YulFunctionCall","src":"14006:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13998:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14078:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14091:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14102:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14087:3:21"},"nodeType":"YulFunctionCall","src":"14087:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14034:43:21"},"nodeType":"YulFunctionCall","src":"14034:71:21"},"nodeType":"YulExpressionStatement","src":"14034:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14167:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14180:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14191:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14176:3:21"},"nodeType":"YulFunctionCall","src":"14176:18:21"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14115:51:21"},"nodeType":"YulFunctionCall","src":"14115:80:21"},"nodeType":"YulExpressionStatement","src":"14115:80:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14249:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14262:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14273:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14258:3:21"},"nodeType":"YulFunctionCall","src":"14258:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14205:43:21"},"nodeType":"YulFunctionCall","src":"14205:72:21"},"nodeType":"YulExpressionStatement","src":"14205:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13944:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13956:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13964:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13972:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13983:4:21","type":""}],"src":"13826:458:21"},{"body":{"nodeType":"YulBlock","src":"14490:440:21","statements":[{"nodeType":"YulAssignment","src":"14500:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14512:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14523:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14508:3:21"},"nodeType":"YulFunctionCall","src":"14508:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14500:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14581:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14605:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14590:3:21"},"nodeType":"YulFunctionCall","src":"14590:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14537:43:21"},"nodeType":"YulFunctionCall","src":"14537:71:21"},"nodeType":"YulExpressionStatement","src":"14537:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14662:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14675:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14686:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14671:3:21"},"nodeType":"YulFunctionCall","src":"14671:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14618:43:21"},"nodeType":"YulFunctionCall","src":"14618:72:21"},"nodeType":"YulExpressionStatement","src":"14618:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14744:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14757:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14768:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14753:3:21"},"nodeType":"YulFunctionCall","src":"14753:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14700:43:21"},"nodeType":"YulFunctionCall","src":"14700:72:21"},"nodeType":"YulExpressionStatement","src":"14700:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14804:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14789:3:21"},"nodeType":"YulFunctionCall","src":"14789:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14813:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14819:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14809:3:21"},"nodeType":"YulFunctionCall","src":"14809:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14782:6:21"},"nodeType":"YulFunctionCall","src":"14782:48:21"},"nodeType":"YulExpressionStatement","src":"14782:48:21"},{"nodeType":"YulAssignment","src":"14839:84:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14909:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"14918:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14847:61:21"},"nodeType":"YulFunctionCall","src":"14847:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14839:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14438:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14450:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14458:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14466:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14474:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14485:4:21","type":""}],"src":"14290:640:21"},{"body":{"nodeType":"YulBlock","src":"15028:118:21","statements":[{"nodeType":"YulAssignment","src":"15038:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15050:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15061:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15046:3:21"},"nodeType":"YulFunctionCall","src":"15046:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15038:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15112:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15125:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15136:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15121:3:21"},"nodeType":"YulFunctionCall","src":"15121:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15074:37:21"},"nodeType":"YulFunctionCall","src":"15074:65:21"},"nodeType":"YulExpressionStatement","src":"15074:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15000:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15012:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15023:4:21","type":""}],"src":"14936:210:21"},{"body":{"nodeType":"YulBlock","src":"15270:195:21","statements":[{"nodeType":"YulAssignment","src":"15280:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15292:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15303:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15288:3:21"},"nodeType":"YulFunctionCall","src":"15288:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15280:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15338:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15323:3:21"},"nodeType":"YulFunctionCall","src":"15323:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15346:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15352:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15342:3:21"},"nodeType":"YulFunctionCall","src":"15342:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15316:6:21"},"nodeType":"YulFunctionCall","src":"15316:47:21"},"nodeType":"YulExpressionStatement","src":"15316:47:21"},{"nodeType":"YulAssignment","src":"15372:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15444:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"15453:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15380:63:21"},"nodeType":"YulFunctionCall","src":"15380:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15372:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15242:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15254:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15265:4:21","type":""}],"src":"15152:313:21"},{"body":{"nodeType":"YulBlock","src":"15642:248:21","statements":[{"nodeType":"YulAssignment","src":"15652:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15664:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15675:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15660:3:21"},"nodeType":"YulFunctionCall","src":"15660:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15652:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15710:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15695:3:21"},"nodeType":"YulFunctionCall","src":"15695:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15718:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15724:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15714:3:21"},"nodeType":"YulFunctionCall","src":"15714:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15688:6:21"},"nodeType":"YulFunctionCall","src":"15688:47:21"},"nodeType":"YulExpressionStatement","src":"15688:47:21"},{"nodeType":"YulAssignment","src":"15744:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15878:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15752:124:21"},"nodeType":"YulFunctionCall","src":"15752:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15744:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15622:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15637:4:21","type":""}],"src":"15471:419:21"},{"body":{"nodeType":"YulBlock","src":"16067:248:21","statements":[{"nodeType":"YulAssignment","src":"16077:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16089:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16100:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16085:3:21"},"nodeType":"YulFunctionCall","src":"16085:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16077:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16124:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16135:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16120:3:21"},"nodeType":"YulFunctionCall","src":"16120:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16143:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16149:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16139:3:21"},"nodeType":"YulFunctionCall","src":"16139:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16113:6:21"},"nodeType":"YulFunctionCall","src":"16113:47:21"},"nodeType":"YulExpressionStatement","src":"16113:47:21"},{"nodeType":"YulAssignment","src":"16169:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16303:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16177:124:21"},"nodeType":"YulFunctionCall","src":"16177:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16169:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16047:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16062:4:21","type":""}],"src":"15896:419:21"},{"body":{"nodeType":"YulBlock","src":"16492:248:21","statements":[{"nodeType":"YulAssignment","src":"16502:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16514:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16525:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16510:3:21"},"nodeType":"YulFunctionCall","src":"16510:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16502:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16549:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16560:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16545:3:21"},"nodeType":"YulFunctionCall","src":"16545:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16568:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16574:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16564:3:21"},"nodeType":"YulFunctionCall","src":"16564:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16538:6:21"},"nodeType":"YulFunctionCall","src":"16538:47:21"},"nodeType":"YulExpressionStatement","src":"16538:47:21"},{"nodeType":"YulAssignment","src":"16594:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16728:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16602:124:21"},"nodeType":"YulFunctionCall","src":"16602:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16594:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16472:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16487:4:21","type":""}],"src":"16321:419:21"},{"body":{"nodeType":"YulBlock","src":"16917:248:21","statements":[{"nodeType":"YulAssignment","src":"16927:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16939:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16950:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16935:3:21"},"nodeType":"YulFunctionCall","src":"16935:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16927:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16974:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16985:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16970:3:21"},"nodeType":"YulFunctionCall","src":"16970:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16993:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16999:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16989:3:21"},"nodeType":"YulFunctionCall","src":"16989:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16963:6:21"},"nodeType":"YulFunctionCall","src":"16963:47:21"},"nodeType":"YulExpressionStatement","src":"16963:47:21"},{"nodeType":"YulAssignment","src":"17019:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17153:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17027:124:21"},"nodeType":"YulFunctionCall","src":"17027:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17019:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16897:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16912:4:21","type":""}],"src":"16746:419:21"},{"body":{"nodeType":"YulBlock","src":"17342:248:21","statements":[{"nodeType":"YulAssignment","src":"17352:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17375:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17360:3:21"},"nodeType":"YulFunctionCall","src":"17360:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17352:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17399:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17410:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17395:3:21"},"nodeType":"YulFunctionCall","src":"17395:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17418:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17424:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17414:3:21"},"nodeType":"YulFunctionCall","src":"17414:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17388:6:21"},"nodeType":"YulFunctionCall","src":"17388:47:21"},"nodeType":"YulExpressionStatement","src":"17388:47:21"},{"nodeType":"YulAssignment","src":"17444:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17578:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17452:124:21"},"nodeType":"YulFunctionCall","src":"17452:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17444:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17322:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17337:4:21","type":""}],"src":"17171:419:21"},{"body":{"nodeType":"YulBlock","src":"17767:248:21","statements":[{"nodeType":"YulAssignment","src":"17777:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17789:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17800:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17785:3:21"},"nodeType":"YulFunctionCall","src":"17785:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17777:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17824:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17835:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17820:3:21"},"nodeType":"YulFunctionCall","src":"17820:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17843:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17849:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17839:3:21"},"nodeType":"YulFunctionCall","src":"17839:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17813:6:21"},"nodeType":"YulFunctionCall","src":"17813:47:21"},"nodeType":"YulExpressionStatement","src":"17813:47:21"},{"nodeType":"YulAssignment","src":"17869:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18003:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17877:124:21"},"nodeType":"YulFunctionCall","src":"17877:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17869:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17747:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17762:4:21","type":""}],"src":"17596:419:21"},{"body":{"nodeType":"YulBlock","src":"18192:248:21","statements":[{"nodeType":"YulAssignment","src":"18202:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18225:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18210:3:21"},"nodeType":"YulFunctionCall","src":"18210:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18202:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18249:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18260:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:21"},"nodeType":"YulFunctionCall","src":"18245:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18268:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18274:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18264:3:21"},"nodeType":"YulFunctionCall","src":"18264:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:21"},"nodeType":"YulFunctionCall","src":"18238:47:21"},"nodeType":"YulExpressionStatement","src":"18238:47:21"},{"nodeType":"YulAssignment","src":"18294:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18428:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18302:124:21"},"nodeType":"YulFunctionCall","src":"18302:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18294:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18172:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18187:4:21","type":""}],"src":"18021:419:21"},{"body":{"nodeType":"YulBlock","src":"18617:248:21","statements":[{"nodeType":"YulAssignment","src":"18627:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18639:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18650:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18635:3:21"},"nodeType":"YulFunctionCall","src":"18635:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18627:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18674:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18685:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18670:3:21"},"nodeType":"YulFunctionCall","src":"18670:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18693:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18699:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18689:3:21"},"nodeType":"YulFunctionCall","src":"18689:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18663:6:21"},"nodeType":"YulFunctionCall","src":"18663:47:21"},"nodeType":"YulExpressionStatement","src":"18663:47:21"},{"nodeType":"YulAssignment","src":"18719:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18853:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18727:124:21"},"nodeType":"YulFunctionCall","src":"18727:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18719:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18597:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18612:4:21","type":""}],"src":"18446:419:21"},{"body":{"nodeType":"YulBlock","src":"19042:248:21","statements":[{"nodeType":"YulAssignment","src":"19052:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19064:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19075:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19060:3:21"},"nodeType":"YulFunctionCall","src":"19060:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19052:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19099:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19110:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19095:3:21"},"nodeType":"YulFunctionCall","src":"19095:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19118:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19124:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19114:3:21"},"nodeType":"YulFunctionCall","src":"19114:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19088:6:21"},"nodeType":"YulFunctionCall","src":"19088:47:21"},"nodeType":"YulExpressionStatement","src":"19088:47:21"},{"nodeType":"YulAssignment","src":"19144:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19278:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19152:124:21"},"nodeType":"YulFunctionCall","src":"19152:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19144:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19022:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19037:4:21","type":""}],"src":"18871:419:21"},{"body":{"nodeType":"YulBlock","src":"19467:248:21","statements":[{"nodeType":"YulAssignment","src":"19477:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19489:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19500:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19485:3:21"},"nodeType":"YulFunctionCall","src":"19485:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19477:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19524:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19535:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19520:3:21"},"nodeType":"YulFunctionCall","src":"19520:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19543:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19549:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19539:3:21"},"nodeType":"YulFunctionCall","src":"19539:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19513:6:21"},"nodeType":"YulFunctionCall","src":"19513:47:21"},"nodeType":"YulExpressionStatement","src":"19513:47:21"},{"nodeType":"YulAssignment","src":"19569:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19703:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19577:124:21"},"nodeType":"YulFunctionCall","src":"19577:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19569:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19447:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19462:4:21","type":""}],"src":"19296:419:21"},{"body":{"nodeType":"YulBlock","src":"19892:248:21","statements":[{"nodeType":"YulAssignment","src":"19902:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19914:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19925:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19910:3:21"},"nodeType":"YulFunctionCall","src":"19910:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19902:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19949:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19960:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19945:3:21"},"nodeType":"YulFunctionCall","src":"19945:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19968:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19974:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19964:3:21"},"nodeType":"YulFunctionCall","src":"19964:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19938:6:21"},"nodeType":"YulFunctionCall","src":"19938:47:21"},"nodeType":"YulExpressionStatement","src":"19938:47:21"},{"nodeType":"YulAssignment","src":"19994:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20128:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20002:124:21"},"nodeType":"YulFunctionCall","src":"20002:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19994:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19872:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19887:4:21","type":""}],"src":"19721:419:21"},{"body":{"nodeType":"YulBlock","src":"20317:248:21","statements":[{"nodeType":"YulAssignment","src":"20327:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20339:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20350:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20335:3:21"},"nodeType":"YulFunctionCall","src":"20335:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20327:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20385:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20370:3:21"},"nodeType":"YulFunctionCall","src":"20370:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20393:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20399:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20389:3:21"},"nodeType":"YulFunctionCall","src":"20389:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20363:6:21"},"nodeType":"YulFunctionCall","src":"20363:47:21"},"nodeType":"YulExpressionStatement","src":"20363:47:21"},{"nodeType":"YulAssignment","src":"20419:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20553:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20427:124:21"},"nodeType":"YulFunctionCall","src":"20427:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20419:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20297:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20312:4:21","type":""}],"src":"20146:419:21"},{"body":{"nodeType":"YulBlock","src":"20742:248:21","statements":[{"nodeType":"YulAssignment","src":"20752:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20775:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20760:3:21"},"nodeType":"YulFunctionCall","src":"20760:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20752:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20799:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20795:3:21"},"nodeType":"YulFunctionCall","src":"20795:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20818:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20824:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20814:3:21"},"nodeType":"YulFunctionCall","src":"20814:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20788:6:21"},"nodeType":"YulFunctionCall","src":"20788:47:21"},"nodeType":"YulExpressionStatement","src":"20788:47:21"},{"nodeType":"YulAssignment","src":"20844:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20978:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20852:124:21"},"nodeType":"YulFunctionCall","src":"20852:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20844:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20722:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20737:4:21","type":""}],"src":"20571:419:21"},{"body":{"nodeType":"YulBlock","src":"21167:248:21","statements":[{"nodeType":"YulAssignment","src":"21177:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21189:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21200:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21185:3:21"},"nodeType":"YulFunctionCall","src":"21185:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21177:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21224:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21235:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21220:3:21"},"nodeType":"YulFunctionCall","src":"21220:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21243:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21249:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21239:3:21"},"nodeType":"YulFunctionCall","src":"21239:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21213:6:21"},"nodeType":"YulFunctionCall","src":"21213:47:21"},"nodeType":"YulExpressionStatement","src":"21213:47:21"},{"nodeType":"YulAssignment","src":"21269:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21403:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21277:124:21"},"nodeType":"YulFunctionCall","src":"21277:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21269:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21147:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21162:4:21","type":""}],"src":"20996:419:21"},{"body":{"nodeType":"YulBlock","src":"21592:248:21","statements":[{"nodeType":"YulAssignment","src":"21602:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21625:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21610:3:21"},"nodeType":"YulFunctionCall","src":"21610:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21602:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21649:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21660:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21645:3:21"},"nodeType":"YulFunctionCall","src":"21645:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21668:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21674:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21664:3:21"},"nodeType":"YulFunctionCall","src":"21664:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21638:6:21"},"nodeType":"YulFunctionCall","src":"21638:47:21"},"nodeType":"YulExpressionStatement","src":"21638:47:21"},{"nodeType":"YulAssignment","src":"21694:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21828:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21702:124:21"},"nodeType":"YulFunctionCall","src":"21702:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21694:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21572:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21587:4:21","type":""}],"src":"21421:419:21"},{"body":{"nodeType":"YulBlock","src":"21944:124:21","statements":[{"nodeType":"YulAssignment","src":"21954:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21966:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21977:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21962:3:21"},"nodeType":"YulFunctionCall","src":"21962:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21954:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22034:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22058:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22043:3:21"},"nodeType":"YulFunctionCall","src":"22043:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21990:43:21"},"nodeType":"YulFunctionCall","src":"21990:71:21"},"nodeType":"YulExpressionStatement","src":"21990:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21916:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21928:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21939:4:21","type":""}],"src":"21846:222:21"},{"body":{"nodeType":"YulBlock","src":"22115:88:21","statements":[{"nodeType":"YulAssignment","src":"22125:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"22135:18:21"},"nodeType":"YulFunctionCall","src":"22135:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22125:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22184:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"22192:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"22164:19:21"},"nodeType":"YulFunctionCall","src":"22164:33:21"},"nodeType":"YulExpressionStatement","src":"22164:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"22099:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"22108:6:21","type":""}],"src":"22074:129:21"},{"body":{"nodeType":"YulBlock","src":"22249:35:21","statements":[{"nodeType":"YulAssignment","src":"22259:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22275:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22269:5:21"},"nodeType":"YulFunctionCall","src":"22269:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22259:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"22242:6:21","type":""}],"src":"22209:75:21"},{"body":{"nodeType":"YulBlock","src":"22356:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"22461:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22463:16:21"},"nodeType":"YulFunctionCall","src":"22463:18:21"},"nodeType":"YulExpressionStatement","src":"22463:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22433:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22441:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22430:2:21"},"nodeType":"YulFunctionCall","src":"22430:30:21"},"nodeType":"YulIf","src":"22427:2:21"},{"nodeType":"YulAssignment","src":"22493:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22523:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22501:21:21"},"nodeType":"YulFunctionCall","src":"22501:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22493:4:21"}]},{"nodeType":"YulAssignment","src":"22567:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22579:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"22585:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22575:3:21"},"nodeType":"YulFunctionCall","src":"22575:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22567:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22340:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22351:4:21","type":""}],"src":"22290:307:21"},{"body":{"nodeType":"YulBlock","src":"22661:40:21","statements":[{"nodeType":"YulAssignment","src":"22672:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22688:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22682:5:21"},"nodeType":"YulFunctionCall","src":"22682:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22672:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22644:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22654:6:21","type":""}],"src":"22603:98:21"},{"body":{"nodeType":"YulBlock","src":"22766:40:21","statements":[{"nodeType":"YulAssignment","src":"22777:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22793:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22787:5:21"},"nodeType":"YulFunctionCall","src":"22787:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22777:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22749:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22759:6:21","type":""}],"src":"22707:99:21"},{"body":{"nodeType":"YulBlock","src":"22907:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22924:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"22929:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22917:6:21"},"nodeType":"YulFunctionCall","src":"22917:19:21"},"nodeType":"YulExpressionStatement","src":"22917:19:21"},{"nodeType":"YulAssignment","src":"22945:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22964:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22969:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22960:3:21"},"nodeType":"YulFunctionCall","src":"22960:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22945:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22879:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"22884:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22895:11:21","type":""}],"src":"22812:168:21"},{"body":{"nodeType":"YulBlock","src":"23082:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23099:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23104:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23092:6:21"},"nodeType":"YulFunctionCall","src":"23092:19:21"},"nodeType":"YulExpressionStatement","src":"23092:19:21"},{"nodeType":"YulAssignment","src":"23120:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23139:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23144:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23135:3:21"},"nodeType":"YulFunctionCall","src":"23135:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23120:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23054:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"23059:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23070:11:21","type":""}],"src":"22986:169:21"},{"body":{"nodeType":"YulBlock","src":"23275:34:21","statements":[{"nodeType":"YulAssignment","src":"23285:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"23300:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23285:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23247:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"23252:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23263:11:21","type":""}],"src":"23161:148:21"},{"body":{"nodeType":"YulBlock","src":"23359:261:21","statements":[{"nodeType":"YulAssignment","src":"23369:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23392:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23374:17:21"},"nodeType":"YulFunctionCall","src":"23374:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23369:1:21"}]},{"nodeType":"YulAssignment","src":"23403:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23426:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23408:17:21"},"nodeType":"YulFunctionCall","src":"23408:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23403:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23566:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23568:16:21"},"nodeType":"YulFunctionCall","src":"23568:18:21"},"nodeType":"YulExpressionStatement","src":"23568:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23487:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23494:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23562:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23490:3:21"},"nodeType":"YulFunctionCall","src":"23490:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23484:2:21"},"nodeType":"YulFunctionCall","src":"23484:81:21"},"nodeType":"YulIf","src":"23481:2:21"},{"nodeType":"YulAssignment","src":"23598:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23609:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23612:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23605:3:21"},"nodeType":"YulFunctionCall","src":"23605:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23598:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23346:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23349:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23355:3:21","type":""}],"src":"23315:305:21"},{"body":{"nodeType":"YulBlock","src":"23671:146:21","statements":[{"nodeType":"YulAssignment","src":"23681:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23704:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23686:17:21"},"nodeType":"YulFunctionCall","src":"23686:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23681:1:21"}]},{"nodeType":"YulAssignment","src":"23715:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23738:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23720:17:21"},"nodeType":"YulFunctionCall","src":"23720:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23715:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23762:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23764:16:21"},"nodeType":"YulFunctionCall","src":"23764:18:21"},"nodeType":"YulExpressionStatement","src":"23764:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23756:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23759:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23753:2:21"},"nodeType":"YulFunctionCall","src":"23753:8:21"},"nodeType":"YulIf","src":"23750:2:21"},{"nodeType":"YulAssignment","src":"23794:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23806:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23809:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23802:3:21"},"nodeType":"YulFunctionCall","src":"23802:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23794:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23657:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23660:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23666:4:21","type":""}],"src":"23626:191:21"},{"body":{"nodeType":"YulBlock","src":"23868:51:21","statements":[{"nodeType":"YulAssignment","src":"23878:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23907:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"23889:17:21"},"nodeType":"YulFunctionCall","src":"23889:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23878:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23850:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23860:7:21","type":""}],"src":"23823:96:21"},{"body":{"nodeType":"YulBlock","src":"23978:51:21","statements":[{"nodeType":"YulAssignment","src":"23988:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24017:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"23999:17:21"},"nodeType":"YulFunctionCall","src":"23999:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23988:7:21"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23960:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23970:7:21","type":""}],"src":"23925:104:21"},{"body":{"nodeType":"YulBlock","src":"24077:48:21","statements":[{"nodeType":"YulAssignment","src":"24087:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24112:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24105:6:21"},"nodeType":"YulFunctionCall","src":"24105:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24098:6:21"},"nodeType":"YulFunctionCall","src":"24098:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24087:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24059:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24069:7:21","type":""}],"src":"24035:90:21"},{"body":{"nodeType":"YulBlock","src":"24175:105:21","statements":[{"nodeType":"YulAssignment","src":"24185:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24200:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"24207:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24196:3:21"},"nodeType":"YulFunctionCall","src":"24196:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24185:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24157:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24167:7:21","type":""}],"src":"24131:149:21"},{"body":{"nodeType":"YulBlock","src":"24331:81:21","statements":[{"nodeType":"YulAssignment","src":"24341:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24356:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"24363:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24352:3:21"},"nodeType":"YulFunctionCall","src":"24352:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24341:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24313:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24323:7:21","type":""}],"src":"24286:126:21"},{"body":{"nodeType":"YulBlock","src":"24463:32:21","statements":[{"nodeType":"YulAssignment","src":"24473:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"24484:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24473:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24445:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24455:7:21","type":""}],"src":"24418:77:21"},{"body":{"nodeType":"YulBlock","src":"24569:66:21","statements":[{"nodeType":"YulAssignment","src":"24579:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24623:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"24592:30:21"},"nodeType":"YulFunctionCall","src":"24592:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24579:9:21"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24549:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24559:9:21","type":""}],"src":"24501:134:21"},{"body":{"nodeType":"YulBlock","src":"24701:66:21","statements":[{"nodeType":"YulAssignment","src":"24711:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24755:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"24724:30:21"},"nodeType":"YulFunctionCall","src":"24724:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24711:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24681:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24691:9:21","type":""}],"src":"24641:126:21"},{"body":{"nodeType":"YulBlock","src":"24833:53:21","statements":[{"nodeType":"YulAssignment","src":"24843:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24874:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"24856:17:21"},"nodeType":"YulFunctionCall","src":"24856:24:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24843:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24813:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24823:9:21","type":""}],"src":"24773:113:21"},{"body":{"nodeType":"YulBlock","src":"24943:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"24966:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"24971:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24976:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"24953:12:21"},"nodeType":"YulFunctionCall","src":"24953:30:21"},"nodeType":"YulExpressionStatement","src":"24953:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25024:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"25029:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25020:3:21"},"nodeType":"YulFunctionCall","src":"25020:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"25038:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25013:6:21"},"nodeType":"YulFunctionCall","src":"25013:27:21"},"nodeType":"YulExpressionStatement","src":"25013:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"24925:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"24930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"24935:6:21","type":""}],"src":"24892:154:21"},{"body":{"nodeType":"YulBlock","src":"25101:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25111:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"25120:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25115:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"25180:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25205:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"25210:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25201:3:21"},"nodeType":"YulFunctionCall","src":"25201:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25224:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"25229:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25220:3:21"},"nodeType":"YulFunctionCall","src":"25220:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25214:5:21"},"nodeType":"YulFunctionCall","src":"25214:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25194:6:21"},"nodeType":"YulFunctionCall","src":"25194:39:21"},"nodeType":"YulExpressionStatement","src":"25194:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25141:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"25144:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25138:2:21"},"nodeType":"YulFunctionCall","src":"25138:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25152:19:21","statements":[{"nodeType":"YulAssignment","src":"25154:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25163:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"25166:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25159:3:21"},"nodeType":"YulFunctionCall","src":"25159:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25154:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"25134:3:21","statements":[]},"src":"25130:113:21"},{"body":{"nodeType":"YulBlock","src":"25277:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25327:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"25332:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25323:3:21"},"nodeType":"YulFunctionCall","src":"25323:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"25341:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25316:6:21"},"nodeType":"YulFunctionCall","src":"25316:27:21"},"nodeType":"YulExpressionStatement","src":"25316:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25258:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"25261:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25255:2:21"},"nodeType":"YulFunctionCall","src":"25255:13:21"},"nodeType":"YulIf","src":"25252:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"25083:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"25088:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"25093:6:21","type":""}],"src":"25052:307:21"},{"body":{"nodeType":"YulBlock","src":"25416:269:21","statements":[{"nodeType":"YulAssignment","src":"25426:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25440:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"25446:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25436:3:21"},"nodeType":"YulFunctionCall","src":"25436:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25426:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"25457:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25487:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"25493:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25483:3:21"},"nodeType":"YulFunctionCall","src":"25483:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"25461:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"25534:51:21","statements":[{"nodeType":"YulAssignment","src":"25548:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25562:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25570:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25558:3:21"},"nodeType":"YulFunctionCall","src":"25558:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25548:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"25514:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25507:6:21"},"nodeType":"YulFunctionCall","src":"25507:26:21"},"nodeType":"YulIf","src":"25504:2:21"},{"body":{"nodeType":"YulBlock","src":"25637:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"25651:16:21"},"nodeType":"YulFunctionCall","src":"25651:18:21"},"nodeType":"YulExpressionStatement","src":"25651:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"25601:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25624:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25632:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25621:2:21"},"nodeType":"YulFunctionCall","src":"25621:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25598:2:21"},"nodeType":"YulFunctionCall","src":"25598:38:21"},"nodeType":"YulIf","src":"25595:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"25400:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25409:6:21","type":""}],"src":"25365:320:21"},{"body":{"nodeType":"YulBlock","src":"25734:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25744:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25766:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"25796:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"25774:21:21"},"nodeType":"YulFunctionCall","src":"25774:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25762:3:21"},"nodeType":"YulFunctionCall","src":"25762:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"25748:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"25913:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"25915:16:21"},"nodeType":"YulFunctionCall","src":"25915:18:21"},"nodeType":"YulExpressionStatement","src":"25915:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25856:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"25868:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25853:2:21"},"nodeType":"YulFunctionCall","src":"25853:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25892:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"25904:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25889:2:21"},"nodeType":"YulFunctionCall","src":"25889:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25850:2:21"},"nodeType":"YulFunctionCall","src":"25850:62:21"},"nodeType":"YulIf","src":"25847:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25951:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25955:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25944:6:21"},"nodeType":"YulFunctionCall","src":"25944:22:21"},"nodeType":"YulExpressionStatement","src":"25944:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25720:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"25728:4:21","type":""}],"src":"25691:281:21"},{"body":{"nodeType":"YulBlock","src":"26006:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26023:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26026:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26016:6:21"},"nodeType":"YulFunctionCall","src":"26016:88:21"},"nodeType":"YulExpressionStatement","src":"26016:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26120:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26123:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26113:6:21"},"nodeType":"YulFunctionCall","src":"26113:15:21"},"nodeType":"YulExpressionStatement","src":"26113:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26144:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26147:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26137:6:21"},"nodeType":"YulFunctionCall","src":"26137:15:21"},"nodeType":"YulExpressionStatement","src":"26137:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25978:180:21"},{"body":{"nodeType":"YulBlock","src":"26192:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26209:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26212:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26202:6:21"},"nodeType":"YulFunctionCall","src":"26202:88:21"},"nodeType":"YulExpressionStatement","src":"26202:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26306:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26309:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26299:6:21"},"nodeType":"YulFunctionCall","src":"26299:15:21"},"nodeType":"YulExpressionStatement","src":"26299:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26330:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26333:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26323:6:21"},"nodeType":"YulFunctionCall","src":"26323:15:21"},"nodeType":"YulExpressionStatement","src":"26323:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"26164:180:21"},{"body":{"nodeType":"YulBlock","src":"26378:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26395:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26398:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26388:6:21"},"nodeType":"YulFunctionCall","src":"26388:88:21"},"nodeType":"YulExpressionStatement","src":"26388:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26492:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26495:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26485:6:21"},"nodeType":"YulFunctionCall","src":"26485:15:21"},"nodeType":"YulExpressionStatement","src":"26485:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26516:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26519:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26509:6:21"},"nodeType":"YulFunctionCall","src":"26509:15:21"},"nodeType":"YulExpressionStatement","src":"26509:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"26350:180:21"},{"body":{"nodeType":"YulBlock","src":"26584:54:21","statements":[{"nodeType":"YulAssignment","src":"26594:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26612:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26619:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26608:3:21"},"nodeType":"YulFunctionCall","src":"26608:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26628:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26624:3:21"},"nodeType":"YulFunctionCall","src":"26624:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26604:3:21"},"nodeType":"YulFunctionCall","src":"26604:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"26594:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26567:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"26577:6:21","type":""}],"src":"26536:102:21"},{"body":{"nodeType":"YulBlock","src":"26750:131:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26772:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26780:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26768:3:21"},"nodeType":"YulFunctionCall","src":"26768:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"26784:34:21","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26761:6:21"},"nodeType":"YulFunctionCall","src":"26761:58:21"},"nodeType":"YulExpressionStatement","src":"26761:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26840:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26848:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26836:3:21"},"nodeType":"YulFunctionCall","src":"26836:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"26853:20:21","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26829:6:21"},"nodeType":"YulFunctionCall","src":"26829:45:21"},"nodeType":"YulExpressionStatement","src":"26829:45:21"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26742:6:21","type":""}],"src":"26644:237:21"},{"body":{"nodeType":"YulBlock","src":"26993:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27015:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27011:3:21"},"nodeType":"YulFunctionCall","src":"27011:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"27027:34:21","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27004:6:21"},"nodeType":"YulFunctionCall","src":"27004:58:21"},"nodeType":"YulExpressionStatement","src":"27004:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27083:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27091:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27079:3:21"},"nodeType":"YulFunctionCall","src":"27079:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"27096:7:21","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27072:6:21"},"nodeType":"YulFunctionCall","src":"27072:32:21"},"nodeType":"YulExpressionStatement","src":"27072:32:21"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26985:6:21","type":""}],"src":"26887:224:21"},{"body":{"nodeType":"YulBlock","src":"27223:72:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27245:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27253:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27241:3:21"},"nodeType":"YulFunctionCall","src":"27241:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"27257:30:21","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27234:6:21"},"nodeType":"YulFunctionCall","src":"27234:54:21"},"nodeType":"YulExpressionStatement","src":"27234:54:21"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27215:6:21","type":""}],"src":"27117:178:21"},{"body":{"nodeType":"YulBlock","src":"27407:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27429:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27437:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27425:3:21"},"nodeType":"YulFunctionCall","src":"27425:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"27441:34:21","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27418:6:21"},"nodeType":"YulFunctionCall","src":"27418:58:21"},"nodeType":"YulExpressionStatement","src":"27418:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27497:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27505:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27493:3:21"},"nodeType":"YulFunctionCall","src":"27493:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"27510:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27486:6:21"},"nodeType":"YulFunctionCall","src":"27486:31:21"},"nodeType":"YulExpressionStatement","src":"27486:31:21"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27399:6:21","type":""}],"src":"27301:223:21"},{"body":{"nodeType":"YulBlock","src":"27636:69:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27658:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27666:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27654:3:21"},"nodeType":"YulFunctionCall","src":"27654:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"27670:27:21","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27647:6:21"},"nodeType":"YulFunctionCall","src":"27647:51:21"},"nodeType":"YulExpressionStatement","src":"27647:51:21"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27628:6:21","type":""}],"src":"27530:175:21"},{"body":{"nodeType":"YulBlock","src":"27817:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27839:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27847:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27835:3:21"},"nodeType":"YulFunctionCall","src":"27835:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"27851:34:21","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27828:6:21"},"nodeType":"YulFunctionCall","src":"27828:58:21"},"nodeType":"YulExpressionStatement","src":"27828:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27907:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27915:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27903:3:21"},"nodeType":"YulFunctionCall","src":"27903:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"27920:14:21","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27896:6:21"},"nodeType":"YulFunctionCall","src":"27896:39:21"},"nodeType":"YulExpressionStatement","src":"27896:39:21"}]},"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27809:6:21","type":""}],"src":"27711:231:21"},{"body":{"nodeType":"YulBlock","src":"28054:137:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28076:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28084:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28072:3:21"},"nodeType":"YulFunctionCall","src":"28072:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"28088:34:21","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28065:6:21"},"nodeType":"YulFunctionCall","src":"28065:58:21"},"nodeType":"YulExpressionStatement","src":"28065:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28144:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28152:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28140:3:21"},"nodeType":"YulFunctionCall","src":"28140:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"28157:26:21","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28133:6:21"},"nodeType":"YulFunctionCall","src":"28133:51:21"},"nodeType":"YulExpressionStatement","src":"28133:51:21"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28046:6:21","type":""}],"src":"27948:243:21"},{"body":{"nodeType":"YulBlock","src":"28303:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28325:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28333:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28321:3:21"},"nodeType":"YulFunctionCall","src":"28321:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"28337:34:21","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28314:6:21"},"nodeType":"YulFunctionCall","src":"28314:58:21"},"nodeType":"YulExpressionStatement","src":"28314:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28393:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28401:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28389:3:21"},"nodeType":"YulFunctionCall","src":"28389:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"28406:12:21","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28382:6:21"},"nodeType":"YulFunctionCall","src":"28382:37:21"},"nodeType":"YulExpressionStatement","src":"28382:37:21"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28295:6:21","type":""}],"src":"28197:229:21"},{"body":{"nodeType":"YulBlock","src":"28538:122:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28560:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28568:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28556:3:21"},"nodeType":"YulFunctionCall","src":"28556:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"28572:34:21","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28549:6:21"},"nodeType":"YulFunctionCall","src":"28549:58:21"},"nodeType":"YulExpressionStatement","src":"28549:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28628:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28636:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28624:3:21"},"nodeType":"YulFunctionCall","src":"28624:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"28641:11:21","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28617:6:21"},"nodeType":"YulFunctionCall","src":"28617:36:21"},"nodeType":"YulExpressionStatement","src":"28617:36:21"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28530:6:21","type":""}],"src":"28432:228:21"},{"body":{"nodeType":"YulBlock","src":"28772:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28794:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28802:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28790:3:21"},"nodeType":"YulFunctionCall","src":"28790:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"28806:34:21","type":"","value":"Transfer of ETH to receiver fail"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28783:6:21"},"nodeType":"YulFunctionCall","src":"28783:58:21"},"nodeType":"YulExpressionStatement","src":"28783:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28862:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28870:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28858:3:21"},"nodeType":"YulFunctionCall","src":"28858:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"28875:4:21","type":"","value":"ed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28851:6:21"},"nodeType":"YulFunctionCall","src":"28851:29:21"},"nodeType":"YulExpressionStatement","src":"28851:29:21"}]},"name":"store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28764:6:21","type":""}],"src":"28666:221:21"},{"body":{"nodeType":"YulBlock","src":"28999:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29021:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29029:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29017:3:21"},"nodeType":"YulFunctionCall","src":"29017:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"29033:34:21","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29010:6:21"},"nodeType":"YulFunctionCall","src":"29010:58:21"},"nodeType":"YulExpressionStatement","src":"29010:58:21"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28991:6:21","type":""}],"src":"28893:182:21"},{"body":{"nodeType":"YulBlock","src":"29187:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29209:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29217:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29205:3:21"},"nodeType":"YulFunctionCall","src":"29205:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"29221:34:21","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29198:6:21"},"nodeType":"YulFunctionCall","src":"29198:58:21"},"nodeType":"YulExpressionStatement","src":"29198:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29277:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29285:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29273:3:21"},"nodeType":"YulFunctionCall","src":"29273:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"29290:14:21","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29266:6:21"},"nodeType":"YulFunctionCall","src":"29266:39:21"},"nodeType":"YulExpressionStatement","src":"29266:39:21"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29179:6:21","type":""}],"src":"29081:231:21"},{"body":{"nodeType":"YulBlock","src":"29424:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29446:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29454:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29442:3:21"},"nodeType":"YulFunctionCall","src":"29442:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"29458:34:21","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29435:6:21"},"nodeType":"YulFunctionCall","src":"29435:58:21"},"nodeType":"YulExpressionStatement","src":"29435:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29514:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29522:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29510:3:21"},"nodeType":"YulFunctionCall","src":"29510:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"29527:17:21","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29503:6:21"},"nodeType":"YulFunctionCall","src":"29503:42:21"},"nodeType":"YulExpressionStatement","src":"29503:42:21"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29416:6:21","type":""}],"src":"29318:234:21"},{"body":{"nodeType":"YulBlock","src":"29664:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29686:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29694:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29682:3:21"},"nodeType":"YulFunctionCall","src":"29682:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"29698:34:21","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29675:6:21"},"nodeType":"YulFunctionCall","src":"29675:58:21"},"nodeType":"YulExpressionStatement","src":"29675:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29754:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29762:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29750:3:21"},"nodeType":"YulFunctionCall","src":"29750:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"29767:3:21","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29743:6:21"},"nodeType":"YulFunctionCall","src":"29743:28:21"},"nodeType":"YulExpressionStatement","src":"29743:28:21"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29656:6:21","type":""}],"src":"29558:220:21"},{"body":{"nodeType":"YulBlock","src":"29890:130:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29912:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29920:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29908:3:21"},"nodeType":"YulFunctionCall","src":"29908:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"29924:34:21","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29901:6:21"},"nodeType":"YulFunctionCall","src":"29901:58:21"},"nodeType":"YulExpressionStatement","src":"29901:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29980:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29988:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29976:3:21"},"nodeType":"YulFunctionCall","src":"29976:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"29993:19:21","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29969:6:21"},"nodeType":"YulFunctionCall","src":"29969:44:21"},"nodeType":"YulExpressionStatement","src":"29969:44:21"}]},"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29882:6:21","type":""}],"src":"29784:236:21"},{"body":{"nodeType":"YulBlock","src":"30069:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"30126:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30135:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30138:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30128:6:21"},"nodeType":"YulFunctionCall","src":"30128:12:21"},"nodeType":"YulExpressionStatement","src":"30128:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30092:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30117:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"30099:17:21"},"nodeType":"YulFunctionCall","src":"30099:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30089:2:21"},"nodeType":"YulFunctionCall","src":"30089:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30082:6:21"},"nodeType":"YulFunctionCall","src":"30082:43:21"},"nodeType":"YulIf","src":"30079:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30062:5:21","type":""}],"src":"30026:122:21"},{"body":{"nodeType":"YulBlock","src":"30205:87:21","statements":[{"body":{"nodeType":"YulBlock","src":"30270:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30279:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30282:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30272:6:21"},"nodeType":"YulFunctionCall","src":"30272:12:21"},"nodeType":"YulExpressionStatement","src":"30272:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30228:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30261:5:21"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"30235:25:21"},"nodeType":"YulFunctionCall","src":"30235:32:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30225:2:21"},"nodeType":"YulFunctionCall","src":"30225:43:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30218:6:21"},"nodeType":"YulFunctionCall","src":"30218:51:21"},"nodeType":"YulIf","src":"30215:2:21"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30198:5:21","type":""}],"src":"30154:138:21"},{"body":{"nodeType":"YulBlock","src":"30338:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"30392:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30401:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30404:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30394:6:21"},"nodeType":"YulFunctionCall","src":"30394:12:21"},"nodeType":"YulExpressionStatement","src":"30394:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30361:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30383:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"30368:14:21"},"nodeType":"YulFunctionCall","src":"30368:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30358:2:21"},"nodeType":"YulFunctionCall","src":"30358:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30351:6:21"},"nodeType":"YulFunctionCall","src":"30351:40:21"},"nodeType":"YulIf","src":"30348:2:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30331:5:21","type":""}],"src":"30298:116:21"},{"body":{"nodeType":"YulBlock","src":"30462:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"30518:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30527:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30530:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30520:6:21"},"nodeType":"YulFunctionCall","src":"30520:12:21"},"nodeType":"YulExpressionStatement","src":"30520:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30485:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30509:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"30492:16:21"},"nodeType":"YulFunctionCall","src":"30492:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30482:2:21"},"nodeType":"YulFunctionCall","src":"30482:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30475:6:21"},"nodeType":"YulFunctionCall","src":"30475:42:21"},"nodeType":"YulIf","src":"30472:2:21"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30455:5:21","type":""}],"src":"30420:120:21"},{"body":{"nodeType":"YulBlock","src":"30589:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"30646:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30655:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30658:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30648:6:21"},"nodeType":"YulFunctionCall","src":"30648:12:21"},"nodeType":"YulExpressionStatement","src":"30648:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30612:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30637:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30619:17:21"},"nodeType":"YulFunctionCall","src":"30619:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30609:2:21"},"nodeType":"YulFunctionCall","src":"30609:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30602:6:21"},"nodeType":"YulFunctionCall","src":"30602:43:21"},"nodeType":"YulIf","src":"30599:2:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30582:5:21","type":""}],"src":"30546:122:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer of ETH to receiver fail\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610282578063b88d4fde1461029e578063c87b56dd146102ba578063e985e9c5146102ea576100f5565b80636352211e146101e857806368155ec11461021857806370a082311461023457806395d89b4114610264576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806340d097c3146101b057806342842e0e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f9190611cde565b61031a565b6040516101219190612107565b60405180910390f35b6101326103fc565b60405161013f9190612122565b60405180910390f35b610162600480360381019061015d9190611d30565b61048e565b60405161016f9190612069565b60405180910390f35b610192600480360381019061018d9190611ca2565b610513565b005b6101ae60048036038101906101a99190611b9c565b61062b565b005b6101ca60048036038101906101c59190611ad4565b610684565b005b6101e660048036038101906101e19190611b9c565b6106aa565b005b61020260048036038101906101fd9190611d30565b6106ca565b60405161020f9190612069565b60405180910390f35b610232600480360381019061022d9190611b39565b61077c565b005b61024e60048036038101906102499190611ad4565b61089f565b60405161025b9190612324565b60405180910390f35b61026c610957565b6040516102799190612122565b60405180910390f35b61029c60048036038101906102979190611c66565b6109e9565b005b6102b860048036038101906102b39190611beb565b6109ff565b005b6102d460048036038101906102cf9190611d30565b610a61565b6040516102e19190612122565b60405180910390f35b61030460048036038101906102ff9190611afd565b610b08565b6040516103119190612107565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f557506103f482610b9c565b5b9050919050565b60606000805461040b90612560565b80601f016020809104026020016040519081016040528092919081815260200182805461043790612560565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610c06565b6104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf906122a4565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061051e826106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906122e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ae610c72565b73ffffffffffffffffffffffffffffffffffffffff1614806105dd57506105dc816105d7610c72565b610b08565b5b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390612204565b60405180910390fd5b6106268383610c7a565b505050565b6106358382610d33565b610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90612304565b60405180910390fd5b61067f838383610e11565b505050565b60006106906006611078565b905061069c6006611086565b6106a6828261109c565b5050565b6106c5838383604051806020016040528060008152506109ff565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90612244565b60405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610824578173ffffffffffffffffffffffffffffffffffffffff166323b872dd8585846040518463ffffffff1660e01b81526004016107ed93929190612084565b600060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b50505050610899565b8273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90612264565b60405180910390fd5b5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790612224565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461096690612560565b80601f016020809104026020016040519081016040528092919081815260200182805461099290612560565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b5050505050905090565b6109fb6109f4610c72565b83836110ba565b5050565b610a10610a0a610c72565b83610d33565b610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690612304565b60405180910390fd5b610a5b84848484611227565b50505050565b6060610a6c82610c06565b610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa2906122c4565b60405180910390fd5b6000610ab5611283565b90506000815111610ad55760405180602001604052806000815250610b00565b80610adf8461129a565b604051602001610af0929190612045565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ced836106ca565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d3e82610c06565b610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d74906121e4565b60405180910390fd5b6000610d88836106ca565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610df757508373ffffffffffffffffffffffffffffffffffffffff16610ddf8461048e565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e085750610e078185610b08565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e31826106ca565b73ffffffffffffffffffffffffffffffffffffffff1614610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90612164565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eee906121a4565b60405180910390fd5b610f028383836113be565b610f0d600082610c7a565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5d919061242e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fb491906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110738383836113c3565b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6110b68282604051806020016040528060008152506113c8565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611120906121c4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161121a9190612107565b60405180910390a3505050565b611232848484610e11565b61123e84848484611423565b61127d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127490612144565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016112a9846115ba565b01905060008167ffffffffffffffff8111156112ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113205781602001600182028036833780820191505090505b509050600082602001820190505b6001156113b3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161139d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156113ae576113b3565b61132e565b819350505050919050565b505050565b505050565b6113d283836117f1565b6113df6000848484611423565b61141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590612144565b60405180910390fd5b505050565b60006114448473ffffffffffffffffffffffffffffffffffffffff166119cb565b156115ad578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261146d610c72565b8786866040518563ffffffff1660e01b815260040161148f94939291906120bb565b602060405180830381600087803b1580156114a957600080fd5b505af19250505080156114da57506040513d601f19601f820116820180604052508101906114d79190611d07565b60015b61155d573d806000811461150a576040519150601f19603f3d011682016040523d82523d6000602084013e61150f565b606091505b50600081511415611555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154c90612144565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506115b2565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061163e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611634577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116a1576d04ee2d6d415b85acef81000000008381611697577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106116f657662386f26fc1000083816116ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611745576305f5e100838161173b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611790576127108381611786577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b606483106117d957606483816117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106117e8576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890612284565b60405180910390fd5b61186a81610c06565b156118aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a190612184565b60405180910390fd5b6118b6600083836113be565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461190691906123d8565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119c7600083836113c3565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611a016119fc84612364565b61233f565b905082815260208101848484011115611a1957600080fd5b611a2484828561251e565b509392505050565b600081359050611a3b81612a90565b92915050565b600081359050611a5081612aa7565b92915050565b600081359050611a6581612abe565b92915050565b600081359050611a7a81612ad5565b92915050565b600081519050611a8f81612ad5565b92915050565b600082601f830112611aa657600080fd5b8135611ab68482602086016119ee565b91505092915050565b600081359050611ace81612aec565b92915050565b600060208284031215611ae657600080fd5b6000611af484828501611a2c565b91505092915050565b60008060408385031215611b1057600080fd5b6000611b1e85828601611a2c565b9250506020611b2f85828601611a2c565b9150509250929050565b60008060008060808587031215611b4f57600080fd5b6000611b5d87828801611a2c565b9450506020611b6e87828801611a41565b9350506040611b7f87828801611a2c565b9250506060611b9087828801611abf565b91505092959194509250565b600080600060608486031215611bb157600080fd5b6000611bbf86828701611a2c565b9350506020611bd086828701611a2c565b9250506040611be186828701611abf565b9150509250925092565b60008060008060808587031215611c0157600080fd5b6000611c0f87828801611a2c565b9450506020611c2087828801611a2c565b9350506040611c3187828801611abf565b925050606085013567ffffffffffffffff811115611c4e57600080fd5b611c5a87828801611a95565b91505092959194509250565b60008060408385031215611c7957600080fd5b6000611c8785828601611a2c565b9250506020611c9885828601611a56565b9150509250929050565b60008060408385031215611cb557600080fd5b6000611cc385828601611a2c565b9250506020611cd485828601611abf565b9150509250929050565b600060208284031215611cf057600080fd5b6000611cfe84828501611a6b565b91505092915050565b600060208284031215611d1957600080fd5b6000611d2784828501611a80565b91505092915050565b600060208284031215611d4257600080fd5b6000611d5084828501611abf565b91505092915050565b611d62816124e8565b82525050565b611d7181612462565b82525050565b611d8081612486565b82525050565b6000611d9182612395565b611d9b81856123ab565b9350611dab81856020860161252d565b611db481612650565b840191505092915050565b6000611dca826123a0565b611dd481856123bc565b9350611de481856020860161252d565b611ded81612650565b840191505092915050565b6000611e03826123a0565b611e0d81856123cd565b9350611e1d81856020860161252d565b80840191505092915050565b6000611e366032836123bc565b9150611e4182612661565b604082019050919050565b6000611e596025836123bc565b9150611e64826126b0565b604082019050919050565b6000611e7c601c836123bc565b9150611e87826126ff565b602082019050919050565b6000611e9f6024836123bc565b9150611eaa82612728565b604082019050919050565b6000611ec26019836123bc565b9150611ecd82612777565b602082019050919050565b6000611ee5602c836123bc565b9150611ef0826127a0565b604082019050919050565b6000611f086038836123bc565b9150611f13826127ef565b604082019050919050565b6000611f2b602a836123bc565b9150611f368261283e565b604082019050919050565b6000611f4e6029836123bc565b9150611f598261288d565b604082019050919050565b6000611f716022836123bc565b9150611f7c826128dc565b604082019050919050565b6000611f946020836123bc565b9150611f9f8261292b565b602082019050919050565b6000611fb7602c836123bc565b9150611fc282612954565b604082019050919050565b6000611fda602f836123bc565b9150611fe5826129a3565b604082019050919050565b6000611ffd6021836123bc565b9150612008826129f2565b604082019050919050565b60006120206031836123bc565b915061202b82612a41565b604082019050919050565b61203f816124de565b82525050565b60006120518285611df8565b915061205d8284611df8565b91508190509392505050565b600060208201905061207e6000830184611d68565b92915050565b60006060820190506120996000830186611d68565b6120a66020830185611d59565b6120b36040830184612036565b949350505050565b60006080820190506120d06000830187611d68565b6120dd6020830186611d68565b6120ea6040830185612036565b81810360608301526120fc8184611d86565b905095945050505050565b600060208201905061211c6000830184611d77565b92915050565b6000602082019050818103600083015261213c8184611dbf565b905092915050565b6000602082019050818103600083015261215d81611e29565b9050919050565b6000602082019050818103600083015261217d81611e4c565b9050919050565b6000602082019050818103600083015261219d81611e6f565b9050919050565b600060208201905081810360008301526121bd81611e92565b9050919050565b600060208201905081810360008301526121dd81611eb5565b9050919050565b600060208201905081810360008301526121fd81611ed8565b9050919050565b6000602082019050818103600083015261221d81611efb565b9050919050565b6000602082019050818103600083015261223d81611f1e565b9050919050565b6000602082019050818103600083015261225d81611f41565b9050919050565b6000602082019050818103600083015261227d81611f64565b9050919050565b6000602082019050818103600083015261229d81611f87565b9050919050565b600060208201905081810360008301526122bd81611faa565b9050919050565b600060208201905081810360008301526122dd81611fcd565b9050919050565b600060208201905081810360008301526122fd81611ff0565b9050919050565b6000602082019050818103600083015261231d81612013565b9050919050565b60006020820190506123396000830184612036565b92915050565b600061234961235a565b90506123558282612592565b919050565b6000604051905090565b600067ffffffffffffffff82111561237f5761237e612621565b5b61238882612650565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006123e3826124de565b91506123ee836124de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612423576124226125c3565b5b828201905092915050565b6000612439826124de565b9150612444836124de565b925082821015612457576124566125c3565b5b828203905092915050565b600061246d826124be565b9050919050565b600061247f826124be565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006124f3826124fa565b9050919050565b60006125058261250c565b9050919050565b6000612517826124be565b9050919050565b82818337600083830152505050565b60005b8381101561254b578082015181840152602081019050612530565b8381111561255a576000848401525b50505050565b6000600282049050600182168061257857607f821691505b6020821081141561258c5761258b6125f2565b5b50919050565b61259b82612650565b810181811067ffffffffffffffff821117156125ba576125b9612621565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206f662045544820746f207265636569766572206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b612a9981612462565b8114612aa457600080fd5b50565b612ab081612474565b8114612abb57600080fd5b50565b612ac781612486565b8114612ad257600080fd5b50565b612ade81612492565b8114612ae957600080fd5b50565b612af5816124de565b8114612b0057600080fd5b5056fea264697066735822122015bce63849592212f70cd7efda1dd88239c575192637041649b08062ebb9f12964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x68155EC1 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F4 DUP3 PUSH2 0xB9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0xC72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5DD JUMPI POP PUSH2 0x5DC DUP2 PUSH2 0x5D7 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xC7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x635 DUP4 DUP3 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x690 PUSH1 0x6 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH2 0x69C PUSH1 0x6 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x6A6 DUP3 DUP3 PUSH2 0x109C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6C5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x899 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x992 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9FB PUSH2 0x9F4 PUSH2 0xC72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA0A PUSH2 0xC72 JUMP JUMPDEST DUP4 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1227 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA6C DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB5 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST DUP1 PUSH2 0xADF DUP5 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCED DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E DUP3 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDF7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDF DUP5 PUSH2 0x48E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xE08 JUMPI POP PUSH2 0xE07 DUP2 DUP6 PUSH2 0xB08 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE31 DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEE SWAP1 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0xF0D PUSH1 0x0 DUP3 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF5D SWAP2 SWAP1 PUSH2 0x242E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB4 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1073 DUP4 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x10B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1120 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1232 DUP5 DUP5 DUP5 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x123E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12A9 DUP5 PUSH2 0x15BA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1320 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x139D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13AE JUMPI PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x132E JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP4 DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x13DF PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CB JUMP JUMPDEST ISZERO PUSH2 0x15AD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x146D PUSH2 0xC72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14DA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x155D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154C SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x163E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1634 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16A1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16F6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x16EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1745 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x173B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1790 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1786 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1858 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186A DUP2 PUSH2 0xC06 JUMP JUMPDEST ISZERO PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18B6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH2 0x19FC DUP5 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A24 DUP5 DUP3 DUP6 PUSH2 0x251E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3B DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A50 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A65 DUP2 PUSH2 0x2ABE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7A DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACE DUP2 PUSH2 0x2AEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2F DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B6E DUP8 DUP3 DUP9 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B7F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B90 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP7 DUP3 DUP8 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE1 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C20 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C31 DUP8 DUP3 DUP9 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5A DUP8 DUP3 DUP9 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1A6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP5 DUP3 DUP6 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x24E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D80 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D91 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH2 0x1D9B DUP2 DUP6 PUSH2 0x23AB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCA DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1DD4 DUP2 DUP6 PUSH2 0x23BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1DED DUP2 PUSH2 0x2650 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x1E0D DUP2 DUP6 PUSH2 0x23CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E36 PUSH1 0x32 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP3 PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x25 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7C PUSH1 0x1C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9F PUSH1 0x24 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAA DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC2 PUSH1 0x19 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F08 PUSH1 0x38 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F13 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2B PUSH1 0x2A DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F36 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x29 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F71 PUSH1 0x22 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7C DUP3 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH1 0x2C DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC2 DUP3 PUSH2 0x2954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x2F DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFD PUSH1 0x21 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x2008 DUP3 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 PUSH1 0x31 DUP4 PUSH2 0x23BC JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP3 PUSH2 0x2A41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x20B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20D0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x20EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 DUP5 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x211C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x213C DUP2 DUP5 PUSH2 0x1DBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215D DUP2 PUSH2 0x1E29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x217D DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21BD DUP2 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DD DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x223D DUP2 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x225D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227D DUP2 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22BD DUP2 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DD DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2339 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2349 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP PUSH2 0x2355 DUP3 DUP3 PUSH2 0x2592 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x237F JUMPI PUSH2 0x237E PUSH2 0x2621 JUMP JUMPDEST JUMPDEST PUSH2 0x2388 DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x23EE DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2439 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP4 PUSH2 0x24DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x25C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x24FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x250C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2517 DUP3 PUSH2 0x24BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x254B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2530 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2578 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x25F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259B DUP3 PUSH2 0x2650 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x2621 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2462 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AB0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AC7 DUP2 PUSH2 0x2486 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ADE DUP2 PUSH2 0x2492 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF5 DUP2 PUSH2 0x24DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xBC 0xE6 CODESIZE 0x49 MSIZE 0x22 SLT 0xF7 0xC 0xD7 0xEF 0xDA SAR 0xD8 DUP3 CODECOPY 0xC5 PUSH22 0x192637041649B08062EBB9F12964736F6C6343000804 STOP CALLER ","sourceMap":"200:743:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:344:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2865:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4498:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4036:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5375:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:166:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5797:179:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2490:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:338:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2150:283:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3027:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4860:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6042:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3195:451;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5107:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1747:344;1889:4;1943:25;1928:40;;;:11;:40;;;;:104;;;;1999:33;1984:48;;;:11;:48;;;;1928:104;:156;;;;2048:36;2072:11;2048:23;:36::i;:::-;1928:156;1909:175;;1747:344;;;:::o;2865:98::-;2919:13;2951:5;2944:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2865:98;:::o;4498:295::-;4614:7;4658:16;4666:7;4658;:16::i;:::-;4637:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;4762:15;:24;4778:7;4762:24;;;;;;;;;;;;;;;;;;;;;4755:31;;4498:295;;;:::o;4036:401::-;4116:13;4132:23;4147:7;4132:14;:23::i;:::-;4116:39;;4179:5;4173:11;;:2;:11;;;;4165:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4270:5;4254:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4279:37;4296:5;4303:12;:10;:12::i;:::-;4279:16;:37::i;:::-;4254:62;4233:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;4409:21;4418:2;4422:7;4409:8;:21::i;:::-;4036:401;;;:::o;5375:356::-;5577:33;5596:4;5602:7;5577:18;:33::i;:::-;5556:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;5696:28;5706:4;5712:2;5716:7;5696:9;:28::i;:::-;5375:356;;;:::o;431:166:14:-;478:15;496:25;:15;:23;:25::i;:::-;478:43;;531:27;:15;:25;:27::i;:::-;568:22;578:2;582:7;568:9;:22::i;:::-;431:166;;:::o;5797:179:15:-;5930:39;5947:4;5953:2;5957:7;5930:39;;;;;;;;;;;;:16;:39::i;:::-;5797:179;;;:::o;2490:313::-;2602:7;2625:13;2641:7;:16;2649:7;2641:16;;;;;;;;;;;;;;;;;;;;;2625:32;;2705:1;2688:19;;:5;:19;;;;2667:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2791:5;2784:12;;;2490:313;;;:::o;603:338:14:-;768:1;751:19;;:5;:19;;;747:188;;794:5;786:27;;;814:4;820:2;824:6;786:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:188;;;870:2;:7;;:15;878:6;870:15;;;;;;;;;;;;;;;;;;;;;;;862:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;747:188;603:338;;;;:::o;2150:283:15:-;2262:7;2323:1;2306:19;;:5;:19;;;;2285:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2410:9;:16;2420:5;2410:16;;;;;;;;;;;;;;;;2403:23;;2150:283;;;:::o;3027:102::-;3083:13;3115:7;3108:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3027:102;:::o;4860:181::-;4982:52;5001:12;:10;:12::i;:::-;5015:8;5025;4982:18;:52::i;:::-;4860:181;;:::o;6042:354::-;6224:41;6243:12;:10;:12::i;:::-;6257:7;6224:18;:41::i;:::-;6203:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;6350:39;6364:4;6370:2;6374:7;6383:5;6350:13;:39::i;:::-;6042:354;;;;:::o;3195:451::-;3308:13;3358:16;3366:7;3358;:16::i;:::-;3337:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;3458:21;3482:10;:8;:10::i;:::-;3458:34;;3545:1;3527:7;3521:21;:25;:118;;;;;;;;;;;;;;;;;3589:7;3598:18;:7;:16;:18::i;:::-;3572:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3521:118;3502:137;;;3195:451;;;:::o;5107:206::-;5244:4;5271:18;:25;5290:5;5271:25;;;;;;;;;;;;;;;:35;5297:8;5271:35;;;;;;;;;;;;;;;;;;;;;;;;;5264:42;;5107:206;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7902:125:15:-;7967:4;8018:1;7990:30;;:7;:16;7998:7;7990:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7983:37;;7902:125;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12039:171:15:-;12140:2;12113:15;:24;12129:7;12113:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12195:7;12191:2;12157:46;;12166:23;12181:7;12166:14;:23::i;:::-;12157:46;;;;;;;;;;;;12039:171;;:::o;8185:438::-;8310:4;8351:16;8359:7;8351;:16::i;:::-;8330:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;8447:13;8463:23;8478:7;8463:14;:23::i;:::-;8447:39;;8515:5;8504:16;;:7;:16;;;:63;;;;8560:7;8536:31;;:20;8548:7;8536:11;:20::i;:::-;:31;;;8504:63;:111;;;;8583:32;8600:5;8607:7;8583:16;:32::i;:::-;8504:111;8496:120;;;8185:438;;;;:::o;11289:639::-;11456:4;11429:31;;:23;11444:7;11429:14;:23::i;:::-;:31;;;11408:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;11555:1;11541:16;;:2;:16;;;;11533:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11609:39;11630:4;11636:2;11640:7;11609:20;:39::i;:::-;11710:29;11727:1;11731:7;11710:8;:29::i;:::-;11769:1;11750:9;:15;11760:4;11750:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;11797:1;11780:9;:13;11790:2;11780:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;11827:2;11808:7;:16;11816:7;11808:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;11864:7;11860:2;11845:27;;11854:4;11845:27;;;;;;;;;;;;11883:38;11903:4;11909:2;11913:7;11883:19;:38::i;:::-;11289:639;;;:::o;827:112:6:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8953:108:15:-;9028:26;9038:2;9042:7;9028:26;;;;;;;;;;;;:9;:26::i;:::-;8953:108;;:::o;12345:307::-;12495:8;12486:17;;:5;:17;;;;12478:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12581:8;12543:18;:25;12562:5;12543:25;;;;;;;;;;;;;;;:35;12569:8;12543:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12626:8;12604:41;;12619:5;12604:41;;;12636:8;12604:41;;;;;;:::i;:::-;;;;;;;;12345:307;;;:::o;7258:341::-;7409:28;7419:4;7425:2;7429:7;7409:9;:28::i;:::-;7468:48;7491:4;7497:2;7501:7;7510:5;7468:22;:48::i;:::-;7447:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;7258:341;;;;:::o;3887:92::-;3938:13;3963:9;;;;;;;;;;;;;;3887:92;:::o;415:696:7:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;;;;;;;;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;14711:122:15:-;;;;:::o;15205:121::-;;;;:::o;9282:311::-;9407:18;9413:2;9417:7;9407:5;:18::i;:::-;9456:54;9487:1;9491:2;9495:7;9504:5;9456:22;:54::i;:::-;9435:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;9282:311;;;:::o;13205:950::-;13355:4;13375:15;:2;:13;;;:15::i;:::-;13371:778;;;13442:2;13426:36;;;13484:12;:10;:12::i;:::-;13518:4;13544:7;13573:5;13426:170;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13406:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13792:1;13775:6;:13;:18;13771:312;;;13817:106;;;;;;;;;;:::i;:::-;;;;;;;;13771:312;14035:6;14029:13;14020:6;14016:2;14012:15;14005:38;13406:691;13668:41;;;13658:51;;;:6;:51;;;;13651:58;;;;;13371:778;14134:4;14127:11;;13205:950;;;;;;;:::o;9889:890:10:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;;;;;;;;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;;;;;;;;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;;;;;;;;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;;;;;;;;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;;;;;;;;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;;;;;;;;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;9915:427:15:-;10008:1;9994:16;;:2;:16;;;;9986:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;10066:16;10074:7;10066;:16::i;:::-;10065:17;10057:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;10126:45;10155:1;10159:2;10163:7;10126:20;:45::i;:::-;10199:1;10182:9;:13;10192:2;10182:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10229:2;10210:7;:16;10218:7;10210:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10272:7;10268:2;10247:33;;10264:1;10247:33;;;;;;;;;;;;10291:44;10319:1;10323:2;10327:7;10291:19;:44::i;:::-;9915:427;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:343:21:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:155::-;555:5;593:6;580:20;571:29;;609:41;644:5;609:41;:::i;:::-;561:95;;;;:::o;662:133::-;705:5;743:6;730:20;721:29;;759:30;783:5;759:30;:::i;:::-;711:84;;;;:::o;801:137::-;846:5;884:6;871:20;862:29;;900:32;926:5;900:32;:::i;:::-;852:86;;;;:::o;944:141::-;1000:5;1031:6;1025:13;1016:22;;1047:32;1073:5;1047:32;:::i;:::-;1006:79;;;;:::o;1104:271::-;1159:5;1208:3;1201:4;1193:6;1189:17;1185:27;1175:2;;1226:1;1223;1216:12;1175:2;1266:6;1253:20;1291:78;1365:3;1357:6;1350:4;1342:6;1338:17;1291:78;:::i;:::-;1282:87;;1165:210;;;;;:::o;1381:139::-;1427:5;1465:6;1452:20;1443:29;;1481:33;1508:5;1481:33;:::i;:::-;1433:87;;;;:::o;1526:262::-;1585:6;1634:2;1622:9;1613:7;1609:23;1605:32;1602:2;;;1650:1;1647;1640:12;1602:2;1693:1;1718:53;1763:7;1754:6;1743:9;1739:22;1718:53;:::i;:::-;1708:63;;1664:117;1592:196;;;;:::o;1794:407::-;1862:6;1870;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;1877:324;;;;;:::o;2207:714::-;2301:6;2309;2317;2325;2374:3;2362:9;2353:7;2349:23;2345:33;2342:2;;;2391:1;2388;2381:12;2342:2;2434:1;2459:53;2504:7;2495:6;2484:9;2480:22;2459:53;:::i;:::-;2449:63;;2405:117;2561:2;2587:61;2640:7;2631:6;2620:9;2616:22;2587:61;:::i;:::-;2577:71;;2532:126;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2825:2;2851:53;2896:7;2887:6;2876:9;2872:22;2851:53;:::i;:::-;2841:63;;2796:118;2332:589;;;;;;;:::o;2927:552::-;3004:6;3012;3020;3069:2;3057:9;3048:7;3044:23;3040:32;3037:2;;;3085:1;3082;3075:12;3037:2;3128:1;3153:53;3198:7;3189:6;3178:9;3174:22;3153:53;:::i;:::-;3143:63;;3099:117;3255:2;3281:53;3326:7;3317:6;3306:9;3302:22;3281:53;:::i;:::-;3271:63;;3226:118;3383:2;3409:53;3454:7;3445:6;3434:9;3430:22;3409:53;:::i;:::-;3399:63;;3354:118;3027:452;;;;;:::o;3485:809::-;3580:6;3588;3596;3604;3653:3;3641:9;3632:7;3628:23;3624:33;3621:2;;;3670:1;3667;3660:12;3621:2;3713:1;3738:53;3783:7;3774:6;3763:9;3759:22;3738:53;:::i;:::-;3728:63;;3684:117;3840:2;3866:53;3911:7;3902:6;3891:9;3887:22;3866:53;:::i;:::-;3856:63;;3811:118;3968:2;3994:53;4039:7;4030:6;4019:9;4015:22;3994:53;:::i;:::-;3984:63;;3939:118;4124:2;4113:9;4109:18;4096:32;4155:18;4147:6;4144:30;4141:2;;;4187:1;4184;4177:12;4141:2;4215:62;4269:7;4260:6;4249:9;4245:22;4215:62;:::i;:::-;4205:72;;4067:220;3611:683;;;;;;;:::o;4300:401::-;4365:6;4373;4422:2;4410:9;4401:7;4397:23;4393:32;4390:2;;;4438:1;4435;4428:12;4390:2;4481:1;4506:53;4551:7;4542:6;4531:9;4527:22;4506:53;:::i;:::-;4496:63;;4452:117;4608:2;4634:50;4676:7;4667:6;4656:9;4652:22;4634:50;:::i;:::-;4624:60;;4579:115;4380:321;;;;;:::o;4707:407::-;4775:6;4783;4832:2;4820:9;4811:7;4807:23;4803:32;4800:2;;;4848:1;4845;4838:12;4800:2;4891:1;4916:53;4961:7;4952:6;4941:9;4937:22;4916:53;:::i;:::-;4906:63;;4862:117;5018:2;5044:53;5089:7;5080:6;5069:9;5065:22;5044:53;:::i;:::-;5034:63;;4989:118;4790:324;;;;;:::o;5120:260::-;5178:6;5227:2;5215:9;5206:7;5202:23;5198:32;5195:2;;;5243:1;5240;5233:12;5195:2;5286:1;5311:52;5355:7;5346:6;5335:9;5331:22;5311:52;:::i;:::-;5301:62;;5257:116;5185:195;;;;:::o;5386:282::-;5455:6;5504:2;5492:9;5483:7;5479:23;5475:32;5472:2;;;5520:1;5517;5510:12;5472:2;5563:1;5588:63;5643:7;5634:6;5623:9;5619:22;5588:63;:::i;:::-;5578:73;;5534:127;5462:206;;;;:::o;5674:262::-;5733:6;5782:2;5770:9;5761:7;5757:23;5753:32;5750:2;;;5798:1;5795;5788:12;5750:2;5841:1;5866:53;5911:7;5902:6;5891:9;5887:22;5866:53;:::i;:::-;5856:63;;5812:117;5740:196;;;;:::o;5942:147::-;6037:45;6076:5;6037:45;:::i;:::-;6032:3;6025:58;6015:74;;:::o;6095:118::-;6182:24;6200:5;6182:24;:::i;:::-;6177:3;6170:37;6160:53;;:::o;6219:109::-;6300:21;6315:5;6300:21;:::i;:::-;6295:3;6288:34;6278:50;;:::o;6334:360::-;6420:3;6448:38;6480:5;6448:38;:::i;:::-;6502:70;6565:6;6560:3;6502:70;:::i;:::-;6495:77;;6581:52;6626:6;6621:3;6614:4;6607:5;6603:16;6581:52;:::i;:::-;6658:29;6680:6;6658:29;:::i;:::-;6653:3;6649:39;6642:46;;6424:270;;;;;:::o;6700:364::-;6788:3;6816:39;6849:5;6816:39;:::i;:::-;6871:71;6935:6;6930:3;6871:71;:::i;:::-;6864:78;;6951:52;6996:6;6991:3;6984:4;6977:5;6973:16;6951:52;:::i;:::-;7028:29;7050:6;7028:29;:::i;:::-;7023:3;7019:39;7012:46;;6792:272;;;;;:::o;7070:377::-;7176:3;7204:39;7237:5;7204:39;:::i;:::-;7259:89;7341:6;7336:3;7259:89;:::i;:::-;7252:96;;7357:52;7402:6;7397:3;7390:4;7383:5;7379:16;7357:52;:::i;:::-;7434:6;7429:3;7425:16;7418:23;;7180:267;;;;;:::o;7453:366::-;7595:3;7616:67;7680:2;7675:3;7616:67;:::i;:::-;7609:74;;7692:93;7781:3;7692:93;:::i;:::-;7810:2;7805:3;7801:12;7794:19;;7599:220;;;:::o;7825:366::-;7967:3;7988:67;8052:2;8047:3;7988:67;:::i;:::-;7981:74;;8064:93;8153:3;8064:93;:::i;:::-;8182:2;8177:3;8173:12;8166:19;;7971:220;;;:::o;8197:366::-;8339:3;8360:67;8424:2;8419:3;8360:67;:::i;:::-;8353:74;;8436:93;8525:3;8436:93;:::i;:::-;8554:2;8549:3;8545:12;8538:19;;8343:220;;;:::o;8569:366::-;8711:3;8732:67;8796:2;8791:3;8732:67;:::i;:::-;8725:74;;8808:93;8897:3;8808:93;:::i;:::-;8926:2;8921:3;8917:12;8910:19;;8715:220;;;:::o;8941:366::-;9083:3;9104:67;9168:2;9163:3;9104:67;:::i;:::-;9097:74;;9180:93;9269:3;9180:93;:::i;:::-;9298:2;9293:3;9289:12;9282:19;;9087:220;;;:::o;9313:366::-;9455:3;9476:67;9540:2;9535:3;9476:67;:::i;:::-;9469:74;;9552:93;9641:3;9552:93;:::i;:::-;9670:2;9665:3;9661:12;9654:19;;9459:220;;;:::o;9685:366::-;9827:3;9848:67;9912:2;9907:3;9848:67;:::i;:::-;9841:74;;9924:93;10013:3;9924:93;:::i;:::-;10042:2;10037:3;10033:12;10026:19;;9831:220;;;:::o;10057:366::-;10199:3;10220:67;10284:2;10279:3;10220:67;:::i;:::-;10213:74;;10296:93;10385:3;10296:93;:::i;:::-;10414:2;10409:3;10405:12;10398:19;;10203:220;;;:::o;10429:366::-;10571:3;10592:67;10656:2;10651:3;10592:67;:::i;:::-;10585:74;;10668:93;10757:3;10668:93;:::i;:::-;10786:2;10781:3;10777:12;10770:19;;10575:220;;;:::o;10801:366::-;10943:3;10964:67;11028:2;11023:3;10964:67;:::i;:::-;10957:74;;11040:93;11129:3;11040:93;:::i;:::-;11158:2;11153:3;11149:12;11142:19;;10947:220;;;:::o;11173:366::-;11315:3;11336:67;11400:2;11395:3;11336:67;:::i;:::-;11329:74;;11412:93;11501:3;11412:93;:::i;:::-;11530:2;11525:3;11521:12;11514:19;;11319:220;;;:::o;11545:366::-;11687:3;11708:67;11772:2;11767:3;11708:67;:::i;:::-;11701:74;;11784:93;11873:3;11784:93;:::i;:::-;11902:2;11897:3;11893:12;11886:19;;11691:220;;;:::o;11917:366::-;12059:3;12080:67;12144:2;12139:3;12080:67;:::i;:::-;12073:74;;12156:93;12245:3;12156:93;:::i;:::-;12274:2;12269:3;12265:12;12258:19;;12063:220;;;:::o;12289:366::-;12431:3;12452:67;12516:2;12511:3;12452:67;:::i;:::-;12445:74;;12528:93;12617:3;12528:93;:::i;:::-;12646:2;12641:3;12637:12;12630:19;;12435:220;;;:::o;12661:366::-;12803:3;12824:67;12888:2;12883:3;12824:67;:::i;:::-;12817:74;;12900:93;12989:3;12900:93;:::i;:::-;13018:2;13013:3;13009:12;13002:19;;12807:220;;;:::o;13033:118::-;13120:24;13138:5;13120:24;:::i;:::-;13115:3;13108:37;13098:53;;:::o;13157:435::-;13337:3;13359:95;13450:3;13441:6;13359:95;:::i;:::-;13352:102;;13471:95;13562:3;13553:6;13471:95;:::i;:::-;13464:102;;13583:3;13576:10;;13341:251;;;;;:::o;13598:222::-;13691:4;13729:2;13718:9;13714:18;13706:26;;13742:71;13810:1;13799:9;13795:17;13786:6;13742:71;:::i;:::-;13696:124;;;;:::o;13826:458::-;13983:4;14021:2;14010:9;14006:18;13998:26;;14034:71;14102:1;14091:9;14087:17;14078:6;14034:71;:::i;:::-;14115:80;14191:2;14180:9;14176:18;14167:6;14115:80;:::i;:::-;14205:72;14273:2;14262:9;14258:18;14249:6;14205:72;:::i;:::-;13988:296;;;;;;:::o;14290:640::-;14485:4;14523:3;14512:9;14508:19;14500:27;;14537:71;14605:1;14594:9;14590:17;14581:6;14537:71;:::i;:::-;14618:72;14686:2;14675:9;14671:18;14662:6;14618:72;:::i;:::-;14700;14768:2;14757:9;14753:18;14744:6;14700:72;:::i;:::-;14819:9;14813:4;14809:20;14804:2;14793:9;14789:18;14782:48;14847:76;14918:4;14909:6;14847:76;:::i;:::-;14839:84;;14490:440;;;;;;;:::o;14936:210::-;15023:4;15061:2;15050:9;15046:18;15038:26;;15074:65;15136:1;15125:9;15121:17;15112:6;15074:65;:::i;:::-;15028:118;;;;:::o;15152:313::-;15265:4;15303:2;15292:9;15288:18;15280:26;;15352:9;15346:4;15342:20;15338:1;15327:9;15323:17;15316:47;15380:78;15453:4;15444:6;15380:78;:::i;:::-;15372:86;;15270:195;;;;:::o;15471:419::-;15637:4;15675:2;15664:9;15660:18;15652:26;;15724:9;15718:4;15714:20;15710:1;15699:9;15695:17;15688:47;15752:131;15878:4;15752:131;:::i;:::-;15744:139;;15642:248;;;:::o;15896:419::-;16062:4;16100:2;16089:9;16085:18;16077:26;;16149:9;16143:4;16139:20;16135:1;16124:9;16120:17;16113:47;16177:131;16303:4;16177:131;:::i;:::-;16169:139;;16067:248;;;:::o;16321:419::-;16487:4;16525:2;16514:9;16510:18;16502:26;;16574:9;16568:4;16564:20;16560:1;16549:9;16545:17;16538:47;16602:131;16728:4;16602:131;:::i;:::-;16594:139;;16492:248;;;:::o;16746:419::-;16912:4;16950:2;16939:9;16935:18;16927:26;;16999:9;16993:4;16989:20;16985:1;16974:9;16970:17;16963:47;17027:131;17153:4;17027:131;:::i;:::-;17019:139;;16917:248;;;:::o;17171:419::-;17337:4;17375:2;17364:9;17360:18;17352:26;;17424:9;17418:4;17414:20;17410:1;17399:9;17395:17;17388:47;17452:131;17578:4;17452:131;:::i;:::-;17444:139;;17342:248;;;:::o;17596:419::-;17762:4;17800:2;17789:9;17785:18;17777:26;;17849:9;17843:4;17839:20;17835:1;17824:9;17820:17;17813:47;17877:131;18003:4;17877:131;:::i;:::-;17869:139;;17767:248;;;:::o;18021:419::-;18187:4;18225:2;18214:9;18210:18;18202:26;;18274:9;18268:4;18264:20;18260:1;18249:9;18245:17;18238:47;18302:131;18428:4;18302:131;:::i;:::-;18294:139;;18192:248;;;:::o;18446:419::-;18612:4;18650:2;18639:9;18635:18;18627:26;;18699:9;18693:4;18689:20;18685:1;18674:9;18670:17;18663:47;18727:131;18853:4;18727:131;:::i;:::-;18719:139;;18617:248;;;:::o;18871:419::-;19037:4;19075:2;19064:9;19060:18;19052:26;;19124:9;19118:4;19114:20;19110:1;19099:9;19095:17;19088:47;19152:131;19278:4;19152:131;:::i;:::-;19144:139;;19042:248;;;:::o;19296:419::-;19462:4;19500:2;19489:9;19485:18;19477:26;;19549:9;19543:4;19539:20;19535:1;19524:9;19520:17;19513:47;19577:131;19703:4;19577:131;:::i;:::-;19569:139;;19467:248;;;:::o;19721:419::-;19887:4;19925:2;19914:9;19910:18;19902:26;;19974:9;19968:4;19964:20;19960:1;19949:9;19945:17;19938:47;20002:131;20128:4;20002:131;:::i;:::-;19994:139;;19892:248;;;:::o;20146:419::-;20312:4;20350:2;20339:9;20335:18;20327:26;;20399:9;20393:4;20389:20;20385:1;20374:9;20370:17;20363:47;20427:131;20553:4;20427:131;:::i;:::-;20419:139;;20317:248;;;:::o;20571:419::-;20737:4;20775:2;20764:9;20760:18;20752:26;;20824:9;20818:4;20814:20;20810:1;20799:9;20795:17;20788:47;20852:131;20978:4;20852:131;:::i;:::-;20844:139;;20742:248;;;:::o;20996:419::-;21162:4;21200:2;21189:9;21185:18;21177:26;;21249:9;21243:4;21239:20;21235:1;21224:9;21220:17;21213:47;21277:131;21403:4;21277:131;:::i;:::-;21269:139;;21167:248;;;:::o;21421:419::-;21587:4;21625:2;21614:9;21610:18;21602:26;;21674:9;21668:4;21664:20;21660:1;21649:9;21645:17;21638:47;21702:131;21828:4;21702:131;:::i;:::-;21694:139;;21592:248;;;:::o;21846:222::-;21939:4;21977:2;21966:9;21962:18;21954:26;;21990:71;22058:1;22047:9;22043:17;22034:6;21990:71;:::i;:::-;21944:124;;;;:::o;22074:129::-;22108:6;22135:20;;:::i;:::-;22125:30;;22164:33;22192:4;22184:6;22164:33;:::i;:::-;22115:88;;;:::o;22209:75::-;22242:6;22275:2;22269:9;22259:19;;22249:35;:::o;22290:307::-;22351:4;22441:18;22433:6;22430:30;22427:2;;;22463:18;;:::i;:::-;22427:2;22501:29;22523:6;22501:29;:::i;:::-;22493:37;;22585:4;22579;22575:15;22567:23;;22356:241;;;:::o;22603:98::-;22654:6;22688:5;22682:12;22672:22;;22661:40;;;:::o;22707:99::-;22759:6;22793:5;22787:12;22777:22;;22766:40;;;:::o;22812:168::-;22895:11;22929:6;22924:3;22917:19;22969:4;22964:3;22960:14;22945:29;;22907:73;;;;:::o;22986:169::-;23070:11;23104:6;23099:3;23092:19;23144:4;23139:3;23135:14;23120:29;;23082:73;;;;:::o;23161:148::-;23263:11;23300:3;23285:18;;23275:34;;;;:::o;23315:305::-;23355:3;23374:20;23392:1;23374:20;:::i;:::-;23369:25;;23408:20;23426:1;23408:20;:::i;:::-;23403:25;;23562:1;23494:66;23490:74;23487:1;23484:81;23481:2;;;23568:18;;:::i;:::-;23481:2;23612:1;23609;23605:9;23598:16;;23359:261;;;;:::o;23626:191::-;23666:4;23686:20;23704:1;23686:20;:::i;:::-;23681:25;;23720:20;23738:1;23720:20;:::i;:::-;23715:25;;23759:1;23756;23753:8;23750:2;;;23764:18;;:::i;:::-;23750:2;23809:1;23806;23802:9;23794:17;;23671:146;;;;:::o;23823:96::-;23860:7;23889:24;23907:5;23889:24;:::i;:::-;23878:35;;23868:51;;;:::o;23925:104::-;23970:7;23999:24;24017:5;23999:24;:::i;:::-;23988:35;;23978:51;;;:::o;24035:90::-;24069:7;24112:5;24105:13;24098:21;24087:32;;24077:48;;;:::o;24131:149::-;24167:7;24207:66;24200:5;24196:78;24185:89;;24175:105;;;:::o;24286:126::-;24323:7;24363:42;24356:5;24352:54;24341:65;;24331:81;;;:::o;24418:77::-;24455:7;24484:5;24473:16;;24463:32;;;:::o;24501:134::-;24559:9;24592:37;24623:5;24592:37;:::i;:::-;24579:50;;24569:66;;;:::o;24641:126::-;24691:9;24724:37;24755:5;24724:37;:::i;:::-;24711:50;;24701:66;;;:::o;24773:113::-;24823:9;24856:24;24874:5;24856:24;:::i;:::-;24843:37;;24833:53;;;:::o;24892:154::-;24976:6;24971:3;24966;24953:30;25038:1;25029:6;25024:3;25020:16;25013:27;24943:103;;;:::o;25052:307::-;25120:1;25130:113;25144:6;25141:1;25138:13;25130:113;;;25229:1;25224:3;25220:11;25214:18;25210:1;25205:3;25201:11;25194:39;25166:2;25163:1;25159:10;25154:15;;25130:113;;;25261:6;25258:1;25255:13;25252:2;;;25341:1;25332:6;25327:3;25323:16;25316:27;25252:2;25101:258;;;;:::o;25365:320::-;25409:6;25446:1;25440:4;25436:12;25426:22;;25493:1;25487:4;25483:12;25514:18;25504:2;;25570:4;25562:6;25558:17;25548:27;;25504:2;25632;25624:6;25621:14;25601:18;25598:38;25595:2;;;25651:18;;:::i;:::-;25595:2;25416:269;;;;:::o;25691:281::-;25774:27;25796:4;25774:27;:::i;:::-;25766:6;25762:40;25904:6;25892:10;25889:22;25868:18;25856:10;25853:34;25850:62;25847:2;;;25915:18;;:::i;:::-;25847:2;25955:10;25951:2;25944:22;25734:238;;;:::o;25978:180::-;26026:77;26023:1;26016:88;26123:4;26120:1;26113:15;26147:4;26144:1;26137:15;26164:180;26212:77;26209:1;26202:88;26309:4;26306:1;26299:15;26333:4;26330:1;26323:15;26350:180;26398:77;26395:1;26388:88;26495:4;26492:1;26485:15;26519:4;26516:1;26509:15;26536:102;26577:6;26628:2;26624:7;26619:2;26612:5;26608:14;26604:28;26594:38;;26584:54;;;:::o;26644:237::-;26784:34;26780:1;26772:6;26768:14;26761:58;26853:20;26848:2;26840:6;26836:15;26829:45;26750:131;:::o;26887:224::-;27027:34;27023:1;27015:6;27011:14;27004:58;27096:7;27091:2;27083:6;27079:15;27072:32;26993:118;:::o;27117:178::-;27257:30;27253:1;27245:6;27241:14;27234:54;27223:72;:::o;27301:223::-;27441:34;27437:1;27429:6;27425:14;27418:58;27510:6;27505:2;27497:6;27493:15;27486:31;27407:117;:::o;27530:175::-;27670:27;27666:1;27658:6;27654:14;27647:51;27636:69;:::o;27711:231::-;27851:34;27847:1;27839:6;27835:14;27828:58;27920:14;27915:2;27907:6;27903:15;27896:39;27817:125;:::o;27948:243::-;28088:34;28084:1;28076:6;28072:14;28065:58;28157:26;28152:2;28144:6;28140:15;28133:51;28054:137;:::o;28197:229::-;28337:34;28333:1;28325:6;28321:14;28314:58;28406:12;28401:2;28393:6;28389:15;28382:37;28303:123;:::o;28432:228::-;28572:34;28568:1;28560:6;28556:14;28549:58;28641:11;28636:2;28628:6;28624:15;28617:36;28538:122;:::o;28666:221::-;28806:34;28802:1;28794:6;28790:14;28783:58;28875:4;28870:2;28862:6;28858:15;28851:29;28772:115;:::o;28893:182::-;29033:34;29029:1;29021:6;29017:14;29010:58;28999:76;:::o;29081:231::-;29221:34;29217:1;29209:6;29205:14;29198:58;29290:14;29285:2;29277:6;29273:15;29266:39;29187:125;:::o;29318:234::-;29458:34;29454:1;29446:6;29442:14;29435:58;29527:17;29522:2;29514:6;29510:15;29503:42;29424:128;:::o;29558:220::-;29698:34;29694:1;29686:6;29682:14;29675:58;29767:3;29762:2;29754:6;29750:15;29743:28;29664:114;:::o;29784:236::-;29924:34;29920:1;29912:6;29908:14;29901:58;29993:19;29988:2;29980:6;29976:15;29969:44;29890:130;:::o;30026:122::-;30099:24;30117:5;30099:24;:::i;:::-;30092:5;30089:35;30079:2;;30138:1;30135;30128:12;30079:2;30069:79;:::o;30154:138::-;30235:32;30261:5;30235:32;:::i;:::-;30228:5;30225:43;30215:2;;30282:1;30279;30272:12;30215:2;30205:87;:::o;30298:116::-;30368:21;30383:5;30368:21;:::i;:::-;30361:5;30358:32;30348:2;;30404:1;30401;30394:12;30348:2;30338:76;:::o;30420:120::-;30492:23;30509:5;30492:23;:::i;:::-;30485:5;30482:34;30472:2;;30530:1;30527;30520:12;30472:2;30462:78;:::o;30546:122::-;30619:24;30637:5;30619:24;:::i;:::-;30612:5;30609:35;30599:2;;30658:1;30655;30648:12;30599:2;30589:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2213000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1646","getApproved(uint256)":"2628","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"1700","safeMint(address)":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"2095","transferFrom(address,address,uint256)":"infinite","transferTokens(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeMint(address)":"40d097c3","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferTokens(address,address,address,uint256)":"68155ec1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrypticVaultToken.sol\":\"CrypticVaultToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/CrypticVaultToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./comman/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract CrypticVaultToken is ERC721 {\\n    using Counters for Counters.Counter;\\n\\n    Counters.Counter private _tokenIdCounter;\\n\\n    constructor(string memory _name, string memory _symbol)\\n        ERC721(_name, _symbol)\\n    {}\\n\\n    function safeMint(address to) public {\\n        uint256 tokenId = _tokenIdCounter.current();\\n        _tokenIdCounter.increment();\\n        _safeMint(to, tokenId);\\n    }\\n\\n    function transferTokens(\\n        address from,\\n        address payable to,\\n        address token,\\n        uint256 amount\\n    ) public {\\n        if (token != address(0)) {\\n            IERC721(token).transferFrom(from, to, amount);\\n        } else {\\n            require(to.send(amount), \\\"Transfer of ETH to receiver failed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x37e90ec33f858484662dadb74c4e08355af1972e9d3fbcad8f4dd2c21d94c078\",\"license\":\"MIT\"},\"contracts/comman/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC165, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        address owner = _owners[tokenId];\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: owner query for nonexistent token\\\"\\n        );\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\n        );\\n\\n        string memory baseURI = _baseURI();\\n        return\\n            bytes(baseURI).length > 0\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n                : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved)\\n        public\\n        virtual\\n        override\\n    {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bool)\\n    {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(\\n            _isApprovedOrOwner(from, tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(\\n            _isApprovedOrOwner(_msgSender(), tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(\\n            _checkOnERC721Received(from, to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\\n        internal\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner ||\\n            getApproved(tokenId) == spender ||\\n            isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(\\n            ERC721.ownerOf(tokenId) == from,\\n            \\\"ERC721: transfer from incorrect owner\\\"\\n        );\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try\\n                IERC721Receiver(to).onERC721Received(\\n                    _msgSender(),\\n                    from,\\n                    tokenId,\\n                    _data\\n                )\\n            returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n                    );\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xae8de655157eb9dbaa5a38ed6383b730b49faf4c6a2f2f50660d7df2d71c0183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2642,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2644,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2648,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2652,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2656,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2662,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2543,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_tokenIdCounter","offset":0,"slot":"6","type":"t_struct(Counter)631_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)631_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":630,"contract":"contracts/CrypticVaultToken.sol:CrypticVaultToken","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/comman/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:21","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:21","statements":[{"nodeType":"YulAssignment","src":"112:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:21"},"nodeType":"YulFunctionCall","src":"137:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:21"},"nodeType":"YulFunctionCall","src":"121:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:21"},"nodeType":"YulFunctionCall","src":"196:21:21"},"nodeType":"YulExpressionStatement","src":"196:21:21"},{"nodeType":"YulVariableDeclaration","src":"226:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:21"},"nodeType":"YulFunctionCall","src":"237:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:21"},"nodeType":"YulFunctionCall","src":"293:12:21"},"nodeType":"YulExpressionStatement","src":"293:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:21"},"nodeType":"YulFunctionCall","src":"268:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:21"},"nodeType":"YulFunctionCall","src":"265:25:21"},"nodeType":"YulIf","src":"262:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:21"},"nodeType":"YulFunctionCall","src":"316:39:21"},"nodeType":"YulExpressionStatement","src":"316:39:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:21","type":""}],"src":"7:354:21"},{"body":{"nodeType":"YulBlock","src":"454:215:21","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:21"},"nodeType":"YulFunctionCall","src":"505:12:21"},"nodeType":"YulExpressionStatement","src":"505:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:21"},"nodeType":"YulFunctionCall","src":"478:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:21"},"nodeType":"YulFunctionCall","src":"474:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:21"},"nodeType":"YulFunctionCall","src":"467:35:21"},"nodeType":"YulIf","src":"464:2:21"},{"nodeType":"YulVariableDeclaration","src":"528:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:21"},"nodeType":"YulFunctionCall","src":"542:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:21","type":""}]},{"nodeType":"YulAssignment","src":"564:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:21"},"nodeType":"YulFunctionCall","src":"632:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:21"},"nodeType":"YulFunctionCall","src":"573:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:21","type":""}],"src":"381:288:21"},{"body":{"nodeType":"YulBlock","src":"789:538:21","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:21"},"nodeType":"YulFunctionCall","src":"837:12:21"},"nodeType":"YulExpressionStatement","src":"837:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:21"},"nodeType":"YulFunctionCall","src":"806:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:21"},"nodeType":"YulFunctionCall","src":"802:32:21"},"nodeType":"YulIf","src":"799:2:21"},{"nodeType":"YulBlock","src":"861:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:21"},"nodeType":"YulFunctionCall","src":"896:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:21"},"nodeType":"YulFunctionCall","src":"890:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:21"},"nodeType":"YulFunctionCall","src":"963:12:21"},"nodeType":"YulExpressionStatement","src":"963:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:21"},"nodeType":"YulFunctionCall","src":"930:30:21"},"nodeType":"YulIf","src":"927:2:21"},{"nodeType":"YulAssignment","src":"991:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:21"},"nodeType":"YulFunctionCall","src":"1043:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:21"},"nodeType":"YulFunctionCall","src":"1001:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:21"}]}]},{"nodeType":"YulBlock","src":"1095:225:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:21"},"nodeType":"YulFunctionCall","src":"1130:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:21"},"nodeType":"YulFunctionCall","src":"1124:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:21"},"nodeType":"YulFunctionCall","src":"1198:12:21"},"nodeType":"YulExpressionStatement","src":"1198:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:21"},"nodeType":"YulFunctionCall","src":"1165:30:21"},"nodeType":"YulIf","src":"1162:2:21"},{"nodeType":"YulAssignment","src":"1226:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:21"},"nodeType":"YulFunctionCall","src":"1278:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:21"},"nodeType":"YulFunctionCall","src":"1236:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:21","type":""}],"src":"675:652:21"},{"body":{"nodeType":"YulBlock","src":"1374:88:21","statements":[{"nodeType":"YulAssignment","src":"1384:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:21"},"nodeType":"YulFunctionCall","src":"1394:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:21"},"nodeType":"YulFunctionCall","src":"1423:33:21"},"nodeType":"YulExpressionStatement","src":"1423:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:21","type":""}],"src":"1333:129:21"},{"body":{"nodeType":"YulBlock","src":"1508:35:21","statements":[{"nodeType":"YulAssignment","src":"1518:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:21"},"nodeType":"YulFunctionCall","src":"1528:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:21","type":""}],"src":"1468:75:21"},{"body":{"nodeType":"YulBlock","src":"1616:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:21"},"nodeType":"YulFunctionCall","src":"1723:18:21"},"nodeType":"YulExpressionStatement","src":"1723:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:21"},"nodeType":"YulFunctionCall","src":"1690:30:21"},"nodeType":"YulIf","src":"1687:2:21"},{"nodeType":"YulAssignment","src":"1753:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:21"},"nodeType":"YulFunctionCall","src":"1761:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:21"}]},{"nodeType":"YulAssignment","src":"1827:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:21"},"nodeType":"YulFunctionCall","src":"1835:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:21","type":""}],"src":"1549:308:21"},{"body":{"nodeType":"YulBlock","src":"1912:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:21"},"nodeType":"YulFunctionCall","src":"2012:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:21"},"nodeType":"YulFunctionCall","src":"2031:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:21"},"nodeType":"YulFunctionCall","src":"2025:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:21"},"nodeType":"YulFunctionCall","src":"2005:39:21"},"nodeType":"YulExpressionStatement","src":"2005:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:21"},"nodeType":"YulFunctionCall","src":"1949:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:21","statements":[{"nodeType":"YulAssignment","src":"1965:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:21"},"nodeType":"YulFunctionCall","src":"1970:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:21","statements":[]},"src":"1941:113:21"},{"body":{"nodeType":"YulBlock","src":"2088:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:21"},"nodeType":"YulFunctionCall","src":"2134:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:21"},"nodeType":"YulFunctionCall","src":"2127:27:21"},"nodeType":"YulExpressionStatement","src":"2127:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:21"},"nodeType":"YulFunctionCall","src":"2066:13:21"},"nodeType":"YulIf","src":"2063:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:21","type":""}],"src":"1863:307:21"},{"body":{"nodeType":"YulBlock","src":"2227:269:21","statements":[{"nodeType":"YulAssignment","src":"2237:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:21"},"nodeType":"YulFunctionCall","src":"2247:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:21"},"nodeType":"YulFunctionCall","src":"2294:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:21","statements":[{"nodeType":"YulAssignment","src":"2359:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:21"},"nodeType":"YulFunctionCall","src":"2369:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:21"},"nodeType":"YulFunctionCall","src":"2318:26:21"},"nodeType":"YulIf","src":"2315:2:21"},{"body":{"nodeType":"YulBlock","src":"2448:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:21"},"nodeType":"YulFunctionCall","src":"2462:18:21"},"nodeType":"YulExpressionStatement","src":"2462:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:21"},"nodeType":"YulFunctionCall","src":"2432:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:21"},"nodeType":"YulFunctionCall","src":"2409:38:21"},"nodeType":"YulIf","src":"2406:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:21","type":""}],"src":"2176:320:21"},{"body":{"nodeType":"YulBlock","src":"2545:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:21"},"nodeType":"YulFunctionCall","src":"2585:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:21"},"nodeType":"YulFunctionCall","src":"2573:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:21"},"nodeType":"YulFunctionCall","src":"2726:18:21"},"nodeType":"YulExpressionStatement","src":"2726:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:21"},"nodeType":"YulFunctionCall","src":"2664:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:21"},"nodeType":"YulFunctionCall","src":"2700:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:21"},"nodeType":"YulFunctionCall","src":"2661:62:21"},"nodeType":"YulIf","src":"2658:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:21"},"nodeType":"YulFunctionCall","src":"2755:22:21"},"nodeType":"YulExpressionStatement","src":"2755:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:21","type":""}],"src":"2502:281:21"},{"body":{"nodeType":"YulBlock","src":"2817:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:21"},"nodeType":"YulFunctionCall","src":"2827:88:21"},"nodeType":"YulExpressionStatement","src":"2827:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:21"},"nodeType":"YulFunctionCall","src":"2924:15:21"},"nodeType":"YulExpressionStatement","src":"2924:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:21"},"nodeType":"YulFunctionCall","src":"2948:15:21"},"nodeType":"YulExpressionStatement","src":"2948:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:21"},{"body":{"nodeType":"YulBlock","src":"3003:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:21"},"nodeType":"YulFunctionCall","src":"3013:88:21"},"nodeType":"YulExpressionStatement","src":"3013:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:21"},"nodeType":"YulFunctionCall","src":"3110:15:21"},"nodeType":"YulExpressionStatement","src":"3110:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:21"},"nodeType":"YulFunctionCall","src":"3134:15:21"},"nodeType":"YulExpressionStatement","src":"3134:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:21"},{"body":{"nodeType":"YulBlock","src":"3209:54:21","statements":[{"nodeType":"YulAssignment","src":"3219:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:21"},"nodeType":"YulFunctionCall","src":"3233:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:21"},"nodeType":"YulFunctionCall","src":"3249:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:21"},"nodeType":"YulFunctionCall","src":"3229:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:21","type":""}],"src":"3161:102:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200281a3803806200281a833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61249480620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611848565b6102bc565b6040516100fb9190611bc2565b60405180910390f35b61010c61039e565b6040516101199190611bdd565b60405180910390f35b61013c6004803603810190610137919061189a565b610430565b6040516101499190611b5b565b60405180910390f35b61016c6004803603810190610167919061180c565b6104b5565b005b61018860048036038101906101839190611706565b6105cd565b005b6101a4600480360381019061019f9190611706565b610626565b005b6101c060048036038101906101bb919061189a565b610646565b6040516101cd9190611b5b565b60405180910390f35b6101f060048036038101906101eb91906116a1565b6106f8565b6040516101fd9190611d7f565b60405180910390f35b61020e6107b0565b60405161021b9190611bdd565b60405180910390f35b61023e600480360381019061023991906117d0565b610842565b005b61025a60048036038101906102559190611755565b610858565b005b6102766004803603810190610271919061189a565b6108ba565b6040516102839190611bdd565b60405180910390f35b6102a660048036038101906102a191906116ca565b610961565b6040516102b39190611bc2565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826109f5565b5b9050919050565b6060600080546103ad90611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611f73565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610a5f565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611cff565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c082610646565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611d3f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610550610acb565b73ffffffffffffffffffffffffffffffffffffffff16148061057f575061057e81610579610acb565b610961565b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590611c9f565b60405180910390fd5b6105c88383610ad3565b505050565b6105d78382610b8c565b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611d5f565b60405180910390fd5b610621838383610c6a565b505050565b61064183838360405180602001604052806000815250610858565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611cdf565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090611cbf565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107bf90611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90611f73565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b5050505050905090565b61085461084d610acb565b8383610ed1565b5050565b610869610863610acb565b83610b8c565b6108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611d5f565b60405180910390fd5b6108b48484848461103e565b50505050565b60606108c582610a5f565b610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611d1f565b60405180910390fd5b600061090e61109a565b9050600081511161092e5760405180602001604052806000815250610959565b80610938846110b1565b604051602001610949929190611b37565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b4683610646565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b9782610a5f565b610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd90611c7f565b60405180910390fd5b6000610be183610646565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c5057508373ffffffffffffffffffffffffffffffffffffffff16610c3884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c615750610c608185610961565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c8a82610646565b73ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611c1f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790611c3f565b60405180910390fd5b610d5b8383836111d5565b610d66600082610ad3565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db69190611e89565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0d9190611e33565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ecc8383836111da565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3790611c5f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110319190611bc2565b60405180910390a3505050565b611049848484610c6a565b611055848484846111df565b611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108b90611bff565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110c084611376565b01905060008167ffffffffffffffff811115611105577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111375781602001600182028036833780820191505090505b509050600082602001820190505b6001156111ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816111b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156111c5576111ca565b611145565b819350505050919050565b505050565b505050565b60006112008473ffffffffffffffffffffffffffffffffffffffff166115ad565b15611369578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611229610acb565b8786866040518563ffffffff1660e01b815260040161124b9493929190611b76565b602060405180830381600087803b15801561126557600080fd5b505af192505050801561129657506040513d601f19601f820116820180604052508101906112939190611871565b60015b611319573d80600081146112c6576040519150601f19603f3d011682016040523d82523d6000602084013e6112cb565b606091505b50600081511415611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890611bff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061136e565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106113fa577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061145d576d04ee2d6d415b85acef81000000008381611453577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106114b257662386f26fc1000083816114a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611501576305f5e10083816114f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b612710831061154c576127108381611542577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b60648310611595576064838161158b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106115a4576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115e36115de84611dbf565b611d9a565b9050828152602081018484840111156115fb57600080fd5b611606848285611f31565b509392505050565b60008135905061161d81612402565b92915050565b60008135905061163281612419565b92915050565b60008135905061164781612430565b92915050565b60008151905061165c81612430565b92915050565b600082601f83011261167357600080fd5b81356116838482602086016115d0565b91505092915050565b60008135905061169b81612447565b92915050565b6000602082840312156116b357600080fd5b60006116c18482850161160e565b91505092915050565b600080604083850312156116dd57600080fd5b60006116eb8582860161160e565b92505060206116fc8582860161160e565b9150509250929050565b60008060006060848603121561171b57600080fd5b60006117298682870161160e565b935050602061173a8682870161160e565b925050604061174b8682870161168c565b9150509250925092565b6000806000806080858703121561176b57600080fd5b60006117798782880161160e565b945050602061178a8782880161160e565b935050604061179b8782880161168c565b925050606085013567ffffffffffffffff8111156117b857600080fd5b6117c487828801611662565b91505092959194509250565b600080604083850312156117e357600080fd5b60006117f18582860161160e565b925050602061180285828601611623565b9150509250929050565b6000806040838503121561181f57600080fd5b600061182d8582860161160e565b925050602061183e8582860161168c565b9150509250929050565b60006020828403121561185a57600080fd5b600061186884828501611638565b91505092915050565b60006020828403121561188357600080fd5b60006118918482850161164d565b91505092915050565b6000602082840312156118ac57600080fd5b60006118ba8482850161168c565b91505092915050565b6118cc81611ebd565b82525050565b6118db81611ecf565b82525050565b60006118ec82611df0565b6118f68185611e06565b9350611906818560208601611f40565b61190f81612063565b840191505092915050565b600061192582611dfb565b61192f8185611e17565b935061193f818560208601611f40565b61194881612063565b840191505092915050565b600061195e82611dfb565b6119688185611e28565b9350611978818560208601611f40565b80840191505092915050565b6000611991603283611e17565b915061199c82612074565b604082019050919050565b60006119b4602583611e17565b91506119bf826120c3565b604082019050919050565b60006119d7602483611e17565b91506119e282612112565b604082019050919050565b60006119fa601983611e17565b9150611a0582612161565b602082019050919050565b6000611a1d602c83611e17565b9150611a288261218a565b604082019050919050565b6000611a40603883611e17565b9150611a4b826121d9565b604082019050919050565b6000611a63602a83611e17565b9150611a6e82612228565b604082019050919050565b6000611a86602983611e17565b9150611a9182612277565b604082019050919050565b6000611aa9602c83611e17565b9150611ab4826122c6565b604082019050919050565b6000611acc602f83611e17565b9150611ad782612315565b604082019050919050565b6000611aef602183611e17565b9150611afa82612364565b604082019050919050565b6000611b12603183611e17565b9150611b1d826123b3565b604082019050919050565b611b3181611f27565b82525050565b6000611b438285611953565b9150611b4f8284611953565b91508190509392505050565b6000602082019050611b7060008301846118c3565b92915050565b6000608082019050611b8b60008301876118c3565b611b9860208301866118c3565b611ba56040830185611b28565b8181036060830152611bb781846118e1565b905095945050505050565b6000602082019050611bd760008301846118d2565b92915050565b60006020820190508181036000830152611bf7818461191a565b905092915050565b60006020820190508181036000830152611c1881611984565b9050919050565b60006020820190508181036000830152611c38816119a7565b9050919050565b60006020820190508181036000830152611c58816119ca565b9050919050565b60006020820190508181036000830152611c78816119ed565b9050919050565b60006020820190508181036000830152611c9881611a10565b9050919050565b60006020820190508181036000830152611cb881611a33565b9050919050565b60006020820190508181036000830152611cd881611a56565b9050919050565b60006020820190508181036000830152611cf881611a79565b9050919050565b60006020820190508181036000830152611d1881611a9c565b9050919050565b60006020820190508181036000830152611d3881611abf565b9050919050565b60006020820190508181036000830152611d5881611ae2565b9050919050565b60006020820190508181036000830152611d7881611b05565b9050919050565b6000602082019050611d946000830184611b28565b92915050565b6000611da4611db5565b9050611db08282611fa5565b919050565b6000604051905090565b600067ffffffffffffffff821115611dda57611dd9612034565b5b611de382612063565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611e3e82611f27565b9150611e4983611f27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e7e57611e7d611fd6565b5b828201905092915050565b6000611e9482611f27565b9150611e9f83611f27565b925082821015611eb257611eb1611fd6565b5b828203905092915050565b6000611ec882611f07565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f5e578082015181840152602081019050611f43565b83811115611f6d576000848401525b50505050565b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e612005565b5b50919050565b611fae82612063565b810181811067ffffffffffffffff82111715611fcd57611fcc612034565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b61240b81611ebd565b811461241657600080fd5b50565b61242281611ecf565b811461242d57600080fd5b50565b61243981611edb565b811461244457600080fd5b50565b61245081611f27565b811461245b57600080fd5b5056fea2646970667358221220e419f9688c6678bfeb9c14874f491b2bbfcfee09f5dae8c5f513a96905e249de64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x281A CODESIZE SUB DUP1 PUSH3 0x281A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2494 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x9F5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x550 PUSH2 0xACB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57F JUMPI POP PUSH2 0x57E DUP2 PUSH2 0x579 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C8 DUP4 DUP4 PUSH2 0xAD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D7 DUP4 DUP3 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP4 DUP4 DUP4 PUSH2 0xC6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x641 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x858 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7BF SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EB SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x84D PUSH2 0xACB JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x869 PUSH2 0x863 PUSH2 0xACB JUMP JUMPDEST DUP4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x103E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C5 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x90E PUSH2 0x109A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x959 JUMP JUMPDEST DUP1 PUSH2 0x938 DUP5 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x949 SWAP3 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB46 DUP4 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB97 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP4 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC50 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC38 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC61 JUMPI POP PUSH2 0xC60 DUP2 DUP6 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5B DUP4 DUP4 DUP4 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0xD66 PUSH1 0x0 DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xECC DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1049 DUP5 DUP5 DUP5 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x1055 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108B SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10C0 DUP5 PUSH2 0x1376 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1105 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1137 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x11CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x11B4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15AD JUMP JUMPDEST ISZERO PUSH2 0x1369 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1229 PUSH2 0xACB JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1296 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1319 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x13FA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x145D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1453 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14B2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1501 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x154C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1542 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1595 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x158B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15A4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E3 PUSH2 0x15DE DUP5 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1606 DUP5 DUP3 DUP6 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161D DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1632 DUP2 PUSH2 0x2419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x2430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x2430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1683 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169B DUP2 PUSH2 0x2447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C1 DUP5 DUP3 DUP6 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16EB DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16FC DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x171B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1729 DUP7 DUP3 DUP8 ADD PUSH2 0x160E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x173A DUP7 DUP3 DUP8 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x174B DUP7 DUP3 DUP8 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1779 DUP8 DUP3 DUP9 ADD PUSH2 0x160E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x178A DUP8 DUP3 DUP9 ADD PUSH2 0x160E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x179B DUP8 DUP3 DUP9 ADD PUSH2 0x168C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1802 DUP6 DUP3 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183E DUP6 DUP3 DUP7 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x164D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18BA DUP5 DUP3 DUP6 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CC DUP2 PUSH2 0x1EBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC DUP3 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x18F6 DUP2 DUP6 PUSH2 0x1E06 JUMP JUMPDEST SWAP4 POP PUSH2 0x1906 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x2063 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1925 DUP3 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x192F DUP2 DUP6 PUSH2 0x1E17 JUMP JUMPDEST SWAP4 POP PUSH2 0x193F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1948 DUP2 PUSH2 0x2063 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195E DUP3 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1968 DUP2 DUP6 PUSH2 0x1E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x1978 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1991 PUSH1 0x32 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x199C DUP3 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B4 PUSH1 0x25 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BF DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D7 PUSH1 0x24 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E2 DUP3 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA PUSH1 0x19 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A05 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D PUSH1 0x2C DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP3 PUSH2 0x218A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 PUSH1 0x38 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 PUSH1 0x2A DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A86 PUSH1 0x29 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A91 DUP3 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA9 PUSH1 0x2C DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB4 DUP3 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACC PUSH1 0x2F DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD7 DUP3 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEF PUSH1 0x21 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP3 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 PUSH1 0x31 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1D DUP3 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B43 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4F DUP3 DUP5 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18C3 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18C3 JUMP JUMPDEST PUSH2 0x1BA5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B28 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 DUP5 PUSH2 0x18E1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF7 DUP2 DUP5 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C18 DUP2 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C38 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C58 DUP2 PUSH2 0x19CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1A10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB8 DUP2 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD8 DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 PUSH2 0x1A79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D18 DUP2 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D38 DUP2 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D58 DUP2 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D94 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA4 PUSH2 0x1DB5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB0 DUP3 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x2034 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE3 DUP3 PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E49 DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9F DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EB2 JUMPI PUSH2 0x1EB1 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F43 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F6D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F8B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAE DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x2034 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x240B DUP2 PUSH2 0x1EBD JUMP JUMPDEST DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2422 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x242D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2439 DUP2 PUSH2 0x1EDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2450 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP2 EQ PUSH2 0x245B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 NOT 0xF9 PUSH9 0x8C6678BFEB9C14874F 0x49 SHL 0x2B 0xBF 0xCF 0xEE MULMOD CREATE2 0xDA 0xE8 0xC5 CREATE2 SGT 0xA9 PUSH10 0x5E249DE64736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"805:14523:15:-:0;;;1567:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1641:5;1633;:13;;;;;;;;;;;;:::i;:::-;;1666:7;1656;:17;;;;;;;;;;;;:::i;:::-;;1567:113;;805:14523;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:21:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;805:14523:15:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25538:21","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:21","statements":[{"nodeType":"YulAssignment","src":"100:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:21"},"nodeType":"YulFunctionCall","src":"125:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:21"},"nodeType":"YulFunctionCall","src":"109:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:21"},"nodeType":"YulFunctionCall","src":"183:21:21"},"nodeType":"YulExpressionStatement","src":"183:21:21"},{"nodeType":"YulVariableDeclaration","src":"213:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:21"},"nodeType":"YulFunctionCall","src":"224:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:21"},"nodeType":"YulFunctionCall","src":"280:12:21"},"nodeType":"YulExpressionStatement","src":"280:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:21"},"nodeType":"YulFunctionCall","src":"255:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:21"},"nodeType":"YulFunctionCall","src":"252:25:21"},"nodeType":"YulIf","src":"249:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:21"},"nodeType":"YulFunctionCall","src":"303:41:21"},"nodeType":"YulExpressionStatement","src":"303:41:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:21","type":""}],"src":"7:343:21"},{"body":{"nodeType":"YulBlock","src":"408:87:21","statements":[{"nodeType":"YulAssignment","src":"418:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"440:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:21"},"nodeType":"YulFunctionCall","src":"427:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"418:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"456:26:21"},"nodeType":"YulFunctionCall","src":"456:33:21"},"nodeType":"YulExpressionStatement","src":"456:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"386:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"394:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"402:5:21","type":""}],"src":"356:139:21"},{"body":{"nodeType":"YulBlock","src":"550:84:21","statements":[{"nodeType":"YulAssignment","src":"560:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"582:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"569:12:21"},"nodeType":"YulFunctionCall","src":"569:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"598:23:21"},"nodeType":"YulFunctionCall","src":"598:30:21"},"nodeType":"YulExpressionStatement","src":"598:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"528:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"536:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"544:5:21","type":""}],"src":"501:133:21"},{"body":{"nodeType":"YulBlock","src":"691:86:21","statements":[{"nodeType":"YulAssignment","src":"701:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"723:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"710:12:21"},"nodeType":"YulFunctionCall","src":"710:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"765:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"739:25:21"},"nodeType":"YulFunctionCall","src":"739:32:21"},"nodeType":"YulExpressionStatement","src":"739:32:21"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"669:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"677:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"685:5:21","type":""}],"src":"640:137:21"},{"body":{"nodeType":"YulBlock","src":"845:79:21","statements":[{"nodeType":"YulAssignment","src":"855:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"870:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"864:5:21"},"nodeType":"YulFunctionCall","src":"864:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"855:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"886:25:21"},"nodeType":"YulFunctionCall","src":"886:32:21"},"nodeType":"YulExpressionStatement","src":"886:32:21"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"823:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"831:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"839:5:21","type":""}],"src":"783:141:21"},{"body":{"nodeType":"YulBlock","src":"1004:210:21","statements":[{"body":{"nodeType":"YulBlock","src":"1053:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1062:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1055:6:21"},"nodeType":"YulFunctionCall","src":"1055:12:21"},"nodeType":"YulExpressionStatement","src":"1055:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1032:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1040:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:21"},"nodeType":"YulFunctionCall","src":"1028:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1047:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1024:3:21"},"nodeType":"YulFunctionCall","src":"1024:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1017:6:21"},"nodeType":"YulFunctionCall","src":"1017:35:21"},"nodeType":"YulIf","src":"1014:2:21"},{"nodeType":"YulVariableDeclaration","src":"1078:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1105:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:21"},"nodeType":"YulFunctionCall","src":"1092:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1082:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1121:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1181:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1189:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1177:3:21"},"nodeType":"YulFunctionCall","src":"1177:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1196:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1204:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1130:46:21"},"nodeType":"YulFunctionCall","src":"1130:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1121:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"982:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"990:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"998:5:21","type":""}],"src":"943:271:21"},{"body":{"nodeType":"YulBlock","src":"1272:87:21","statements":[{"nodeType":"YulAssignment","src":"1282:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1304:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1291:12:21"},"nodeType":"YulFunctionCall","src":"1291:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1347:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1320:26:21"},"nodeType":"YulFunctionCall","src":"1320:33:21"},"nodeType":"YulExpressionStatement","src":"1320:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1250:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1258:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1266:5:21","type":""}],"src":"1220:139:21"},{"body":{"nodeType":"YulBlock","src":"1431:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"1477:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1489:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1479:6:21"},"nodeType":"YulFunctionCall","src":"1479:12:21"},"nodeType":"YulExpressionStatement","src":"1479:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1461:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1448:3:21"},"nodeType":"YulFunctionCall","src":"1448:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1473:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1444:3:21"},"nodeType":"YulFunctionCall","src":"1444:32:21"},"nodeType":"YulIf","src":"1441:2:21"},{"nodeType":"YulBlock","src":"1503:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1522:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1547:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1593:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:21"},"nodeType":"YulFunctionCall","src":"1578:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1602:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1557:20:21"},"nodeType":"YulFunctionCall","src":"1557:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1547:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1401:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1412:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1424:6:21","type":""}],"src":"1365:262:21"},{"body":{"nodeType":"YulBlock","src":"1716:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:21"},"nodeType":"YulFunctionCall","src":"1764:12:21"},"nodeType":"YulExpressionStatement","src":"1764:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1737:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1733:3:21"},"nodeType":"YulFunctionCall","src":"1733:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1758:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1729:3:21"},"nodeType":"YulFunctionCall","src":"1729:32:21"},"nodeType":"YulIf","src":"1726:2:21"},{"nodeType":"YulBlock","src":"1788:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1803:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1817:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1807:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1832:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:21"},"nodeType":"YulFunctionCall","src":"1863:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1842:20:21"},"nodeType":"YulFunctionCall","src":"1842:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1832:6:21"}]}]},{"nodeType":"YulBlock","src":"1915:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1930:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1944:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1934:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1960:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2006:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:21"},"nodeType":"YulFunctionCall","src":"1991:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2015:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1970:20:21"},"nodeType":"YulFunctionCall","src":"1970:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1960:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1678:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1689:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1701:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1709:6:21","type":""}],"src":"1633:407:21"},{"body":{"nodeType":"YulBlock","src":"2146:452:21","statements":[{"body":{"nodeType":"YulBlock","src":"2192:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2204:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2194:6:21"},"nodeType":"YulFunctionCall","src":"2194:12:21"},"nodeType":"YulExpressionStatement","src":"2194:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2167:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2163:3:21"},"nodeType":"YulFunctionCall","src":"2163:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2159:3:21"},"nodeType":"YulFunctionCall","src":"2159:32:21"},"nodeType":"YulIf","src":"2156:2:21"},{"nodeType":"YulBlock","src":"2218:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2233:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2247:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2262:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:21"},"nodeType":"YulFunctionCall","src":"2293:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2272:20:21"},"nodeType":"YulFunctionCall","src":"2272:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:21"}]}]},{"nodeType":"YulBlock","src":"2345:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2390:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2436:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:21"},"nodeType":"YulFunctionCall","src":"2421:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2445:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2400:20:21"},"nodeType":"YulFunctionCall","src":"2400:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2390:6:21"}]}]},{"nodeType":"YulBlock","src":"2473:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2488:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2502:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2492:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2518:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2553:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2564:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:21"},"nodeType":"YulFunctionCall","src":"2549:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2573:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2528:20:21"},"nodeType":"YulFunctionCall","src":"2528:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2518:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2100:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2111:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2123:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2131:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2139:6:21","type":""}],"src":"2046:552:21"},{"body":{"nodeType":"YulBlock","src":"2730:683:21","statements":[{"body":{"nodeType":"YulBlock","src":"2777:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2786:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2789:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2779:6:21"},"nodeType":"YulFunctionCall","src":"2779:12:21"},"nodeType":"YulExpressionStatement","src":"2779:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2751:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2747:3:21"},"nodeType":"YulFunctionCall","src":"2747:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2772:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2743:3:21"},"nodeType":"YulFunctionCall","src":"2743:33:21"},"nodeType":"YulIf","src":"2740:2:21"},{"nodeType":"YulBlock","src":"2803:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2822:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2847:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2893:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:21"},"nodeType":"YulFunctionCall","src":"2878:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2902:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2857:20:21"},"nodeType":"YulFunctionCall","src":"2857:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2847:6:21"}]}]},{"nodeType":"YulBlock","src":"2930:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2975:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:21"},"nodeType":"YulFunctionCall","src":"3006:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2985:20:21"},"nodeType":"YulFunctionCall","src":"2985:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2975:6:21"}]}]},{"nodeType":"YulBlock","src":"3058:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3103:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3138:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:21"},"nodeType":"YulFunctionCall","src":"3134:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3158:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3113:20:21"},"nodeType":"YulFunctionCall","src":"3113:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3103:6:21"}]}]},{"nodeType":"YulBlock","src":"3186:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3201:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:21"},"nodeType":"YulFunctionCall","src":"3228:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3215:12:21"},"nodeType":"YulFunctionCall","src":"3215:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3205:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3294:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3306:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3296:6:21"},"nodeType":"YulFunctionCall","src":"3296:12:21"},"nodeType":"YulExpressionStatement","src":"3296:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3266:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3274:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3263:2:21"},"nodeType":"YulFunctionCall","src":"3263:30:21"},"nodeType":"YulIf","src":"3260:2:21"},{"nodeType":"YulAssignment","src":"3324:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3379:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:21"},"nodeType":"YulFunctionCall","src":"3364:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3334:29:21"},"nodeType":"YulFunctionCall","src":"3334:62:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3324:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2676:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2687:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2699:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2707:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2715:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2723:6:21","type":""}],"src":"2604:809:21"},{"body":{"nodeType":"YulBlock","src":"3499:321:21","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:21"},"nodeType":"YulFunctionCall","src":"3547:12:21"},"nodeType":"YulExpressionStatement","src":"3547:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3529:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3516:3:21"},"nodeType":"YulFunctionCall","src":"3516:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3512:3:21"},"nodeType":"YulFunctionCall","src":"3512:32:21"},"nodeType":"YulIf","src":"3509:2:21"},{"nodeType":"YulBlock","src":"3571:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3600:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3590:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3615:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3650:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3661:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:21"},"nodeType":"YulFunctionCall","src":"3646:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3670:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3625:20:21"},"nodeType":"YulFunctionCall","src":"3625:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3615:6:21"}]}]},{"nodeType":"YulBlock","src":"3698:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3713:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3727:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3717:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3743:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3775:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3786:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3771:3:21"},"nodeType":"YulFunctionCall","src":"3771:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3795:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3753:17:21"},"nodeType":"YulFunctionCall","src":"3753:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3743:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3461:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3472:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3484:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3492:6:21","type":""}],"src":"3419:401:21"},{"body":{"nodeType":"YulBlock","src":"3909:324:21","statements":[{"body":{"nodeType":"YulBlock","src":"3955:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3964:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3967:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3957:6:21"},"nodeType":"YulFunctionCall","src":"3957:12:21"},"nodeType":"YulExpressionStatement","src":"3957:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:21"},"nodeType":"YulFunctionCall","src":"3926:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:21"},"nodeType":"YulFunctionCall","src":"3922:32:21"},"nodeType":"YulIf","src":"3919:2:21"},{"nodeType":"YulBlock","src":"3981:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3996:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4010:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4000:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4025:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4071:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:21"},"nodeType":"YulFunctionCall","src":"4056:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4080:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4035:20:21"},"nodeType":"YulFunctionCall","src":"4035:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4025:6:21"}]}]},{"nodeType":"YulBlock","src":"4108:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4123:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4137:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4127:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4153:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4184:3:21"},"nodeType":"YulFunctionCall","src":"4184:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4208:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4163:20:21"},"nodeType":"YulFunctionCall","src":"4163:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4153:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3871:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3882:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3894:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3902:6:21","type":""}],"src":"3826:407:21"},{"body":{"nodeType":"YulBlock","src":"4304:195:21","statements":[{"body":{"nodeType":"YulBlock","src":"4350:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4362:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:21"},"nodeType":"YulFunctionCall","src":"4352:12:21"},"nodeType":"YulExpressionStatement","src":"4352:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:21"},"nodeType":"YulFunctionCall","src":"4321:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:21"},"nodeType":"YulFunctionCall","src":"4317:32:21"},"nodeType":"YulIf","src":"4314:2:21"},{"nodeType":"YulBlock","src":"4376:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4405:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4420:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4465:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:21"},"nodeType":"YulFunctionCall","src":"4450:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4474:7:21"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4430:19:21"},"nodeType":"YulFunctionCall","src":"4430:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4420:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4274:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4285:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4297:6:21","type":""}],"src":"4239:260:21"},{"body":{"nodeType":"YulBlock","src":"4581:206:21","statements":[{"body":{"nodeType":"YulBlock","src":"4627:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:21"},"nodeType":"YulFunctionCall","src":"4629:12:21"},"nodeType":"YulExpressionStatement","src":"4629:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4602:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4598:3:21"},"nodeType":"YulFunctionCall","src":"4598:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4594:3:21"},"nodeType":"YulFunctionCall","src":"4594:32:21"},"nodeType":"YulIf","src":"4591:2:21"},{"nodeType":"YulBlock","src":"4653:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4668:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4682:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4672:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4697:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4742:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4753:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:21"},"nodeType":"YulFunctionCall","src":"4738:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4762:7:21"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"4707:30:21"},"nodeType":"YulFunctionCall","src":"4707:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4697:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4551:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4562:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4574:6:21","type":""}],"src":"4505:282:21"},{"body":{"nodeType":"YulBlock","src":"4859:196:21","statements":[{"body":{"nodeType":"YulBlock","src":"4905:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4914:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4917:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4907:6:21"},"nodeType":"YulFunctionCall","src":"4907:12:21"},"nodeType":"YulExpressionStatement","src":"4907:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4880:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4876:3:21"},"nodeType":"YulFunctionCall","src":"4876:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4872:3:21"},"nodeType":"YulFunctionCall","src":"4872:32:21"},"nodeType":"YulIf","src":"4869:2:21"},{"nodeType":"YulBlock","src":"4931:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4946:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4960:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4950:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4975:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5021:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:21"},"nodeType":"YulFunctionCall","src":"5006:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5030:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4985:20:21"},"nodeType":"YulFunctionCall","src":"4985:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4975:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4829:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4840:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4852:6:21","type":""}],"src":"4793:262:21"},{"body":{"nodeType":"YulBlock","src":"5126:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5143:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5166:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5148:17:21"},"nodeType":"YulFunctionCall","src":"5148:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5136:6:21"},"nodeType":"YulFunctionCall","src":"5136:37:21"},"nodeType":"YulExpressionStatement","src":"5136:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5114:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5121:3:21","type":""}],"src":"5061:118:21"},{"body":{"nodeType":"YulBlock","src":"5244:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5261:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5266:14:21"},"nodeType":"YulFunctionCall","src":"5266:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:21"},"nodeType":"YulFunctionCall","src":"5254:34:21"},"nodeType":"YulExpressionStatement","src":"5254:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5232:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5239:3:21","type":""}],"src":"5185:109:21"},{"body":{"nodeType":"YulBlock","src":"5390:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5400:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5446:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5414:31:21"},"nodeType":"YulFunctionCall","src":"5414:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5404:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5461:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5526:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5531:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5468:57:21"},"nodeType":"YulFunctionCall","src":"5468:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5461:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5580:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:21"},"nodeType":"YulFunctionCall","src":"5569:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5587:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5592:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5547:21:21"},"nodeType":"YulFunctionCall","src":"5547:52:21"},"nodeType":"YulExpressionStatement","src":"5547:52:21"},{"nodeType":"YulAssignment","src":"5608:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5619:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5646:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5624:21:21"},"nodeType":"YulFunctionCall","src":"5624:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:21"},"nodeType":"YulFunctionCall","src":"5615:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5608:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5371:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5378:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5386:3:21","type":""}],"src":"5300:360:21"},{"body":{"nodeType":"YulBlock","src":"5758:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5768:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5815:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5782:32:21"},"nodeType":"YulFunctionCall","src":"5782:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5772:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5830:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5896:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5901:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5837:58:21"},"nodeType":"YulFunctionCall","src":"5837:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5830:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5943:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5939:3:21"},"nodeType":"YulFunctionCall","src":"5939:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5957:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5962:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5917:21:21"},"nodeType":"YulFunctionCall","src":"5917:52:21"},"nodeType":"YulExpressionStatement","src":"5917:52:21"},{"nodeType":"YulAssignment","src":"5978:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5989:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6016:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5994:21:21"},"nodeType":"YulFunctionCall","src":"5994:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:21"},"nodeType":"YulFunctionCall","src":"5985:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5978:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5739:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5746:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5754:3:21","type":""}],"src":"5666:364:21"},{"body":{"nodeType":"YulBlock","src":"6146:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6156:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6203:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6170:32:21"},"nodeType":"YulFunctionCall","src":"6170:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6160:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6218:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6307:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6225:76:21"},"nodeType":"YulFunctionCall","src":"6225:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6349:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6356:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:21"},"nodeType":"YulFunctionCall","src":"6345:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"6363:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6368:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6323:21:21"},"nodeType":"YulFunctionCall","src":"6323:52:21"},"nodeType":"YulExpressionStatement","src":"6323:52:21"},{"nodeType":"YulAssignment","src":"6384:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6395:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6400:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:21"},"nodeType":"YulFunctionCall","src":"6391:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6384:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6127:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6134:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6142:3:21","type":""}],"src":"6036:377:21"},{"body":{"nodeType":"YulBlock","src":"6565:220:21","statements":[{"nodeType":"YulAssignment","src":"6575:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6641:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:21","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6582:58:21"},"nodeType":"YulFunctionCall","src":"6582:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6575:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6747:3:21"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"6658:88:21"},"nodeType":"YulFunctionCall","src":"6658:93:21"},"nodeType":"YulExpressionStatement","src":"6658:93:21"},{"nodeType":"YulAssignment","src":"6760:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6771:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:21"},"nodeType":"YulFunctionCall","src":"6767:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6760:3:21"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6553:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6561:3:21","type":""}],"src":"6419:366:21"},{"body":{"nodeType":"YulBlock","src":"6937:220:21","statements":[{"nodeType":"YulAssignment","src":"6947:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7013:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7018:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6954:58:21"},"nodeType":"YulFunctionCall","src":"6954:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6947:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7119:3:21"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7030:88:21"},"nodeType":"YulFunctionCall","src":"7030:93:21"},"nodeType":"YulExpressionStatement","src":"7030:93:21"},{"nodeType":"YulAssignment","src":"7132:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7143:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:21"},"nodeType":"YulFunctionCall","src":"7139:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7132:3:21"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6925:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6933:3:21","type":""}],"src":"6791:366:21"},{"body":{"nodeType":"YulBlock","src":"7309:220:21","statements":[{"nodeType":"YulAssignment","src":"7319:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7385:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7326:58:21"},"nodeType":"YulFunctionCall","src":"7326:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7319:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:21"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"7402:88:21"},"nodeType":"YulFunctionCall","src":"7402:93:21"},"nodeType":"YulExpressionStatement","src":"7402:93:21"},{"nodeType":"YulAssignment","src":"7504:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7515:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7520:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7511:3:21"},"nodeType":"YulFunctionCall","src":"7511:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7504:3:21"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7297:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:21","type":""}],"src":"7163:366:21"},{"body":{"nodeType":"YulBlock","src":"7681:220:21","statements":[{"nodeType":"YulAssignment","src":"7691:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7757:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7762:2:21","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7698:58:21"},"nodeType":"YulFunctionCall","src":"7698:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7691:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7863:3:21"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"7774:88:21"},"nodeType":"YulFunctionCall","src":"7774:93:21"},"nodeType":"YulExpressionStatement","src":"7774:93:21"},{"nodeType":"YulAssignment","src":"7876:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:21"},"nodeType":"YulFunctionCall","src":"7883:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7876:3:21"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7669:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7677:3:21","type":""}],"src":"7535:366:21"},{"body":{"nodeType":"YulBlock","src":"8053:220:21","statements":[{"nodeType":"YulAssignment","src":"8063:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8129:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8070:58:21"},"nodeType":"YulFunctionCall","src":"8070:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8063:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8235:3:21"}],"functionName":{"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulIdentifier","src":"8146:88:21"},"nodeType":"YulFunctionCall","src":"8146:93:21"},"nodeType":"YulExpressionStatement","src":"8146:93:21"},{"nodeType":"YulAssignment","src":"8248:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8259:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8264:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:21"},"nodeType":"YulFunctionCall","src":"8255:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8248:3:21"}]}]},"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8041:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8049:3:21","type":""}],"src":"7907:366:21"},{"body":{"nodeType":"YulBlock","src":"8425:220:21","statements":[{"nodeType":"YulAssignment","src":"8435:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8501:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:21","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8442:58:21"},"nodeType":"YulFunctionCall","src":"8442:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8435:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8607:3:21"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"8518:88:21"},"nodeType":"YulFunctionCall","src":"8518:93:21"},"nodeType":"YulExpressionStatement","src":"8518:93:21"},{"nodeType":"YulAssignment","src":"8620:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8631:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:21"},"nodeType":"YulFunctionCall","src":"8627:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8620:3:21"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8413:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8421:3:21","type":""}],"src":"8279:366:21"},{"body":{"nodeType":"YulBlock","src":"8797:220:21","statements":[{"nodeType":"YulAssignment","src":"8807:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8878:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8814:58:21"},"nodeType":"YulFunctionCall","src":"8814:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8979:3:21"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"8890:88:21"},"nodeType":"YulFunctionCall","src":"8890:93:21"},"nodeType":"YulExpressionStatement","src":"8890:93:21"},{"nodeType":"YulAssignment","src":"8992:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:21"},"nodeType":"YulFunctionCall","src":"8999:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8992:3:21"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8785:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8793:3:21","type":""}],"src":"8651:366:21"},{"body":{"nodeType":"YulBlock","src":"9169:220:21","statements":[{"nodeType":"YulAssignment","src":"9179:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9245:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9250:2:21","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9186:58:21"},"nodeType":"YulFunctionCall","src":"9186:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9179:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9351:3:21"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"9262:88:21"},"nodeType":"YulFunctionCall","src":"9262:93:21"},"nodeType":"YulExpressionStatement","src":"9262:93:21"},{"nodeType":"YulAssignment","src":"9364:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9380:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:21"},"nodeType":"YulFunctionCall","src":"9371:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9364:3:21"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9157:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9165:3:21","type":""}],"src":"9023:366:21"},{"body":{"nodeType":"YulBlock","src":"9541:220:21","statements":[{"nodeType":"YulAssignment","src":"9551:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9617:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9622:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9558:58:21"},"nodeType":"YulFunctionCall","src":"9558:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9551:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9723:3:21"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"9634:88:21"},"nodeType":"YulFunctionCall","src":"9634:93:21"},"nodeType":"YulExpressionStatement","src":"9634:93:21"},{"nodeType":"YulAssignment","src":"9736:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:21"},"nodeType":"YulFunctionCall","src":"9743:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9736:3:21"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9529:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9537:3:21","type":""}],"src":"9395:366:21"},{"body":{"nodeType":"YulBlock","src":"9913:220:21","statements":[{"nodeType":"YulAssignment","src":"9923:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9989:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9994:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9930:58:21"},"nodeType":"YulFunctionCall","src":"9930:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9923:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10095:3:21"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"10006:88:21"},"nodeType":"YulFunctionCall","src":"10006:93:21"},"nodeType":"YulExpressionStatement","src":"10006:93:21"},{"nodeType":"YulAssignment","src":"10108:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10119:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10124:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10115:3:21"},"nodeType":"YulFunctionCall","src":"10115:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10108:3:21"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9901:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9909:3:21","type":""}],"src":"9767:366:21"},{"body":{"nodeType":"YulBlock","src":"10285:220:21","statements":[{"nodeType":"YulAssignment","src":"10295:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10361:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10366:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10302:58:21"},"nodeType":"YulFunctionCall","src":"10302:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10295:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10467:3:21"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10378:88:21"},"nodeType":"YulFunctionCall","src":"10378:93:21"},"nodeType":"YulExpressionStatement","src":"10378:93:21"},{"nodeType":"YulAssignment","src":"10480:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10491:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10496:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10487:3:21"},"nodeType":"YulFunctionCall","src":"10487:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10480:3:21"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10273:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10281:3:21","type":""}],"src":"10139:366:21"},{"body":{"nodeType":"YulBlock","src":"10657:220:21","statements":[{"nodeType":"YulAssignment","src":"10667:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10733:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10738:2:21","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10674:58:21"},"nodeType":"YulFunctionCall","src":"10674:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10667:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10839:3:21"}],"functionName":{"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulIdentifier","src":"10750:88:21"},"nodeType":"YulFunctionCall","src":"10750:93:21"},"nodeType":"YulExpressionStatement","src":"10750:93:21"},{"nodeType":"YulAssignment","src":"10852:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10863:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10868:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10859:3:21"},"nodeType":"YulFunctionCall","src":"10859:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10852:3:21"}]}]},"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10645:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10653:3:21","type":""}],"src":"10511:366:21"},{"body":{"nodeType":"YulBlock","src":"10948:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10965:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10988:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10970:17:21"},"nodeType":"YulFunctionCall","src":"10970:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10958:6:21"},"nodeType":"YulFunctionCall","src":"10958:37:21"},"nodeType":"YulExpressionStatement","src":"10958:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10936:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10943:3:21","type":""}],"src":"10883:118:21"},{"body":{"nodeType":"YulBlock","src":"11191:251:21","statements":[{"nodeType":"YulAssignment","src":"11202:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11291:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11300:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11209:81:21"},"nodeType":"YulFunctionCall","src":"11209:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11202:3:21"}]},{"nodeType":"YulAssignment","src":"11314:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11403:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11412:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11321:81:21"},"nodeType":"YulFunctionCall","src":"11321:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11314:3:21"}]},{"nodeType":"YulAssignment","src":"11426:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"11433:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11426:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11162:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11168:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11176:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11187:3:21","type":""}],"src":"11007:435:21"},{"body":{"nodeType":"YulBlock","src":"11546:124:21","statements":[{"nodeType":"YulAssignment","src":"11556:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11568:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11579:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11564:3:21"},"nodeType":"YulFunctionCall","src":"11564:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11556:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11636:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11649:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11660:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11645:3:21"},"nodeType":"YulFunctionCall","src":"11645:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11592:43:21"},"nodeType":"YulFunctionCall","src":"11592:71:21"},"nodeType":"YulExpressionStatement","src":"11592:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11518:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11530:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11541:4:21","type":""}],"src":"11448:222:21"},{"body":{"nodeType":"YulBlock","src":"11876:440:21","statements":[{"nodeType":"YulAssignment","src":"11886:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11898:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11909:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11894:3:21"},"nodeType":"YulFunctionCall","src":"11894:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11886:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11967:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11980:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11991:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11976:3:21"},"nodeType":"YulFunctionCall","src":"11976:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11923:43:21"},"nodeType":"YulFunctionCall","src":"11923:71:21"},"nodeType":"YulExpressionStatement","src":"11923:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12048:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12061:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12072:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12057:3:21"},"nodeType":"YulFunctionCall","src":"12057:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12004:43:21"},"nodeType":"YulFunctionCall","src":"12004:72:21"},"nodeType":"YulExpressionStatement","src":"12004:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12130:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12143:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12154:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12139:3:21"},"nodeType":"YulFunctionCall","src":"12139:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12086:43:21"},"nodeType":"YulFunctionCall","src":"12086:72:21"},"nodeType":"YulExpressionStatement","src":"12086:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12179:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12190:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:21"},"nodeType":"YulFunctionCall","src":"12175:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12199:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12205:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12195:3:21"},"nodeType":"YulFunctionCall","src":"12195:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:21"},"nodeType":"YulFunctionCall","src":"12168:48:21"},"nodeType":"YulExpressionStatement","src":"12168:48:21"},{"nodeType":"YulAssignment","src":"12225:84:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12295:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"12304:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12233:61:21"},"nodeType":"YulFunctionCall","src":"12233:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12225:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11824:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11836:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11844:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11852:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11860:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11871:4:21","type":""}],"src":"11676:640:21"},{"body":{"nodeType":"YulBlock","src":"12414:118:21","statements":[{"nodeType":"YulAssignment","src":"12424:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12436:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12447:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12432:3:21"},"nodeType":"YulFunctionCall","src":"12432:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12424:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12498:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12511:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12522:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12507:3:21"},"nodeType":"YulFunctionCall","src":"12507:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12460:37:21"},"nodeType":"YulFunctionCall","src":"12460:65:21"},"nodeType":"YulExpressionStatement","src":"12460:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12386:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12398:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12409:4:21","type":""}],"src":"12322:210:21"},{"body":{"nodeType":"YulBlock","src":"12656:195:21","statements":[{"nodeType":"YulAssignment","src":"12666:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12678:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12689:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12674:3:21"},"nodeType":"YulFunctionCall","src":"12674:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12666:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12724:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12709:3:21"},"nodeType":"YulFunctionCall","src":"12709:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12732:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12728:3:21"},"nodeType":"YulFunctionCall","src":"12728:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12702:6:21"},"nodeType":"YulFunctionCall","src":"12702:47:21"},"nodeType":"YulExpressionStatement","src":"12702:47:21"},{"nodeType":"YulAssignment","src":"12758:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12830:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"12839:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12766:63:21"},"nodeType":"YulFunctionCall","src":"12766:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12758:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12628:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12640:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12651:4:21","type":""}],"src":"12538:313:21"},{"body":{"nodeType":"YulBlock","src":"13028:248:21","statements":[{"nodeType":"YulAssignment","src":"13038:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13050:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13061:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13046:3:21"},"nodeType":"YulFunctionCall","src":"13046:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13038:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13085:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13096:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13081:3:21"},"nodeType":"YulFunctionCall","src":"13081:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13104:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13110:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13100:3:21"},"nodeType":"YulFunctionCall","src":"13100:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13074:6:21"},"nodeType":"YulFunctionCall","src":"13074:47:21"},"nodeType":"YulExpressionStatement","src":"13074:47:21"},{"nodeType":"YulAssignment","src":"13130:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13264:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13138:124:21"},"nodeType":"YulFunctionCall","src":"13138:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13130:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13008:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13023:4:21","type":""}],"src":"12857:419:21"},{"body":{"nodeType":"YulBlock","src":"13453:248:21","statements":[{"nodeType":"YulAssignment","src":"13463:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13475:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13486:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13471:3:21"},"nodeType":"YulFunctionCall","src":"13471:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13463:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13510:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13521:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13506:3:21"},"nodeType":"YulFunctionCall","src":"13506:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13535:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13525:3:21"},"nodeType":"YulFunctionCall","src":"13525:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13499:6:21"},"nodeType":"YulFunctionCall","src":"13499:47:21"},"nodeType":"YulExpressionStatement","src":"13499:47:21"},{"nodeType":"YulAssignment","src":"13555:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13689:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13563:124:21"},"nodeType":"YulFunctionCall","src":"13563:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13555:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13433:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13448:4:21","type":""}],"src":"13282:419:21"},{"body":{"nodeType":"YulBlock","src":"13878:248:21","statements":[{"nodeType":"YulAssignment","src":"13888:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13900:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13911:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13896:3:21"},"nodeType":"YulFunctionCall","src":"13896:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13888:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13946:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13931:3:21"},"nodeType":"YulFunctionCall","src":"13931:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13954:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13960:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13950:3:21"},"nodeType":"YulFunctionCall","src":"13950:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13924:6:21"},"nodeType":"YulFunctionCall","src":"13924:47:21"},"nodeType":"YulExpressionStatement","src":"13924:47:21"},{"nodeType":"YulAssignment","src":"13980:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14114:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13988:124:21"},"nodeType":"YulFunctionCall","src":"13988:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13980:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13858:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13873:4:21","type":""}],"src":"13707:419:21"},{"body":{"nodeType":"YulBlock","src":"14303:248:21","statements":[{"nodeType":"YulAssignment","src":"14313:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14325:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14336:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14321:3:21"},"nodeType":"YulFunctionCall","src":"14321:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14313:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14360:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14371:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14356:3:21"},"nodeType":"YulFunctionCall","src":"14356:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14379:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14385:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14375:3:21"},"nodeType":"YulFunctionCall","src":"14375:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14349:6:21"},"nodeType":"YulFunctionCall","src":"14349:47:21"},"nodeType":"YulExpressionStatement","src":"14349:47:21"},{"nodeType":"YulAssignment","src":"14405:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14539:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14413:124:21"},"nodeType":"YulFunctionCall","src":"14413:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14405:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14283:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14298:4:21","type":""}],"src":"14132:419:21"},{"body":{"nodeType":"YulBlock","src":"14728:248:21","statements":[{"nodeType":"YulAssignment","src":"14738:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14750:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14761:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14746:3:21"},"nodeType":"YulFunctionCall","src":"14746:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14738:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14796:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14781:3:21"},"nodeType":"YulFunctionCall","src":"14781:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14804:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14810:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14800:3:21"},"nodeType":"YulFunctionCall","src":"14800:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14774:6:21"},"nodeType":"YulFunctionCall","src":"14774:47:21"},"nodeType":"YulExpressionStatement","src":"14774:47:21"},{"nodeType":"YulAssignment","src":"14830:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14964:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14838:124:21"},"nodeType":"YulFunctionCall","src":"14838:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14830:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14708:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14723:4:21","type":""}],"src":"14557:419:21"},{"body":{"nodeType":"YulBlock","src":"15153:248:21","statements":[{"nodeType":"YulAssignment","src":"15163:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15175:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15186:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15171:3:21"},"nodeType":"YulFunctionCall","src":"15171:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15163:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15221:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15206:3:21"},"nodeType":"YulFunctionCall","src":"15206:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15229:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15235:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15225:3:21"},"nodeType":"YulFunctionCall","src":"15225:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15199:6:21"},"nodeType":"YulFunctionCall","src":"15199:47:21"},"nodeType":"YulExpressionStatement","src":"15199:47:21"},{"nodeType":"YulAssignment","src":"15255:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15389:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15263:124:21"},"nodeType":"YulFunctionCall","src":"15263:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15255:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15133:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15148:4:21","type":""}],"src":"14982:419:21"},{"body":{"nodeType":"YulBlock","src":"15578:248:21","statements":[{"nodeType":"YulAssignment","src":"15588:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15600:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15611:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15596:3:21"},"nodeType":"YulFunctionCall","src":"15596:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15588:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15635:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15646:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15631:3:21"},"nodeType":"YulFunctionCall","src":"15631:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15654:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15660:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15650:3:21"},"nodeType":"YulFunctionCall","src":"15650:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15624:6:21"},"nodeType":"YulFunctionCall","src":"15624:47:21"},"nodeType":"YulExpressionStatement","src":"15624:47:21"},{"nodeType":"YulAssignment","src":"15680:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15814:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15688:124:21"},"nodeType":"YulFunctionCall","src":"15688:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15680:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15558:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15573:4:21","type":""}],"src":"15407:419:21"},{"body":{"nodeType":"YulBlock","src":"16003:248:21","statements":[{"nodeType":"YulAssignment","src":"16013:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16025:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16036:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16021:3:21"},"nodeType":"YulFunctionCall","src":"16021:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16013:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16060:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16071:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16056:3:21"},"nodeType":"YulFunctionCall","src":"16056:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16079:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16085:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16075:3:21"},"nodeType":"YulFunctionCall","src":"16075:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16049:6:21"},"nodeType":"YulFunctionCall","src":"16049:47:21"},"nodeType":"YulExpressionStatement","src":"16049:47:21"},{"nodeType":"YulAssignment","src":"16105:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16239:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16113:124:21"},"nodeType":"YulFunctionCall","src":"16113:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16105:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15983:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15998:4:21","type":""}],"src":"15832:419:21"},{"body":{"nodeType":"YulBlock","src":"16428:248:21","statements":[{"nodeType":"YulAssignment","src":"16438:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16450:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16461:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16446:3:21"},"nodeType":"YulFunctionCall","src":"16446:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16438:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16496:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16481:3:21"},"nodeType":"YulFunctionCall","src":"16481:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16504:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16510:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16500:3:21"},"nodeType":"YulFunctionCall","src":"16500:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16474:6:21"},"nodeType":"YulFunctionCall","src":"16474:47:21"},"nodeType":"YulExpressionStatement","src":"16474:47:21"},{"nodeType":"YulAssignment","src":"16530:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16664:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16538:124:21"},"nodeType":"YulFunctionCall","src":"16538:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16530:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16408:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16423:4:21","type":""}],"src":"16257:419:21"},{"body":{"nodeType":"YulBlock","src":"16853:248:21","statements":[{"nodeType":"YulAssignment","src":"16863:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16886:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16871:3:21"},"nodeType":"YulFunctionCall","src":"16871:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16863:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16910:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16921:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16906:3:21"},"nodeType":"YulFunctionCall","src":"16906:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16929:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16935:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16925:3:21"},"nodeType":"YulFunctionCall","src":"16925:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16899:6:21"},"nodeType":"YulFunctionCall","src":"16899:47:21"},"nodeType":"YulExpressionStatement","src":"16899:47:21"},{"nodeType":"YulAssignment","src":"16955:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17089:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16963:124:21"},"nodeType":"YulFunctionCall","src":"16963:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16955:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16833:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16848:4:21","type":""}],"src":"16682:419:21"},{"body":{"nodeType":"YulBlock","src":"17278:248:21","statements":[{"nodeType":"YulAssignment","src":"17288:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17300:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17311:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17296:3:21"},"nodeType":"YulFunctionCall","src":"17296:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17288:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17335:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17346:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17331:3:21"},"nodeType":"YulFunctionCall","src":"17331:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17354:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17360:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17350:3:21"},"nodeType":"YulFunctionCall","src":"17350:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17324:6:21"},"nodeType":"YulFunctionCall","src":"17324:47:21"},"nodeType":"YulExpressionStatement","src":"17324:47:21"},{"nodeType":"YulAssignment","src":"17380:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17514:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17388:124:21"},"nodeType":"YulFunctionCall","src":"17388:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17380:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17258:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17273:4:21","type":""}],"src":"17107:419:21"},{"body":{"nodeType":"YulBlock","src":"17703:248:21","statements":[{"nodeType":"YulAssignment","src":"17713:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17721:3:21"},"nodeType":"YulFunctionCall","src":"17721:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17713:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17760:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17771:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17756:3:21"},"nodeType":"YulFunctionCall","src":"17756:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17779:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17785:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17775:3:21"},"nodeType":"YulFunctionCall","src":"17775:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17749:6:21"},"nodeType":"YulFunctionCall","src":"17749:47:21"},"nodeType":"YulExpressionStatement","src":"17749:47:21"},{"nodeType":"YulAssignment","src":"17805:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17939:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17813:124:21"},"nodeType":"YulFunctionCall","src":"17813:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17805:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17683:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17698:4:21","type":""}],"src":"17532:419:21"},{"body":{"nodeType":"YulBlock","src":"18055:124:21","statements":[{"nodeType":"YulAssignment","src":"18065:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18077:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18088:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18073:3:21"},"nodeType":"YulFunctionCall","src":"18073:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18065:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18145:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18158:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18169:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18154:3:21"},"nodeType":"YulFunctionCall","src":"18154:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18101:43:21"},"nodeType":"YulFunctionCall","src":"18101:71:21"},"nodeType":"YulExpressionStatement","src":"18101:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18027:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18039:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18050:4:21","type":""}],"src":"17957:222:21"},{"body":{"nodeType":"YulBlock","src":"18226:88:21","statements":[{"nodeType":"YulAssignment","src":"18236:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"18246:18:21"},"nodeType":"YulFunctionCall","src":"18246:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18236:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18295:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"18303:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"18275:19:21"},"nodeType":"YulFunctionCall","src":"18275:33:21"},"nodeType":"YulExpressionStatement","src":"18275:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"18210:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18219:6:21","type":""}],"src":"18185:129:21"},{"body":{"nodeType":"YulBlock","src":"18360:35:21","statements":[{"nodeType":"YulAssignment","src":"18370:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18386:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18380:5:21"},"nodeType":"YulFunctionCall","src":"18380:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18370:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18353:6:21","type":""}],"src":"18320:75:21"},{"body":{"nodeType":"YulBlock","src":"18467:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"18572:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18574:16:21"},"nodeType":"YulFunctionCall","src":"18574:18:21"},"nodeType":"YulExpressionStatement","src":"18574:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18544:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18552:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18541:2:21"},"nodeType":"YulFunctionCall","src":"18541:30:21"},"nodeType":"YulIf","src":"18538:2:21"},{"nodeType":"YulAssignment","src":"18604:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18634:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18612:21:21"},"nodeType":"YulFunctionCall","src":"18612:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18604:4:21"}]},{"nodeType":"YulAssignment","src":"18678:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18690:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18696:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18686:3:21"},"nodeType":"YulFunctionCall","src":"18686:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18678:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18451:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18462:4:21","type":""}],"src":"18401:307:21"},{"body":{"nodeType":"YulBlock","src":"18772:40:21","statements":[{"nodeType":"YulAssignment","src":"18783:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18799:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18793:5:21"},"nodeType":"YulFunctionCall","src":"18793:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18783:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18755:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18765:6:21","type":""}],"src":"18714:98:21"},{"body":{"nodeType":"YulBlock","src":"18877:40:21","statements":[{"nodeType":"YulAssignment","src":"18888:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18904:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18898:5:21"},"nodeType":"YulFunctionCall","src":"18898:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18888:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18860:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18870:6:21","type":""}],"src":"18818:99:21"},{"body":{"nodeType":"YulBlock","src":"19018:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19035:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19040:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19028:6:21"},"nodeType":"YulFunctionCall","src":"19028:19:21"},"nodeType":"YulExpressionStatement","src":"19028:19:21"},{"nodeType":"YulAssignment","src":"19056:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19075:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19080:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19071:3:21"},"nodeType":"YulFunctionCall","src":"19071:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19056:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18990:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"18995:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19006:11:21","type":""}],"src":"18923:168:21"},{"body":{"nodeType":"YulBlock","src":"19193:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19210:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"19215:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19203:6:21"},"nodeType":"YulFunctionCall","src":"19203:19:21"},"nodeType":"YulExpressionStatement","src":"19203:19:21"},{"nodeType":"YulAssignment","src":"19231:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19250:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19255:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19246:3:21"},"nodeType":"YulFunctionCall","src":"19246:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19231:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19165:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"19170:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19181:11:21","type":""}],"src":"19097:169:21"},{"body":{"nodeType":"YulBlock","src":"19386:34:21","statements":[{"nodeType":"YulAssignment","src":"19396:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"19411:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19396:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19358:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"19363:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19374:11:21","type":""}],"src":"19272:148:21"},{"body":{"nodeType":"YulBlock","src":"19470:261:21","statements":[{"nodeType":"YulAssignment","src":"19480:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19503:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19485:17:21"},"nodeType":"YulFunctionCall","src":"19485:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19480:1:21"}]},{"nodeType":"YulAssignment","src":"19514:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19537:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19519:17:21"},"nodeType":"YulFunctionCall","src":"19519:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19514:1:21"}]},{"body":{"nodeType":"YulBlock","src":"19677:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19679:16:21"},"nodeType":"YulFunctionCall","src":"19679:18:21"},"nodeType":"YulExpressionStatement","src":"19679:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19598:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19605:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19673:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19601:3:21"},"nodeType":"YulFunctionCall","src":"19601:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19595:2:21"},"nodeType":"YulFunctionCall","src":"19595:81:21"},"nodeType":"YulIf","src":"19592:2:21"},{"nodeType":"YulAssignment","src":"19709:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19720:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19723:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19716:3:21"},"nodeType":"YulFunctionCall","src":"19716:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19709:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19457:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"19460:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19466:3:21","type":""}],"src":"19426:305:21"},{"body":{"nodeType":"YulBlock","src":"19782:146:21","statements":[{"nodeType":"YulAssignment","src":"19792:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19815:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19797:17:21"},"nodeType":"YulFunctionCall","src":"19797:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19792:1:21"}]},{"nodeType":"YulAssignment","src":"19826:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19849:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19831:17:21"},"nodeType":"YulFunctionCall","src":"19831:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19826:1:21"}]},{"body":{"nodeType":"YulBlock","src":"19873:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19875:16:21"},"nodeType":"YulFunctionCall","src":"19875:18:21"},"nodeType":"YulExpressionStatement","src":"19875:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19867:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19870:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19864:2:21"},"nodeType":"YulFunctionCall","src":"19864:8:21"},"nodeType":"YulIf","src":"19861:2:21"},{"nodeType":"YulAssignment","src":"19905:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19917:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"19920:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19913:3:21"},"nodeType":"YulFunctionCall","src":"19913:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19905:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19768:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"19771:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19777:4:21","type":""}],"src":"19737:191:21"},{"body":{"nodeType":"YulBlock","src":"19979:51:21","statements":[{"nodeType":"YulAssignment","src":"19989:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20018:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"20000:17:21"},"nodeType":"YulFunctionCall","src":"20000:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19989:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19961:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19971:7:21","type":""}],"src":"19934:96:21"},{"body":{"nodeType":"YulBlock","src":"20078:48:21","statements":[{"nodeType":"YulAssignment","src":"20088:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20113:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20106:6:21"},"nodeType":"YulFunctionCall","src":"20106:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20099:6:21"},"nodeType":"YulFunctionCall","src":"20099:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20088:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20060:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20070:7:21","type":""}],"src":"20036:90:21"},{"body":{"nodeType":"YulBlock","src":"20176:105:21","statements":[{"nodeType":"YulAssignment","src":"20186:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20201:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20208:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20197:3:21"},"nodeType":"YulFunctionCall","src":"20197:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20186:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20158:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20168:7:21","type":""}],"src":"20132:149:21"},{"body":{"nodeType":"YulBlock","src":"20332:81:21","statements":[{"nodeType":"YulAssignment","src":"20342:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20357:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20364:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20353:3:21"},"nodeType":"YulFunctionCall","src":"20353:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20342:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20314:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20324:7:21","type":""}],"src":"20287:126:21"},{"body":{"nodeType":"YulBlock","src":"20464:32:21","statements":[{"nodeType":"YulAssignment","src":"20474:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"20485:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20474:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20446:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20456:7:21","type":""}],"src":"20419:77:21"},{"body":{"nodeType":"YulBlock","src":"20553:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20576:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"20581:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20586:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20563:12:21"},"nodeType":"YulFunctionCall","src":"20563:30:21"},"nodeType":"YulExpressionStatement","src":"20563:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20634:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20639:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20630:3:21"},"nodeType":"YulFunctionCall","src":"20630:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"20648:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20623:6:21"},"nodeType":"YulFunctionCall","src":"20623:27:21"},"nodeType":"YulExpressionStatement","src":"20623:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20535:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20540:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"20545:6:21","type":""}],"src":"20502:154:21"},{"body":{"nodeType":"YulBlock","src":"20711:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20721:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20730:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20725:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20790:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20815:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"20820:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20811:3:21"},"nodeType":"YulFunctionCall","src":"20811:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20834:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"20839:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20830:3:21"},"nodeType":"YulFunctionCall","src":"20830:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20824:5:21"},"nodeType":"YulFunctionCall","src":"20824:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20804:6:21"},"nodeType":"YulFunctionCall","src":"20804:39:21"},"nodeType":"YulExpressionStatement","src":"20804:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20751:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"20754:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20748:2:21"},"nodeType":"YulFunctionCall","src":"20748:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20762:19:21","statements":[{"nodeType":"YulAssignment","src":"20764:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20773:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"20776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20769:3:21"},"nodeType":"YulFunctionCall","src":"20769:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20764:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"20744:3:21","statements":[]},"src":"20740:113:21"},{"body":{"nodeType":"YulBlock","src":"20887:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20937:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20942:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20933:3:21"},"nodeType":"YulFunctionCall","src":"20933:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"20951:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20926:6:21"},"nodeType":"YulFunctionCall","src":"20926:27:21"},"nodeType":"YulExpressionStatement","src":"20926:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20868:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"20871:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20865:2:21"},"nodeType":"YulFunctionCall","src":"20865:13:21"},"nodeType":"YulIf","src":"20862:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20693:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20698:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"20703:6:21","type":""}],"src":"20662:307:21"},{"body":{"nodeType":"YulBlock","src":"21026:269:21","statements":[{"nodeType":"YulAssignment","src":"21036:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21050:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"21056:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21046:3:21"},"nodeType":"YulFunctionCall","src":"21046:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21036:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"21067:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21097:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"21103:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21093:3:21"},"nodeType":"YulFunctionCall","src":"21093:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"21071:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21144:51:21","statements":[{"nodeType":"YulAssignment","src":"21158:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21172:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21180:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21168:3:21"},"nodeType":"YulFunctionCall","src":"21168:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21158:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21124:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21117:6:21"},"nodeType":"YulFunctionCall","src":"21117:26:21"},"nodeType":"YulIf","src":"21114:2:21"},{"body":{"nodeType":"YulBlock","src":"21247:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21261:16:21"},"nodeType":"YulFunctionCall","src":"21261:18:21"},"nodeType":"YulExpressionStatement","src":"21261:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21211:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21234:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21242:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21231:2:21"},"nodeType":"YulFunctionCall","src":"21231:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21208:2:21"},"nodeType":"YulFunctionCall","src":"21208:38:21"},"nodeType":"YulIf","src":"21205:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21010:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21019:6:21","type":""}],"src":"20975:320:21"},{"body":{"nodeType":"YulBlock","src":"21344:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21354:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21376:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21406:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21384:21:21"},"nodeType":"YulFunctionCall","src":"21384:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21372:3:21"},"nodeType":"YulFunctionCall","src":"21372:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21358:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21523:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21525:16:21"},"nodeType":"YulFunctionCall","src":"21525:18:21"},"nodeType":"YulExpressionStatement","src":"21525:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21466:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"21478:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21463:2:21"},"nodeType":"YulFunctionCall","src":"21463:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21502:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21514:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21499:2:21"},"nodeType":"YulFunctionCall","src":"21499:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21460:2:21"},"nodeType":"YulFunctionCall","src":"21460:62:21"},"nodeType":"YulIf","src":"21457:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21561:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21565:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21554:6:21"},"nodeType":"YulFunctionCall","src":"21554:22:21"},"nodeType":"YulExpressionStatement","src":"21554:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21330:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"21338:4:21","type":""}],"src":"21301:281:21"},{"body":{"nodeType":"YulBlock","src":"21616:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21633:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21636:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21626:6:21"},"nodeType":"YulFunctionCall","src":"21626:88:21"},"nodeType":"YulExpressionStatement","src":"21626:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21730:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21733:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21723:6:21"},"nodeType":"YulFunctionCall","src":"21723:15:21"},"nodeType":"YulExpressionStatement","src":"21723:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21754:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21757:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21747:6:21"},"nodeType":"YulFunctionCall","src":"21747:15:21"},"nodeType":"YulExpressionStatement","src":"21747:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21588:180:21"},{"body":{"nodeType":"YulBlock","src":"21802:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21819:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21822:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21812:6:21"},"nodeType":"YulFunctionCall","src":"21812:88:21"},"nodeType":"YulExpressionStatement","src":"21812:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21916:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21919:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21909:6:21"},"nodeType":"YulFunctionCall","src":"21909:15:21"},"nodeType":"YulExpressionStatement","src":"21909:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21940:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21943:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21933:6:21"},"nodeType":"YulFunctionCall","src":"21933:15:21"},"nodeType":"YulExpressionStatement","src":"21933:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"21774:180:21"},{"body":{"nodeType":"YulBlock","src":"21988:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22005:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22008:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21998:6:21"},"nodeType":"YulFunctionCall","src":"21998:88:21"},"nodeType":"YulExpressionStatement","src":"21998:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22102:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22105:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22095:6:21"},"nodeType":"YulFunctionCall","src":"22095:15:21"},"nodeType":"YulExpressionStatement","src":"22095:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22126:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22129:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22119:6:21"},"nodeType":"YulFunctionCall","src":"22119:15:21"},"nodeType":"YulExpressionStatement","src":"22119:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"21960:180:21"},{"body":{"nodeType":"YulBlock","src":"22194:54:21","statements":[{"nodeType":"YulAssignment","src":"22204:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22222:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22229:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22218:3:21"},"nodeType":"YulFunctionCall","src":"22218:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22238:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22234:3:21"},"nodeType":"YulFunctionCall","src":"22234:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22214:3:21"},"nodeType":"YulFunctionCall","src":"22214:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22204:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22177:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22187:6:21","type":""}],"src":"22146:102:21"},{"body":{"nodeType":"YulBlock","src":"22360:131:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22382:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22390:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22378:3:21"},"nodeType":"YulFunctionCall","src":"22378:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"22394:34:21","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22371:6:21"},"nodeType":"YulFunctionCall","src":"22371:58:21"},"nodeType":"YulExpressionStatement","src":"22371:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22450:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22458:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22446:3:21"},"nodeType":"YulFunctionCall","src":"22446:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"22463:20:21","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22439:6:21"},"nodeType":"YulFunctionCall","src":"22439:45:21"},"nodeType":"YulExpressionStatement","src":"22439:45:21"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22352:6:21","type":""}],"src":"22254:237:21"},{"body":{"nodeType":"YulBlock","src":"22603:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22625:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22633:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22621:3:21"},"nodeType":"YulFunctionCall","src":"22621:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"22637:34:21","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22614:6:21"},"nodeType":"YulFunctionCall","src":"22614:58:21"},"nodeType":"YulExpressionStatement","src":"22614:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22693:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22689:3:21"},"nodeType":"YulFunctionCall","src":"22689:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"22706:7:21","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22682:6:21"},"nodeType":"YulFunctionCall","src":"22682:32:21"},"nodeType":"YulExpressionStatement","src":"22682:32:21"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22595:6:21","type":""}],"src":"22497:224:21"},{"body":{"nodeType":"YulBlock","src":"22833:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22855:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22851:3:21"},"nodeType":"YulFunctionCall","src":"22851:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"22867:34:21","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22844:6:21"},"nodeType":"YulFunctionCall","src":"22844:58:21"},"nodeType":"YulExpressionStatement","src":"22844:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22923:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22919:3:21"},"nodeType":"YulFunctionCall","src":"22919:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"22936:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22912:6:21"},"nodeType":"YulFunctionCall","src":"22912:31:21"},"nodeType":"YulExpressionStatement","src":"22912:31:21"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22825:6:21","type":""}],"src":"22727:223:21"},{"body":{"nodeType":"YulBlock","src":"23062:69:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23092:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23080:3:21"},"nodeType":"YulFunctionCall","src":"23080:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"23096:27:21","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23073:6:21"},"nodeType":"YulFunctionCall","src":"23073:51:21"},"nodeType":"YulExpressionStatement","src":"23073:51:21"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23054:6:21","type":""}],"src":"22956:175:21"},{"body":{"nodeType":"YulBlock","src":"23243:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23265:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23273:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23261:3:21"},"nodeType":"YulFunctionCall","src":"23261:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"23277:34:21","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23254:6:21"},"nodeType":"YulFunctionCall","src":"23254:58:21"},"nodeType":"YulExpressionStatement","src":"23254:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23333:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23341:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23329:3:21"},"nodeType":"YulFunctionCall","src":"23329:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"23346:14:21","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23322:6:21"},"nodeType":"YulFunctionCall","src":"23322:39:21"},"nodeType":"YulExpressionStatement","src":"23322:39:21"}]},"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23235:6:21","type":""}],"src":"23137:231:21"},{"body":{"nodeType":"YulBlock","src":"23480:137:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23502:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23510:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23498:3:21"},"nodeType":"YulFunctionCall","src":"23498:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"23514:34:21","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23491:6:21"},"nodeType":"YulFunctionCall","src":"23491:58:21"},"nodeType":"YulExpressionStatement","src":"23491:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23570:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23578:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23566:3:21"},"nodeType":"YulFunctionCall","src":"23566:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"23583:26:21","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23559:6:21"},"nodeType":"YulFunctionCall","src":"23559:51:21"},"nodeType":"YulExpressionStatement","src":"23559:51:21"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23472:6:21","type":""}],"src":"23374:243:21"},{"body":{"nodeType":"YulBlock","src":"23729:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23751:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23759:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23747:3:21"},"nodeType":"YulFunctionCall","src":"23747:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"23763:34:21","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23740:6:21"},"nodeType":"YulFunctionCall","src":"23740:58:21"},"nodeType":"YulExpressionStatement","src":"23740:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23819:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23827:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23815:3:21"},"nodeType":"YulFunctionCall","src":"23815:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"23832:12:21","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23808:6:21"},"nodeType":"YulFunctionCall","src":"23808:37:21"},"nodeType":"YulExpressionStatement","src":"23808:37:21"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23721:6:21","type":""}],"src":"23623:229:21"},{"body":{"nodeType":"YulBlock","src":"23964:122:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23986:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23994:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23982:3:21"},"nodeType":"YulFunctionCall","src":"23982:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"23998:34:21","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23975:6:21"},"nodeType":"YulFunctionCall","src":"23975:58:21"},"nodeType":"YulExpressionStatement","src":"23975:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24054:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24062:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24050:3:21"},"nodeType":"YulFunctionCall","src":"24050:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"24067:11:21","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24043:6:21"},"nodeType":"YulFunctionCall","src":"24043:36:21"},"nodeType":"YulExpressionStatement","src":"24043:36:21"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23956:6:21","type":""}],"src":"23858:228:21"},{"body":{"nodeType":"YulBlock","src":"24198:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24220:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24228:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24216:3:21"},"nodeType":"YulFunctionCall","src":"24216:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"24232:34:21","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24209:6:21"},"nodeType":"YulFunctionCall","src":"24209:58:21"},"nodeType":"YulExpressionStatement","src":"24209:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24288:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24296:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24284:3:21"},"nodeType":"YulFunctionCall","src":"24284:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"24301:14:21","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24277:6:21"},"nodeType":"YulFunctionCall","src":"24277:39:21"},"nodeType":"YulExpressionStatement","src":"24277:39:21"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24190:6:21","type":""}],"src":"24092:231:21"},{"body":{"nodeType":"YulBlock","src":"24435:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24457:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24465:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24453:3:21"},"nodeType":"YulFunctionCall","src":"24453:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"24469:34:21","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24446:6:21"},"nodeType":"YulFunctionCall","src":"24446:58:21"},"nodeType":"YulExpressionStatement","src":"24446:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24525:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24533:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24521:3:21"},"nodeType":"YulFunctionCall","src":"24521:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"24538:17:21","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24514:6:21"},"nodeType":"YulFunctionCall","src":"24514:42:21"},"nodeType":"YulExpressionStatement","src":"24514:42:21"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24427:6:21","type":""}],"src":"24329:234:21"},{"body":{"nodeType":"YulBlock","src":"24675:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24697:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24705:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24693:3:21"},"nodeType":"YulFunctionCall","src":"24693:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"24709:34:21","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24686:6:21"},"nodeType":"YulFunctionCall","src":"24686:58:21"},"nodeType":"YulExpressionStatement","src":"24686:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24765:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24773:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24761:3:21"},"nodeType":"YulFunctionCall","src":"24761:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"24778:3:21","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24754:6:21"},"nodeType":"YulFunctionCall","src":"24754:28:21"},"nodeType":"YulExpressionStatement","src":"24754:28:21"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24667:6:21","type":""}],"src":"24569:220:21"},{"body":{"nodeType":"YulBlock","src":"24901:130:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24923:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24931:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24919:3:21"},"nodeType":"YulFunctionCall","src":"24919:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"24935:34:21","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24912:6:21"},"nodeType":"YulFunctionCall","src":"24912:58:21"},"nodeType":"YulExpressionStatement","src":"24912:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24991:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24999:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24987:3:21"},"nodeType":"YulFunctionCall","src":"24987:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"25004:19:21","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24980:6:21"},"nodeType":"YulFunctionCall","src":"24980:44:21"},"nodeType":"YulExpressionStatement","src":"24980:44:21"}]},"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24893:6:21","type":""}],"src":"24795:236:21"},{"body":{"nodeType":"YulBlock","src":"25080:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"25137:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25146:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25149:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25139:6:21"},"nodeType":"YulFunctionCall","src":"25139:12:21"},"nodeType":"YulExpressionStatement","src":"25139:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25103:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25128:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"25110:17:21"},"nodeType":"YulFunctionCall","src":"25110:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25100:2:21"},"nodeType":"YulFunctionCall","src":"25100:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25093:6:21"},"nodeType":"YulFunctionCall","src":"25093:43:21"},"nodeType":"YulIf","src":"25090:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25073:5:21","type":""}],"src":"25037:122:21"},{"body":{"nodeType":"YulBlock","src":"25205:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"25259:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25268:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25271:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25261:6:21"},"nodeType":"YulFunctionCall","src":"25261:12:21"},"nodeType":"YulExpressionStatement","src":"25261:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25228:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25250:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"25235:14:21"},"nodeType":"YulFunctionCall","src":"25235:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25225:2:21"},"nodeType":"YulFunctionCall","src":"25225:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25218:6:21"},"nodeType":"YulFunctionCall","src":"25218:40:21"},"nodeType":"YulIf","src":"25215:2:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25198:5:21","type":""}],"src":"25165:116:21"},{"body":{"nodeType":"YulBlock","src":"25329:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"25385:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25394:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25397:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25387:6:21"},"nodeType":"YulFunctionCall","src":"25387:12:21"},"nodeType":"YulExpressionStatement","src":"25387:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25352:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25376:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"25359:16:21"},"nodeType":"YulFunctionCall","src":"25359:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25349:2:21"},"nodeType":"YulFunctionCall","src":"25349:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25342:6:21"},"nodeType":"YulFunctionCall","src":"25342:42:21"},"nodeType":"YulIf","src":"25339:2:21"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25322:5:21","type":""}],"src":"25287:120:21"},{"body":{"nodeType":"YulBlock","src":"25456:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"25513:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25522:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25525:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25515:6:21"},"nodeType":"YulFunctionCall","src":"25515:12:21"},"nodeType":"YulExpressionStatement","src":"25515:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25479:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25504:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25486:17:21"},"nodeType":"YulFunctionCall","src":"25486:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25476:2:21"},"nodeType":"YulFunctionCall","src":"25476:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25469:6:21"},"nodeType":"YulFunctionCall","src":"25469:43:21"},"nodeType":"YulIf","src":"25466:2:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25449:5:21","type":""}],"src":"25413:122:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611848565b6102bc565b6040516100fb9190611bc2565b60405180910390f35b61010c61039e565b6040516101199190611bdd565b60405180910390f35b61013c6004803603810190610137919061189a565b610430565b6040516101499190611b5b565b60405180910390f35b61016c6004803603810190610167919061180c565b6104b5565b005b61018860048036038101906101839190611706565b6105cd565b005b6101a4600480360381019061019f9190611706565b610626565b005b6101c060048036038101906101bb919061189a565b610646565b6040516101cd9190611b5b565b60405180910390f35b6101f060048036038101906101eb91906116a1565b6106f8565b6040516101fd9190611d7f565b60405180910390f35b61020e6107b0565b60405161021b9190611bdd565b60405180910390f35b61023e600480360381019061023991906117d0565b610842565b005b61025a60048036038101906102559190611755565b610858565b005b6102766004803603810190610271919061189a565b6108ba565b6040516102839190611bdd565b60405180910390f35b6102a660048036038101906102a191906116ca565b610961565b6040516102b39190611bc2565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826109f5565b5b9050919050565b6060600080546103ad90611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611f73565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610a5f565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611cff565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c082610646565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611d3f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610550610acb565b73ffffffffffffffffffffffffffffffffffffffff16148061057f575061057e81610579610acb565b610961565b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590611c9f565b60405180910390fd5b6105c88383610ad3565b505050565b6105d78382610b8c565b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611d5f565b60405180910390fd5b610621838383610c6a565b505050565b61064183838360405180602001604052806000815250610858565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611cdf565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090611cbf565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107bf90611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90611f73565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b5050505050905090565b61085461084d610acb565b8383610ed1565b5050565b610869610863610acb565b83610b8c565b6108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611d5f565b60405180910390fd5b6108b48484848461103e565b50505050565b60606108c582610a5f565b610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb90611d1f565b60405180910390fd5b600061090e61109a565b9050600081511161092e5760405180602001604052806000815250610959565b80610938846110b1565b604051602001610949929190611b37565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b4683610646565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b9782610a5f565b610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd90611c7f565b60405180910390fd5b6000610be183610646565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c5057508373ffffffffffffffffffffffffffffffffffffffff16610c3884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c615750610c608185610961565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c8a82610646565b73ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611c1f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790611c3f565b60405180910390fd5b610d5b8383836111d5565b610d66600082610ad3565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db69190611e89565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0d9190611e33565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ecc8383836111da565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3790611c5f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110319190611bc2565b60405180910390a3505050565b611049848484610c6a565b611055848484846111df565b611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108b90611bff565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110c084611376565b01905060008167ffffffffffffffff811115611105577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111375781602001600182028036833780820191505090505b509050600082602001820190505b6001156111ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816111b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156111c5576111ca565b611145565b819350505050919050565b505050565b505050565b60006112008473ffffffffffffffffffffffffffffffffffffffff166115ad565b15611369578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611229610acb565b8786866040518563ffffffff1660e01b815260040161124b9493929190611b76565b602060405180830381600087803b15801561126557600080fd5b505af192505050801561129657506040513d601f19601f820116820180604052508101906112939190611871565b60015b611319573d80600081146112c6576040519150601f19603f3d011682016040523d82523d6000602084013e6112cb565b606091505b50600081511415611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890611bff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061136e565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106113fa577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061145d576d04ee2d6d415b85acef81000000008381611453577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106114b257662386f26fc1000083816114a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611501576305f5e10083816114f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b612710831061154c576127108381611542577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b60648310611595576064838161158b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106115a4576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115e36115de84611dbf565b611d9a565b9050828152602081018484840111156115fb57600080fd5b611606848285611f31565b509392505050565b60008135905061161d81612402565b92915050565b60008135905061163281612419565b92915050565b60008135905061164781612430565b92915050565b60008151905061165c81612430565b92915050565b600082601f83011261167357600080fd5b81356116838482602086016115d0565b91505092915050565b60008135905061169b81612447565b92915050565b6000602082840312156116b357600080fd5b60006116c18482850161160e565b91505092915050565b600080604083850312156116dd57600080fd5b60006116eb8582860161160e565b92505060206116fc8582860161160e565b9150509250929050565b60008060006060848603121561171b57600080fd5b60006117298682870161160e565b935050602061173a8682870161160e565b925050604061174b8682870161168c565b9150509250925092565b6000806000806080858703121561176b57600080fd5b60006117798782880161160e565b945050602061178a8782880161160e565b935050604061179b8782880161168c565b925050606085013567ffffffffffffffff8111156117b857600080fd5b6117c487828801611662565b91505092959194509250565b600080604083850312156117e357600080fd5b60006117f18582860161160e565b925050602061180285828601611623565b9150509250929050565b6000806040838503121561181f57600080fd5b600061182d8582860161160e565b925050602061183e8582860161168c565b9150509250929050565b60006020828403121561185a57600080fd5b600061186884828501611638565b91505092915050565b60006020828403121561188357600080fd5b60006118918482850161164d565b91505092915050565b6000602082840312156118ac57600080fd5b60006118ba8482850161168c565b91505092915050565b6118cc81611ebd565b82525050565b6118db81611ecf565b82525050565b60006118ec82611df0565b6118f68185611e06565b9350611906818560208601611f40565b61190f81612063565b840191505092915050565b600061192582611dfb565b61192f8185611e17565b935061193f818560208601611f40565b61194881612063565b840191505092915050565b600061195e82611dfb565b6119688185611e28565b9350611978818560208601611f40565b80840191505092915050565b6000611991603283611e17565b915061199c82612074565b604082019050919050565b60006119b4602583611e17565b91506119bf826120c3565b604082019050919050565b60006119d7602483611e17565b91506119e282612112565b604082019050919050565b60006119fa601983611e17565b9150611a0582612161565b602082019050919050565b6000611a1d602c83611e17565b9150611a288261218a565b604082019050919050565b6000611a40603883611e17565b9150611a4b826121d9565b604082019050919050565b6000611a63602a83611e17565b9150611a6e82612228565b604082019050919050565b6000611a86602983611e17565b9150611a9182612277565b604082019050919050565b6000611aa9602c83611e17565b9150611ab4826122c6565b604082019050919050565b6000611acc602f83611e17565b9150611ad782612315565b604082019050919050565b6000611aef602183611e17565b9150611afa82612364565b604082019050919050565b6000611b12603183611e17565b9150611b1d826123b3565b604082019050919050565b611b3181611f27565b82525050565b6000611b438285611953565b9150611b4f8284611953565b91508190509392505050565b6000602082019050611b7060008301846118c3565b92915050565b6000608082019050611b8b60008301876118c3565b611b9860208301866118c3565b611ba56040830185611b28565b8181036060830152611bb781846118e1565b905095945050505050565b6000602082019050611bd760008301846118d2565b92915050565b60006020820190508181036000830152611bf7818461191a565b905092915050565b60006020820190508181036000830152611c1881611984565b9050919050565b60006020820190508181036000830152611c38816119a7565b9050919050565b60006020820190508181036000830152611c58816119ca565b9050919050565b60006020820190508181036000830152611c78816119ed565b9050919050565b60006020820190508181036000830152611c9881611a10565b9050919050565b60006020820190508181036000830152611cb881611a33565b9050919050565b60006020820190508181036000830152611cd881611a56565b9050919050565b60006020820190508181036000830152611cf881611a79565b9050919050565b60006020820190508181036000830152611d1881611a9c565b9050919050565b60006020820190508181036000830152611d3881611abf565b9050919050565b60006020820190508181036000830152611d5881611ae2565b9050919050565b60006020820190508181036000830152611d7881611b05565b9050919050565b6000602082019050611d946000830184611b28565b92915050565b6000611da4611db5565b9050611db08282611fa5565b919050565b6000604051905090565b600067ffffffffffffffff821115611dda57611dd9612034565b5b611de382612063565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611e3e82611f27565b9150611e4983611f27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e7e57611e7d611fd6565b5b828201905092915050565b6000611e9482611f27565b9150611e9f83611f27565b925082821015611eb257611eb1611fd6565b5b828203905092915050565b6000611ec882611f07565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f5e578082015181840152602081019050611f43565b83811115611f6d576000848401525b50505050565b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e612005565b5b50919050565b611fae82612063565b810181811067ffffffffffffffff82111715611fcd57611fcc612034565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b61240b81611ebd565b811461241657600080fd5b50565b61242281611ecf565b811461242d57600080fd5b50565b61243981611edb565b811461244457600080fd5b50565b61245081611f27565b811461245b57600080fd5b5056fea2646970667358221220e419f9688c6678bfeb9c14874f491b2bbfcfee09f5dae8c5f513a96905e249de64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x9F5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x550 PUSH2 0xACB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57F JUMPI POP PUSH2 0x57E DUP2 PUSH2 0x579 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C8 DUP4 DUP4 PUSH2 0xAD3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D7 DUP4 DUP3 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP4 DUP4 DUP4 PUSH2 0xC6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x641 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x858 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7BF SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EB SWAP1 PUSH2 0x1F73 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x84D PUSH2 0xACB JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x869 PUSH2 0x863 PUSH2 0xACB JUMP JUMPDEST DUP4 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x103E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C5 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x90E PUSH2 0x109A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x959 JUMP JUMPDEST DUP1 PUSH2 0x938 DUP5 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x949 SWAP3 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB46 DUP4 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB97 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP4 PUSH2 0x646 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC50 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC38 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC61 JUMPI POP PUSH2 0xC60 DUP2 DUP6 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A DUP3 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5B DUP4 DUP4 DUP4 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0xD66 PUSH1 0x0 DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xECC DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1049 DUP5 DUP5 DUP5 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x1055 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108B SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10C0 DUP5 PUSH2 0x1376 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1105 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1137 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x11CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x11B4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1200 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15AD JUMP JUMPDEST ISZERO PUSH2 0x1369 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1229 PUSH2 0xACB JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1296 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1319 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x13FA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x145D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1453 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14B2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1501 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x154C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1542 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1595 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x158B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15A4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E3 PUSH2 0x15DE DUP5 PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1606 DUP5 DUP3 DUP6 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161D DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1632 DUP2 PUSH2 0x2419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x2430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x2430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1683 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169B DUP2 PUSH2 0x2447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C1 DUP5 DUP3 DUP6 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16EB DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16FC DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x171B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1729 DUP7 DUP3 DUP8 ADD PUSH2 0x160E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x173A DUP7 DUP3 DUP8 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x174B DUP7 DUP3 DUP8 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1779 DUP8 DUP3 DUP9 ADD PUSH2 0x160E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x178A DUP8 DUP3 DUP9 ADD PUSH2 0x160E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x179B DUP8 DUP3 DUP9 ADD PUSH2 0x168C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1662 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1802 DUP6 DUP3 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183E DUP6 DUP3 DUP7 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x164D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18BA DUP5 DUP3 DUP6 ADD PUSH2 0x168C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CC DUP2 PUSH2 0x1EBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC DUP3 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x18F6 DUP2 DUP6 PUSH2 0x1E06 JUMP JUMPDEST SWAP4 POP PUSH2 0x1906 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x2063 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1925 DUP3 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x192F DUP2 DUP6 PUSH2 0x1E17 JUMP JUMPDEST SWAP4 POP PUSH2 0x193F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1948 DUP2 PUSH2 0x2063 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195E DUP3 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1968 DUP2 DUP6 PUSH2 0x1E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x1978 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1991 PUSH1 0x32 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x199C DUP3 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B4 PUSH1 0x25 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BF DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D7 PUSH1 0x24 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E2 DUP3 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA PUSH1 0x19 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A05 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D PUSH1 0x2C DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP3 PUSH2 0x218A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 PUSH1 0x38 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 PUSH1 0x2A DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A86 PUSH1 0x29 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A91 DUP3 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA9 PUSH1 0x2C DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB4 DUP3 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACC PUSH1 0x2F DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD7 DUP3 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEF PUSH1 0x21 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP3 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 PUSH1 0x31 DUP4 PUSH2 0x1E17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1D DUP3 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B43 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4F DUP3 DUP5 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18C3 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18C3 JUMP JUMPDEST PUSH2 0x1BA5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B28 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 DUP5 PUSH2 0x18E1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF7 DUP2 DUP5 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C18 DUP2 PUSH2 0x1984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C38 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C58 DUP2 PUSH2 0x19CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1A10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB8 DUP2 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD8 DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 PUSH2 0x1A79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D18 DUP2 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D38 DUP2 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D58 DUP2 PUSH2 0x1AE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D94 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA4 PUSH2 0x1DB5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB0 DUP3 DUP3 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x2034 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE3 DUP3 PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E49 DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9F DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EB2 JUMPI PUSH2 0x1EB1 PUSH2 0x1FD6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F43 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F6D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F8B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAE DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x2034 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x240B DUP2 PUSH2 0x1EBD JUMP JUMPDEST DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2422 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP2 EQ PUSH2 0x242D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2439 DUP2 PUSH2 0x1EDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2450 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP2 EQ PUSH2 0x245B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 NOT 0xF9 PUSH9 0x8C6678BFEB9C14874F 0x49 SHL 0x2B 0xBF 0xCF 0xEE MULMOD CREATE2 0xDA 0xE8 0xC5 CREATE2 SGT 0xA9 PUSH10 0x5E249DE64736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"805:14523:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2865:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4498:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4036:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5375:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5797:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2490:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2150:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3027:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4860:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6042:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3195:451;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5107:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1747:344;1889:4;1943:25;1928:40;;;:11;:40;;;;:104;;;;1999:33;1984:48;;;:11;:48;;;;1928:104;:156;;;;2048:36;2072:11;2048:23;:36::i;:::-;1928:156;1909:175;;1747:344;;;:::o;2865:98::-;2919:13;2951:5;2944:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2865:98;:::o;4498:295::-;4614:7;4658:16;4666:7;4658;:16::i;:::-;4637:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;4762:15;:24;4778:7;4762:24;;;;;;;;;;;;;;;;;;;;;4755:31;;4498:295;;;:::o;4036:401::-;4116:13;4132:23;4147:7;4132:14;:23::i;:::-;4116:39;;4179:5;4173:11;;:2;:11;;;;4165:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4270:5;4254:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4279:37;4296:5;4303:12;:10;:12::i;:::-;4279:16;:37::i;:::-;4254:62;4233:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;4409:21;4418:2;4422:7;4409:8;:21::i;:::-;4036:401;;;:::o;5375:356::-;5577:33;5596:4;5602:7;5577:18;:33::i;:::-;5556:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;5696:28;5706:4;5712:2;5716:7;5696:9;:28::i;:::-;5375:356;;;:::o;5797:179::-;5930:39;5947:4;5953:2;5957:7;5930:39;;;;;;;;;;;;:16;:39::i;:::-;5797:179;;;:::o;2490:313::-;2602:7;2625:13;2641:7;:16;2649:7;2641:16;;;;;;;;;;;;;;;;;;;;;2625:32;;2705:1;2688:19;;:5;:19;;;;2667:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2791:5;2784:12;;;2490:313;;;:::o;2150:283::-;2262:7;2323:1;2306:19;;:5;:19;;;;2285:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2410:9;:16;2420:5;2410:16;;;;;;;;;;;;;;;;2403:23;;2150:283;;;:::o;3027:102::-;3083:13;3115:7;3108:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3027:102;:::o;4860:181::-;4982:52;5001:12;:10;:12::i;:::-;5015:8;5025;4982:18;:52::i;:::-;4860:181;;:::o;6042:354::-;6224:41;6243:12;:10;:12::i;:::-;6257:7;6224:18;:41::i;:::-;6203:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;6350:39;6364:4;6370:2;6374:7;6383:5;6350:13;:39::i;:::-;6042:354;;;;:::o;3195:451::-;3308:13;3358:16;3366:7;3358;:16::i;:::-;3337:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;3458:21;3482:10;:8;:10::i;:::-;3458:34;;3545:1;3527:7;3521:21;:25;:118;;;;;;;;;;;;;;;;;3589:7;3598:18;:7;:16;:18::i;:::-;3572:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3521:118;3502:137;;;3195:451;;;:::o;5107:206::-;5244:4;5271:18;:25;5290:5;5271:25;;;;;;;;;;;;;;;:35;5297:8;5271:35;;;;;;;;;;;;;;;;;;;;;;;;;5264:42;;5107:206;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7902:125:15:-;7967:4;8018:1;7990:30;;:7;:16;7998:7;7990:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7983:37;;7902:125;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12039:171:15:-;12140:2;12113:15;:24;12129:7;12113:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12195:7;12191:2;12157:46;;12166:23;12181:7;12166:14;:23::i;:::-;12157:46;;;;;;;;;;;;12039:171;;:::o;8185:438::-;8310:4;8351:16;8359:7;8351;:16::i;:::-;8330:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;8447:13;8463:23;8478:7;8463:14;:23::i;:::-;8447:39;;8515:5;8504:16;;:7;:16;;;:63;;;;8560:7;8536:31;;:20;8548:7;8536:11;:20::i;:::-;:31;;;8504:63;:111;;;;8583:32;8600:5;8607:7;8583:16;:32::i;:::-;8504:111;8496:120;;;8185:438;;;;:::o;11289:639::-;11456:4;11429:31;;:23;11444:7;11429:14;:23::i;:::-;:31;;;11408:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;11555:1;11541:16;;:2;:16;;;;11533:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11609:39;11630:4;11636:2;11640:7;11609:20;:39::i;:::-;11710:29;11727:1;11731:7;11710:8;:29::i;:::-;11769:1;11750:9;:15;11760:4;11750:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;11797:1;11780:9;:13;11790:2;11780:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;11827:2;11808:7;:16;11816:7;11808:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;11864:7;11860:2;11845:27;;11854:4;11845:27;;;;;;;;;;;;11883:38;11903:4;11909:2;11913:7;11883:19;:38::i;:::-;11289:639;;;:::o;12345:307::-;12495:8;12486:17;;:5;:17;;;;12478:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12581:8;12543:18;:25;12562:5;12543:25;;;;;;;;;;;;;;;:35;12569:8;12543:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12626:8;12604:41;;12619:5;12604:41;;;12636:8;12604:41;;;;;;:::i;:::-;;;;;;;;12345:307;;;:::o;7258:341::-;7409:28;7419:4;7425:2;7429:7;7409:9;:28::i;:::-;7468:48;7491:4;7497:2;7501:7;7510:5;7468:22;:48::i;:::-;7447:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;7258:341;;;;:::o;3887:92::-;3938:13;3963:9;;;;;;;;;;;;;;3887:92;:::o;415:696:7:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;;;;;;;;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;14711:122:15:-;;;;:::o;15205:121::-;;;;:::o;13205:950::-;13355:4;13375:15;:2;:13;;;:15::i;:::-;13371:778;;;13442:2;13426:36;;;13484:12;:10;:12::i;:::-;13518:4;13544:7;13573:5;13426:170;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13406:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13792:1;13775:6;:13;:18;13771:312;;;13817:106;;;;;;;;;;:::i;:::-;;;;;;;;13771:312;14035:6;14029:13;14020:6;14016:2;14012:15;14005:38;13406:691;13668:41;;;13658:51;;;:6;:51;;;;13651:58;;;;;13371:778;14134:4;14127:11;;13205:950;;;;;;;:::o;9889:890:10:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;;;;;;;;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;;;;;;;;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;;;;;;;;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;;;;;;;;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;;;;;;;;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;;;;;;;;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:343:21:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:133::-;544:5;582:6;569:20;560:29;;598:30;622:5;598:30;:::i;:::-;550:84;;;;:::o;640:137::-;685:5;723:6;710:20;701:29;;739:32;765:5;739:32;:::i;:::-;691:86;;;;:::o;783:141::-;839:5;870:6;864:13;855:22;;886:32;912:5;886:32;:::i;:::-;845:79;;;;:::o;943:271::-;998:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1065:1;1062;1055:12;1014:2;1105:6;1092:20;1130:78;1204:3;1196:6;1189:4;1181:6;1177:17;1130:78;:::i;:::-;1121:87;;1004:210;;;;;:::o;1220:139::-;1266:5;1304:6;1291:20;1282:29;;1320:33;1347:5;1320:33;:::i;:::-;1272:87;;;;:::o;1365:262::-;1424:6;1473:2;1461:9;1452:7;1448:23;1444:32;1441:2;;;1489:1;1486;1479:12;1441:2;1532:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;:::i;:::-;1547:63;;1503:117;1431:196;;;;:::o;1633:407::-;1701:6;1709;1758:2;1746:9;1737:7;1733:23;1729:32;1726:2;;;1774:1;1771;1764:12;1726:2;1817:1;1842:53;1887:7;1878:6;1867:9;1863:22;1842:53;:::i;:::-;1832:63;;1788:117;1944:2;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1915:118;1716:324;;;;;:::o;2046:552::-;2123:6;2131;2139;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2204:1;2201;2194:12;2156:2;2247:1;2272:53;2317:7;2308:6;2297:9;2293:22;2272:53;:::i;:::-;2262:63;;2218:117;2374:2;2400:53;2445:7;2436:6;2425:9;2421:22;2400:53;:::i;:::-;2390:63;;2345:118;2502:2;2528:53;2573:7;2564:6;2553:9;2549:22;2528:53;:::i;:::-;2518:63;;2473:118;2146:452;;;;;:::o;2604:809::-;2699:6;2707;2715;2723;2772:3;2760:9;2751:7;2747:23;2743:33;2740:2;;;2789:1;2786;2779:12;2740:2;2832:1;2857:53;2902:7;2893:6;2882:9;2878:22;2857:53;:::i;:::-;2847:63;;2803:117;2959:2;2985:53;3030:7;3021:6;3010:9;3006:22;2985:53;:::i;:::-;2975:63;;2930:118;3087:2;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3058:118;3243:2;3232:9;3228:18;3215:32;3274:18;3266:6;3263:30;3260:2;;;3306:1;3303;3296:12;3260:2;3334:62;3388:7;3379:6;3368:9;3364:22;3334:62;:::i;:::-;3324:72;;3186:220;2730:683;;;;;;;:::o;3419:401::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3600:1;3625:53;3670:7;3661:6;3650:9;3646:22;3625:53;:::i;:::-;3615:63;;3571:117;3727:2;3753:50;3795:7;3786:6;3775:9;3771:22;3753:50;:::i;:::-;3743:60;;3698:115;3499:321;;;;;:::o;3826:407::-;3894:6;3902;3951:2;3939:9;3930:7;3926:23;3922:32;3919:2;;;3967:1;3964;3957:12;3919:2;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3909:324;;;;;:::o;4239:260::-;4297:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4362:1;4359;4352:12;4314:2;4405:1;4430:52;4474:7;4465:6;4454:9;4450:22;4430:52;:::i;:::-;4420:62;;4376:116;4304:195;;;;:::o;4505:282::-;4574:6;4623:2;4611:9;4602:7;4598:23;4594:32;4591:2;;;4639:1;4636;4629:12;4591:2;4682:1;4707:63;4762:7;4753:6;4742:9;4738:22;4707:63;:::i;:::-;4697:73;;4653:127;4581:206;;;;:::o;4793:262::-;4852:6;4901:2;4889:9;4880:7;4876:23;4872:32;4869:2;;;4917:1;4914;4907:12;4869:2;4960:1;4985:53;5030:7;5021:6;5010:9;5006:22;4985:53;:::i;:::-;4975:63;;4931:117;4859:196;;;;:::o;5061:118::-;5148:24;5166:5;5148:24;:::i;:::-;5143:3;5136:37;5126:53;;:::o;5185:109::-;5266:21;5281:5;5266:21;:::i;:::-;5261:3;5254:34;5244:50;;:::o;5300:360::-;5386:3;5414:38;5446:5;5414:38;:::i;:::-;5468:70;5531:6;5526:3;5468:70;:::i;:::-;5461:77;;5547:52;5592:6;5587:3;5580:4;5573:5;5569:16;5547:52;:::i;:::-;5624:29;5646:6;5624:29;:::i;:::-;5619:3;5615:39;5608:46;;5390:270;;;;;:::o;5666:364::-;5754:3;5782:39;5815:5;5782:39;:::i;:::-;5837:71;5901:6;5896:3;5837:71;:::i;:::-;5830:78;;5917:52;5962:6;5957:3;5950:4;5943:5;5939:16;5917:52;:::i;:::-;5994:29;6016:6;5994:29;:::i;:::-;5989:3;5985:39;5978:46;;5758:272;;;;;:::o;6036:377::-;6142:3;6170:39;6203:5;6170:39;:::i;:::-;6225:89;6307:6;6302:3;6225:89;:::i;:::-;6218:96;;6323:52;6368:6;6363:3;6356:4;6349:5;6345:16;6323:52;:::i;:::-;6400:6;6395:3;6391:16;6384:23;;6146:267;;;;;:::o;6419:366::-;6561:3;6582:67;6646:2;6641:3;6582:67;:::i;:::-;6575:74;;6658:93;6747:3;6658:93;:::i;:::-;6776:2;6771:3;6767:12;6760:19;;6565:220;;;:::o;6791:366::-;6933:3;6954:67;7018:2;7013:3;6954:67;:::i;:::-;6947:74;;7030:93;7119:3;7030:93;:::i;:::-;7148:2;7143:3;7139:12;7132:19;;6937:220;;;:::o;7163:366::-;7305:3;7326:67;7390:2;7385:3;7326:67;:::i;:::-;7319:74;;7402:93;7491:3;7402:93;:::i;:::-;7520:2;7515:3;7511:12;7504:19;;7309:220;;;:::o;7535:366::-;7677:3;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7681:220;;;:::o;7907:366::-;8049:3;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;8053:220;;;:::o;8279:366::-;8421:3;8442:67;8506:2;8501:3;8442:67;:::i;:::-;8435:74;;8518:93;8607:3;8518:93;:::i;:::-;8636:2;8631:3;8627:12;8620:19;;8425:220;;;:::o;8651:366::-;8793:3;8814:67;8878:2;8873:3;8814:67;:::i;:::-;8807:74;;8890:93;8979:3;8890:93;:::i;:::-;9008:2;9003:3;8999:12;8992:19;;8797:220;;;:::o;9023:366::-;9165:3;9186:67;9250:2;9245:3;9186:67;:::i;:::-;9179:74;;9262:93;9351:3;9262:93;:::i;:::-;9380:2;9375:3;9371:12;9364:19;;9169:220;;;:::o;9395:366::-;9537:3;9558:67;9622:2;9617:3;9558:67;:::i;:::-;9551:74;;9634:93;9723:3;9634:93;:::i;:::-;9752:2;9747:3;9743:12;9736:19;;9541:220;;;:::o;9767:366::-;9909:3;9930:67;9994:2;9989:3;9930:67;:::i;:::-;9923:74;;10006:93;10095:3;10006:93;:::i;:::-;10124:2;10119:3;10115:12;10108:19;;9913:220;;;:::o;10139:366::-;10281:3;10302:67;10366:2;10361:3;10302:67;:::i;:::-;10295:74;;10378:93;10467:3;10378:93;:::i;:::-;10496:2;10491:3;10487:12;10480:19;;10285:220;;;:::o;10511:366::-;10653:3;10674:67;10738:2;10733:3;10674:67;:::i;:::-;10667:74;;10750:93;10839:3;10750:93;:::i;:::-;10868:2;10863:3;10859:12;10852:19;;10657:220;;;:::o;10883:118::-;10970:24;10988:5;10970:24;:::i;:::-;10965:3;10958:37;10948:53;;:::o;11007:435::-;11187:3;11209:95;11300:3;11291:6;11209:95;:::i;:::-;11202:102;;11321:95;11412:3;11403:6;11321:95;:::i;:::-;11314:102;;11433:3;11426:10;;11191:251;;;;;:::o;11448:222::-;11541:4;11579:2;11568:9;11564:18;11556:26;;11592:71;11660:1;11649:9;11645:17;11636:6;11592:71;:::i;:::-;11546:124;;;;:::o;11676:640::-;11871:4;11909:3;11898:9;11894:19;11886:27;;11923:71;11991:1;11980:9;11976:17;11967:6;11923:71;:::i;:::-;12004:72;12072:2;12061:9;12057:18;12048:6;12004:72;:::i;:::-;12086;12154:2;12143:9;12139:18;12130:6;12086:72;:::i;:::-;12205:9;12199:4;12195:20;12190:2;12179:9;12175:18;12168:48;12233:76;12304:4;12295:6;12233:76;:::i;:::-;12225:84;;11876:440;;;;;;;:::o;12322:210::-;12409:4;12447:2;12436:9;12432:18;12424:26;;12460:65;12522:1;12511:9;12507:17;12498:6;12460:65;:::i;:::-;12414:118;;;;:::o;12538:313::-;12651:4;12689:2;12678:9;12674:18;12666:26;;12738:9;12732:4;12728:20;12724:1;12713:9;12709:17;12702:47;12766:78;12839:4;12830:6;12766:78;:::i;:::-;12758:86;;12656:195;;;;:::o;12857:419::-;13023:4;13061:2;13050:9;13046:18;13038:26;;13110:9;13104:4;13100:20;13096:1;13085:9;13081:17;13074:47;13138:131;13264:4;13138:131;:::i;:::-;13130:139;;13028:248;;;:::o;13282:419::-;13448:4;13486:2;13475:9;13471:18;13463:26;;13535:9;13529:4;13525:20;13521:1;13510:9;13506:17;13499:47;13563:131;13689:4;13563:131;:::i;:::-;13555:139;;13453:248;;;:::o;13707:419::-;13873:4;13911:2;13900:9;13896:18;13888:26;;13960:9;13954:4;13950:20;13946:1;13935:9;13931:17;13924:47;13988:131;14114:4;13988:131;:::i;:::-;13980:139;;13878:248;;;:::o;14132:419::-;14298:4;14336:2;14325:9;14321:18;14313:26;;14385:9;14379:4;14375:20;14371:1;14360:9;14356:17;14349:47;14413:131;14539:4;14413:131;:::i;:::-;14405:139;;14303:248;;;:::o;14557:419::-;14723:4;14761:2;14750:9;14746:18;14738:26;;14810:9;14804:4;14800:20;14796:1;14785:9;14781:17;14774:47;14838:131;14964:4;14838:131;:::i;:::-;14830:139;;14728:248;;;:::o;14982:419::-;15148:4;15186:2;15175:9;15171:18;15163:26;;15235:9;15229:4;15225:20;15221:1;15210:9;15206:17;15199:47;15263:131;15389:4;15263:131;:::i;:::-;15255:139;;15153:248;;;:::o;15407:419::-;15573:4;15611:2;15600:9;15596:18;15588:26;;15660:9;15654:4;15650:20;15646:1;15635:9;15631:17;15624:47;15688:131;15814:4;15688:131;:::i;:::-;15680:139;;15578:248;;;:::o;15832:419::-;15998:4;16036:2;16025:9;16021:18;16013:26;;16085:9;16079:4;16075:20;16071:1;16060:9;16056:17;16049:47;16113:131;16239:4;16113:131;:::i;:::-;16105:139;;16003:248;;;:::o;16257:419::-;16423:4;16461:2;16450:9;16446:18;16438:26;;16510:9;16504:4;16500:20;16496:1;16485:9;16481:17;16474:47;16538:131;16664:4;16538:131;:::i;:::-;16530:139;;16428:248;;;:::o;16682:419::-;16848:4;16886:2;16875:9;16871:18;16863:26;;16935:9;16929:4;16925:20;16921:1;16910:9;16906:17;16899:47;16963:131;17089:4;16963:131;:::i;:::-;16955:139;;16853:248;;;:::o;17107:419::-;17273:4;17311:2;17300:9;17296:18;17288:26;;17360:9;17354:4;17350:20;17346:1;17335:9;17331:17;17324:47;17388:131;17514:4;17388:131;:::i;:::-;17380:139;;17278:248;;;:::o;17532:419::-;17698:4;17736:2;17725:9;17721:18;17713:26;;17785:9;17779:4;17775:20;17771:1;17760:9;17756:17;17749:47;17813:131;17939:4;17813:131;:::i;:::-;17805:139;;17703:248;;;:::o;17957:222::-;18050:4;18088:2;18077:9;18073:18;18065:26;;18101:71;18169:1;18158:9;18154:17;18145:6;18101:71;:::i;:::-;18055:124;;;;:::o;18185:129::-;18219:6;18246:20;;:::i;:::-;18236:30;;18275:33;18303:4;18295:6;18275:33;:::i;:::-;18226:88;;;:::o;18320:75::-;18353:6;18386:2;18380:9;18370:19;;18360:35;:::o;18401:307::-;18462:4;18552:18;18544:6;18541:30;18538:2;;;18574:18;;:::i;:::-;18538:2;18612:29;18634:6;18612:29;:::i;:::-;18604:37;;18696:4;18690;18686:15;18678:23;;18467:241;;;:::o;18714:98::-;18765:6;18799:5;18793:12;18783:22;;18772:40;;;:::o;18818:99::-;18870:6;18904:5;18898:12;18888:22;;18877:40;;;:::o;18923:168::-;19006:11;19040:6;19035:3;19028:19;19080:4;19075:3;19071:14;19056:29;;19018:73;;;;:::o;19097:169::-;19181:11;19215:6;19210:3;19203:19;19255:4;19250:3;19246:14;19231:29;;19193:73;;;;:::o;19272:148::-;19374:11;19411:3;19396:18;;19386:34;;;;:::o;19426:305::-;19466:3;19485:20;19503:1;19485:20;:::i;:::-;19480:25;;19519:20;19537:1;19519:20;:::i;:::-;19514:25;;19673:1;19605:66;19601:74;19598:1;19595:81;19592:2;;;19679:18;;:::i;:::-;19592:2;19723:1;19720;19716:9;19709:16;;19470:261;;;;:::o;19737:191::-;19777:4;19797:20;19815:1;19797:20;:::i;:::-;19792:25;;19831:20;19849:1;19831:20;:::i;:::-;19826:25;;19870:1;19867;19864:8;19861:2;;;19875:18;;:::i;:::-;19861:2;19920:1;19917;19913:9;19905:17;;19782:146;;;;:::o;19934:96::-;19971:7;20000:24;20018:5;20000:24;:::i;:::-;19989:35;;19979:51;;;:::o;20036:90::-;20070:7;20113:5;20106:13;20099:21;20088:32;;20078:48;;;:::o;20132:149::-;20168:7;20208:66;20201:5;20197:78;20186:89;;20176:105;;;:::o;20287:126::-;20324:7;20364:42;20357:5;20353:54;20342:65;;20332:81;;;:::o;20419:77::-;20456:7;20485:5;20474:16;;20464:32;;;:::o;20502:154::-;20586:6;20581:3;20576;20563:30;20648:1;20639:6;20634:3;20630:16;20623:27;20553:103;;;:::o;20662:307::-;20730:1;20740:113;20754:6;20751:1;20748:13;20740:113;;;20839:1;20834:3;20830:11;20824:18;20820:1;20815:3;20811:11;20804:39;20776:2;20773:1;20769:10;20764:15;;20740:113;;;20871:6;20868:1;20865:13;20862:2;;;20951:1;20942:6;20937:3;20933:16;20926:27;20862:2;20711:258;;;;:::o;20975:320::-;21019:6;21056:1;21050:4;21046:12;21036:22;;21103:1;21097:4;21093:12;21124:18;21114:2;;21180:4;21172:6;21168:17;21158:27;;21114:2;21242;21234:6;21231:14;21211:18;21208:38;21205:2;;;21261:18;;:::i;:::-;21205:2;21026:269;;;;:::o;21301:281::-;21384:27;21406:4;21384:27;:::i;:::-;21376:6;21372:40;21514:6;21502:10;21499:22;21478:18;21466:10;21463:34;21460:62;21457:2;;;21525:18;;:::i;:::-;21457:2;21565:10;21561:2;21554:22;21344:238;;;:::o;21588:180::-;21636:77;21633:1;21626:88;21733:4;21730:1;21723:15;21757:4;21754:1;21747:15;21774:180;21822:77;21819:1;21812:88;21919:4;21916:1;21909:15;21943:4;21940:1;21933:15;21960:180;22008:77;22005:1;21998:88;22105:4;22102:1;22095:15;22129:4;22126:1;22119:15;22146:102;22187:6;22238:2;22234:7;22229:2;22222:5;22218:14;22214:28;22204:38;;22194:54;;;:::o;22254:237::-;22394:34;22390:1;22382:6;22378:14;22371:58;22463:20;22458:2;22450:6;22446:15;22439:45;22360:131;:::o;22497:224::-;22637:34;22633:1;22625:6;22621:14;22614:58;22706:7;22701:2;22693:6;22689:15;22682:32;22603:118;:::o;22727:223::-;22867:34;22863:1;22855:6;22851:14;22844:58;22936:6;22931:2;22923:6;22919:15;22912:31;22833:117;:::o;22956:175::-;23096:27;23092:1;23084:6;23080:14;23073:51;23062:69;:::o;23137:231::-;23277:34;23273:1;23265:6;23261:14;23254:58;23346:14;23341:2;23333:6;23329:15;23322:39;23243:125;:::o;23374:243::-;23514:34;23510:1;23502:6;23498:14;23491:58;23583:26;23578:2;23570:6;23566:15;23559:51;23480:137;:::o;23623:229::-;23763:34;23759:1;23751:6;23747:14;23740:58;23832:12;23827:2;23819:6;23815:15;23808:37;23729:123;:::o;23858:228::-;23998:34;23994:1;23986:6;23982:14;23975:58;24067:11;24062:2;24054:6;24050:15;24043:36;23964:122;:::o;24092:231::-;24232:34;24228:1;24220:6;24216:14;24209:58;24301:14;24296:2;24288:6;24284:15;24277:39;24198:125;:::o;24329:234::-;24469:34;24465:1;24457:6;24453:14;24446:58;24538:17;24533:2;24525:6;24521:15;24514:42;24435:128;:::o;24569:220::-;24709:34;24705:1;24697:6;24693:14;24686:58;24778:3;24773:2;24765:6;24761:15;24754:28;24675:114;:::o;24795:236::-;24935:34;24931:1;24923:6;24919:14;24912:58;25004:19;24999:2;24991:6;24987:15;24980:44;24901:130;:::o;25037:122::-;25110:24;25128:5;25110:24;:::i;:::-;25103:5;25100:35;25090:2;;25149:1;25146;25139:12;25090:2;25080:79;:::o;25165:116::-;25235:21;25250:5;25235:21;:::i;:::-;25228:5;25225:32;25215:2;;25271:1;25268;25261:12;25215:2;25205:76;:::o;25287:120::-;25359:23;25376:5;25359:23;:::i;:::-;25352:5;25349:34;25339:2;;25397:1;25394;25387:12;25339:2;25329:78;:::o;25413:122::-;25486:24;25504:5;25486:24;:::i;:::-;25479:5;25476:35;25466:2;;25525:1;25522;25515:12;25466:2;25456:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1872800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"1624","getApproved(uint256)":"2605","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"1700","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"2095","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"969","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/comman/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/comman/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC165, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        address owner = _owners[tokenId];\\n        require(\\n            owner != address(0),\\n            \\\"ERC721: owner query for nonexistent token\\\"\\n        );\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\n        );\\n\\n        string memory baseURI = _baseURI();\\n        return\\n            bytes(baseURI).length > 0\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n                : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (address)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved)\\n        public\\n        virtual\\n        override\\n    {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bool)\\n    {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(\\n            _isApprovedOrOwner(from, tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(\\n            _isApprovedOrOwner(_msgSender(), tokenId),\\n            \\\"ERC721: transfer caller is not owner nor approved\\\"\\n        );\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(\\n            _checkOnERC721Received(from, to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\\n        internal\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner ||\\n            getApproved(tokenId) == spender ||\\n            isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(\\n            ERC721.ownerOf(tokenId) == from,\\n            \\\"ERC721: transfer from incorrect owner\\\"\\n        );\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try\\n                IERC721Receiver(to).onERC721Received(\\n                    _msgSender(),\\n                    from,\\n                    tokenId,\\n                    _data\\n                )\\n            returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n                    );\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xae8de655157eb9dbaa5a38ed6383b730b49faf4c6a2f2f50660d7df2d71c0183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2642,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2644,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2648,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2652,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2656,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2662,"contract":"contracts/comman/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/filecoinMockAPIs/MarketAPI.sol":{"MarketAPI":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"components":[{"internalType":"string","name":"provider_or_client","type":"string"}],"internalType":"struct MarketTypes.AddBalanceParams","name":"params","type":"tuple"}],"name":"add_balance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"addr","type":"string"}],"name":"get_balance","outputs":[{"components":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"locked","type":"uint256"}],"internalType":"struct MarketTypes.GetBalanceReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealActivationParams","name":"params","type":"tuple"}],"name":"get_deal_activation","outputs":[{"components":[{"internalType":"int64","name":"activated","type":"int64"},{"internalType":"int64","name":"terminated","type":"int64"}],"internalType":"struct MarketTypes.GetDealActivationReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealClientParams","name":"params","type":"tuple"}],"name":"get_deal_client","outputs":[{"components":[{"internalType":"string","name":"client","type":"string"}],"internalType":"struct MarketTypes.GetDealClientReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealClientCollateralParams","name":"params","type":"tuple"}],"name":"get_deal_client_collateral","outputs":[{"components":[{"internalType":"uint256","name":"collateral","type":"uint256"}],"internalType":"struct MarketTypes.GetDealClientCollateralReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealDataCommitmentParams","name":"params","type":"tuple"}],"name":"get_deal_data_commitment","outputs":[{"components":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"size","type":"uint64"}],"internalType":"struct MarketTypes.GetDealDataCommitmentReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealLabelParams","name":"params","type":"tuple"}],"name":"get_deal_label","outputs":[{"components":[{"internalType":"string","name":"label","type":"string"}],"internalType":"struct MarketTypes.GetDealLabelReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealProviderParams","name":"params","type":"tuple"}],"name":"get_deal_provider","outputs":[{"components":[{"internalType":"string","name":"provider","type":"string"}],"internalType":"struct MarketTypes.GetDealProviderReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealProviderCollateralParams","name":"params","type":"tuple"}],"name":"get_deal_provider_collateral","outputs":[{"components":[{"internalType":"uint256","name":"collateral","type":"uint256"}],"internalType":"struct MarketTypes.GetDealProviderCollateralReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealTermParams","name":"params","type":"tuple"}],"name":"get_deal_term","outputs":[{"components":[{"internalType":"int64","name":"start","type":"int64"},{"internalType":"int64","name":"end","type":"int64"}],"internalType":"struct MarketTypes.GetDealTermReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealEpochPriceParams","name":"params","type":"tuple"}],"name":"get_deal_total_price","outputs":[{"components":[{"internalType":"uint256","name":"price_per_epoch","type":"uint256"}],"internalType":"struct MarketTypes.GetDealEpochPriceReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"id","type":"uint64"}],"internalType":"struct MarketTypes.GetDealVerifiedParams","name":"params","type":"tuple"}],"name":"get_deal_verified","outputs":[{"components":[{"internalType":"bool","name":"verified","type":"bool"}],"internalType":"struct MarketTypes.GetDealVerifiedReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"raw_auth_params","type":"bytes"},{"internalType":"address","name":"callee","type":"address"}],"name":"publish_storage_deals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"provider_or_client","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"internalType":"struct MarketTypes.WithdrawBalanceParams","name":"params","type":"tuple"}],"name":"withdraw_balance","outputs":[{"components":[{"internalType":"uint256","name":"amount_withdrawn","type":"uint256"}],"internalType":"struct MarketTypes.WithdrawBalanceReturn","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Zondax AG","details":"Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it","kind":"dev","methods":{"add_balance((string))":{"details":"Because this is a mock method, no real balance is being deducted from the caller, nor incremented in the Storage Market actor (f05)."},"get_balance(string)":{"returns":{"_0":"the escrow balance and locked amount for an address."}},"get_deal_activation((uint64))":{"returns":{"_0":"USR_NOT_FOUND if the deal doesn't exist (yet), or EX_DEAL_EXPIRED if the deal has been removed from state."}},"get_deal_client((uint64))":{"returns":{"_0":"the client of a deal proposal."}},"get_deal_client_collateral((uint64))":{"returns":{"_0":"the client collateral requirement for a deal proposal."}},"get_deal_data_commitment((uint64))":{"details":"set data values correctly, currently returning fixed data, feel free to adjust in your local mock.","returns":{"_0":"the data commitment and size of a deal proposal."}},"get_deal_label((uint64))":{"returns":{"_0":"the label of a deal proposal."}},"get_deal_provider((uint64))":{"returns":{"_0":"the provider of a deal proposal."}},"get_deal_provider_collateral((uint64))":{"returns":{"_0":"the provider collateral requirement for a deal proposal."}},"get_deal_term((uint64))":{"returns":{"_0":"the start epoch and duration (in epochs) of a deal proposal."}},"get_deal_total_price((uint64))":{"returns":{"_0":"the per-epoch price of a deal proposal."}},"get_deal_verified((uint64))":{"returns":{"_0":"the verified flag for a deal proposal."}},"withdraw_balance((string,uint256))":{"details":"This method should be called by an approved address, but the mock does not check that the caller is an approved party.Because this is a mock method, no real balance is deposited in the designated address, nor decremented from the Storage Market actor (f05)."}},"title":"This contract is a proxy to the singleton Storage Market actor (address: f05). Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:21","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:21","statements":[{"nodeType":"YulAssignment","src":"68:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:21"},"nodeType":"YulFunctionCall","src":"78:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:21"},"nodeType":"YulFunctionCall","src":"125:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:21","statements":[{"nodeType":"YulAssignment","src":"190:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:21"},"nodeType":"YulFunctionCall","src":"200:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:21"},"nodeType":"YulFunctionCall","src":"149:26:21"},"nodeType":"YulIf","src":"146:2:21"},{"body":{"nodeType":"YulBlock","src":"279:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:21"},"nodeType":"YulFunctionCall","src":"293:18:21"},"nodeType":"YulExpressionStatement","src":"293:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:21"},"nodeType":"YulFunctionCall","src":"263:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:21"},"nodeType":"YulFunctionCall","src":"240:38:21"},"nodeType":"YulIf","src":"237:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:21","type":""}],"src":"7:320:21"},{"body":{"nodeType":"YulBlock","src":"361:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:21"},"nodeType":"YulFunctionCall","src":"371:88:21"},"nodeType":"YulExpressionStatement","src":"371:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:21"},"nodeType":"YulFunctionCall","src":"468:15:21"},"nodeType":"YulExpressionStatement","src":"468:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:21"},"nodeType":"YulFunctionCall","src":"492:15:21"},"nodeType":"YulExpressionStatement","src":"492:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:21"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b62000580565b62000032620003da565b6043816000019067ffffffffffffffff16908167ffffffffffffffff16815250506040518060600160405280604081526020016200269a60409139816020018190525062800000816040019067ffffffffffffffff16908167ffffffffffffffff168152505060008160600190151590811515815250506040518060400160405280600681526020017f743031313039000000000000000000000000000000000000000000000000000081525081608001819052506040518060400160405280600681526020017f74303131313300000000000000000000000000000000000000000000000000008152508160a00181905250604051806060016040528060348152602001620026da603491398160c0018190525061629d8160e0019060070b908160070b815250506208517e81610100019060070b908160070b815250506501001d1bf80081610120018181525050600081610140018181525050600081610160018181525050600181610180019060070b908160070b815250506000816101a0019060070b908160070b815250508060016000836000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160010190805190602001906200023b9291906200046b565b5060408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160020160086101000a81548160ff0219169083151502179055506080820151816003019080519060200190620002a99291906200046b565b5060a0820151816004019080519060200190620002c89291906200046b565b5060c0820151816005019080519060200190620002e79291906200046b565b5060e08201518160060160006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506101008201518160060160086101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555061012082015181600701556101408201518160080155610160820151816009015561018082015181600a0160006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506101a082015181600a0160086101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555090505050565b604051806101c00160405280600067ffffffffffffffff16815260200160608152602001600067ffffffffffffffff168152602001600015158152602001606081526020016060815260200160608152602001600060070b8152602001600060070b8152602001600081526020016000815260200160008152602001600060070b8152602001600060070b81525090565b82805462000479906200051b565b90600052602060002090601f0160209004810192826200049d5760008555620004e9565b82601f10620004b857805160ff1916838001178555620004e9565b82800160010185558215620004e9579182015b82811115620004e8578251825591602001919060010190620004cb565b5b509050620004f89190620004fc565b5090565b5b8082111562000517576000816000905550600101620004fd565b5090565b600060028204905060018216806200053457607f821691505b602082108114156200054b576200054a62000551565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61210a80620005906000396000f3fe6080604052600436106100dd5760003560e01c80638777b7c81161007f5780639f4b7c7d116100595780639f4b7c7d14610330578063ad36f1841461036d578063ebf66ef1146103aa578063f241560c146103c6576100dd565b80638777b7c8146102795780638b7f02fd146102b6578063991e04a4146102f3576100dd565b8063412a4b9a116100bb578063412a4b9a1461018557806355d95609146101c25780635c4ddef3146101ff57806365a9b4a01461023c576100dd565b806313178dc1146100e25780631a2811e71461011f578063344096421461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611747565b610403565b6040516101169190611cb7565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906116a3565b6104e6565b6040516101539190611c44565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906114d7565b61058b565b005b34801561019157600080fd5b506101ac60048036038101906101a79190611651565b6106d3565b6040516101b99190611c07565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e491906116cc565b610778565b6040516101f69190611c5f565b60405180910390f35b34801561020b57600080fd5b506102266004803603810190610221919061171e565b6108a5565b6040516102339190611c9c565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e919061152b565b610959565b6040516102709190611b72565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b91906115d6565b6109a1565b6040516102ad9190611ba8565b60405180910390f35b3480156102c257600080fd5b506102dd60048036038101906102d891906115ff565b610a46565b6040516102ea9190611bc3565b60405180910390f35b3480156102ff57600080fd5b5061031a60048036038101906103159190611628565b610b73565b6040516103279190611be5565b60405180910390f35b34801561033c57600080fd5b506103576004803603810190610352919061167a565b610c71565b6040516103649190611c22565b60405180910390f35b34801561037957600080fd5b50610394600480360381019061038f91906116f5565b610d9e565b6040516103a19190611c81565b60405180910390f35b6103c460048036038101906103bf919061156c565b610e97565b005b3480156103d257600080fd5b506103ed60048036038101906103e891906115ad565b610ed3565b6040516103fa9190611b8d565b60405180910390f35b61040b610fcc565b60008083600001516040516104209190611afd565b908152602001604051809103902054905082602001516000846000015160405161044a9190611afd565b908152602001604051809103902054106104a7578260200151600084600001516040516104779190611afd565b908152602001604051809103902060008282546104949190611e1f565b92505081905550826020015190506104cf565b60008084600001516040516104bc9190611afd565b9081526020016040518091039020819055505b604051806020016040528082815250915050919050565b6104ee610fdf565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161054757600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600801548152509050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166000639d8b0678856040516024016105be93929190611b14565b6040516020818303038152906040527f868e10c4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106489190611ae6565b6000604051808303816000865af19150503d8060008114610685576040519150601f19603f3d011682016040523d82523d6000602084013e61068a565b606091505b50509050806106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b52565b60405180910390fd5b505050565b6106db610ff2565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161073457600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600701548152509050919050565b610780611005565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16116107d957600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600401805461081d90611f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461084990611f3f565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b50505050508152509050919050565b6108ad611018565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161090657600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160089054906101000a900460ff1615158152509050919050565b61096161102d565b600080836040516109729190611afd565b908152602001604051809103902054905060405180604001604052808281526020016000815250915050919050565b6109a9611047565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610a0257600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600901548152509050919050565b610a4e61105a565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610aa757600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206003018054610aeb90611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1790611f3f565b8015610b645780601f10610b3957610100808354040283529160200191610b64565b820191906000526020600020905b815481529060010190602001808311610b4757829003601f168201915b50505050508152509050919050565b610b7b61106d565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610bd457600080fd5b60405180604001604052806040518060400160405280600881526020017f3078313131313131000000000000000000000000000000000000000000000000815250815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168152509050919050565b610c79611091565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610cd257600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054610d1690611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4290611f3f565b8015610d8f5780601f10610d6457610100808354040283529160200191610d8f565b820191906000526020600020905b815481529060010190602001808311610d7257829003601f168201915b50505050508152509050919050565b610da66110a4565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610dff57600080fd5b604051806040016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a900460070b60070b815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160089054906101000a900460070b60070b8152509050919050565b3460008260000151604051610eac9190611afd565b90815260200160405180910390206000828254610ec99190611dc9565b9250508190555050565b610edb6110c4565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610f3457600080fd5b604051806040016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460070b60070b815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600a0160089054906101000a900460070b60070b8152509050919050565b6040518060200160405280600081525090565b6040518060200160405280600081525090565b6040518060200160405280600081525090565b6040518060200160405280606081525090565b60405180602001604052806000151581525090565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b6040518060200160405280606081525090565b604051806040016040528060608152602001600067ffffffffffffffff1681525090565b6040518060200160405280606081525090565b6040518060400160405280600060070b8152602001600060070b81525090565b6040518060400160405280600060070b8152602001600060070b81525090565b60006110f76110f284611cf7565b611cd2565b90508281526020810184848401111561110f57600080fd5b61111a848285611efd565b509392505050565b600061113561113084611d28565b611cd2565b90508281526020810184848401111561114d57600080fd5b611158848285611efd565b509392505050565b60008135905061116f8161208f565b92915050565b600082601f83011261118657600080fd5b81356111968482602086016110e4565b91505092915050565b600082601f8301126111b057600080fd5b81356111c0848260208601611122565b91505092915050565b6000602082840312156111db57600080fd5b6111e56020611cd2565b9050600082013567ffffffffffffffff81111561120157600080fd5b61120d8482850161119f565b60008301525092915050565b60006020828403121561122b57600080fd5b6112356020611cd2565b90506000611245848285016114c2565b60008301525092915050565b60006020828403121561126357600080fd5b61126d6020611cd2565b9050600061127d848285016114c2565b60008301525092915050565b60006020828403121561129b57600080fd5b6112a56020611cd2565b905060006112b5848285016114c2565b60008301525092915050565b6000602082840312156112d357600080fd5b6112dd6020611cd2565b905060006112ed848285016114c2565b60008301525092915050565b60006020828403121561130b57600080fd5b6113156020611cd2565b90506000611325848285016114c2565b60008301525092915050565b60006020828403121561134357600080fd5b61134d6020611cd2565b9050600061135d848285016114c2565b60008301525092915050565b60006020828403121561137b57600080fd5b6113856020611cd2565b90506000611395848285016114c2565b60008301525092915050565b6000602082840312156113b357600080fd5b6113bd6020611cd2565b905060006113cd848285016114c2565b60008301525092915050565b6000602082840312156113eb57600080fd5b6113f56020611cd2565b90506000611405848285016114c2565b60008301525092915050565b60006020828403121561142357600080fd5b61142d6020611cd2565b9050600061143d848285016114c2565b60008301525092915050565b60006040828403121561145b57600080fd5b6114656040611cd2565b9050600082013567ffffffffffffffff81111561148157600080fd5b61148d8482850161119f565b60008301525060206114a1848285016114ad565b60208301525092915050565b6000813590506114bc816120a6565b92915050565b6000813590506114d1816120bd565b92915050565b600080604083850312156114ea57600080fd5b600083013567ffffffffffffffff81111561150457600080fd5b61151085828601611175565b925050602061152185828601611160565b9150509250929050565b60006020828403121561153d57600080fd5b600082013567ffffffffffffffff81111561155757600080fd5b6115638482850161119f565b91505092915050565b60006020828403121561157e57600080fd5b600082013567ffffffffffffffff81111561159857600080fd5b6115a4848285016111c9565b91505092915050565b6000602082840312156115bf57600080fd5b60006115cd84828501611219565b91505092915050565b6000602082840312156115e857600080fd5b60006115f684828501611251565b91505092915050565b60006020828403121561161157600080fd5b600061161f84828501611289565b91505092915050565b60006020828403121561163a57600080fd5b6000611648848285016112c1565b91505092915050565b60006020828403121561166357600080fd5b6000611671848285016112f9565b91505092915050565b60006020828403121561168c57600080fd5b600061169a84828501611331565b91505092915050565b6000602082840312156116b557600080fd5b60006116c384828501611369565b91505092915050565b6000602082840312156116de57600080fd5b60006116ec848285016113a1565b91505092915050565b60006020828403121561170757600080fd5b6000611715848285016113d9565b91505092915050565b60006020828403121561173057600080fd5b600061173e84828501611411565b91505092915050565b60006020828403121561175957600080fd5b600082013567ffffffffffffffff81111561177357600080fd5b61177f84828501611449565b91505092915050565b61179181611e65565b82525050565b60006117a282611d59565b6117ac8185611d6f565b93506117bc818560208601611f0c565b6117c58161202f565b840191505092915050565b60006117db82611d59565b6117e58185611d80565b93506117f5818560208601611f0c565b6117fe8161202f565b840191505092915050565b600061181482611d59565b61181e8185611d91565b935061182e818560208601611f0c565b80840191505092915050565b61184381611e71565b82525050565b61185281611ed9565b82525050565b61186181611eeb565b82525050565b600061187282611d64565b61187c8185611d9c565b935061188c818560208601611f0c565b6118958161202f565b840191505092915050565b60006118ab82611d64565b6118b58185611dbe565b93506118c5818560208601611f0c565b80840191505092915050565b60006118de603083611dad565b91506118e982612040565b604082019050919050565b60408201600082015161190a6000850182611ac8565b50602082015161191d6020850182611ac8565b50505050565b604082016000820151611939600085018261183a565b50602082015161194c602085018261183a565b50505050565b6020820160008201516119686000850182611ac8565b50505050565b6000602083016000830151848203600086015261198b8282611867565b9150508091505092915050565b600060408301600083015184820360008601526119b58282611797565b91505060208301516119ca6020860182611ad7565b508091505092915050565b6020820160008201516119eb6000850182611ac8565b50505050565b60006020830160008301518482036000860152611a0e8282611867565b9150508091505092915050565b602082016000820151611a316000850182611ac8565b50505050565b60006020830160008301518482036000860152611a548282611867565b9150508091505092915050565b604082016000820151611a77600085018261183a565b506020820151611a8a602085018261183a565b50505050565b602082016000820151611aa66000850182611788565b50505050565b602082016000820151611ac26000850182611ac8565b50505050565b611ad181611e9e565b82525050565b611ae081611eb8565b82525050565b6000611af28284611809565b915081905092915050565b6000611b0982846118a0565b915081905092915050565b6000606082019050611b296000830186611849565b611b366020830185611858565b8181036040830152611b4881846117d0565b9050949350505050565b60006020820190508181036000830152611b6b816118d1565b9050919050565b6000604082019050611b8760008301846118f4565b92915050565b6000604082019050611ba26000830184611923565b92915050565b6000602082019050611bbd6000830184611952565b92915050565b60006020820190508181036000830152611bdd818461196e565b905092915050565b60006020820190508181036000830152611bff8184611998565b905092915050565b6000602082019050611c1c60008301846119d5565b92915050565b60006020820190508181036000830152611c3c81846119f1565b905092915050565b6000602082019050611c596000830184611a1b565b92915050565b60006020820190508181036000830152611c798184611a37565b905092915050565b6000604082019050611c966000830184611a61565b92915050565b6000602082019050611cb16000830184611a90565b92915050565b6000602082019050611ccc6000830184611aac565b92915050565b6000611cdc611ced565b9050611ce88282611f71565b919050565b6000604051905090565b600067ffffffffffffffff821115611d1257611d11612000565b5b611d1b8261202f565b9050602081019050919050565b600067ffffffffffffffff821115611d4357611d42612000565b5b611d4c8261202f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611dd482611e9e565b9150611ddf83611e9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e1457611e13611fa2565b5b828201905092915050565b6000611e2a82611e9e565b9150611e3583611e9e565b925082821015611e4857611e47611fa2565b5b828203905092915050565b6000611e5e82611e7e565b9050919050565b60008115159050919050565b60008160070b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000611ee482611ecc565b9050919050565b6000611ef682611ea8565b9050919050565b82818337600083830152505050565b60005b83811015611f2a578082015181840152602081019050611f0f565b83811115611f39576000848401525b50505050565b60006002820490506001821680611f5757607f821691505b60208210811415611f6b57611f6a611fd1565b5b50919050565b611f7a8261202f565b810181811067ffffffffffffffff82111715611f9957611f98612000565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f636c69656e7420636f6e7472616374206661696c656420746f20617574686f7260008201527f697a65206465616c207075626c69736800000000000000000000000000000000602082015250565b61209881611e53565b81146120a357600080fd5b50565b6120af81611e9e565b81146120ba57600080fd5b50565b6120c681611eb8565b81146120d157600080fd5b5056fea2646970667358221220cd824be35e8813f411a9b1e88313d0b5400ad3598305a55c8c432fee5610c0d364736f6c634300080400336261676136656134736561716c6b67366d737335717335366a7174616a673579637268706b6a326236366367646b756b6632716a6d6d7a7a3661796b737563696d41584367354149673859425862466a7464427931695a6a704459417752537430656c474c463547765471756c4569693156634d","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x580 JUMP JUMPDEST PUSH3 0x32 PUSH3 0x3DA JUMP JUMPDEST PUSH1 0x43 DUP2 PUSH1 0x0 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x269A PUSH1 0x40 SWAP2 CODECOPY DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH3 0x800000 DUP2 PUSH1 0x40 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7430313130390000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x80 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7430313131330000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x26DA PUSH1 0x34 SWAP2 CODECOPY DUP2 PUSH1 0xC0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x629D DUP2 PUSH1 0xE0 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP POP PUSH3 0x8517E DUP2 PUSH2 0x100 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP POP PUSH6 0x1001D1BF800 DUP2 PUSH2 0x120 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x1A0 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x23B SWAP3 SWAP2 SWAP1 PUSH3 0x46B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2A9 SWAP3 SWAP2 SWAP1 PUSH3 0x46B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C8 SWAP3 SWAP2 SWAP1 PUSH3 0x46B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2E7 SWAP3 SWAP2 SWAP1 PUSH3 0x46B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x479 SWAP1 PUSH3 0x51B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x49D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x4E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4B8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4E8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4CB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x4F8 SWAP2 SWAP1 PUSH3 0x4FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x517 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x4FD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x534 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x54B JUMPI PUSH3 0x54A PUSH3 0x551 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x210A DUP1 PUSH3 0x590 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8777B7C8 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9F4B7C7D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F4B7C7D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xAD36F184 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xEBF66EF1 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF241560C EQ PUSH2 0x3C6 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x8777B7C8 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8B7F02FD EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x991E04A4 EQ PUSH2 0x2F3 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x412A4B9A GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x412A4B9A EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x55D95609 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5C4DDEF3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x65A9B4A0 EQ PUSH2 0x23C JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x13178DC1 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x1A2811E7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x34409642 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD LT PUSH2 0x4A7 JUMPI DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH4 0x9D8B0678 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x868E10C400000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x68A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x81D SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x849 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x896 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x896 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x879 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4E PUSH2 0x105A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xAEB SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB17 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x106D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078313131313131000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0xD16 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F7 PUSH2 0x10F2 DUP5 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x111A DUP5 DUP3 DUP6 PUSH2 0x1EFD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1158 DUP5 DUP3 DUP6 PUSH2 0x1EFD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116F DUP2 PUSH2 0x208F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11C0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x120D DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1235 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1245 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x127D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12B5 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DD PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12ED DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1315 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1325 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x135D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1385 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1395 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BD PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13CD DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1405 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1465 PUSH1 0x40 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x14A1 DUP5 DUP3 DUP6 ADD PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BC DUP2 PUSH2 0x20A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D1 DUP2 PUSH2 0x20BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1510 DUP6 DUP3 DUP7 ADD PUSH2 0x1175 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1521 DUP6 DUP3 DUP7 ADD PUSH2 0x1160 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1563 DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CD DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15F6 DUP5 DUP3 DUP6 ADD PUSH2 0x1251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x161F DUP5 DUP3 DUP6 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1648 DUP5 DUP3 DUP6 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP5 DUP3 DUP6 ADD PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x169A DUP5 DUP3 DUP6 ADD PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP5 DUP3 DUP6 ADD PUSH2 0x1369 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16EC DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP5 DUP3 DUP6 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173E DUP5 DUP3 DUP6 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177F DUP5 DUP3 DUP6 ADD PUSH2 0x1449 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1791 DUP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A2 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x17AC DUP2 DUP6 PUSH2 0x1D6F JUMP JUMPDEST SWAP4 POP PUSH2 0x17BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x17C5 DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x17E5 DUP2 DUP6 PUSH2 0x1D80 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x17FE DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x181E DUP2 DUP6 PUSH2 0x1D91 JUMP JUMPDEST SWAP4 POP PUSH2 0x182E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1E71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1ED9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1861 DUP2 PUSH2 0x1EEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP3 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x187C DUP2 DUP6 PUSH2 0x1D9C JUMP JUMPDEST SWAP4 POP PUSH2 0x188C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP3 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x18B5 DUP2 DUP6 PUSH2 0x1DBE JUMP JUMPDEST SWAP4 POP PUSH2 0x18C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x30 DUP4 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x190A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x191D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1939 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x194C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1968 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x198B DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x19B5 DUP3 DUP3 PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x19CA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1AD7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x19EB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1A0E DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1A31 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1A54 DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1A77 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1A8A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1AA6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1788 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1AC2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF2 DUP3 DUP5 PUSH2 0x1809 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP3 DUP5 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1B36 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1858 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B48 DUP2 DUP5 PUSH2 0x17D0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6B DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BDD DUP2 DUP5 PUSH2 0x196E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BFF DUP2 DUP5 PUSH2 0x1998 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3C DUP2 DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C79 DUP2 DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CCC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDC PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH2 0x1CE8 DUP3 DUP3 PUSH2 0x1F71 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1B DUP3 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST PUSH2 0x1D4C DUP3 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD4 DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDF DUP4 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E14 JUMPI PUSH2 0x1E13 PUSH2 0x1FA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2A DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E35 DUP4 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x1FA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 DUP3 PUSH2 0x1EA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F2A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F0F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F39 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F6B JUMPI PUSH2 0x1F6A PUSH2 0x1FD1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7A DUP3 PUSH2 0x202F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F99 JUMPI PUSH2 0x1F98 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C69656E7420636F6E7472616374206661696C656420746F20617574686F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A65206465616C207075626C69736800000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2098 DUP2 PUSH2 0x1E53 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20AF DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP2 EQ PUSH2 0x20BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20C6 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x20D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD DUP3 0x4B 0xE3 0x5E DUP9 SGT DELEGATECALL GT 0xA9 0xB1 0xE8 DUP4 SGT 0xD0 0xB5 BLOCKHASH EXP 0xD3 MSIZE DUP4 SDIV 0xA5 0x5C DUP13 NUMBER 0x2F 0xEE JUMP LT 0xC0 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER PUSH3 0x616761 CALLDATASIZE PUSH6 0x613473656171 PUSH13 0x6B67366D737335717335366A71 PUSH21 0x616A673579637268706B6A326236366367646B756B PUSH7 0x32716A6D6D7A7A CALLDATASIZE PUSH2 0x796B PUSH20 0x7563696D41584367354149673859425862466A74 PUSH5 0x427931695A PUSH11 0x704459417752537430656C SELFBALANCE 0x4C CHAINID CALLDATALOAD SELFBALANCE PUSH23 0x5471756C4569693156634D000000000000000000000000 ","sourceMap":"601:8155:16:-:0;;;719:52;;;;;;;;;;743:21;:19;;;:21;;:::i;:::-;601:8155;;7827:927;7877:35;;:::i;:::-;7935:2;7922:7;:10;;:15;;;;;;;;;;;7947:93;;;;;;;;;;;;;;;;;:7;:24;;:93;;;;8065:7;8050;:12;;:22;;;;;;;;;;;8101:5;8082:7;:16;;:24;;;;;;;;;;;8116:25;;;;;;;;;;;;;;;;;:7;:14;;:25;;;;8151:27;;;;;;;;;;;;;;;;;:7;:16;;:27;;;;8188:70;;;;;;;;;;;;;;;;;:7;:13;;:70;;;;8284:5;8268:7;:13;;:21;;;;;;;;;;;8313:6;8299:7;:11;;:20;;;;;;;;;;;8355:13;8329:7;:23;;:39;;;;;8408:1;8378:7;:27;;:31;;;;;8447:1;8419:7;:25;;:29;;;;;8478:1;8458:7;:17;;:21;;;;;;;;;;;8510:1;8489:7;:18;;:22;;;;;;;;;;;8542:7;8522:5;:17;8528:7;:10;;;8522:17;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7827:927;:::o;601:8155::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:21:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;601:8155:16;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:34417:21","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:21","statements":[{"nodeType":"YulAssignment","src":"100:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:21"},"nodeType":"YulFunctionCall","src":"125:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:21"},"nodeType":"YulFunctionCall","src":"109:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:21"},"nodeType":"YulFunctionCall","src":"183:21:21"},"nodeType":"YulExpressionStatement","src":"183:21:21"},{"nodeType":"YulVariableDeclaration","src":"213:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:21"},"nodeType":"YulFunctionCall","src":"224:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:21"},"nodeType":"YulFunctionCall","src":"280:12:21"},"nodeType":"YulExpressionStatement","src":"280:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:21"},"nodeType":"YulFunctionCall","src":"255:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:21"},"nodeType":"YulFunctionCall","src":"252:25:21"},"nodeType":"YulIf","src":"249:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:21"},"nodeType":"YulFunctionCall","src":"303:41:21"},"nodeType":"YulExpressionStatement","src":"303:41:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:21","type":""}],"src":"7:343:21"},{"body":{"nodeType":"YulBlock","src":"440:261:21","statements":[{"nodeType":"YulAssignment","src":"450:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"517:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"475:41:21"},"nodeType":"YulFunctionCall","src":"475:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"459:15:21"},"nodeType":"YulFunctionCall","src":"459:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"450:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"541:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"548:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"534:6:21"},"nodeType":"YulFunctionCall","src":"534:21:21"},"nodeType":"YulExpressionStatement","src":"534:21:21"},{"nodeType":"YulVariableDeclaration","src":"564:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"579:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"586:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"575:3:21"},"nodeType":"YulFunctionCall","src":"575:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"568:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"629:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"631:6:21"},"nodeType":"YulFunctionCall","src":"631:12:21"},"nodeType":"YulExpressionStatement","src":"631:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"610:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"615:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"606:3:21"},"nodeType":"YulFunctionCall","src":"606:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"624:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"603:2:21"},"nodeType":"YulFunctionCall","src":"603:25:21"},"nodeType":"YulIf","src":"600:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"678:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"683:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"688:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"654:23:21"},"nodeType":"YulFunctionCall","src":"654:41:21"},"nodeType":"YulExpressionStatement","src":"654:41:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"413:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"418:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"426:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"434:5:21","type":""}],"src":"356:345:21"},{"body":{"nodeType":"YulBlock","src":"759:87:21","statements":[{"nodeType":"YulAssignment","src":"769:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"791:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"778:12:21"},"nodeType":"YulFunctionCall","src":"778:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"807:26:21"},"nodeType":"YulFunctionCall","src":"807:33:21"},"nodeType":"YulExpressionStatement","src":"807:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"707:139:21"},{"body":{"nodeType":"YulBlock","src":"926:210:21","statements":[{"body":{"nodeType":"YulBlock","src":"975:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"987:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"977:6:21"},"nodeType":"YulFunctionCall","src":"977:12:21"},"nodeType":"YulExpressionStatement","src":"977:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"954:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"962:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"950:3:21"},"nodeType":"YulFunctionCall","src":"950:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"969:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"946:3:21"},"nodeType":"YulFunctionCall","src":"946:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"939:6:21"},"nodeType":"YulFunctionCall","src":"939:35:21"},"nodeType":"YulIf","src":"936:2:21"},{"nodeType":"YulVariableDeclaration","src":"1000:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1027:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1014:12:21"},"nodeType":"YulFunctionCall","src":"1014:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1004:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1043:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1103:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1111:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:21"},"nodeType":"YulFunctionCall","src":"1099:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1118:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1126:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1052:46:21"},"nodeType":"YulFunctionCall","src":"1052:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1043:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"904:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"912:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"920:5:21","type":""}],"src":"865:271:21"},{"body":{"nodeType":"YulBlock","src":"1218:211:21","statements":[{"body":{"nodeType":"YulBlock","src":"1267:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1276:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1279:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1269:6:21"},"nodeType":"YulFunctionCall","src":"1269:12:21"},"nodeType":"YulExpressionStatement","src":"1269:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1246:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1254:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1242:3:21"},"nodeType":"YulFunctionCall","src":"1242:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"1261:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1238:3:21"},"nodeType":"YulFunctionCall","src":"1238:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1231:6:21"},"nodeType":"YulFunctionCall","src":"1231:35:21"},"nodeType":"YulIf","src":"1228:2:21"},{"nodeType":"YulVariableDeclaration","src":"1292:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1319:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1306:12:21"},"nodeType":"YulFunctionCall","src":"1306:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1296:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1335:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1396:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1404:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:21"},"nodeType":"YulFunctionCall","src":"1392:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"1411:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"1419:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1344:47:21"},"nodeType":"YulFunctionCall","src":"1344:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1335:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1196:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1204:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1212:5:21","type":""}],"src":"1156:273:21"},{"body":{"nodeType":"YulBlock","src":"1567:383:21","statements":[{"body":{"nodeType":"YulBlock","src":"1611:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1620:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1623:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1613:6:21"},"nodeType":"YulFunctionCall","src":"1613:12:21"},"nodeType":"YulExpressionStatement","src":"1613:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1588:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1593:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1584:3:21"},"nodeType":"YulFunctionCall","src":"1584:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"1605:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1580:3:21"},"nodeType":"YulFunctionCall","src":"1580:30:21"},"nodeType":"YulIf","src":"1577:2:21"},{"nodeType":"YulAssignment","src":"1636:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1661:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1645:15:21"},"nodeType":"YulFunctionCall","src":"1645:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1636:5:21"}]},{"nodeType":"YulBlock","src":"1676:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1725:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1756:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1767:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1752:3:21"},"nodeType":"YulFunctionCall","src":"1752:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1739:12:21"},"nodeType":"YulFunctionCall","src":"1739:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1729:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1817:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1826:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1829:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1819:6:21"},"nodeType":"YulFunctionCall","src":"1819:12:21"},"nodeType":"YulExpressionStatement","src":"1819:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1789:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1797:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1786:2:21"},"nodeType":"YulFunctionCall","src":"1786:30:21"},"nodeType":"YulIf","src":"1783:2:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1858:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1865:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1854:3:21"},"nodeType":"YulFunctionCall","src":"1854:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1907:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1918:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1903:3:21"},"nodeType":"YulFunctionCall","src":"1903:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"1927:3:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1872:30:21"},"nodeType":"YulFunctionCall","src":"1872:59:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1847:6:21"},"nodeType":"YulFunctionCall","src":"1847:85:21"},"nodeType":"YulExpressionStatement","src":"1847:85:21"}]}]},"name":"abi_decode_t_struct$_AddBalanceParams_$4699_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1542:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1553:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1561:5:21","type":""}],"src":"1478:472:21"},{"body":{"nodeType":"YulBlock","src":"2102:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"2146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2155:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2148:6:21"},"nodeType":"YulFunctionCall","src":"2148:12:21"},"nodeType":"YulExpressionStatement","src":"2148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2123:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2128:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2119:3:21"},"nodeType":"YulFunctionCall","src":"2119:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"2140:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2115:3:21"},"nodeType":"YulFunctionCall","src":"2115:30:21"},"nodeType":"YulIf","src":"2112:2:21"},{"nodeType":"YulAssignment","src":"2171:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2180:15:21"},"nodeType":"YulFunctionCall","src":"2180:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2171:5:21"}]},{"nodeType":"YulBlock","src":"2211:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2244:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2258:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2248:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2284:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2291:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:21"},"nodeType":"YulFunctionCall","src":"2280:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2333:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:21"},"nodeType":"YulFunctionCall","src":"2318:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"2342:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2298:19:21"},"nodeType":"YulFunctionCall","src":"2298:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:21"},"nodeType":"YulFunctionCall","src":"2273:74:21"},"nodeType":"YulExpressionStatement","src":"2273:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealActivationParams_$4773_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2077:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2088:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2096:5:21","type":""}],"src":"2006:359:21"},{"body":{"nodeType":"YulBlock","src":"2529:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"2573:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2582:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2585:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2575:6:21"},"nodeType":"YulFunctionCall","src":"2575:12:21"},"nodeType":"YulExpressionStatement","src":"2575:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2550:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2555:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2546:3:21"},"nodeType":"YulFunctionCall","src":"2546:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"2567:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2542:3:21"},"nodeType":"YulFunctionCall","src":"2542:30:21"},"nodeType":"YulIf","src":"2539:2:21"},{"nodeType":"YulAssignment","src":"2598:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2623:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2607:15:21"},"nodeType":"YulFunctionCall","src":"2607:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2598:5:21"}]},{"nodeType":"YulBlock","src":"2638:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2671:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2685:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2675:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2711:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2718:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:21"},"nodeType":"YulFunctionCall","src":"2707:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2749:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2760:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2745:3:21"},"nodeType":"YulFunctionCall","src":"2745:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"2769:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2725:19:21"},"nodeType":"YulFunctionCall","src":"2725:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:21"},"nodeType":"YulFunctionCall","src":"2700:74:21"},"nodeType":"YulExpressionStatement","src":"2700:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2504:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2515:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2523:5:21","type":""}],"src":"2427:365:21"},{"body":{"nodeType":"YulBlock","src":"2936:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"2980:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2989:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2992:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2982:6:21"},"nodeType":"YulFunctionCall","src":"2982:12:21"},"nodeType":"YulExpressionStatement","src":"2982:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2957:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2962:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2953:3:21"},"nodeType":"YulFunctionCall","src":"2953:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"2974:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2949:3:21"},"nodeType":"YulFunctionCall","src":"2949:30:21"},"nodeType":"YulIf","src":"2946:2:21"},{"nodeType":"YulAssignment","src":"3005:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3030:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3014:15:21"},"nodeType":"YulFunctionCall","src":"3014:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3005:5:21"}]},{"nodeType":"YulBlock","src":"3045:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3078:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3092:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3082:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3118:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3125:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:21"},"nodeType":"YulFunctionCall","src":"3114:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3156:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3167:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3152:3:21"},"nodeType":"YulFunctionCall","src":"3152:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"3176:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3132:19:21"},"nodeType":"YulFunctionCall","src":"3132:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3107:6:21"},"nodeType":"YulFunctionCall","src":"3107:74:21"},"nodeType":"YulExpressionStatement","src":"3107:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealClientParams_$4723_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2911:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2922:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2930:5:21","type":""}],"src":"2844:355:21"},{"body":{"nodeType":"YulBlock","src":"3359:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"3403:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3412:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3415:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3405:6:21"},"nodeType":"YulFunctionCall","src":"3405:12:21"},"nodeType":"YulExpressionStatement","src":"3405:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3380:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3385:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3376:3:21"},"nodeType":"YulFunctionCall","src":"3376:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"3397:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3372:3:21"},"nodeType":"YulFunctionCall","src":"3372:30:21"},"nodeType":"YulIf","src":"3369:2:21"},{"nodeType":"YulAssignment","src":"3428:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3453:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3437:15:21"},"nodeType":"YulFunctionCall","src":"3437:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3428:5:21"}]},{"nodeType":"YulBlock","src":"3468:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3501:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3515:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3505:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3548:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:21"},"nodeType":"YulFunctionCall","src":"3537:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3579:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3590:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:21"},"nodeType":"YulFunctionCall","src":"3575:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"3599:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3555:19:21"},"nodeType":"YulFunctionCall","src":"3555:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3530:6:21"},"nodeType":"YulFunctionCall","src":"3530:74:21"},"nodeType":"YulExpressionStatement","src":"3530:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3334:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3345:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3353:5:21","type":""}],"src":"3259:363:21"},{"body":{"nodeType":"YulBlock","src":"3774:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"3818:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3827:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3820:6:21"},"nodeType":"YulFunctionCall","src":"3820:12:21"},"nodeType":"YulExpressionStatement","src":"3820:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3795:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3800:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3791:3:21"},"nodeType":"YulFunctionCall","src":"3791:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"3812:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3787:3:21"},"nodeType":"YulFunctionCall","src":"3787:30:21"},"nodeType":"YulIf","src":"3784:2:21"},{"nodeType":"YulAssignment","src":"3843:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3868:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3852:15:21"},"nodeType":"YulFunctionCall","src":"3852:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3843:5:21"}]},{"nodeType":"YulBlock","src":"3883:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3930:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3920:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3956:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3963:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3952:3:21"},"nodeType":"YulFunctionCall","src":"3952:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3994:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4005:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:21"},"nodeType":"YulFunctionCall","src":"3990:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"4014:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"3970:19:21"},"nodeType":"YulFunctionCall","src":"3970:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3945:6:21"},"nodeType":"YulFunctionCall","src":"3945:74:21"},"nodeType":"YulExpressionStatement","src":"3945:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3749:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3760:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3768:5:21","type":""}],"src":"3678:359:21"},{"body":{"nodeType":"YulBlock","src":"4179:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4223:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4232:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4235:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4225:6:21"},"nodeType":"YulFunctionCall","src":"4225:12:21"},"nodeType":"YulExpressionStatement","src":"4225:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4200:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4196:3:21"},"nodeType":"YulFunctionCall","src":"4196:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"4217:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4192:3:21"},"nodeType":"YulFunctionCall","src":"4192:30:21"},"nodeType":"YulIf","src":"4189:2:21"},{"nodeType":"YulAssignment","src":"4248:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4257:15:21"},"nodeType":"YulFunctionCall","src":"4257:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4248:5:21"}]},{"nodeType":"YulBlock","src":"4288:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4321:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4335:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4325:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4361:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4368:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4357:3:21"},"nodeType":"YulFunctionCall","src":"4357:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4410:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4395:3:21"},"nodeType":"YulFunctionCall","src":"4395:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"4419:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4375:19:21"},"nodeType":"YulFunctionCall","src":"4375:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:21"},"nodeType":"YulFunctionCall","src":"4350:74:21"},"nodeType":"YulExpressionStatement","src":"4350:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealLabelParams_$4735_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4154:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4165:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:21","type":""}],"src":"4088:354:21"},{"body":{"nodeType":"YulBlock","src":"4610:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4654:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4663:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4666:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4656:6:21"},"nodeType":"YulFunctionCall","src":"4656:12:21"},"nodeType":"YulExpressionStatement","src":"4656:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4631:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4636:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4627:3:21"},"nodeType":"YulFunctionCall","src":"4627:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"4648:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4623:3:21"},"nodeType":"YulFunctionCall","src":"4623:30:21"},"nodeType":"YulIf","src":"4620:2:21"},{"nodeType":"YulAssignment","src":"4679:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4704:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4688:15:21"},"nodeType":"YulFunctionCall","src":"4688:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4679:5:21"}]},{"nodeType":"YulBlock","src":"4719:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4752:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4766:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4756:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4792:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4788:3:21"},"nodeType":"YulFunctionCall","src":"4788:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4830:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4841:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4826:3:21"},"nodeType":"YulFunctionCall","src":"4826:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"4850:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4806:19:21"},"nodeType":"YulFunctionCall","src":"4806:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4781:6:21"},"nodeType":"YulFunctionCall","src":"4781:74:21"},"nodeType":"YulExpressionStatement","src":"4781:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4585:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4596:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4604:5:21","type":""}],"src":"4506:367:21"},{"body":{"nodeType":"YulBlock","src":"5021:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5065:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5074:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5077:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5067:6:21"},"nodeType":"YulFunctionCall","src":"5067:12:21"},"nodeType":"YulExpressionStatement","src":"5067:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5042:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5047:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5038:3:21"},"nodeType":"YulFunctionCall","src":"5038:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"5059:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5034:3:21"},"nodeType":"YulFunctionCall","src":"5034:30:21"},"nodeType":"YulIf","src":"5031:2:21"},{"nodeType":"YulAssignment","src":"5090:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5115:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5099:15:21"},"nodeType":"YulFunctionCall","src":"5099:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5090:5:21"}]},{"nodeType":"YulBlock","src":"5130:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5163:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5177:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5167:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5203:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5210:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5199:3:21"},"nodeType":"YulFunctionCall","src":"5199:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5241:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5252:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5237:3:21"},"nodeType":"YulFunctionCall","src":"5237:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"5261:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"5217:19:21"},"nodeType":"YulFunctionCall","src":"5217:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5192:6:21"},"nodeType":"YulFunctionCall","src":"5192:74:21"},"nodeType":"YulExpressionStatement","src":"5192:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealProviderParams_$4729_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4996:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5007:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5015:5:21","type":""}],"src":"4927:357:21"},{"body":{"nodeType":"YulBlock","src":"5424:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5468:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5477:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5470:6:21"},"nodeType":"YulFunctionCall","src":"5470:12:21"},"nodeType":"YulExpressionStatement","src":"5470:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5445:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5441:3:21"},"nodeType":"YulFunctionCall","src":"5441:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"5462:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5437:3:21"},"nodeType":"YulFunctionCall","src":"5437:30:21"},"nodeType":"YulIf","src":"5434:2:21"},{"nodeType":"YulAssignment","src":"5493:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5518:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5502:15:21"},"nodeType":"YulFunctionCall","src":"5502:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5493:5:21"}]},{"nodeType":"YulBlock","src":"5533:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5566:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5580:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5570:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5606:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5613:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:21"},"nodeType":"YulFunctionCall","src":"5602:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5644:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5655:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5640:3:21"},"nodeType":"YulFunctionCall","src":"5640:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"5664:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"5620:19:21"},"nodeType":"YulFunctionCall","src":"5620:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5595:6:21"},"nodeType":"YulFunctionCall","src":"5595:74:21"},"nodeType":"YulExpressionStatement","src":"5595:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealTermParams_$4741_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5399:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5410:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5418:5:21","type":""}],"src":"5334:353:21"},{"body":{"nodeType":"YulBlock","src":"5835:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5879:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5888:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5891:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5881:6:21"},"nodeType":"YulFunctionCall","src":"5881:12:21"},"nodeType":"YulExpressionStatement","src":"5881:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5856:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5861:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5852:3:21"},"nodeType":"YulFunctionCall","src":"5852:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"5873:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5848:3:21"},"nodeType":"YulFunctionCall","src":"5848:30:21"},"nodeType":"YulIf","src":"5845:2:21"},{"nodeType":"YulAssignment","src":"5904:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5929:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5913:15:21"},"nodeType":"YulFunctionCall","src":"5913:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:21"}]},{"nodeType":"YulBlock","src":"5944:147:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5977:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5991:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5981:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6017:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6024:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:21"},"nodeType":"YulFunctionCall","src":"6013:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6066:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:21"},"nodeType":"YulFunctionCall","src":"6051:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"6075:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6031:19:21"},"nodeType":"YulFunctionCall","src":"6031:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6006:6:21"},"nodeType":"YulFunctionCall","src":"6006:74:21"},"nodeType":"YulExpressionStatement","src":"6006:74:21"}]}]},"name":"abi_decode_t_struct$_GetDealVerifiedParams_$4767_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5810:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5821:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5829:5:21","type":""}],"src":"5741:357:21"},{"body":{"nodeType":"YulBlock","src":"6246:551:21","statements":[{"body":{"nodeType":"YulBlock","src":"6290:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6299:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6302:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6292:6:21"},"nodeType":"YulFunctionCall","src":"6292:12:21"},"nodeType":"YulExpressionStatement","src":"6292:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"6267:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6263:3:21"},"nodeType":"YulFunctionCall","src":"6263:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"6284:4:21","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6259:3:21"},"nodeType":"YulFunctionCall","src":"6259:30:21"},"nodeType":"YulIf","src":"6256:2:21"},{"nodeType":"YulAssignment","src":"6315:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6340:4:21","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6324:15:21"},"nodeType":"YulFunctionCall","src":"6324:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6315:5:21"}]},{"nodeType":"YulBlock","src":"6355:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6404:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6435:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6446:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6431:3:21"},"nodeType":"YulFunctionCall","src":"6431:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6418:12:21"},"nodeType":"YulFunctionCall","src":"6418:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6408:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6496:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6505:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6508:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6498:6:21"},"nodeType":"YulFunctionCall","src":"6498:12:21"},"nodeType":"YulExpressionStatement","src":"6498:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6468:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6476:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6465:2:21"},"nodeType":"YulFunctionCall","src":"6465:30:21"},"nodeType":"YulIf","src":"6462:2:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6537:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6544:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6533:3:21"},"nodeType":"YulFunctionCall","src":"6533:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6586:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6597:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6582:3:21"},"nodeType":"YulFunctionCall","src":"6582:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"6606:3:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6551:30:21"},"nodeType":"YulFunctionCall","src":"6551:59:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6526:6:21"},"nodeType":"YulFunctionCall","src":"6526:85:21"},"nodeType":"YulExpressionStatement","src":"6526:85:21"}]},{"nodeType":"YulBlock","src":"6632:158:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6674:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6688:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6678:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6715:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6722:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6711:3:21"},"nodeType":"YulFunctionCall","src":"6711:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6754:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6765:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:21"},"nodeType":"YulFunctionCall","src":"6750:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"6774:3:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6729:20:21"},"nodeType":"YulFunctionCall","src":"6729:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6704:6:21"},"nodeType":"YulFunctionCall","src":"6704:75:21"},"nodeType":"YulExpressionStatement","src":"6704:75:21"}]}]},"name":"abi_decode_t_struct$_WithdrawBalanceParams_$4704_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6221:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6232:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6240:5:21","type":""}],"src":"6152:645:21"},{"body":{"nodeType":"YulBlock","src":"6855:87:21","statements":[{"nodeType":"YulAssignment","src":"6865:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6887:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6874:12:21"},"nodeType":"YulFunctionCall","src":"6874:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6865:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6930:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6903:26:21"},"nodeType":"YulFunctionCall","src":"6903:33:21"},"nodeType":"YulExpressionStatement","src":"6903:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6833:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6841:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6849:5:21","type":""}],"src":"6803:139:21"},{"body":{"nodeType":"YulBlock","src":"6999:86:21","statements":[{"nodeType":"YulAssignment","src":"7009:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7031:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7018:12:21"},"nodeType":"YulFunctionCall","src":"7018:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7009:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7073:5:21"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"7047:25:21"},"nodeType":"YulFunctionCall","src":"7047:32:21"},"nodeType":"YulExpressionStatement","src":"7047:32:21"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6977:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6985:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6993:5:21","type":""}],"src":"6948:137:21"},{"body":{"nodeType":"YulBlock","src":"7183:426:21","statements":[{"body":{"nodeType":"YulBlock","src":"7229:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7238:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7241:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7231:6:21"},"nodeType":"YulFunctionCall","src":"7231:12:21"},"nodeType":"YulExpressionStatement","src":"7231:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7204:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7213:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7200:3:21"},"nodeType":"YulFunctionCall","src":"7200:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7225:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7196:3:21"},"nodeType":"YulFunctionCall","src":"7196:32:21"},"nodeType":"YulIf","src":"7193:2:21"},{"nodeType":"YulBlock","src":"7255:219:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7270:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7312:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7297:3:21"},"nodeType":"YulFunctionCall","src":"7297:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7284:12:21"},"nodeType":"YulFunctionCall","src":"7284:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7274:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7362:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7371:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7374:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7364:6:21"},"nodeType":"YulFunctionCall","src":"7364:12:21"},"nodeType":"YulExpressionStatement","src":"7364:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7334:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7342:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7331:2:21"},"nodeType":"YulFunctionCall","src":"7331:30:21"},"nodeType":"YulIf","src":"7328:2:21"},{"nodeType":"YulAssignment","src":"7392:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7436:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7447:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7432:3:21"},"nodeType":"YulFunctionCall","src":"7432:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7456:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7402:29:21"},"nodeType":"YulFunctionCall","src":"7402:62:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7392:6:21"}]}]},{"nodeType":"YulBlock","src":"7484:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7499:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7513:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7503:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7529:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7575:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:21"},"nodeType":"YulFunctionCall","src":"7560:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7584:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7539:20:21"},"nodeType":"YulFunctionCall","src":"7539:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7529:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7145:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7156:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7168:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7176:6:21","type":""}],"src":"7091:518:21"},{"body":{"nodeType":"YulBlock","src":"7691:299:21","statements":[{"body":{"nodeType":"YulBlock","src":"7737:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7746:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7749:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7739:6:21"},"nodeType":"YulFunctionCall","src":"7739:12:21"},"nodeType":"YulExpressionStatement","src":"7739:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7712:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7721:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7708:3:21"},"nodeType":"YulFunctionCall","src":"7708:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7733:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7704:3:21"},"nodeType":"YulFunctionCall","src":"7704:32:21"},"nodeType":"YulIf","src":"7701:2:21"},{"nodeType":"YulBlock","src":"7763:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7778:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7809:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7820:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7805:3:21"},"nodeType":"YulFunctionCall","src":"7805:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7792:12:21"},"nodeType":"YulFunctionCall","src":"7792:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7782:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7870:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7879:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7882:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7872:6:21"},"nodeType":"YulFunctionCall","src":"7872:12:21"},"nodeType":"YulExpressionStatement","src":"7872:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7842:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7850:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7839:2:21"},"nodeType":"YulFunctionCall","src":"7839:30:21"},"nodeType":"YulIf","src":"7836:2:21"},{"nodeType":"YulAssignment","src":"7900:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7945:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7956:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7941:3:21"},"nodeType":"YulFunctionCall","src":"7941:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7965:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7910:30:21"},"nodeType":"YulFunctionCall","src":"7910:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7900:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7661:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7672:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7684:6:21","type":""}],"src":"7615:375:21"},{"body":{"nodeType":"YulBlock","src":"8096:323:21","statements":[{"body":{"nodeType":"YulBlock","src":"8142:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8151:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8154:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8144:6:21"},"nodeType":"YulFunctionCall","src":"8144:12:21"},"nodeType":"YulExpressionStatement","src":"8144:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8117:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8113:3:21"},"nodeType":"YulFunctionCall","src":"8113:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8138:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8109:3:21"},"nodeType":"YulFunctionCall","src":"8109:32:21"},"nodeType":"YulIf","src":"8106:2:21"},{"nodeType":"YulBlock","src":"8168:244:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8183:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8225:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8210:3:21"},"nodeType":"YulFunctionCall","src":"8210:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8197:12:21"},"nodeType":"YulFunctionCall","src":"8197:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8187:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8275:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8284:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8287:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8277:6:21"},"nodeType":"YulFunctionCall","src":"8277:12:21"},"nodeType":"YulExpressionStatement","src":"8277:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8247:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8255:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8244:2:21"},"nodeType":"YulFunctionCall","src":"8244:30:21"},"nodeType":"YulIf","src":"8241:2:21"},{"nodeType":"YulAssignment","src":"8305:97:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8374:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8385:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8370:3:21"},"nodeType":"YulFunctionCall","src":"8370:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8394:7:21"}],"functionName":{"name":"abi_decode_t_struct$_AddBalanceParams_$4699_memory_ptr","nodeType":"YulIdentifier","src":"8315:54:21"},"nodeType":"YulFunctionCall","src":"8315:87:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8305:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_AddBalanceParams_$4699_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8066:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8077:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8089:6:21","type":""}],"src":"7996:423:21"},{"body":{"nodeType":"YulBlock","src":"8532:237:21","statements":[{"body":{"nodeType":"YulBlock","src":"8578:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8587:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8590:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8580:6:21"},"nodeType":"YulFunctionCall","src":"8580:12:21"},"nodeType":"YulExpressionStatement","src":"8580:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8553:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8562:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8549:3:21"},"nodeType":"YulFunctionCall","src":"8549:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8574:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8545:3:21"},"nodeType":"YulFunctionCall","src":"8545:32:21"},"nodeType":"YulIf","src":"8542:2:21"},{"nodeType":"YulBlock","src":"8604:158:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8619:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8633:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8623:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8648:104:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8735:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:21"},"nodeType":"YulFunctionCall","src":"8720:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8744:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealActivationParams_$4773_memory_ptr","nodeType":"YulIdentifier","src":"8658:61:21"},"nodeType":"YulFunctionCall","src":"8658:94:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8648:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealActivationParams_$4773_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8502:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8513:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8525:6:21","type":""}],"src":"8425:344:21"},{"body":{"nodeType":"YulBlock","src":"8888:243:21","statements":[{"body":{"nodeType":"YulBlock","src":"8934:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8943:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8946:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8936:6:21"},"nodeType":"YulFunctionCall","src":"8936:12:21"},"nodeType":"YulExpressionStatement","src":"8936:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8909:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8918:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8905:3:21"},"nodeType":"YulFunctionCall","src":"8905:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8930:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8901:3:21"},"nodeType":"YulFunctionCall","src":"8901:32:21"},"nodeType":"YulIf","src":"8898:2:21"},{"nodeType":"YulBlock","src":"8960:164:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8975:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8989:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8979:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9004:110:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9086:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9097:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9082:3:21"},"nodeType":"YulFunctionCall","src":"9082:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9106:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","nodeType":"YulIdentifier","src":"9014:67:21"},"nodeType":"YulFunctionCall","src":"9014:100:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9004:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8858:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8869:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8881:6:21","type":""}],"src":"8775:356:21"},{"body":{"nodeType":"YulBlock","src":"9240:233:21","statements":[{"body":{"nodeType":"YulBlock","src":"9286:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9295:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9298:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9288:6:21"},"nodeType":"YulFunctionCall","src":"9288:12:21"},"nodeType":"YulExpressionStatement","src":"9288:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9261:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9270:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9257:3:21"},"nodeType":"YulFunctionCall","src":"9257:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9282:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9253:3:21"},"nodeType":"YulFunctionCall","src":"9253:32:21"},"nodeType":"YulIf","src":"9250:2:21"},{"nodeType":"YulBlock","src":"9312:154:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9327:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9341:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9331:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9356:100:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9428:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9439:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9424:3:21"},"nodeType":"YulFunctionCall","src":"9424:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9448:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealClientParams_$4723_memory_ptr","nodeType":"YulIdentifier","src":"9366:57:21"},"nodeType":"YulFunctionCall","src":"9366:90:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9356:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealClientParams_$4723_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9210:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9221:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9233:6:21","type":""}],"src":"9137:336:21"},{"body":{"nodeType":"YulBlock","src":"9590:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"9636:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9645:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9648:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9638:6:21"},"nodeType":"YulFunctionCall","src":"9638:12:21"},"nodeType":"YulExpressionStatement","src":"9638:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9611:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9620:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9607:3:21"},"nodeType":"YulFunctionCall","src":"9607:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9632:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9603:3:21"},"nodeType":"YulFunctionCall","src":"9603:32:21"},"nodeType":"YulIf","src":"9600:2:21"},{"nodeType":"YulBlock","src":"9662:162:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9677:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9691:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9681:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9706:108:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9786:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9797:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9782:3:21"},"nodeType":"YulFunctionCall","src":"9782:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9806:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","nodeType":"YulIdentifier","src":"9716:65:21"},"nodeType":"YulFunctionCall","src":"9716:98:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9706:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9560:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9571:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9583:6:21","type":""}],"src":"9479:352:21"},{"body":{"nodeType":"YulBlock","src":"9944:237:21","statements":[{"body":{"nodeType":"YulBlock","src":"9990:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9999:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10002:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9992:6:21"},"nodeType":"YulFunctionCall","src":"9992:12:21"},"nodeType":"YulExpressionStatement","src":"9992:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9965:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9974:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9961:3:21"},"nodeType":"YulFunctionCall","src":"9961:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9986:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9957:3:21"},"nodeType":"YulFunctionCall","src":"9957:32:21"},"nodeType":"YulIf","src":"9954:2:21"},{"nodeType":"YulBlock","src":"10016:158:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10031:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10045:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10035:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10060:104:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10136:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10147:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10132:3:21"},"nodeType":"YulFunctionCall","src":"10132:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10156:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","nodeType":"YulIdentifier","src":"10070:61:21"},"nodeType":"YulFunctionCall","src":"10070:94:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10060:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9914:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9925:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9937:6:21","type":""}],"src":"9837:344:21"},{"body":{"nodeType":"YulBlock","src":"10289:232:21","statements":[{"body":{"nodeType":"YulBlock","src":"10335:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10344:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10347:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10337:6:21"},"nodeType":"YulFunctionCall","src":"10337:12:21"},"nodeType":"YulExpressionStatement","src":"10337:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10310:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10319:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10306:3:21"},"nodeType":"YulFunctionCall","src":"10306:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10331:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10302:3:21"},"nodeType":"YulFunctionCall","src":"10302:32:21"},"nodeType":"YulIf","src":"10299:2:21"},{"nodeType":"YulBlock","src":"10361:153:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10376:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10390:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10380:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10405:99:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10476:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10487:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10472:3:21"},"nodeType":"YulFunctionCall","src":"10472:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10496:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealLabelParams_$4735_memory_ptr","nodeType":"YulIdentifier","src":"10415:56:21"},"nodeType":"YulFunctionCall","src":"10415:89:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10405:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealLabelParams_$4735_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10259:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10270:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10282:6:21","type":""}],"src":"10187:334:21"},{"body":{"nodeType":"YulBlock","src":"10642:245:21","statements":[{"body":{"nodeType":"YulBlock","src":"10688:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10697:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10700:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10690:6:21"},"nodeType":"YulFunctionCall","src":"10690:12:21"},"nodeType":"YulExpressionStatement","src":"10690:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10663:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10672:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10659:3:21"},"nodeType":"YulFunctionCall","src":"10659:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10684:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10655:3:21"},"nodeType":"YulFunctionCall","src":"10655:32:21"},"nodeType":"YulIf","src":"10652:2:21"},{"nodeType":"YulBlock","src":"10714:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10729:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10743:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10733:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10758:112:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10842:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10853:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10838:3:21"},"nodeType":"YulFunctionCall","src":"10838:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10862:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","nodeType":"YulIdentifier","src":"10768:69:21"},"nodeType":"YulFunctionCall","src":"10768:102:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10758:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10612:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10623:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10635:6:21","type":""}],"src":"10527:360:21"},{"body":{"nodeType":"YulBlock","src":"10998:235:21","statements":[{"body":{"nodeType":"YulBlock","src":"11044:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11053:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11056:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11046:6:21"},"nodeType":"YulFunctionCall","src":"11046:12:21"},"nodeType":"YulExpressionStatement","src":"11046:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11019:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11028:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11015:3:21"},"nodeType":"YulFunctionCall","src":"11015:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11040:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11011:3:21"},"nodeType":"YulFunctionCall","src":"11011:32:21"},"nodeType":"YulIf","src":"11008:2:21"},{"nodeType":"YulBlock","src":"11070:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11085:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11099:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11089:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11114:102:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11188:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11199:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11184:3:21"},"nodeType":"YulFunctionCall","src":"11184:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11208:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealProviderParams_$4729_memory_ptr","nodeType":"YulIdentifier","src":"11124:59:21"},"nodeType":"YulFunctionCall","src":"11124:92:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11114:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealProviderParams_$4729_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10968:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10979:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10991:6:21","type":""}],"src":"10893:340:21"},{"body":{"nodeType":"YulBlock","src":"11340:231:21","statements":[{"body":{"nodeType":"YulBlock","src":"11386:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11395:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11398:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11388:6:21"},"nodeType":"YulFunctionCall","src":"11388:12:21"},"nodeType":"YulExpressionStatement","src":"11388:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11361:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11370:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11357:3:21"},"nodeType":"YulFunctionCall","src":"11357:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11382:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11353:3:21"},"nodeType":"YulFunctionCall","src":"11353:32:21"},"nodeType":"YulIf","src":"11350:2:21"},{"nodeType":"YulBlock","src":"11412:152:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11427:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11441:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11431:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11456:98:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11526:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11537:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11522:3:21"},"nodeType":"YulFunctionCall","src":"11522:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11546:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealTermParams_$4741_memory_ptr","nodeType":"YulIdentifier","src":"11466:55:21"},"nodeType":"YulFunctionCall","src":"11466:88:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11456:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealTermParams_$4741_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11310:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11321:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11333:6:21","type":""}],"src":"11239:332:21"},{"body":{"nodeType":"YulBlock","src":"11682:235:21","statements":[{"body":{"nodeType":"YulBlock","src":"11728:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11737:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11740:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11730:6:21"},"nodeType":"YulFunctionCall","src":"11730:12:21"},"nodeType":"YulExpressionStatement","src":"11730:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11703:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11699:3:21"},"nodeType":"YulFunctionCall","src":"11699:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11724:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11695:3:21"},"nodeType":"YulFunctionCall","src":"11695:32:21"},"nodeType":"YulIf","src":"11692:2:21"},{"nodeType":"YulBlock","src":"11754:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11769:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11783:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11773:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11798:102:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11872:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11883:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11868:3:21"},"nodeType":"YulFunctionCall","src":"11868:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11892:7:21"}],"functionName":{"name":"abi_decode_t_struct$_GetDealVerifiedParams_$4767_memory_ptr","nodeType":"YulIdentifier","src":"11808:59:21"},"nodeType":"YulFunctionCall","src":"11808:92:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11798:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_GetDealVerifiedParams_$4767_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11652:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11663:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11675:6:21","type":""}],"src":"11577:340:21"},{"body":{"nodeType":"YulBlock","src":"12028:328:21","statements":[{"body":{"nodeType":"YulBlock","src":"12074:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12083:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12086:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12076:6:21"},"nodeType":"YulFunctionCall","src":"12076:12:21"},"nodeType":"YulExpressionStatement","src":"12076:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12049:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12058:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12045:3:21"},"nodeType":"YulFunctionCall","src":"12045:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12070:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12041:3:21"},"nodeType":"YulFunctionCall","src":"12041:32:21"},"nodeType":"YulIf","src":"12038:2:21"},{"nodeType":"YulBlock","src":"12100:249:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12115:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12146:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12157:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12142:3:21"},"nodeType":"YulFunctionCall","src":"12142:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12129:12:21"},"nodeType":"YulFunctionCall","src":"12129:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12119:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12207:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12216:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12219:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12209:6:21"},"nodeType":"YulFunctionCall","src":"12209:12:21"},"nodeType":"YulExpressionStatement","src":"12209:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12179:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12187:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12176:2:21"},"nodeType":"YulFunctionCall","src":"12176:30:21"},"nodeType":"YulIf","src":"12173:2:21"},{"nodeType":"YulAssignment","src":"12237:102:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12311:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12322:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12307:3:21"},"nodeType":"YulFunctionCall","src":"12307:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12331:7:21"}],"functionName":{"name":"abi_decode_t_struct$_WithdrawBalanceParams_$4704_memory_ptr","nodeType":"YulIdentifier","src":"12247:59:21"},"nodeType":"YulFunctionCall","src":"12247:92:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12237:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_WithdrawBalanceParams_$4704_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11998:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12009:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12021:6:21","type":""}],"src":"11923:433:21"},{"body":{"nodeType":"YulBlock","src":"12411:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12428:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12448:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12433:14:21"},"nodeType":"YulFunctionCall","src":"12433:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12421:6:21"},"nodeType":"YulFunctionCall","src":"12421:34:21"},"nodeType":"YulExpressionStatement","src":"12421:34:21"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12399:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12406:3:21","type":""}],"src":"12362:99:21"},{"body":{"nodeType":"YulBlock","src":"12547:260:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12557:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12603:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12571:31:21"},"nodeType":"YulFunctionCall","src":"12571:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12561:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12618:67:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12673:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"12678:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12625:47:21"},"nodeType":"YulFunctionCall","src":"12625:60:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12618:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12720:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12727:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12716:3:21"},"nodeType":"YulFunctionCall","src":"12716:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12734:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"12739:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12694:21:21"},"nodeType":"YulFunctionCall","src":"12694:52:21"},"nodeType":"YulExpressionStatement","src":"12694:52:21"},{"nodeType":"YulAssignment","src":"12755:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12766:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12793:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12771:21:21"},"nodeType":"YulFunctionCall","src":"12771:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12762:3:21"},"nodeType":"YulFunctionCall","src":"12762:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12755:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12528:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12535:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12543:3:21","type":""}],"src":"12467:340:21"},{"body":{"nodeType":"YulBlock","src":"12903:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12913:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12959:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12927:31:21"},"nodeType":"YulFunctionCall","src":"12927:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12917:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12974:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13039:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13044:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12981:57:21"},"nodeType":"YulFunctionCall","src":"12981:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12974:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13086:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13093:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13082:3:21"},"nodeType":"YulFunctionCall","src":"13082:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13100:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13105:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13060:21:21"},"nodeType":"YulFunctionCall","src":"13060:52:21"},"nodeType":"YulExpressionStatement","src":"13060:52:21"},{"nodeType":"YulAssignment","src":"13121:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13132:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13159:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13137:21:21"},"nodeType":"YulFunctionCall","src":"13137:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13128:3:21"},"nodeType":"YulFunctionCall","src":"13128:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13121:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12884:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12891:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12899:3:21","type":""}],"src":"12813:360:21"},{"body":{"nodeType":"YulBlock","src":"13287:265:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13297:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13343:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13311:31:21"},"nodeType":"YulFunctionCall","src":"13311:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13301:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13358:95:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13441:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13446:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13365:75:21"},"nodeType":"YulFunctionCall","src":"13365:88:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13358:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13488:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13495:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13484:3:21"},"nodeType":"YulFunctionCall","src":"13484:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13502:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13507:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13462:21:21"},"nodeType":"YulFunctionCall","src":"13462:52:21"},"nodeType":"YulExpressionStatement","src":"13462:52:21"},{"nodeType":"YulAssignment","src":"13523:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13534:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13539:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13530:3:21"},"nodeType":"YulFunctionCall","src":"13530:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13523:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13268:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13275:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13283:3:21","type":""}],"src":"13179:373:21"},{"body":{"nodeType":"YulBlock","src":"13609:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13626:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13647:5:21"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"13631:15:21"},"nodeType":"YulFunctionCall","src":"13631:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13619:6:21"},"nodeType":"YulFunctionCall","src":"13619:35:21"},"nodeType":"YulExpressionStatement","src":"13619:35:21"}]},"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13597:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13604:3:21","type":""}],"src":"13558:102:21"},{"body":{"nodeType":"YulBlock","src":"13737:72:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13754:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13796:5:21"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"13759:36:21"},"nodeType":"YulFunctionCall","src":"13759:43:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13747:6:21"},"nodeType":"YulFunctionCall","src":"13747:56:21"},"nodeType":"YulExpressionStatement","src":"13747:56:21"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13725:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13732:3:21","type":""}],"src":"13666:143:21"},{"body":{"nodeType":"YulBlock","src":"13896:82:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13913:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13965:5:21"}],"functionName":{"name":"convert_t_rational_2643134072_by_1_to_t_uint32","nodeType":"YulIdentifier","src":"13918:46:21"},"nodeType":"YulFunctionCall","src":"13918:53:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13906:6:21"},"nodeType":"YulFunctionCall","src":"13906:66:21"},"nodeType":"YulExpressionStatement","src":"13906:66:21"}]},"name":"abi_encode_t_rational_2643134072_by_1_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13884:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13891:3:21","type":""}],"src":"13815:163:21"},{"body":{"nodeType":"YulBlock","src":"14066:262:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14076:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14123:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14090:32:21"},"nodeType":"YulFunctionCall","src":"14090:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14080:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14138:68:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14194:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14199:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14145:48:21"},"nodeType":"YulFunctionCall","src":"14145:61:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14138:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14241:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14248:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:21"},"nodeType":"YulFunctionCall","src":"14237:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"14255:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14260:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14215:21:21"},"nodeType":"YulFunctionCall","src":"14215:52:21"},"nodeType":"YulExpressionStatement","src":"14215:52:21"},{"nodeType":"YulAssignment","src":"14276:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14287:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14314:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14292:21:21"},"nodeType":"YulFunctionCall","src":"14292:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14283:3:21"},"nodeType":"YulFunctionCall","src":"14283:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14276:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14047:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14054:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14062:3:21","type":""}],"src":"13984:344:21"},{"body":{"nodeType":"YulBlock","src":"14444:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14454:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14501:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14468:32:21"},"nodeType":"YulFunctionCall","src":"14468:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14458:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14516:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14600:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14605:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14523:76:21"},"nodeType":"YulFunctionCall","src":"14523:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14516:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14647:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14654:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14643:3:21"},"nodeType":"YulFunctionCall","src":"14643:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"14661:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14666:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14621:21:21"},"nodeType":"YulFunctionCall","src":"14621:52:21"},"nodeType":"YulExpressionStatement","src":"14621:52:21"},{"nodeType":"YulAssignment","src":"14682:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14693:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"14698:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14689:3:21"},"nodeType":"YulFunctionCall","src":"14689:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14682:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14425:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14432:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14440:3:21","type":""}],"src":"14334:377:21"},{"body":{"nodeType":"YulBlock","src":"14863:220:21","statements":[{"nodeType":"YulAssignment","src":"14873:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14939:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14944:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14880:58:21"},"nodeType":"YulFunctionCall","src":"14880:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14873:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15045:3:21"}],"functionName":{"name":"store_literal_in_memory_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb","nodeType":"YulIdentifier","src":"14956:88:21"},"nodeType":"YulFunctionCall","src":"14956:93:21"},"nodeType":"YulExpressionStatement","src":"14956:93:21"},{"nodeType":"YulAssignment","src":"15058:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15069:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15074:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15065:3:21"},"nodeType":"YulFunctionCall","src":"15065:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15058:3:21"}]}]},"name":"abi_encode_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14851:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14859:3:21","type":""}],"src":"14717:366:21"},{"body":{"nodeType":"YulBlock","src":"15305:396:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15315:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15331:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15336:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15327:3:21"},"nodeType":"YulFunctionCall","src":"15327:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15319:4:21","type":""}]},{"nodeType":"YulBlock","src":"15351:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15389:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15419:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15426:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15415:3:21"},"nodeType":"YulFunctionCall","src":"15415:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15409:5:21"},"nodeType":"YulFunctionCall","src":"15409:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15393:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15479:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15497:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15502:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15493:3:21"},"nodeType":"YulFunctionCall","src":"15493:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15445:33:21"},"nodeType":"YulFunctionCall","src":"15445:63:21"},"nodeType":"YulExpressionStatement","src":"15445:63:21"}]},{"nodeType":"YulBlock","src":"15528:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15565:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15595:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15602:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15591:3:21"},"nodeType":"YulFunctionCall","src":"15591:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15585:5:21"},"nodeType":"YulFunctionCall","src":"15585:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15569:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15655:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15673:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15678:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15669:3:21"},"nodeType":"YulFunctionCall","src":"15669:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15621:33:21"},"nodeType":"YulFunctionCall","src":"15621:63:21"},"nodeType":"YulExpressionStatement","src":"15621:63:21"}]}]},"name":"abi_encode_t_struct$_GetBalanceReturn_$4712_memory_ptr_to_t_struct$_GetBalanceReturn_$4712_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15292:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15299:3:21","type":""}],"src":"15171:530:21"},{"body":{"nodeType":"YulBlock","src":"15951:394:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15961:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15977:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15982:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15973:3:21"},"nodeType":"YulFunctionCall","src":"15973:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15965:4:21","type":""}]},{"nodeType":"YulBlock","src":"15997:165:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16037:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16067:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"16074:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16063:3:21"},"nodeType":"YulFunctionCall","src":"16063:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16057:5:21"},"nodeType":"YulFunctionCall","src":"16057:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16041:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16123:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16141:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16146:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16137:3:21"},"nodeType":"YulFunctionCall","src":"16137:14:21"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"16093:29:21"},"nodeType":"YulFunctionCall","src":"16093:59:21"},"nodeType":"YulExpressionStatement","src":"16093:59:21"}]},{"nodeType":"YulBlock","src":"16172:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16213:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16243:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"16250:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16239:3:21"},"nodeType":"YulFunctionCall","src":"16239:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16233:5:21"},"nodeType":"YulFunctionCall","src":"16233:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16217:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16299:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16317:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16322:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16313:3:21"},"nodeType":"YulFunctionCall","src":"16313:14:21"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"16269:29:21"},"nodeType":"YulFunctionCall","src":"16269:59:21"},"nodeType":"YulExpressionStatement","src":"16269:59:21"}]}]},"name":"abi_encode_t_struct$_GetDealActivationReturn_$4778_memory_ptr_to_t_struct$_GetDealActivationReturn_$4778_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15938:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15945:3:21","type":""}],"src":"15803:542:21"},{"body":{"nodeType":"YulBlock","src":"16619:223:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16629:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16650:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16641:3:21"},"nodeType":"YulFunctionCall","src":"16641:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"16633:4:21","type":""}]},{"nodeType":"YulBlock","src":"16665:170:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16706:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16736:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"16743:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16732:3:21"},"nodeType":"YulFunctionCall","src":"16732:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16726:5:21"},"nodeType":"YulFunctionCall","src":"16726:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16710:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16796:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16814:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16819:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16810:3:21"},"nodeType":"YulFunctionCall","src":"16810:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16762:33:21"},"nodeType":"YulFunctionCall","src":"16762:63:21"},"nodeType":"YulExpressionStatement","src":"16762:63:21"}]}]},"name":"abi_encode_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16606:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16613:3:21","type":""}],"src":"16459:383:21"},{"body":{"nodeType":"YulBlock","src":"17084:310:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17094:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17110:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17115:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17106:3:21"},"nodeType":"YulFunctionCall","src":"17106:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"17098:4:21","type":""}]},{"nodeType":"YulBlock","src":"17130:237:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17167:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17197:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17204:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17193:3:21"},"nodeType":"YulFunctionCall","src":"17193:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17187:5:21"},"nodeType":"YulFunctionCall","src":"17187:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17171:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17235:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17240:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17231:3:21"},"nodeType":"YulFunctionCall","src":"17231:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17251:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17257:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17247:3:21"},"nodeType":"YulFunctionCall","src":"17247:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17224:6:21"},"nodeType":"YulFunctionCall","src":"17224:38:21"},"nodeType":"YulExpressionStatement","src":"17224:38:21"},{"nodeType":"YulAssignment","src":"17275:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17337:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"17351:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17283:53:21"},"nodeType":"YulFunctionCall","src":"17283:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17275:4:21"}]}]},{"nodeType":"YulAssignment","src":"17377:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"17384:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17377:3:21"}]}]},"name":"abi_encode_t_struct$_GetDealClientReturn_$4726_memory_ptr_to_t_struct$_GetDealClientReturn_$4726_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17063:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17070:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17079:3:21","type":""}],"src":"16936:458:21"},{"body":{"nodeType":"YulBlock","src":"17668:478:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17678:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17694:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17699:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17690:3:21"},"nodeType":"YulFunctionCall","src":"17690:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"17682:4:21","type":""}]},{"nodeType":"YulBlock","src":"17714:233:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17749:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17779:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17786:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17775:3:21"},"nodeType":"YulFunctionCall","src":"17775:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17769:5:21"},"nodeType":"YulFunctionCall","src":"17769:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17753:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17817:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17822:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17813:3:21"},"nodeType":"YulFunctionCall","src":"17813:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17833:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17839:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17829:3:21"},"nodeType":"YulFunctionCall","src":"17829:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17806:6:21"},"nodeType":"YulFunctionCall","src":"17806:38:21"},"nodeType":"YulExpressionStatement","src":"17806:38:21"},{"nodeType":"YulAssignment","src":"17857:79:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17917:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"17931:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17865:51:21"},"nodeType":"YulFunctionCall","src":"17865:71:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17857:4:21"}]}]},{"nodeType":"YulBlock","src":"17957:162:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17992:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18022:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"18029:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18018:3:21"},"nodeType":"YulFunctionCall","src":"18018:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18012:5:21"},"nodeType":"YulFunctionCall","src":"18012:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17996:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18080:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18098:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18094:3:21"},"nodeType":"YulFunctionCall","src":"18094:14:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"18048:31:21"},"nodeType":"YulFunctionCall","src":"18048:61:21"},"nodeType":"YulExpressionStatement","src":"18048:61:21"}]},{"nodeType":"YulAssignment","src":"18129:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"18136:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18129:3:21"}]}]},"name":"abi_encode_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17647:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17654:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17663:3:21","type":""}],"src":"17504:642:21"},{"body":{"nodeType":"YulBlock","src":"18396:228:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18406:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18422:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18427:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18418:3:21"},"nodeType":"YulFunctionCall","src":"18418:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"18410:4:21","type":""}]},{"nodeType":"YulBlock","src":"18442:175:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18488:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18518:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"18525:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18514:3:21"},"nodeType":"YulFunctionCall","src":"18514:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18508:5:21"},"nodeType":"YulFunctionCall","src":"18508:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18492:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18578:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18596:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18601:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:21"},"nodeType":"YulFunctionCall","src":"18592:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18544:33:21"},"nodeType":"YulFunctionCall","src":"18544:63:21"},"nodeType":"YulExpressionStatement","src":"18544:63:21"}]}]},"name":"abi_encode_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18383:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18390:3:21","type":""}],"src":"18248:376:21"},{"body":{"nodeType":"YulBlock","src":"18862:309:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18872:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18888:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18893:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18884:3:21"},"nodeType":"YulFunctionCall","src":"18884:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"18876:4:21","type":""}]},{"nodeType":"YulBlock","src":"18908:236:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18944:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18974:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"18981:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18970:3:21"},"nodeType":"YulFunctionCall","src":"18970:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18964:5:21"},"nodeType":"YulFunctionCall","src":"18964:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18948:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19012:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19017:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19008:3:21"},"nodeType":"YulFunctionCall","src":"19008:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19028:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"19034:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19024:3:21"},"nodeType":"YulFunctionCall","src":"19024:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19001:6:21"},"nodeType":"YulFunctionCall","src":"19001:38:21"},"nodeType":"YulExpressionStatement","src":"19001:38:21"},{"nodeType":"YulAssignment","src":"19052:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19114:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"19128:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19060:53:21"},"nodeType":"YulFunctionCall","src":"19060:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19052:4:21"}]}]},{"nodeType":"YulAssignment","src":"19154:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"19161:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19154:3:21"}]}]},"name":"abi_encode_t_struct$_GetDealLabelReturn_$4738_memory_ptr_to_t_struct$_GetDealLabelReturn_$4738_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18841:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18848:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18857:3:21","type":""}],"src":"18716:455:21"},{"body":{"nodeType":"YulBlock","src":"19453:223:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19463:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19479:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19484:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19475:3:21"},"nodeType":"YulFunctionCall","src":"19475:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19467:4:21","type":""}]},{"nodeType":"YulBlock","src":"19499:170:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19540:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19570:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19577:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19566:3:21"},"nodeType":"YulFunctionCall","src":"19566:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19560:5:21"},"nodeType":"YulFunctionCall","src":"19560:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19544:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19630:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19648:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19653:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19644:3:21"},"nodeType":"YulFunctionCall","src":"19644:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19596:33:21"},"nodeType":"YulFunctionCall","src":"19596:63:21"},"nodeType":"YulExpressionStatement","src":"19596:63:21"}]}]},"name":"abi_encode_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19440:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19447:3:21","type":""}],"src":"19289:387:21"},{"body":{"nodeType":"YulBlock","src":"19926:312:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19936:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19952:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19957:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19948:3:21"},"nodeType":"YulFunctionCall","src":"19948:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19940:4:21","type":""}]},{"nodeType":"YulBlock","src":"19972:239:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20011:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20041:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20048:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20037:3:21"},"nodeType":"YulFunctionCall","src":"20037:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20031:5:21"},"nodeType":"YulFunctionCall","src":"20031:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20015:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20079:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20084:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20075:3:21"},"nodeType":"YulFunctionCall","src":"20075:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20095:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"20101:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20091:3:21"},"nodeType":"YulFunctionCall","src":"20091:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20068:6:21"},"nodeType":"YulFunctionCall","src":"20068:38:21"},"nodeType":"YulExpressionStatement","src":"20068:38:21"},{"nodeType":"YulAssignment","src":"20119:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20181:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"20195:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20127:53:21"},"nodeType":"YulFunctionCall","src":"20127:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20119:4:21"}]}]},{"nodeType":"YulAssignment","src":"20221:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"20228:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20221:3:21"}]}]},"name":"abi_encode_t_struct$_GetDealProviderReturn_$4732_memory_ptr_to_t_struct$_GetDealProviderReturn_$4732_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19905:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19912:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19921:3:21","type":""}],"src":"19774:464:21"},{"body":{"nodeType":"YulBlock","src":"20464:383:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20474:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20490:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20495:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20486:3:21"},"nodeType":"YulFunctionCall","src":"20486:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20478:4:21","type":""}]},{"nodeType":"YulBlock","src":"20510:161:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20546:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20576:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20583:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20572:3:21"},"nodeType":"YulFunctionCall","src":"20572:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20566:5:21"},"nodeType":"YulFunctionCall","src":"20566:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20550:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20632:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20650:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20655:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20646:3:21"},"nodeType":"YulFunctionCall","src":"20646:14:21"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"20602:29:21"},"nodeType":"YulFunctionCall","src":"20602:59:21"},"nodeType":"YulExpressionStatement","src":"20602:59:21"}]},{"nodeType":"YulBlock","src":"20681:159:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20715:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20745:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"20752:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20741:3:21"},"nodeType":"YulFunctionCall","src":"20741:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20735:5:21"},"nodeType":"YulFunctionCall","src":"20735:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20719:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20801:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20819:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20824:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20815:3:21"},"nodeType":"YulFunctionCall","src":"20815:14:21"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"20771:29:21"},"nodeType":"YulFunctionCall","src":"20771:59:21"},"nodeType":"YulExpressionStatement","src":"20771:59:21"}]}]},"name":"abi_encode_t_struct$_GetDealTermReturn_$4746_memory_ptr_to_t_struct$_GetDealTermReturn_$4746_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20451:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20458:3:21","type":""}],"src":"20328:519:21"},{"body":{"nodeType":"YulBlock","src":"21089:215:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21099:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21115:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21120:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21111:3:21"},"nodeType":"YulFunctionCall","src":"21111:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21103:4:21","type":""}]},{"nodeType":"YulBlock","src":"21135:162:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21174:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21204:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21211:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21200:3:21"},"nodeType":"YulFunctionCall","src":"21200:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21194:5:21"},"nodeType":"YulFunctionCall","src":"21194:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21178:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21258:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21276:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21281:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21272:3:21"},"nodeType":"YulFunctionCall","src":"21272:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"21230:27:21"},"nodeType":"YulFunctionCall","src":"21230:57:21"},"nodeType":"YulExpressionStatement","src":"21230:57:21"}]}]},"name":"abi_encode_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21076:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21083:3:21","type":""}],"src":"20945:359:21"},{"body":{"nodeType":"YulBlock","src":"21546:229:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21556:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21572:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21577:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21568:3:21"},"nodeType":"YulFunctionCall","src":"21568:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21560:4:21","type":""}]},{"nodeType":"YulBlock","src":"21592:176:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21639:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21669:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21676:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21665:3:21"},"nodeType":"YulFunctionCall","src":"21665:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21659:5:21"},"nodeType":"YulFunctionCall","src":"21659:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21643:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21729:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21747:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21752:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21743:3:21"},"nodeType":"YulFunctionCall","src":"21743:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21695:33:21"},"nodeType":"YulFunctionCall","src":"21695:63:21"},"nodeType":"YulExpressionStatement","src":"21695:63:21"}]}]},"name":"abi_encode_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21533:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21540:3:21","type":""}],"src":"21402:373:21"},{"body":{"nodeType":"YulBlock","src":"21836:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21853:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21876:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21858:17:21"},"nodeType":"YulFunctionCall","src":"21858:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21846:6:21"},"nodeType":"YulFunctionCall","src":"21846:37:21"},"nodeType":"YulExpressionStatement","src":"21846:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21824:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21831:3:21","type":""}],"src":"21781:108:21"},{"body":{"nodeType":"YulBlock","src":"21948:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21965:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21987:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"21970:16:21"},"nodeType":"YulFunctionCall","src":"21970:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21958:6:21"},"nodeType":"YulFunctionCall","src":"21958:36:21"},"nodeType":"YulExpressionStatement","src":"21958:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21936:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21943:3:21","type":""}],"src":"21895:105:21"},{"body":{"nodeType":"YulBlock","src":"22140:137:21","statements":[{"nodeType":"YulAssignment","src":"22151:100:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22238:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"22247:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22158:79:21"},"nodeType":"YulFunctionCall","src":"22158:93:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22151:3:21"}]},{"nodeType":"YulAssignment","src":"22261:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"22268:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22261:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22119:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22125:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22136:3:21","type":""}],"src":"22006:271:21"},{"body":{"nodeType":"YulBlock","src":"22419:139:21","statements":[{"nodeType":"YulAssignment","src":"22430:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22519:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"22528:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22437:81:21"},"nodeType":"YulFunctionCall","src":"22437:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22430:3:21"}]},{"nodeType":"YulAssignment","src":"22542:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"22549:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22542:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22398:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22404:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22415:3:21","type":""}],"src":"22283:275:21"},{"body":{"nodeType":"YulBlock","src":"22758:379:21","statements":[{"nodeType":"YulAssignment","src":"22768:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22780:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22791:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22776:3:21"},"nodeType":"YulFunctionCall","src":"22776:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22768:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22854:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22867:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22878:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22863:3:21"},"nodeType":"YulFunctionCall","src":"22863:17:21"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"22804:49:21"},"nodeType":"YulFunctionCall","src":"22804:77:21"},"nodeType":"YulExpressionStatement","src":"22804:77:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22951:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22964:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22975:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22960:3:21"},"nodeType":"YulFunctionCall","src":"22960:18:21"}],"functionName":{"name":"abi_encode_t_rational_2643134072_by_1_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"22891:59:21"},"nodeType":"YulFunctionCall","src":"22891:88:21"},"nodeType":"YulExpressionStatement","src":"22891:88:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23000:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23011:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22996:3:21"},"nodeType":"YulFunctionCall","src":"22996:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23020:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23026:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23016:3:21"},"nodeType":"YulFunctionCall","src":"23016:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22989:6:21"},"nodeType":"YulFunctionCall","src":"22989:48:21"},"nodeType":"YulExpressionStatement","src":"22989:48:21"},{"nodeType":"YulAssignment","src":"23046:84:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23116:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"23125:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23054:61:21"},"nodeType":"YulFunctionCall","src":"23054:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23046:4:21"}]}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_rational_2643134072_by_1_t_bytes_memory_ptr__to_t_uint8_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22714:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22726:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22734:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22742:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22753:4:21","type":""}],"src":"22564:573:21"},{"body":{"nodeType":"YulBlock","src":"23314:248:21","statements":[{"nodeType":"YulAssignment","src":"23324:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23336:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23347:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23332:3:21"},"nodeType":"YulFunctionCall","src":"23332:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23324:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23371:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23382:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23367:3:21"},"nodeType":"YulFunctionCall","src":"23367:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23390:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23396:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23386:3:21"},"nodeType":"YulFunctionCall","src":"23386:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23360:6:21"},"nodeType":"YulFunctionCall","src":"23360:47:21"},"nodeType":"YulExpressionStatement","src":"23360:47:21"},{"nodeType":"YulAssignment","src":"23416:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23550:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23424:124:21"},"nodeType":"YulFunctionCall","src":"23424:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23416:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23294:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23309:4:21","type":""}],"src":"23143:419:21"},{"body":{"nodeType":"YulBlock","src":"23734:192:21","statements":[{"nodeType":"YulAssignment","src":"23744:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23756:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23767:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23752:3:21"},"nodeType":"YulFunctionCall","src":"23752:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23744:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23892:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23905:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23916:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23901:3:21"},"nodeType":"YulFunctionCall","src":"23901:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetBalanceReturn_$4712_memory_ptr_to_t_struct$_GetBalanceReturn_$4712_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23780:111:21"},"nodeType":"YulFunctionCall","src":"23780:139:21"},"nodeType":"YulExpressionStatement","src":"23780:139:21"}]},"name":"abi_encode_tuple_t_struct$_GetBalanceReturn_$4712_memory_ptr__to_t_struct$_GetBalanceReturn_$4712_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23706:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23718:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23729:4:21","type":""}],"src":"23568:358:21"},{"body":{"nodeType":"YulBlock","src":"24112:206:21","statements":[{"nodeType":"YulAssignment","src":"24122:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24145:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24130:3:21"},"nodeType":"YulFunctionCall","src":"24130:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24122:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24284:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24297:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24308:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24293:3:21"},"nodeType":"YulFunctionCall","src":"24293:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealActivationReturn_$4778_memory_ptr_to_t_struct$_GetDealActivationReturn_$4778_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24158:125:21"},"nodeType":"YulFunctionCall","src":"24158:153:21"},"nodeType":"YulExpressionStatement","src":"24158:153:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealActivationReturn_$4778_memory_ptr__to_t_struct$_GetDealActivationReturn_$4778_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24084:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24096:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24107:4:21","type":""}],"src":"23932:386:21"},{"body":{"nodeType":"YulBlock","src":"24516:218:21","statements":[{"nodeType":"YulAssignment","src":"24526:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24538:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24549:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24534:3:21"},"nodeType":"YulFunctionCall","src":"24534:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24526:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24700:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24724:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24709:3:21"},"nodeType":"YulFunctionCall","src":"24709:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24562:137:21"},"nodeType":"YulFunctionCall","src":"24562:165:21"},"nodeType":"YulExpressionStatement","src":"24562:165:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr__to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24488:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24500:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24511:4:21","type":""}],"src":"24324:410:21"},{"body":{"nodeType":"YulBlock","src":"24912:249:21","statements":[{"nodeType":"YulAssignment","src":"24922:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24934:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24945:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24930:3:21"},"nodeType":"YulFunctionCall","src":"24930:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24922:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24980:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24965:3:21"},"nodeType":"YulFunctionCall","src":"24965:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24988:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24994:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24984:3:21"},"nodeType":"YulFunctionCall","src":"24984:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24958:6:21"},"nodeType":"YulFunctionCall","src":"24958:47:21"},"nodeType":"YulExpressionStatement","src":"24958:47:21"},{"nodeType":"YulAssignment","src":"25014:140:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25140:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"25149:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealClientReturn_$4726_memory_ptr_to_t_struct$_GetDealClientReturn_$4726_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25022:117:21"},"nodeType":"YulFunctionCall","src":"25022:132:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25014:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetDealClientReturn_$4726_memory_ptr__to_t_struct$_GetDealClientReturn_$4726_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24884:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24896:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24907:4:21","type":""}],"src":"24740:421:21"},{"body":{"nodeType":"YulBlock","src":"25355:265:21","statements":[{"nodeType":"YulAssignment","src":"25365:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25377:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25388:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25373:3:21"},"nodeType":"YulFunctionCall","src":"25373:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25365:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25412:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25423:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25408:3:21"},"nodeType":"YulFunctionCall","src":"25408:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25431:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25437:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25427:3:21"},"nodeType":"YulFunctionCall","src":"25427:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25401:6:21"},"nodeType":"YulFunctionCall","src":"25401:47:21"},"nodeType":"YulExpressionStatement","src":"25401:47:21"},{"nodeType":"YulAssignment","src":"25457:156:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25599:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"25608:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25465:133:21"},"nodeType":"YulFunctionCall","src":"25465:148:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25457:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr__to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25327:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25339:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25350:4:21","type":""}],"src":"25167:453:21"},{"body":{"nodeType":"YulBlock","src":"25806:206:21","statements":[{"nodeType":"YulAssignment","src":"25816:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25828:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25839:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25824:3:21"},"nodeType":"YulFunctionCall","src":"25824:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25816:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25978:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25991:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26002:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25987:3:21"},"nodeType":"YulFunctionCall","src":"25987:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25852:125:21"},"nodeType":"YulFunctionCall","src":"25852:153:21"},"nodeType":"YulExpressionStatement","src":"25852:153:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr__to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25778:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25790:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25801:4:21","type":""}],"src":"25626:386:21"},{"body":{"nodeType":"YulBlock","src":"26188:247:21","statements":[{"nodeType":"YulAssignment","src":"26198:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26221:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26206:3:21"},"nodeType":"YulFunctionCall","src":"26206:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26198:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26245:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26256:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26241:3:21"},"nodeType":"YulFunctionCall","src":"26241:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26264:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"26270:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26260:3:21"},"nodeType":"YulFunctionCall","src":"26260:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26234:6:21"},"nodeType":"YulFunctionCall","src":"26234:47:21"},"nodeType":"YulExpressionStatement","src":"26234:47:21"},{"nodeType":"YulAssignment","src":"26290:138:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26414:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"26423:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealLabelReturn_$4738_memory_ptr_to_t_struct$_GetDealLabelReturn_$4738_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26298:115:21"},"nodeType":"YulFunctionCall","src":"26298:130:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26290:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetDealLabelReturn_$4738_memory_ptr__to_t_struct$_GetDealLabelReturn_$4738_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26160:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26172:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26183:4:21","type":""}],"src":"26018:417:21"},{"body":{"nodeType":"YulBlock","src":"26637:222:21","statements":[{"nodeType":"YulAssignment","src":"26647:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26659:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26670:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26655:3:21"},"nodeType":"YulFunctionCall","src":"26655:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26647:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26825:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26838:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26849:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26834:3:21"},"nodeType":"YulFunctionCall","src":"26834:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26683:141:21"},"nodeType":"YulFunctionCall","src":"26683:169:21"},"nodeType":"YulExpressionStatement","src":"26683:169:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr__to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26609:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26621:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26632:4:21","type":""}],"src":"26441:418:21"},{"body":{"nodeType":"YulBlock","src":"27041:253:21","statements":[{"nodeType":"YulAssignment","src":"27051:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27074:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27059:3:21"},"nodeType":"YulFunctionCall","src":"27059:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27051:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27098:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27109:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27094:3:21"},"nodeType":"YulFunctionCall","src":"27094:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27117:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27123:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27113:3:21"},"nodeType":"YulFunctionCall","src":"27113:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27087:6:21"},"nodeType":"YulFunctionCall","src":"27087:47:21"},"nodeType":"YulExpressionStatement","src":"27087:47:21"},{"nodeType":"YulAssignment","src":"27143:144:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27273:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"27282:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealProviderReturn_$4732_memory_ptr_to_t_struct$_GetDealProviderReturn_$4732_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27151:121:21"},"nodeType":"YulFunctionCall","src":"27151:136:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27143:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetDealProviderReturn_$4732_memory_ptr__to_t_struct$_GetDealProviderReturn_$4732_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27013:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27025:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27036:4:21","type":""}],"src":"26865:429:21"},{"body":{"nodeType":"YulBlock","src":"27468:194:21","statements":[{"nodeType":"YulAssignment","src":"27478:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27490:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27501:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27486:3:21"},"nodeType":"YulFunctionCall","src":"27486:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27478:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27628:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27652:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27637:3:21"},"nodeType":"YulFunctionCall","src":"27637:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealTermReturn_$4746_memory_ptr_to_t_struct$_GetDealTermReturn_$4746_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27514:113:21"},"nodeType":"YulFunctionCall","src":"27514:141:21"},"nodeType":"YulExpressionStatement","src":"27514:141:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealTermReturn_$4746_memory_ptr__to_t_struct$_GetDealTermReturn_$4746_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27440:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27452:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27463:4:21","type":""}],"src":"27300:362:21"},{"body":{"nodeType":"YulBlock","src":"27844:202:21","statements":[{"nodeType":"YulAssignment","src":"27854:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27866:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27877:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27862:3:21"},"nodeType":"YulFunctionCall","src":"27862:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27854:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28012:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28025:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28036:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28021:3:21"},"nodeType":"YulFunctionCall","src":"28021:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27890:121:21"},"nodeType":"YulFunctionCall","src":"27890:149:21"},"nodeType":"YulExpressionStatement","src":"27890:149:21"}]},"name":"abi_encode_tuple_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr__to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27816:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27828:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27839:4:21","type":""}],"src":"27668:378:21"},{"body":{"nodeType":"YulBlock","src":"28228:202:21","statements":[{"nodeType":"YulAssignment","src":"28238:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28250:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28261:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28246:3:21"},"nodeType":"YulFunctionCall","src":"28246:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28238:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28396:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28409:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28420:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28405:3:21"},"nodeType":"YulFunctionCall","src":"28405:17:21"}],"functionName":{"name":"abi_encode_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28274:121:21"},"nodeType":"YulFunctionCall","src":"28274:149:21"},"nodeType":"YulExpressionStatement","src":"28274:149:21"}]},"name":"abi_encode_tuple_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr__to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28200:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28212:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28223:4:21","type":""}],"src":"28052:378:21"},{"body":{"nodeType":"YulBlock","src":"28477:88:21","statements":[{"nodeType":"YulAssignment","src":"28487:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"28497:18:21"},"nodeType":"YulFunctionCall","src":"28497:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28487:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28546:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"28554:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"28526:19:21"},"nodeType":"YulFunctionCall","src":"28526:33:21"},"nodeType":"YulExpressionStatement","src":"28526:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"28461:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"28470:6:21","type":""}],"src":"28436:129:21"},{"body":{"nodeType":"YulBlock","src":"28611:35:21","statements":[{"nodeType":"YulAssignment","src":"28621:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28637:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28631:5:21"},"nodeType":"YulFunctionCall","src":"28631:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28621:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"28604:6:21","type":""}],"src":"28571:75:21"},{"body":{"nodeType":"YulBlock","src":"28718:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"28823:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28825:16:21"},"nodeType":"YulFunctionCall","src":"28825:18:21"},"nodeType":"YulExpressionStatement","src":"28825:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28795:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28803:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28792:2:21"},"nodeType":"YulFunctionCall","src":"28792:30:21"},"nodeType":"YulIf","src":"28789:2:21"},{"nodeType":"YulAssignment","src":"28855:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28885:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"28863:21:21"},"nodeType":"YulFunctionCall","src":"28863:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28855:4:21"}]},{"nodeType":"YulAssignment","src":"28929:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"28941:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"28947:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28937:3:21"},"nodeType":"YulFunctionCall","src":"28937:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28929:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"28702:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"28713:4:21","type":""}],"src":"28652:307:21"},{"body":{"nodeType":"YulBlock","src":"29032:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"29137:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"29139:16:21"},"nodeType":"YulFunctionCall","src":"29139:18:21"},"nodeType":"YulExpressionStatement","src":"29139:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29109:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29117:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29106:2:21"},"nodeType":"YulFunctionCall","src":"29106:30:21"},"nodeType":"YulIf","src":"29103:2:21"},{"nodeType":"YulAssignment","src":"29169:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29199:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29177:21:21"},"nodeType":"YulFunctionCall","src":"29177:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"29169:4:21"}]},{"nodeType":"YulAssignment","src":"29243:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"29255:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"29261:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29251:3:21"},"nodeType":"YulFunctionCall","src":"29251:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"29243:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"29016:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"29027:4:21","type":""}],"src":"28965:308:21"},{"body":{"nodeType":"YulBlock","src":"29337:40:21","statements":[{"nodeType":"YulAssignment","src":"29348:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29364:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29358:5:21"},"nodeType":"YulFunctionCall","src":"29358:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29348:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29320:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29330:6:21","type":""}],"src":"29279:98:21"},{"body":{"nodeType":"YulBlock","src":"29442:40:21","statements":[{"nodeType":"YulAssignment","src":"29453:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29469:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29463:5:21"},"nodeType":"YulFunctionCall","src":"29463:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29453:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29425:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29435:6:21","type":""}],"src":"29383:99:21"},{"body":{"nodeType":"YulBlock","src":"29573:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29590:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"29595:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29583:6:21"},"nodeType":"YulFunctionCall","src":"29583:19:21"},"nodeType":"YulExpressionStatement","src":"29583:19:21"},{"nodeType":"YulAssignment","src":"29611:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29630:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29635:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29626:3:21"},"nodeType":"YulFunctionCall","src":"29626:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29611:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29545:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"29550:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29561:11:21","type":""}],"src":"29488:158:21"},{"body":{"nodeType":"YulBlock","src":"29747:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29764:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"29769:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29757:6:21"},"nodeType":"YulFunctionCall","src":"29757:19:21"},"nodeType":"YulExpressionStatement","src":"29757:19:21"},{"nodeType":"YulAssignment","src":"29785:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29804:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29809:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29800:3:21"},"nodeType":"YulFunctionCall","src":"29800:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29785:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29719:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"29724:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29735:11:21","type":""}],"src":"29652:168:21"},{"body":{"nodeType":"YulBlock","src":"29939:34:21","statements":[{"nodeType":"YulAssignment","src":"29949:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"29964:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29949:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29911:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"29916:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29927:11:21","type":""}],"src":"29826:147:21"},{"body":{"nodeType":"YulBlock","src":"30065:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30082:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"30087:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30075:6:21"},"nodeType":"YulFunctionCall","src":"30075:19:21"},"nodeType":"YulExpressionStatement","src":"30075:19:21"},{"nodeType":"YulAssignment","src":"30103:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30122:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30127:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30118:3:21"},"nodeType":"YulFunctionCall","src":"30118:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30103:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30037:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"30042:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30053:11:21","type":""}],"src":"29979:159:21"},{"body":{"nodeType":"YulBlock","src":"30240:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30257:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"30262:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30250:6:21"},"nodeType":"YulFunctionCall","src":"30250:19:21"},"nodeType":"YulExpressionStatement","src":"30250:19:21"},{"nodeType":"YulAssignment","src":"30278:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30297:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30302:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30293:3:21"},"nodeType":"YulFunctionCall","src":"30293:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30278:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30212:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"30217:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30228:11:21","type":""}],"src":"30144:169:21"},{"body":{"nodeType":"YulBlock","src":"30433:34:21","statements":[{"nodeType":"YulAssignment","src":"30443:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"30458:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30443:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30405:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"30410:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30421:11:21","type":""}],"src":"30319:148:21"},{"body":{"nodeType":"YulBlock","src":"30517:261:21","statements":[{"nodeType":"YulAssignment","src":"30527:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30550:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30532:17:21"},"nodeType":"YulFunctionCall","src":"30532:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30527:1:21"}]},{"nodeType":"YulAssignment","src":"30561:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30584:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30566:17:21"},"nodeType":"YulFunctionCall","src":"30566:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30561:1:21"}]},{"body":{"nodeType":"YulBlock","src":"30724:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30726:16:21"},"nodeType":"YulFunctionCall","src":"30726:18:21"},"nodeType":"YulExpressionStatement","src":"30726:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30645:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30652:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"30720:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30648:3:21"},"nodeType":"YulFunctionCall","src":"30648:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30642:2:21"},"nodeType":"YulFunctionCall","src":"30642:81:21"},"nodeType":"YulIf","src":"30639:2:21"},{"nodeType":"YulAssignment","src":"30756:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30767:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"30770:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30763:3:21"},"nodeType":"YulFunctionCall","src":"30763:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"30756:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30504:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"30507:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"30513:3:21","type":""}],"src":"30473:305:21"},{"body":{"nodeType":"YulBlock","src":"30829:146:21","statements":[{"nodeType":"YulAssignment","src":"30839:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30862:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30844:17:21"},"nodeType":"YulFunctionCall","src":"30844:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30839:1:21"}]},{"nodeType":"YulAssignment","src":"30873:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30896:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30878:17:21"},"nodeType":"YulFunctionCall","src":"30878:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30873:1:21"}]},{"body":{"nodeType":"YulBlock","src":"30920:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30922:16:21"},"nodeType":"YulFunctionCall","src":"30922:18:21"},"nodeType":"YulExpressionStatement","src":"30922:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30914:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"30917:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30911:2:21"},"nodeType":"YulFunctionCall","src":"30911:8:21"},"nodeType":"YulIf","src":"30908:2:21"},{"nodeType":"YulAssignment","src":"30952:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30964:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"30967:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30960:3:21"},"nodeType":"YulFunctionCall","src":"30960:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30952:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30815:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"30818:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30824:4:21","type":""}],"src":"30784:191:21"},{"body":{"nodeType":"YulBlock","src":"31026:51:21","statements":[{"nodeType":"YulAssignment","src":"31036:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31065:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"31047:17:21"},"nodeType":"YulFunctionCall","src":"31047:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31036:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31008:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31018:7:21","type":""}],"src":"30981:96:21"},{"body":{"nodeType":"YulBlock","src":"31125:48:21","statements":[{"nodeType":"YulAssignment","src":"31135:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31160:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31153:6:21"},"nodeType":"YulFunctionCall","src":"31153:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31146:6:21"},"nodeType":"YulFunctionCall","src":"31146:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31135:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31107:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31117:7:21","type":""}],"src":"31083:90:21"},{"body":{"nodeType":"YulBlock","src":"31222:47:21","statements":[{"nodeType":"YulAssignment","src":"31232:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31254:1:21","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"31257:5:21"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"31243:10:21"},"nodeType":"YulFunctionCall","src":"31243:20:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31232:7:21"}]}]},"name":"cleanup_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31204:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31214:7:21","type":""}],"src":"31179:90:21"},{"body":{"nodeType":"YulBlock","src":"31320:81:21","statements":[{"nodeType":"YulAssignment","src":"31330:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31345:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31352:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31341:3:21"},"nodeType":"YulFunctionCall","src":"31341:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31330:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31302:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31312:7:21","type":""}],"src":"31275:126:21"},{"body":{"nodeType":"YulBlock","src":"31452:32:21","statements":[{"nodeType":"YulAssignment","src":"31462:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31473:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31462:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31434:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31444:7:21","type":""}],"src":"31407:77:21"},{"body":{"nodeType":"YulBlock","src":"31534:49:21","statements":[{"nodeType":"YulAssignment","src":"31544:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31559:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31566:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31555:3:21"},"nodeType":"YulFunctionCall","src":"31555:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31544:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31516:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31526:7:21","type":""}],"src":"31490:93:21"},{"body":{"nodeType":"YulBlock","src":"31633:57:21","statements":[{"nodeType":"YulAssignment","src":"31643:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31658:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31665:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31654:3:21"},"nodeType":"YulFunctionCall","src":"31654:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31643:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31615:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31625:7:21","type":""}],"src":"31589:101:21"},{"body":{"nodeType":"YulBlock","src":"31739:43:21","statements":[{"nodeType":"YulAssignment","src":"31749:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31764:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31771:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31760:3:21"},"nodeType":"YulFunctionCall","src":"31760:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31749:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31721:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31731:7:21","type":""}],"src":"31696:86:21"},{"body":{"nodeType":"YulBlock","src":"31854:51:21","statements":[{"nodeType":"YulAssignment","src":"31864:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31893:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"31877:15:21"},"nodeType":"YulFunctionCall","src":"31877:22:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31864:9:21"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31834:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31844:9:21","type":""}],"src":"31788:117:21"},{"body":{"nodeType":"YulBlock","src":"31987:52:21","statements":[{"nodeType":"YulAssignment","src":"31997:36:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32027:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"32010:16:21"},"nodeType":"YulFunctionCall","src":"32010:23:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31997:9:21"}]}]},"name":"convert_t_rational_2643134072_by_1_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31967:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31977:9:21","type":""}],"src":"31911:128:21"},{"body":{"nodeType":"YulBlock","src":"32096:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32119:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"32124:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"32129:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"32106:12:21"},"nodeType":"YulFunctionCall","src":"32106:30:21"},"nodeType":"YulExpressionStatement","src":"32106:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32177:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"32182:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32173:3:21"},"nodeType":"YulFunctionCall","src":"32173:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"32191:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32166:6:21"},"nodeType":"YulFunctionCall","src":"32166:27:21"},"nodeType":"YulExpressionStatement","src":"32166:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"32078:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"32083:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"32088:6:21","type":""}],"src":"32045:154:21"},{"body":{"nodeType":"YulBlock","src":"32254:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32264:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32273:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"32268:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"32333:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32358:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"32363:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32354:3:21"},"nodeType":"YulFunctionCall","src":"32354:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32377:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"32382:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32373:3:21"},"nodeType":"YulFunctionCall","src":"32373:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32367:5:21"},"nodeType":"YulFunctionCall","src":"32367:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32347:6:21"},"nodeType":"YulFunctionCall","src":"32347:39:21"},"nodeType":"YulExpressionStatement","src":"32347:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32294:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"32297:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32291:2:21"},"nodeType":"YulFunctionCall","src":"32291:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32305:19:21","statements":[{"nodeType":"YulAssignment","src":"32307:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32316:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"32319:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32312:3:21"},"nodeType":"YulFunctionCall","src":"32312:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"32307:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"32287:3:21","statements":[]},"src":"32283:113:21"},{"body":{"nodeType":"YulBlock","src":"32430:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32480:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"32485:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32476:3:21"},"nodeType":"YulFunctionCall","src":"32476:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"32494:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32469:6:21"},"nodeType":"YulFunctionCall","src":"32469:27:21"},"nodeType":"YulExpressionStatement","src":"32469:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32411:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"32414:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32408:2:21"},"nodeType":"YulFunctionCall","src":"32408:13:21"},"nodeType":"YulIf","src":"32405:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"32236:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"32241:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"32246:6:21","type":""}],"src":"32205:307:21"},{"body":{"nodeType":"YulBlock","src":"32569:269:21","statements":[{"nodeType":"YulAssignment","src":"32579:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32593:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"32599:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32589:3:21"},"nodeType":"YulFunctionCall","src":"32589:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32579:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"32610:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32640:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"32646:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32636:3:21"},"nodeType":"YulFunctionCall","src":"32636:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"32614:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"32687:51:21","statements":[{"nodeType":"YulAssignment","src":"32701:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32715:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32723:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32711:3:21"},"nodeType":"YulFunctionCall","src":"32711:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32701:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"32667:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32660:6:21"},"nodeType":"YulFunctionCall","src":"32660:26:21"},"nodeType":"YulIf","src":"32657:2:21"},{"body":{"nodeType":"YulBlock","src":"32790:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"32804:16:21"},"nodeType":"YulFunctionCall","src":"32804:18:21"},"nodeType":"YulExpressionStatement","src":"32804:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"32754:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32777:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32785:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32774:2:21"},"nodeType":"YulFunctionCall","src":"32774:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32751:2:21"},"nodeType":"YulFunctionCall","src":"32751:38:21"},"nodeType":"YulIf","src":"32748:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"32553:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"32562:6:21","type":""}],"src":"32518:320:21"},{"body":{"nodeType":"YulBlock","src":"32887:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32897:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32919:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"32949:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"32927:21:21"},"nodeType":"YulFunctionCall","src":"32927:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32915:3:21"},"nodeType":"YulFunctionCall","src":"32915:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"32901:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"33066:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"33068:16:21"},"nodeType":"YulFunctionCall","src":"33068:18:21"},"nodeType":"YulExpressionStatement","src":"33068:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"33009:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"33021:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33006:2:21"},"nodeType":"YulFunctionCall","src":"33006:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"33045:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"33057:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33042:2:21"},"nodeType":"YulFunctionCall","src":"33042:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33003:2:21"},"nodeType":"YulFunctionCall","src":"33003:62:21"},"nodeType":"YulIf","src":"33000:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33104:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"33108:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33097:6:21"},"nodeType":"YulFunctionCall","src":"33097:22:21"},"nodeType":"YulExpressionStatement","src":"33097:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32873:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"32881:4:21","type":""}],"src":"32844:281:21"},{"body":{"nodeType":"YulBlock","src":"33159:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33176:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33179:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33169:6:21"},"nodeType":"YulFunctionCall","src":"33169:88:21"},"nodeType":"YulExpressionStatement","src":"33169:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33273:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33276:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33266:6:21"},"nodeType":"YulFunctionCall","src":"33266:15:21"},"nodeType":"YulExpressionStatement","src":"33266:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33297:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33300:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33290:6:21"},"nodeType":"YulFunctionCall","src":"33290:15:21"},"nodeType":"YulExpressionStatement","src":"33290:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"33131:180:21"},{"body":{"nodeType":"YulBlock","src":"33345:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33362:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33365:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33355:6:21"},"nodeType":"YulFunctionCall","src":"33355:88:21"},"nodeType":"YulExpressionStatement","src":"33355:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33459:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33462:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33452:6:21"},"nodeType":"YulFunctionCall","src":"33452:15:21"},"nodeType":"YulExpressionStatement","src":"33452:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33483:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33486:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33476:6:21"},"nodeType":"YulFunctionCall","src":"33476:15:21"},"nodeType":"YulExpressionStatement","src":"33476:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"33317:180:21"},{"body":{"nodeType":"YulBlock","src":"33531:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33548:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33551:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33541:6:21"},"nodeType":"YulFunctionCall","src":"33541:88:21"},"nodeType":"YulExpressionStatement","src":"33541:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33645:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33648:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33638:6:21"},"nodeType":"YulFunctionCall","src":"33638:15:21"},"nodeType":"YulExpressionStatement","src":"33638:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33669:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33672:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33662:6:21"},"nodeType":"YulFunctionCall","src":"33662:15:21"},"nodeType":"YulExpressionStatement","src":"33662:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"33503:180:21"},{"body":{"nodeType":"YulBlock","src":"33737:54:21","statements":[{"nodeType":"YulAssignment","src":"33747:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33765:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"33772:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33761:3:21"},"nodeType":"YulFunctionCall","src":"33761:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33781:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33777:3:21"},"nodeType":"YulFunctionCall","src":"33777:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33757:3:21"},"nodeType":"YulFunctionCall","src":"33757:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33747:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33720:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33730:6:21","type":""}],"src":"33689:102:21"},{"body":{"nodeType":"YulBlock","src":"33903:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33925:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33933:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33921:3:21"},"nodeType":"YulFunctionCall","src":"33921:14:21"},{"kind":"string","nodeType":"YulLiteral","src":"33937:34:21","type":"","value":"client contract failed to author"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33914:6:21"},"nodeType":"YulFunctionCall","src":"33914:58:21"},"nodeType":"YulExpressionStatement","src":"33914:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33993:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"34001:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33989:3:21"},"nodeType":"YulFunctionCall","src":"33989:15:21"},{"kind":"string","nodeType":"YulLiteral","src":"34006:18:21","type":"","value":"ize deal publish"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33982:6:21"},"nodeType":"YulFunctionCall","src":"33982:43:21"},"nodeType":"YulExpressionStatement","src":"33982:43:21"}]},"name":"store_literal_in_memory_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33895:6:21","type":""}],"src":"33797:235:21"},{"body":{"nodeType":"YulBlock","src":"34081:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"34138:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34147:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34150:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34140:6:21"},"nodeType":"YulFunctionCall","src":"34140:12:21"},"nodeType":"YulExpressionStatement","src":"34140:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34104:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34129:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"34111:17:21"},"nodeType":"YulFunctionCall","src":"34111:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34101:2:21"},"nodeType":"YulFunctionCall","src":"34101:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34094:6:21"},"nodeType":"YulFunctionCall","src":"34094:43:21"},"nodeType":"YulIf","src":"34091:2:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34074:5:21","type":""}],"src":"34038:122:21"},{"body":{"nodeType":"YulBlock","src":"34209:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"34266:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34275:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34278:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34268:6:21"},"nodeType":"YulFunctionCall","src":"34268:12:21"},"nodeType":"YulExpressionStatement","src":"34268:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34232:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34257:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34239:17:21"},"nodeType":"YulFunctionCall","src":"34239:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34229:2:21"},"nodeType":"YulFunctionCall","src":"34229:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34222:6:21"},"nodeType":"YulFunctionCall","src":"34222:43:21"},"nodeType":"YulIf","src":"34219:2:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34202:5:21","type":""}],"src":"34166:122:21"},{"body":{"nodeType":"YulBlock","src":"34336:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"34392:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34401:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34404:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34394:6:21"},"nodeType":"YulFunctionCall","src":"34394:12:21"},"nodeType":"YulExpressionStatement","src":"34394:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34359:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34383:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"34366:16:21"},"nodeType":"YulFunctionCall","src":"34366:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34356:2:21"},"nodeType":"YulFunctionCall","src":"34356:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34349:6:21"},"nodeType":"YulFunctionCall","src":"34349:42:21"},"nodeType":"YulIf","src":"34346:2:21"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34329:5:21","type":""}],"src":"34294:120:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct MarketTypes.AddBalanceParams\n    function abi_decode_t_struct$_AddBalanceParams_$4699_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // provider_or_client\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealActivationParams\n    function abi_decode_t_struct$_GetDealActivationParams_$4773_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealClientCollateralParams\n    function abi_decode_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealClientParams\n    function abi_decode_t_struct$_GetDealClientParams_$4723_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealDataCommitmentParams\n    function abi_decode_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealEpochPriceParams\n    function abi_decode_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealLabelParams\n    function abi_decode_t_struct$_GetDealLabelParams_$4735_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealProviderCollateralParams\n    function abi_decode_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealProviderParams\n    function abi_decode_t_struct$_GetDealProviderParams_$4729_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealTermParams\n    function abi_decode_t_struct$_GetDealTermParams_$4741_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.GetDealVerifiedParams\n    function abi_decode_t_struct$_GetDealVerifiedParams_$4767_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MarketTypes.WithdrawBalanceParams\n    function abi_decode_t_struct$_WithdrawBalanceParams_$4704_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocate_memory(0x40)\n\n        {\n            // provider_or_client\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenAmount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_AddBalanceParams_$4699_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_AddBalanceParams_$4699_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealActivationParams_$4773_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealActivationParams_$4773_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealClientCollateralParams_$4755_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealClientParams_$4723_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealClientParams_$4723_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealDataCommitmentParams_$4715_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealEpochPriceParams_$4749_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealLabelParams_$4735_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealLabelParams_$4735_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealProviderCollateralParams_$4761_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealProviderParams_$4729_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealProviderParams_$4729_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealTermParams_$4741_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealTermParams_$4741_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GetDealVerifiedParams_$4767_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GetDealVerifiedParams_$4767_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_WithdrawBalanceParams_$4704_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_WithdrawBalanceParams_$4704_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_int64_to_t_int64(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_t_rational_2643134072_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_2643134072_by_1_to_t_uint32(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb(pos)\n        end := add(pos, 64)\n    }\n\n    // struct MarketTypes.GetBalanceReturn -> struct MarketTypes.GetBalanceReturn\n    function abi_encode_t_struct$_GetBalanceReturn_$4712_memory_ptr_to_t_struct$_GetBalanceReturn_$4712_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // balance\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // locked\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealActivationReturn -> struct MarketTypes.GetDealActivationReturn\n    function abi_encode_t_struct$_GetDealActivationReturn_$4778_memory_ptr_to_t_struct$_GetDealActivationReturn_$4778_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // activated\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // terminated\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealClientCollateralReturn -> struct MarketTypes.GetDealClientCollateralReturn\n    function abi_encode_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // collateral\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealClientReturn -> struct MarketTypes.GetDealClientReturn\n    function abi_encode_t_struct$_GetDealClientReturn_$4726_memory_ptr_to_t_struct$_GetDealClientReturn_$4726_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // client\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MarketTypes.GetDealDataCommitmentReturn -> struct MarketTypes.GetDealDataCommitmentReturn\n    function abi_encode_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // data\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // size\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    // struct MarketTypes.GetDealEpochPriceReturn -> struct MarketTypes.GetDealEpochPriceReturn\n    function abi_encode_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // price_per_epoch\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealLabelReturn -> struct MarketTypes.GetDealLabelReturn\n    function abi_encode_t_struct$_GetDealLabelReturn_$4738_memory_ptr_to_t_struct$_GetDealLabelReturn_$4738_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // label\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MarketTypes.GetDealProviderCollateralReturn -> struct MarketTypes.GetDealProviderCollateralReturn\n    function abi_encode_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // collateral\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealProviderReturn -> struct MarketTypes.GetDealProviderReturn\n    function abi_encode_t_struct$_GetDealProviderReturn_$4732_memory_ptr_to_t_struct$_GetDealProviderReturn_$4732_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // provider\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MarketTypes.GetDealTermReturn -> struct MarketTypes.GetDealTermReturn\n    function abi_encode_t_struct$_GetDealTermReturn_$4746_memory_ptr_to_t_struct$_GetDealTermReturn_$4746_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // start\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // end\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    // struct MarketTypes.GetDealVerifiedReturn -> struct MarketTypes.GetDealVerifiedReturn\n    function abi_encode_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // verified\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MarketTypes.WithdrawBalanceReturn -> struct MarketTypes.WithdrawBalanceReturn\n    function abi_encode_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // amount_withdrawn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_2643134072_by_1_t_bytes_memory_ptr__to_t_uint8_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_2643134072_by_1_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetBalanceReturn_$4712_memory_ptr__to_t_struct$_GetBalanceReturn_$4712_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_GetBalanceReturn_$4712_memory_ptr_to_t_struct$_GetBalanceReturn_$4712_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealActivationReturn_$4778_memory_ptr__to_t_struct$_GetDealActivationReturn_$4778_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_GetDealActivationReturn_$4778_memory_ptr_to_t_struct$_GetDealActivationReturn_$4778_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr__to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_to_t_struct$_GetDealClientCollateralReturn_$4758_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealClientReturn_$4726_memory_ptr__to_t_struct$_GetDealClientReturn_$4726_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetDealClientReturn_$4726_memory_ptr_to_t_struct$_GetDealClientReturn_$4726_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr__to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_to_t_struct$_GetDealDataCommitmentReturn_$4720_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr__to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_to_t_struct$_GetDealEpochPriceReturn_$4752_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealLabelReturn_$4738_memory_ptr__to_t_struct$_GetDealLabelReturn_$4738_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetDealLabelReturn_$4738_memory_ptr_to_t_struct$_GetDealLabelReturn_$4738_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr__to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_to_t_struct$_GetDealProviderCollateralReturn_$4764_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealProviderReturn_$4732_memory_ptr__to_t_struct$_GetDealProviderReturn_$4732_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetDealProviderReturn_$4732_memory_ptr_to_t_struct$_GetDealProviderReturn_$4732_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealTermReturn_$4746_memory_ptr__to_t_struct$_GetDealTermReturn_$4746_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_GetDealTermReturn_$4746_memory_ptr_to_t_struct$_GetDealTermReturn_$4746_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr__to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_to_t_struct$_GetDealVerifiedReturn_$4770_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr__to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_to_t_struct$_WithdrawBalanceReturn_$4707_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(value)\n    }\n\n    function convert_t_rational_2643134072_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_64399c19a94382d5cbf07c821411c107f87098a5f5dc260ef3246aa857d22ebb(memPtr) {\n\n        mstore(add(memPtr, 0), \"client contract failed to author\")\n\n        mstore(add(memPtr, 32), \"ize deal publish\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100dd5760003560e01c80638777b7c81161007f5780639f4b7c7d116100595780639f4b7c7d14610330578063ad36f1841461036d578063ebf66ef1146103aa578063f241560c146103c6576100dd565b80638777b7c8146102795780638b7f02fd146102b6578063991e04a4146102f3576100dd565b8063412a4b9a116100bb578063412a4b9a1461018557806355d95609146101c25780635c4ddef3146101ff57806365a9b4a01461023c576100dd565b806313178dc1146100e25780631a2811e71461011f578063344096421461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611747565b610403565b6040516101169190611cb7565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906116a3565b6104e6565b6040516101539190611c44565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906114d7565b61058b565b005b34801561019157600080fd5b506101ac60048036038101906101a79190611651565b6106d3565b6040516101b99190611c07565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e491906116cc565b610778565b6040516101f69190611c5f565b60405180910390f35b34801561020b57600080fd5b506102266004803603810190610221919061171e565b6108a5565b6040516102339190611c9c565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e919061152b565b610959565b6040516102709190611b72565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b91906115d6565b6109a1565b6040516102ad9190611ba8565b60405180910390f35b3480156102c257600080fd5b506102dd60048036038101906102d891906115ff565b610a46565b6040516102ea9190611bc3565b60405180910390f35b3480156102ff57600080fd5b5061031a60048036038101906103159190611628565b610b73565b6040516103279190611be5565b60405180910390f35b34801561033c57600080fd5b506103576004803603810190610352919061167a565b610c71565b6040516103649190611c22565b60405180910390f35b34801561037957600080fd5b50610394600480360381019061038f91906116f5565b610d9e565b6040516103a19190611c81565b60405180910390f35b6103c460048036038101906103bf919061156c565b610e97565b005b3480156103d257600080fd5b506103ed60048036038101906103e891906115ad565b610ed3565b6040516103fa9190611b8d565b60405180910390f35b61040b610fcc565b60008083600001516040516104209190611afd565b908152602001604051809103902054905082602001516000846000015160405161044a9190611afd565b908152602001604051809103902054106104a7578260200151600084600001516040516104779190611afd565b908152602001604051809103902060008282546104949190611e1f565b92505081905550826020015190506104cf565b60008084600001516040516104bc9190611afd565b9081526020016040518091039020819055505b604051806020016040528082815250915050919050565b6104ee610fdf565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161054757600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600801548152509050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166000639d8b0678856040516024016105be93929190611b14565b6040516020818303038152906040527f868e10c4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106489190611ae6565b6000604051808303816000865af19150503d8060008114610685576040519150601f19603f3d011682016040523d82523d6000602084013e61068a565b606091505b50509050806106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b52565b60405180910390fd5b505050565b6106db610ff2565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161073457600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600701548152509050919050565b610780611005565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16116107d957600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600401805461081d90611f3f565b80601f016020809104026020016040519081016040528092919081815260200182805461084990611f3f565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b50505050508152509050919050565b6108ad611018565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161090657600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160089054906101000a900460ff1615158152509050919050565b61096161102d565b600080836040516109729190611afd565b908152602001604051809103902054905060405180604001604052808281526020016000815250915050919050565b6109a9611047565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610a0257600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600901548152509050919050565b610a4e61105a565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610aa757600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206003018054610aeb90611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1790611f3f565b8015610b645780601f10610b3957610100808354040283529160200191610b64565b820191906000526020600020905b815481529060010190602001808311610b4757829003601f168201915b50505050508152509050919050565b610b7b61106d565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610bd457600080fd5b60405180604001604052806040518060400160405280600881526020017f3078313131313131000000000000000000000000000000000000000000000000815250815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168152509050919050565b610c79611091565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610cd257600080fd5b604051806020016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054610d1690611f3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4290611f3f565b8015610d8f5780601f10610d6457610100808354040283529160200191610d8f565b820191906000526020600020905b815481529060010190602001808311610d7257829003601f168201915b50505050508152509050919050565b610da66110a4565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610dff57600080fd5b604051806040016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a900460070b60070b815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160089054906101000a900460070b60070b8152509050919050565b3460008260000151604051610eac9190611afd565b90815260200160405180910390206000828254610ec99190611dc9565b9250508190555050565b610edb6110c4565b600060016000846000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611610f3457600080fd5b604051806040016040528060016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460070b60070b815260200160016000856000015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600a0160089054906101000a900460070b60070b8152509050919050565b6040518060200160405280600081525090565b6040518060200160405280600081525090565b6040518060200160405280600081525090565b6040518060200160405280606081525090565b60405180602001604052806000151581525090565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b6040518060200160405280606081525090565b604051806040016040528060608152602001600067ffffffffffffffff1681525090565b6040518060200160405280606081525090565b6040518060400160405280600060070b8152602001600060070b81525090565b6040518060400160405280600060070b8152602001600060070b81525090565b60006110f76110f284611cf7565b611cd2565b90508281526020810184848401111561110f57600080fd5b61111a848285611efd565b509392505050565b600061113561113084611d28565b611cd2565b90508281526020810184848401111561114d57600080fd5b611158848285611efd565b509392505050565b60008135905061116f8161208f565b92915050565b600082601f83011261118657600080fd5b81356111968482602086016110e4565b91505092915050565b600082601f8301126111b057600080fd5b81356111c0848260208601611122565b91505092915050565b6000602082840312156111db57600080fd5b6111e56020611cd2565b9050600082013567ffffffffffffffff81111561120157600080fd5b61120d8482850161119f565b60008301525092915050565b60006020828403121561122b57600080fd5b6112356020611cd2565b90506000611245848285016114c2565b60008301525092915050565b60006020828403121561126357600080fd5b61126d6020611cd2565b9050600061127d848285016114c2565b60008301525092915050565b60006020828403121561129b57600080fd5b6112a56020611cd2565b905060006112b5848285016114c2565b60008301525092915050565b6000602082840312156112d357600080fd5b6112dd6020611cd2565b905060006112ed848285016114c2565b60008301525092915050565b60006020828403121561130b57600080fd5b6113156020611cd2565b90506000611325848285016114c2565b60008301525092915050565b60006020828403121561134357600080fd5b61134d6020611cd2565b9050600061135d848285016114c2565b60008301525092915050565b60006020828403121561137b57600080fd5b6113856020611cd2565b90506000611395848285016114c2565b60008301525092915050565b6000602082840312156113b357600080fd5b6113bd6020611cd2565b905060006113cd848285016114c2565b60008301525092915050565b6000602082840312156113eb57600080fd5b6113f56020611cd2565b90506000611405848285016114c2565b60008301525092915050565b60006020828403121561142357600080fd5b61142d6020611cd2565b9050600061143d848285016114c2565b60008301525092915050565b60006040828403121561145b57600080fd5b6114656040611cd2565b9050600082013567ffffffffffffffff81111561148157600080fd5b61148d8482850161119f565b60008301525060206114a1848285016114ad565b60208301525092915050565b6000813590506114bc816120a6565b92915050565b6000813590506114d1816120bd565b92915050565b600080604083850312156114ea57600080fd5b600083013567ffffffffffffffff81111561150457600080fd5b61151085828601611175565b925050602061152185828601611160565b9150509250929050565b60006020828403121561153d57600080fd5b600082013567ffffffffffffffff81111561155757600080fd5b6115638482850161119f565b91505092915050565b60006020828403121561157e57600080fd5b600082013567ffffffffffffffff81111561159857600080fd5b6115a4848285016111c9565b91505092915050565b6000602082840312156115bf57600080fd5b60006115cd84828501611219565b91505092915050565b6000602082840312156115e857600080fd5b60006115f684828501611251565b91505092915050565b60006020828403121561161157600080fd5b600061161f84828501611289565b91505092915050565b60006020828403121561163a57600080fd5b6000611648848285016112c1565b91505092915050565b60006020828403121561166357600080fd5b6000611671848285016112f9565b91505092915050565b60006020828403121561168c57600080fd5b600061169a84828501611331565b91505092915050565b6000602082840312156116b557600080fd5b60006116c384828501611369565b91505092915050565b6000602082840312156116de57600080fd5b60006116ec848285016113a1565b91505092915050565b60006020828403121561170757600080fd5b6000611715848285016113d9565b91505092915050565b60006020828403121561173057600080fd5b600061173e84828501611411565b91505092915050565b60006020828403121561175957600080fd5b600082013567ffffffffffffffff81111561177357600080fd5b61177f84828501611449565b91505092915050565b61179181611e65565b82525050565b60006117a282611d59565b6117ac8185611d6f565b93506117bc818560208601611f0c565b6117c58161202f565b840191505092915050565b60006117db82611d59565b6117e58185611d80565b93506117f5818560208601611f0c565b6117fe8161202f565b840191505092915050565b600061181482611d59565b61181e8185611d91565b935061182e818560208601611f0c565b80840191505092915050565b61184381611e71565b82525050565b61185281611ed9565b82525050565b61186181611eeb565b82525050565b600061187282611d64565b61187c8185611d9c565b935061188c818560208601611f0c565b6118958161202f565b840191505092915050565b60006118ab82611d64565b6118b58185611dbe565b93506118c5818560208601611f0c565b80840191505092915050565b60006118de603083611dad565b91506118e982612040565b604082019050919050565b60408201600082015161190a6000850182611ac8565b50602082015161191d6020850182611ac8565b50505050565b604082016000820151611939600085018261183a565b50602082015161194c602085018261183a565b50505050565b6020820160008201516119686000850182611ac8565b50505050565b6000602083016000830151848203600086015261198b8282611867565b9150508091505092915050565b600060408301600083015184820360008601526119b58282611797565b91505060208301516119ca6020860182611ad7565b508091505092915050565b6020820160008201516119eb6000850182611ac8565b50505050565b60006020830160008301518482036000860152611a0e8282611867565b9150508091505092915050565b602082016000820151611a316000850182611ac8565b50505050565b60006020830160008301518482036000860152611a548282611867565b9150508091505092915050565b604082016000820151611a77600085018261183a565b506020820151611a8a602085018261183a565b50505050565b602082016000820151611aa66000850182611788565b50505050565b602082016000820151611ac26000850182611ac8565b50505050565b611ad181611e9e565b82525050565b611ae081611eb8565b82525050565b6000611af28284611809565b915081905092915050565b6000611b0982846118a0565b915081905092915050565b6000606082019050611b296000830186611849565b611b366020830185611858565b8181036040830152611b4881846117d0565b9050949350505050565b60006020820190508181036000830152611b6b816118d1565b9050919050565b6000604082019050611b8760008301846118f4565b92915050565b6000604082019050611ba26000830184611923565b92915050565b6000602082019050611bbd6000830184611952565b92915050565b60006020820190508181036000830152611bdd818461196e565b905092915050565b60006020820190508181036000830152611bff8184611998565b905092915050565b6000602082019050611c1c60008301846119d5565b92915050565b60006020820190508181036000830152611c3c81846119f1565b905092915050565b6000602082019050611c596000830184611a1b565b92915050565b60006020820190508181036000830152611c798184611a37565b905092915050565b6000604082019050611c966000830184611a61565b92915050565b6000602082019050611cb16000830184611a90565b92915050565b6000602082019050611ccc6000830184611aac565b92915050565b6000611cdc611ced565b9050611ce88282611f71565b919050565b6000604051905090565b600067ffffffffffffffff821115611d1257611d11612000565b5b611d1b8261202f565b9050602081019050919050565b600067ffffffffffffffff821115611d4357611d42612000565b5b611d4c8261202f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611dd482611e9e565b9150611ddf83611e9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e1457611e13611fa2565b5b828201905092915050565b6000611e2a82611e9e565b9150611e3583611e9e565b925082821015611e4857611e47611fa2565b5b828203905092915050565b6000611e5e82611e7e565b9050919050565b60008115159050919050565b60008160070b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000611ee482611ecc565b9050919050565b6000611ef682611ea8565b9050919050565b82818337600083830152505050565b60005b83811015611f2a578082015181840152602081019050611f0f565b83811115611f39576000848401525b50505050565b60006002820490506001821680611f5757607f821691505b60208210811415611f6b57611f6a611fd1565b5b50919050565b611f7a8261202f565b810181811067ffffffffffffffff82111715611f9957611f98612000565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f636c69656e7420636f6e7472616374206661696c656420746f20617574686f7260008201527f697a65206465616c207075626c69736800000000000000000000000000000000602082015250565b61209881611e53565b81146120a357600080fd5b50565b6120af81611e9e565b81146120ba57600080fd5b50565b6120c681611eb8565b81146120d157600080fd5b5056fea2646970667358221220cd824be35e8813f411a9b1e88313d0b5400ad3598305a55c8c432fee5610c0d364736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8777B7C8 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9F4B7C7D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F4B7C7D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xAD36F184 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xEBF66EF1 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF241560C EQ PUSH2 0x3C6 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x8777B7C8 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8B7F02FD EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x991E04A4 EQ PUSH2 0x2F3 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x412A4B9A GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x412A4B9A EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x55D95609 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5C4DDEF3 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x65A9B4A0 EQ PUSH2 0x23C JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x13178DC1 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x1A2811E7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x34409642 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD LT PUSH2 0x4A7 JUMPI DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH4 0x9D8B0678 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x868E10C400000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x68A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x81D SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x849 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x896 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x896 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x879 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4E PUSH2 0x105A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xAEB SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB17 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x106D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078313131313131000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0xD16 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F7 PUSH2 0x10F2 DUP5 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x111A DUP5 DUP3 DUP6 PUSH2 0x1EFD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH2 0x1130 DUP5 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1158 DUP5 DUP3 DUP6 PUSH2 0x1EFD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116F DUP2 PUSH2 0x208F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11C0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x120D DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1235 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1245 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x127D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12B5 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DD PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12ED DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1315 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1325 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x135D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1385 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1395 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13BD PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13CD DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F5 PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1405 DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142D PUSH1 0x20 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1465 PUSH1 0x40 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x14A1 DUP5 DUP3 DUP6 ADD PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BC DUP2 PUSH2 0x20A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D1 DUP2 PUSH2 0x20BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1510 DUP6 DUP3 DUP7 ADD PUSH2 0x1175 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1521 DUP6 DUP3 DUP7 ADD PUSH2 0x1160 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1563 DUP5 DUP3 DUP6 ADD PUSH2 0x119F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15CD DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15F6 DUP5 DUP3 DUP6 ADD PUSH2 0x1251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x161F DUP5 DUP3 DUP6 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1648 DUP5 DUP3 DUP6 ADD PUSH2 0x12C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP5 DUP3 DUP6 ADD PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x169A DUP5 DUP3 DUP6 ADD PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP5 DUP3 DUP6 ADD PUSH2 0x1369 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16EC DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP5 DUP3 DUP6 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173E DUP5 DUP3 DUP6 ADD PUSH2 0x1411 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177F DUP5 DUP3 DUP6 ADD PUSH2 0x1449 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1791 DUP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A2 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x17AC DUP2 DUP6 PUSH2 0x1D6F JUMP JUMPDEST SWAP4 POP PUSH2 0x17BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x17C5 DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x17E5 DUP2 DUP6 PUSH2 0x1D80 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x17FE DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x181E DUP2 DUP6 PUSH2 0x1D91 JUMP JUMPDEST SWAP4 POP PUSH2 0x182E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1E71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1ED9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1861 DUP2 PUSH2 0x1EEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP3 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x187C DUP2 DUP6 PUSH2 0x1D9C JUMP JUMPDEST SWAP4 POP PUSH2 0x188C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x202F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP3 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x18B5 DUP2 DUP6 PUSH2 0x1DBE JUMP JUMPDEST SWAP4 POP PUSH2 0x18C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x30 DUP4 PUSH2 0x1DAD JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x190A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x191D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1939 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x194C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1968 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x198B DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x19B5 DUP3 DUP3 PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x19CA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1AD7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x19EB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1A0E DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1A31 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1A54 DUP3 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1A77 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1A8A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1AA6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1788 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1AC2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF2 DUP3 DUP5 PUSH2 0x1809 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP3 DUP5 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x1B36 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1858 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B48 DUP2 DUP5 PUSH2 0x17D0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6B DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BDD DUP2 DUP5 PUSH2 0x196E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BFF DUP2 DUP5 PUSH2 0x1998 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3C DUP2 DUP5 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C79 DUP2 DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CCC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDC PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH2 0x1CE8 DUP3 DUP3 PUSH2 0x1F71 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1B DUP3 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST PUSH2 0x1D4C DUP3 PUSH2 0x202F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD4 DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDF DUP4 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E14 JUMPI PUSH2 0x1E13 PUSH2 0x1FA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2A DUP3 PUSH2 0x1E9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E35 DUP4 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x1FA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 DUP3 PUSH2 0x1EA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F2A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F0F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F39 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F6B JUMPI PUSH2 0x1F6A PUSH2 0x1FD1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7A DUP3 PUSH2 0x202F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F99 JUMPI PUSH2 0x1F98 PUSH2 0x2000 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C69656E7420636F6E7472616374206661696C656420746F20617574686F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A65206465616C207075626C69736800000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2098 DUP2 PUSH2 0x1E53 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20AF DUP2 PUSH2 0x1E9E JUMP JUMPDEST DUP2 EQ PUSH2 0x20BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20C6 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x20D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD DUP3 0x4B 0xE3 0x5E DUP9 SGT DELEGATECALL GT 0xA9 0xB1 0xE8 DUP4 SGT 0xD0 0xB5 BLOCKHASH EXP 0xD3 MSIZE DUP4 SDIV 0xA5 0x5C DUP13 NUMBER 0x2F 0xEE JUMP LT 0xC0 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"601:8155:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1641:531;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5518:374;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7156:501;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4660:338;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3577:280;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6067;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2247:232;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5075:364;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3252:270;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2821:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3909:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4257:341;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1000:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6691:376;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1641:531;1746:40;;:::i;:::-;1798:11;1812:8;1821:6;:25;;;1812:35;;;;;;:::i;:::-;;;;;;;;;;;;;;1798:49;;1900:6;:18;;;1861:8;1870:6;:25;;;1861:35;;;;;;:::i;:::-;;;;;;;;;;;;;;:57;1857:253;;1973:6;:18;;;1934:8;1943:6;:25;;;1934:35;;;;;;:::i;:::-;;;;;;;;;;;;;;:57;;;;;;;:::i;:::-;;;;;;;;2011:6;:18;;;2005:24;;1857:253;;;2098:1;2060:8;2069:6;:25;;;2060:35;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;;1857:253;2127:38;;;;;;;;2161:3;2127:38;;;2120:45;;;1641:531;;;:::o;5518:374::-;5650:50;;:::i;:::-;5742:1;5720:5;:16;5726:6;:9;;;5720:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;5712:32;;;;;;5774:111;;;;;;;;5835:5;:16;5841:6;:9;;;5835:16;;;;;;;;;;;;;;;:36;;;5774:111;;;5755:130;;5518:374;;;:::o;7156:501::-;7339:12;7357:6;:11;;7486:1;7505:10;7533:15;7382:180;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7357:215;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7338:234;;;7590:7;7582:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7156:501;;;:::o;4660:338::-;4776:42;;:::i;:::-;4860:1;4838:5;:16;4844:6;:9;;;4838:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;4830:32;;;;;;4892:99;;;;;;;;4945:5;:16;4951:6;:9;;;4945:16;;;;;;;;;;;;;;;:32;;;4892:99;;;4873:118;;4660:338;;;:::o;3577:280::-;3688:40;;:::i;:::-;3770:1;3748:5;:16;3754:6;:9;;;3748:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;3740:32;;;;;;3790:60;;;;;;;;3824:5;:16;3830:6;:9;;;3824:16;;;;;;;;;;;;;;;:25;;3790:60;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3783:67;;3577:280;;;:::o;6067:::-;6178:40;;:::i;:::-;6260:1;6238:5;:16;6244:6;:9;;;6238:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;6230:32;;;;;;6280:60;;;;;;;;6314:5;:16;6320:6;:9;;;6314:16;;;;;;;;;;;;;;;:25;;;;;;;;;;;;6280:60;;;;;6273:67;;6067:280;;;:::o;2247:232::-;2323:35;;:::i;:::-;2370:21;2394:8;2403:4;2394:14;;;;;;:::i;:::-;;;;;;;;;;;;;;2370:38;;2426:46;;;;;;;;2455:13;2426:46;;;;2470:1;2426:46;;;2419:53;;;2247:232;;;:::o;5075:364::-;5203:48;;:::i;:::-;5293:1;5271:5;:16;5277:6;:9;;;5271:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;5263:32;;;;;;5325:107;;;;;;;;5384:5;:16;5390:6;:9;;;5384:16;;;;;;;;;;;;;;;:34;;;5325:107;;;5306:126;;5075:364;;;:::o;3252:270::-;3359:38;;:::i;:::-;3439:1;3417:5;:16;3423:6;:9;;;3417:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;3409:32;;;;;;3459:56;;;;;;;;3491:5;:16;3497:6;:9;;;3491:16;;;;;;;;;;;;;;;:23;;3459:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3452:63;;3252:270;;;:::o;2821:378::-;2945:46;;:::i;:::-;3033:1;3011:5;:16;3017:6;:9;;;3011:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;3003:32;;;;;;3065:127;;;;;;;;3122:17;;;;;;;;;;;;;;;;;3065:127;;;;3157:5;:16;3163:6;:9;;;3157:16;;;;;;;;;;;;;;;:21;;;;;;;;;;;;3065:127;;;;;3046:146;;2821:378;;;:::o;3909:265::-;4014:37;;:::i;:::-;4093:1;4071:5;:16;4077:6;:9;;;4071:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;4063:32;;;;;;4113:54;;;;;;;;4144:5;:16;4150:6;:9;;;4144:16;;;;;;;;;;;;;;;:22;;4113:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4106:61;;3909:265;;;:::o;4257:341::-;4360:36;;:::i;:::-;4438:1;4416:5;:16;4422:6;:9;;;4416:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;4408:32;;;;;;4470:121;;;;;;;;4517:5;:16;4523:6;:9;;;4517:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;4470:121;;;;;;4557:5;:16;4563:6;:9;;;4557:16;;;;;;;;;;;;;;;:20;;;;;;;;;;;;4470:121;;;;;4451:140;;4257:341;;;:::o;1000:159::-;1143:9;1104:8;1113:6;:25;;;1104:35;;;;;;:::i;:::-;;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;1000:159;:::o;6691:376::-;6806:42;;:::i;:::-;6890:1;6868:5;:16;6874:6;:9;;;6868:16;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:23;;;6860:32;;;;;;6922:138;;;;;;;;6975:5;:16;6981:6;:9;;;6975:16;;;;;;;;;;;;;;;:26;;;;;;;;;;;;6922:138;;;;;;7019:5;:16;7025:6;:9;;;7019:16;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6922:138;;;;;6903:157;;6691:376;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:343:21:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:345::-;434:5;459:66;475:49;517:6;475:49;:::i;:::-;459:66;:::i;:::-;450:75;;548:6;541:5;534:21;586:4;579:5;575:16;624:3;615:6;610:3;606:16;603:25;600:2;;;641:1;638;631:12;600:2;654:41;688:6;683:3;678;654:41;:::i;:::-;440:261;;;;;;:::o;707:139::-;753:5;791:6;778:20;769:29;;807:33;834:5;807:33;:::i;:::-;759:87;;;;:::o;865:271::-;920:5;969:3;962:4;954:6;950:17;946:27;936:2;;987:1;984;977:12;936:2;1027:6;1014:20;1052:78;1126:3;1118:6;1111:4;1103:6;1099:17;1052:78;:::i;:::-;1043:87;;926:210;;;;;:::o;1156:273::-;1212:5;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;1319:6;1306:20;1344:79;1419:3;1411:6;1404:4;1396:6;1392:17;1344:79;:::i;:::-;1335:88;;1218:211;;;;;:::o;1478:472::-;1561:5;1605:4;1593:9;1588:3;1584:19;1580:30;1577:2;;;1623:1;1620;1613:12;1577:2;1645:21;1661:4;1645:21;:::i;:::-;1636:30;;1767:1;1756:9;1752:17;1739:31;1797:18;1789:6;1786:30;1783:2;;;1829:1;1826;1819:12;1783:2;1872:59;1927:3;1918:6;1907:9;1903:22;1872:59;:::i;:::-;1865:4;1858:5;1854:16;1847:85;1676:267;1567:383;;;;:::o;2006:359::-;2096:5;2140:4;2128:9;2123:3;2119:19;2115:30;2112:2;;;2158:1;2155;2148:12;2112:2;2180:21;2196:4;2180:21;:::i;:::-;2171:30;;2258:1;2298:48;2342:3;2333:6;2322:9;2318:22;2298:48;:::i;:::-;2291:4;2284:5;2280:16;2273:74;2211:147;2102:263;;;;:::o;2427:365::-;2523:5;2567:4;2555:9;2550:3;2546:19;2542:30;2539:2;;;2585:1;2582;2575:12;2539:2;2607:21;2623:4;2607:21;:::i;:::-;2598:30;;2685:1;2725:48;2769:3;2760:6;2749:9;2745:22;2725:48;:::i;:::-;2718:4;2711:5;2707:16;2700:74;2638:147;2529:263;;;;:::o;2844:355::-;2930:5;2974:4;2962:9;2957:3;2953:19;2949:30;2946:2;;;2992:1;2989;2982:12;2946:2;3014:21;3030:4;3014:21;:::i;:::-;3005:30;;3092:1;3132:48;3176:3;3167:6;3156:9;3152:22;3132:48;:::i;:::-;3125:4;3118:5;3114:16;3107:74;3045:147;2936:263;;;;:::o;3259:363::-;3353:5;3397:4;3385:9;3380:3;3376:19;3372:30;3369:2;;;3415:1;3412;3405:12;3369:2;3437:21;3453:4;3437:21;:::i;:::-;3428:30;;3515:1;3555:48;3599:3;3590:6;3579:9;3575:22;3555:48;:::i;:::-;3548:4;3541:5;3537:16;3530:74;3468:147;3359:263;;;;:::o;3678:359::-;3768:5;3812:4;3800:9;3795:3;3791:19;3787:30;3784:2;;;3830:1;3827;3820:12;3784:2;3852:21;3868:4;3852:21;:::i;:::-;3843:30;;3930:1;3970:48;4014:3;4005:6;3994:9;3990:22;3970:48;:::i;:::-;3963:4;3956:5;3952:16;3945:74;3883:147;3774:263;;;;:::o;4088:354::-;4173:5;4217:4;4205:9;4200:3;4196:19;4192:30;4189:2;;;4235:1;4232;4225:12;4189:2;4257:21;4273:4;4257:21;:::i;:::-;4248:30;;4335:1;4375:48;4419:3;4410:6;4399:9;4395:22;4375:48;:::i;:::-;4368:4;4361:5;4357:16;4350:74;4288:147;4179:263;;;;:::o;4506:367::-;4604:5;4648:4;4636:9;4631:3;4627:19;4623:30;4620:2;;;4666:1;4663;4656:12;4620:2;4688:21;4704:4;4688:21;:::i;:::-;4679:30;;4766:1;4806:48;4850:3;4841:6;4830:9;4826:22;4806:48;:::i;:::-;4799:4;4792:5;4788:16;4781:74;4719:147;4610:263;;;;:::o;4927:357::-;5015:5;5059:4;5047:9;5042:3;5038:19;5034:30;5031:2;;;5077:1;5074;5067:12;5031:2;5099:21;5115:4;5099:21;:::i;:::-;5090:30;;5177:1;5217:48;5261:3;5252:6;5241:9;5237:22;5217:48;:::i;:::-;5210:4;5203:5;5199:16;5192:74;5130:147;5021:263;;;;:::o;5334:353::-;5418:5;5462:4;5450:9;5445:3;5441:19;5437:30;5434:2;;;5480:1;5477;5470:12;5434:2;5502:21;5518:4;5502:21;:::i;:::-;5493:30;;5580:1;5620:48;5664:3;5655:6;5644:9;5640:22;5620:48;:::i;:::-;5613:4;5606:5;5602:16;5595:74;5533:147;5424:263;;;;:::o;5741:357::-;5829:5;5873:4;5861:9;5856:3;5852:19;5848:30;5845:2;;;5891:1;5888;5881:12;5845:2;5913:21;5929:4;5913:21;:::i;:::-;5904:30;;5991:1;6031:48;6075:3;6066:6;6055:9;6051:22;6031:48;:::i;:::-;6024:4;6017:5;6013:16;6006:74;5944:147;5835:263;;;;:::o;6152:645::-;6240:5;6284:4;6272:9;6267:3;6263:19;6259:30;6256:2;;;6302:1;6299;6292:12;6256:2;6324:21;6340:4;6324:21;:::i;:::-;6315:30;;6446:1;6435:9;6431:17;6418:31;6476:18;6468:6;6465:30;6462:2;;;6508:1;6505;6498:12;6462:2;6551:59;6606:3;6597:6;6586:9;6582:22;6551:59;:::i;:::-;6544:4;6537:5;6533:16;6526:85;6355:267;6688:2;6729:49;6774:3;6765:6;6754:9;6750:22;6729:49;:::i;:::-;6722:4;6715:5;6711:16;6704:75;6632:158;6246:551;;;;:::o;6803:139::-;6849:5;6887:6;6874:20;6865:29;;6903:33;6930:5;6903:33;:::i;:::-;6855:87;;;;:::o;6948:137::-;6993:5;7031:6;7018:20;7009:29;;7047:32;7073:5;7047:32;:::i;:::-;6999:86;;;;:::o;7091:518::-;7168:6;7176;7225:2;7213:9;7204:7;7200:23;7196:32;7193:2;;;7241:1;7238;7231:12;7193:2;7312:1;7301:9;7297:17;7284:31;7342:18;7334:6;7331:30;7328:2;;;7374:1;7371;7364:12;7328:2;7402:62;7456:7;7447:6;7436:9;7432:22;7402:62;:::i;:::-;7392:72;;7255:219;7513:2;7539:53;7584:7;7575:6;7564:9;7560:22;7539:53;:::i;:::-;7529:63;;7484:118;7183:426;;;;;:::o;7615:375::-;7684:6;7733:2;7721:9;7712:7;7708:23;7704:32;7701:2;;;7749:1;7746;7739:12;7701:2;7820:1;7809:9;7805:17;7792:31;7850:18;7842:6;7839:30;7836:2;;;7882:1;7879;7872:12;7836:2;7910:63;7965:7;7956:6;7945:9;7941:22;7910:63;:::i;:::-;7900:73;;7763:220;7691:299;;;;:::o;7996:423::-;8089:6;8138:2;8126:9;8117:7;8113:23;8109:32;8106:2;;;8154:1;8151;8144:12;8106:2;8225:1;8214:9;8210:17;8197:31;8255:18;8247:6;8244:30;8241:2;;;8287:1;8284;8277:12;8241:2;8315:87;8394:7;8385:6;8374:9;8370:22;8315:87;:::i;:::-;8305:97;;8168:244;8096:323;;;;:::o;8425:344::-;8525:6;8574:2;8562:9;8553:7;8549:23;8545:32;8542:2;;;8590:1;8587;8580:12;8542:2;8633:1;8658:94;8744:7;8735:6;8724:9;8720:22;8658:94;:::i;:::-;8648:104;;8604:158;8532:237;;;;:::o;8775:356::-;8881:6;8930:2;8918:9;8909:7;8905:23;8901:32;8898:2;;;8946:1;8943;8936:12;8898:2;8989:1;9014:100;9106:7;9097:6;9086:9;9082:22;9014:100;:::i;:::-;9004:110;;8960:164;8888:243;;;;:::o;9137:336::-;9233:6;9282:2;9270:9;9261:7;9257:23;9253:32;9250:2;;;9298:1;9295;9288:12;9250:2;9341:1;9366:90;9448:7;9439:6;9428:9;9424:22;9366:90;:::i;:::-;9356:100;;9312:154;9240:233;;;;:::o;9479:352::-;9583:6;9632:2;9620:9;9611:7;9607:23;9603:32;9600:2;;;9648:1;9645;9638:12;9600:2;9691:1;9716:98;9806:7;9797:6;9786:9;9782:22;9716:98;:::i;:::-;9706:108;;9662:162;9590:241;;;;:::o;9837:344::-;9937:6;9986:2;9974:9;9965:7;9961:23;9957:32;9954:2;;;10002:1;9999;9992:12;9954:2;10045:1;10070:94;10156:7;10147:6;10136:9;10132:22;10070:94;:::i;:::-;10060:104;;10016:158;9944:237;;;;:::o;10187:334::-;10282:6;10331:2;10319:9;10310:7;10306:23;10302:32;10299:2;;;10347:1;10344;10337:12;10299:2;10390:1;10415:89;10496:7;10487:6;10476:9;10472:22;10415:89;:::i;:::-;10405:99;;10361:153;10289:232;;;;:::o;10527:360::-;10635:6;10684:2;10672:9;10663:7;10659:23;10655:32;10652:2;;;10700:1;10697;10690:12;10652:2;10743:1;10768:102;10862:7;10853:6;10842:9;10838:22;10768:102;:::i;:::-;10758:112;;10714:166;10642:245;;;;:::o;10893:340::-;10991:6;11040:2;11028:9;11019:7;11015:23;11011:32;11008:2;;;11056:1;11053;11046:12;11008:2;11099:1;11124:92;11208:7;11199:6;11188:9;11184:22;11124:92;:::i;:::-;11114:102;;11070:156;10998:235;;;;:::o;11239:332::-;11333:6;11382:2;11370:9;11361:7;11357:23;11353:32;11350:2;;;11398:1;11395;11388:12;11350:2;11441:1;11466:88;11546:7;11537:6;11526:9;11522:22;11466:88;:::i;:::-;11456:98;;11412:152;11340:231;;;;:::o;11577:340::-;11675:6;11724:2;11712:9;11703:7;11699:23;11695:32;11692:2;;;11740:1;11737;11730:12;11692:2;11783:1;11808:92;11892:7;11883:6;11872:9;11868:22;11808:92;:::i;:::-;11798:102;;11754:156;11682:235;;;;:::o;11923:433::-;12021:6;12070:2;12058:9;12049:7;12045:23;12041:32;12038:2;;;12086:1;12083;12076:12;12038:2;12157:1;12146:9;12142:17;12129:31;12187:18;12179:6;12176:30;12173:2;;;12219:1;12216;12209:12;12173:2;12247:92;12331:7;12322:6;12311:9;12307:22;12247:92;:::i;:::-;12237:102;;12100:249;12028:328;;;;:::o;12362:99::-;12433:21;12448:5;12433:21;:::i;:::-;12428:3;12421:34;12411:50;;:::o;12467:340::-;12543:3;12571:38;12603:5;12571:38;:::i;:::-;12625:60;12678:6;12673:3;12625:60;:::i;:::-;12618:67;;12694:52;12739:6;12734:3;12727:4;12720:5;12716:16;12694:52;:::i;:::-;12771:29;12793:6;12771:29;:::i;:::-;12766:3;12762:39;12755:46;;12547:260;;;;;:::o;12813:360::-;12899:3;12927:38;12959:5;12927:38;:::i;:::-;12981:70;13044:6;13039:3;12981:70;:::i;:::-;12974:77;;13060:52;13105:6;13100:3;13093:4;13086:5;13082:16;13060:52;:::i;:::-;13137:29;13159:6;13137:29;:::i;:::-;13132:3;13128:39;13121:46;;12903:270;;;;;:::o;13179:373::-;13283:3;13311:38;13343:5;13311:38;:::i;:::-;13365:88;13446:6;13441:3;13365:88;:::i;:::-;13358:95;;13462:52;13507:6;13502:3;13495:4;13488:5;13484:16;13462:52;:::i;:::-;13539:6;13534:3;13530:16;13523:23;;13287:265;;;;;:::o;13558:102::-;13631:22;13647:5;13631:22;:::i;:::-;13626:3;13619:35;13609:51;;:::o;13666:143::-;13759:43;13796:5;13759:43;:::i;:::-;13754:3;13747:56;13737:72;;:::o;13815:163::-;13918:53;13965:5;13918:53;:::i;:::-;13913:3;13906:66;13896:82;;:::o;13984:344::-;14062:3;14090:39;14123:5;14090:39;:::i;:::-;14145:61;14199:6;14194:3;14145:61;:::i;:::-;14138:68;;14215:52;14260:6;14255:3;14248:4;14241:5;14237:16;14215:52;:::i;:::-;14292:29;14314:6;14292:29;:::i;:::-;14287:3;14283:39;14276:46;;14066:262;;;;;:::o;14334:377::-;14440:3;14468:39;14501:5;14468:39;:::i;:::-;14523:89;14605:6;14600:3;14523:89;:::i;:::-;14516:96;;14621:52;14666:6;14661:3;14654:4;14647:5;14643:16;14621:52;:::i;:::-;14698:6;14693:3;14689:16;14682:23;;14444:267;;;;;:::o;14717:366::-;14859:3;14880:67;14944:2;14939:3;14880:67;:::i;:::-;14873:74;;14956:93;15045:3;14956:93;:::i;:::-;15074:2;15069:3;15065:12;15058:19;;14863:220;;;:::o;15171:530::-;15336:4;15331:3;15327:14;15426:4;15419:5;15415:16;15409:23;15445:63;15502:4;15497:3;15493:14;15479:12;15445:63;:::i;:::-;15351:167;15602:4;15595:5;15591:16;15585:23;15621:63;15678:4;15673:3;15669:14;15655:12;15621:63;:::i;:::-;15528:166;15305:396;;;:::o;15803:542::-;15982:4;15977:3;15973:14;16074:4;16067:5;16063:16;16057:23;16093:59;16146:4;16141:3;16137:14;16123:12;16093:59;:::i;:::-;15997:165;16250:4;16243:5;16239:16;16233:23;16269:59;16322:4;16317:3;16313:14;16299:12;16269:59;:::i;:::-;16172:166;15951:394;;;:::o;16459:383::-;16650:4;16645:3;16641:14;16743:4;16736:5;16732:16;16726:23;16762:63;16819:4;16814:3;16810:14;16796:12;16762:63;:::i;:::-;16665:170;16619:223;;;:::o;16936:458::-;17079:3;17115:4;17110:3;17106:14;17204:4;17197:5;17193:16;17187:23;17257:3;17251:4;17247:14;17240:4;17235:3;17231:14;17224:38;17283:73;17351:4;17337:12;17283:73;:::i;:::-;17275:81;;17130:237;17384:4;17377:11;;17084:310;;;;;:::o;17504:642::-;17663:3;17699:4;17694:3;17690:14;17786:4;17779:5;17775:16;17769:23;17839:3;17833:4;17829:14;17822:4;17817:3;17813:14;17806:38;17865:71;17931:4;17917:12;17865:71;:::i;:::-;17857:79;;17714:233;18029:4;18022:5;18018:16;18012:23;18048:61;18103:4;18098:3;18094:14;18080:12;18048:61;:::i;:::-;17957:162;18136:4;18129:11;;17668:478;;;;;:::o;18248:376::-;18427:4;18422:3;18418:14;18525:4;18518:5;18514:16;18508:23;18544:63;18601:4;18596:3;18592:14;18578:12;18544:63;:::i;:::-;18442:175;18396:228;;;:::o;18716:455::-;18857:3;18893:4;18888:3;18884:14;18981:4;18974:5;18970:16;18964:23;19034:3;19028:4;19024:14;19017:4;19012:3;19008:14;19001:38;19060:73;19128:4;19114:12;19060:73;:::i;:::-;19052:81;;18908:236;19161:4;19154:11;;18862:309;;;;;:::o;19289:387::-;19484:4;19479:3;19475:14;19577:4;19570:5;19566:16;19560:23;19596:63;19653:4;19648:3;19644:14;19630:12;19596:63;:::i;:::-;19499:170;19453:223;;;:::o;19774:464::-;19921:3;19957:4;19952:3;19948:14;20048:4;20041:5;20037:16;20031:23;20101:3;20095:4;20091:14;20084:4;20079:3;20075:14;20068:38;20127:73;20195:4;20181:12;20127:73;:::i;:::-;20119:81;;19972:239;20228:4;20221:11;;19926:312;;;;;:::o;20328:519::-;20495:4;20490:3;20486:14;20583:4;20576:5;20572:16;20566:23;20602:59;20655:4;20650:3;20646:14;20632:12;20602:59;:::i;:::-;20510:161;20752:4;20745:5;20741:16;20735:23;20771:59;20824:4;20819:3;20815:14;20801:12;20771:59;:::i;:::-;20681:159;20464:383;;;:::o;20945:359::-;21120:4;21115:3;21111:14;21211:4;21204:5;21200:16;21194:23;21230:57;21281:4;21276:3;21272:14;21258:12;21230:57;:::i;:::-;21135:162;21089:215;;;:::o;21402:373::-;21577:4;21572:3;21568:14;21676:4;21669:5;21665:16;21659:23;21695:63;21752:4;21747:3;21743:14;21729:12;21695:63;:::i;:::-;21592:176;21546:229;;;:::o;21781:108::-;21858:24;21876:5;21858:24;:::i;:::-;21853:3;21846:37;21836:53;;:::o;21895:105::-;21970:23;21987:5;21970:23;:::i;:::-;21965:3;21958:36;21948:52;;:::o;22006:271::-;22136:3;22158:93;22247:3;22238:6;22158:93;:::i;:::-;22151:100;;22268:3;22261:10;;22140:137;;;;:::o;22283:275::-;22415:3;22437:95;22528:3;22519:6;22437:95;:::i;:::-;22430:102;;22549:3;22542:10;;22419:139;;;;:::o;22564:573::-;22753:4;22791:2;22780:9;22776:18;22768:26;;22804:77;22878:1;22867:9;22863:17;22854:6;22804:77;:::i;:::-;22891:88;22975:2;22964:9;22960:18;22951:6;22891:88;:::i;:::-;23026:9;23020:4;23016:20;23011:2;23000:9;22996:18;22989:48;23054:76;23125:4;23116:6;23054:76;:::i;:::-;23046:84;;22758:379;;;;;;:::o;23143:419::-;23309:4;23347:2;23336:9;23332:18;23324:26;;23396:9;23390:4;23386:20;23382:1;23371:9;23367:17;23360:47;23424:131;23550:4;23424:131;:::i;:::-;23416:139;;23314:248;;;:::o;23568:358::-;23729:4;23767:2;23756:9;23752:18;23744:26;;23780:139;23916:1;23905:9;23901:17;23892:6;23780:139;:::i;:::-;23734:192;;;;:::o;23932:386::-;24107:4;24145:2;24134:9;24130:18;24122:26;;24158:153;24308:1;24297:9;24293:17;24284:6;24158:153;:::i;:::-;24112:206;;;;:::o;24324:410::-;24511:4;24549:2;24538:9;24534:18;24526:26;;24562:165;24724:1;24713:9;24709:17;24700:6;24562:165;:::i;:::-;24516:218;;;;:::o;24740:421::-;24907:4;24945:2;24934:9;24930:18;24922:26;;24994:9;24988:4;24984:20;24980:1;24969:9;24965:17;24958:47;25022:132;25149:4;25140:6;25022:132;:::i;:::-;25014:140;;24912:249;;;;:::o;25167:453::-;25350:4;25388:2;25377:9;25373:18;25365:26;;25437:9;25431:4;25427:20;25423:1;25412:9;25408:17;25401:47;25465:148;25608:4;25599:6;25465:148;:::i;:::-;25457:156;;25355:265;;;;:::o;25626:386::-;25801:4;25839:2;25828:9;25824:18;25816:26;;25852:153;26002:1;25991:9;25987:17;25978:6;25852:153;:::i;:::-;25806:206;;;;:::o;26018:417::-;26183:4;26221:2;26210:9;26206:18;26198:26;;26270:9;26264:4;26260:20;26256:1;26245:9;26241:17;26234:47;26298:130;26423:4;26414:6;26298:130;:::i;:::-;26290:138;;26188:247;;;;:::o;26441:418::-;26632:4;26670:2;26659:9;26655:18;26647:26;;26683:169;26849:1;26838:9;26834:17;26825:6;26683:169;:::i;:::-;26637:222;;;;:::o;26865:429::-;27036:4;27074:2;27063:9;27059:18;27051:26;;27123:9;27117:4;27113:20;27109:1;27098:9;27094:17;27087:47;27151:136;27282:4;27273:6;27151:136;:::i;:::-;27143:144;;27041:253;;;;:::o;27300:362::-;27463:4;27501:2;27490:9;27486:18;27478:26;;27514:141;27652:1;27641:9;27637:17;27628:6;27514:141;:::i;:::-;27468:194;;;;:::o;27668:378::-;27839:4;27877:2;27866:9;27862:18;27854:26;;27890:149;28036:1;28025:9;28021:17;28012:6;27890:149;:::i;:::-;27844:202;;;;:::o;28052:378::-;28223:4;28261:2;28250:9;28246:18;28238:26;;28274:149;28420:1;28409:9;28405:17;28396:6;28274:149;:::i;:::-;28228:202;;;;:::o;28436:129::-;28470:6;28497:20;;:::i;:::-;28487:30;;28526:33;28554:4;28546:6;28526:33;:::i;:::-;28477:88;;;:::o;28571:75::-;28604:6;28637:2;28631:9;28621:19;;28611:35;:::o;28652:307::-;28713:4;28803:18;28795:6;28792:30;28789:2;;;28825:18;;:::i;:::-;28789:2;28863:29;28885:6;28863:29;:::i;:::-;28855:37;;28947:4;28941;28937:15;28929:23;;28718:241;;;:::o;28965:308::-;29027:4;29117:18;29109:6;29106:30;29103:2;;;29139:18;;:::i;:::-;29103:2;29177:29;29199:6;29177:29;:::i;:::-;29169:37;;29261:4;29255;29251:15;29243:23;;29032:241;;;:::o;29279:98::-;29330:6;29364:5;29358:12;29348:22;;29337:40;;;:::o;29383:99::-;29435:6;29469:5;29463:12;29453:22;;29442:40;;;:::o;29488:158::-;29561:11;29595:6;29590:3;29583:19;29635:4;29630:3;29626:14;29611:29;;29573:73;;;;:::o;29652:168::-;29735:11;29769:6;29764:3;29757:19;29809:4;29804:3;29800:14;29785:29;;29747:73;;;;:::o;29826:147::-;29927:11;29964:3;29949:18;;29939:34;;;;:::o;29979:159::-;30053:11;30087:6;30082:3;30075:19;30127:4;30122:3;30118:14;30103:29;;30065:73;;;;:::o;30144:169::-;30228:11;30262:6;30257:3;30250:19;30302:4;30297:3;30293:14;30278:29;;30240:73;;;;:::o;30319:148::-;30421:11;30458:3;30443:18;;30433:34;;;;:::o;30473:305::-;30513:3;30532:20;30550:1;30532:20;:::i;:::-;30527:25;;30566:20;30584:1;30566:20;:::i;:::-;30561:25;;30720:1;30652:66;30648:74;30645:1;30642:81;30639:2;;;30726:18;;:::i;:::-;30639:2;30770:1;30767;30763:9;30756:16;;30517:261;;;;:::o;30784:191::-;30824:4;30844:20;30862:1;30844:20;:::i;:::-;30839:25;;30878:20;30896:1;30878:20;:::i;:::-;30873:25;;30917:1;30914;30911:8;30908:2;;;30922:18;;:::i;:::-;30908:2;30967:1;30964;30960:9;30952:17;;30829:146;;;;:::o;30981:96::-;31018:7;31047:24;31065:5;31047:24;:::i;:::-;31036:35;;31026:51;;;:::o;31083:90::-;31117:7;31160:5;31153:13;31146:21;31135:32;;31125:48;;;:::o;31179:90::-;31214:7;31257:5;31254:1;31243:20;31232:31;;31222:47;;;:::o;31275:126::-;31312:7;31352:42;31345:5;31341:54;31330:65;;31320:81;;;:::o;31407:77::-;31444:7;31473:5;31462:16;;31452:32;;;:::o;31490:93::-;31526:7;31566:10;31559:5;31555:22;31544:33;;31534:49;;;:::o;31589:101::-;31625:7;31665:18;31658:5;31654:30;31643:41;;31633:57;;;:::o;31696:86::-;31731:7;31771:4;31764:5;31760:16;31749:27;;31739:43;;;:::o;31788:117::-;31844:9;31877:22;31893:5;31877:22;:::i;:::-;31864:35;;31854:51;;;:::o;31911:128::-;31977:9;32010:23;32027:5;32010:23;:::i;:::-;31997:36;;31987:52;;;:::o;32045:154::-;32129:6;32124:3;32119;32106:30;32191:1;32182:6;32177:3;32173:16;32166:27;32096:103;;;:::o;32205:307::-;32273:1;32283:113;32297:6;32294:1;32291:13;32283:113;;;32382:1;32377:3;32373:11;32367:18;32363:1;32358:3;32354:11;32347:39;32319:2;32316:1;32312:10;32307:15;;32283:113;;;32414:6;32411:1;32408:13;32405:2;;;32494:1;32485:6;32480:3;32476:16;32469:27;32405:2;32254:258;;;;:::o;32518:320::-;32562:6;32599:1;32593:4;32589:12;32579:22;;32646:1;32640:4;32636:12;32667:18;32657:2;;32723:4;32715:6;32711:17;32701:27;;32657:2;32785;32777:6;32774:14;32754:18;32751:38;32748:2;;;32804:18;;:::i;:::-;32748:2;32569:269;;;;:::o;32844:281::-;32927:27;32949:4;32927:27;:::i;:::-;32919:6;32915:40;33057:6;33045:10;33042:22;33021:18;33009:10;33006:34;33003:62;33000:2;;;33068:18;;:::i;:::-;33000:2;33108:10;33104:2;33097:22;32887:238;;;:::o;33131:180::-;33179:77;33176:1;33169:88;33276:4;33273:1;33266:15;33300:4;33297:1;33290:15;33317:180;33365:77;33362:1;33355:88;33462:4;33459:1;33452:15;33486:4;33483:1;33476:15;33503:180;33551:77;33548:1;33541:88;33648:4;33645:1;33638:15;33672:4;33669:1;33662:15;33689:102;33730:6;33781:2;33777:7;33772:2;33765:5;33761:14;33757:28;33747:38;;33737:54;;;:::o;33797:235::-;33937:34;33933:1;33925:6;33921:14;33914:58;34006:18;34001:2;33993:6;33989:15;33982:43;33903:129;:::o;34038:122::-;34111:24;34129:5;34111:24;:::i;:::-;34104:5;34101:35;34091:2;;34150:1;34147;34140:12;34091:2;34081:79;:::o;34166:122::-;34239:24;34257:5;34239:24;:::i;:::-;34232:5;34229:35;34219:2;;34278:1;34275;34268:12;34219:2;34209:79;:::o;34294:120::-;34366:23;34383:5;34366:23;:::i;:::-;34359:5;34356:34;34346:2;;34404:1;34401;34394:12;34346:2;34336:78;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1691600","executionCost":"infinite","totalCost":"infinite"},"external":{"add_balance((string))":"infinite","get_balance(string)":"infinite","get_deal_activation((uint64))":"infinite","get_deal_client((uint64))":"infinite","get_deal_client_collateral((uint64))":"3008","get_deal_data_commitment((uint64))":"infinite","get_deal_label((uint64))":"infinite","get_deal_provider((uint64))":"infinite","get_deal_provider_collateral((uint64))":"3031","get_deal_term((uint64))":"infinite","get_deal_total_price((uint64))":"3008","get_deal_verified((uint64))":"3156","publish_storage_deals(bytes,address)":"infinite","withdraw_balance((string,uint256))":"infinite"},"internal":{"mock_generate_deals()":"infinite"}},"methodIdentifiers":{"add_balance((string))":"ebf66ef1","get_balance(string)":"65a9b4a0","get_deal_activation((uint64))":"f241560c","get_deal_client((uint64))":"8b7f02fd","get_deal_client_collateral((uint64))":"8777b7c8","get_deal_data_commitment((uint64))":"991e04a4","get_deal_label((uint64))":"9f4b7c7d","get_deal_provider((uint64))":"55d95609","get_deal_provider_collateral((uint64))":"1a2811e7","get_deal_term((uint64))":"ad36f184","get_deal_total_price((uint64))":"412a4b9a","get_deal_verified((uint64))":"5c4ddef3","publish_storage_deals(bytes,address)":"34409642","withdraw_balance((string,uint256))":"13178dc1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"provider_or_client\",\"type\":\"string\"}],\"internalType\":\"struct MarketTypes.AddBalanceParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"add_balance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"addr\",\"type\":\"string\"}],\"name\":\"get_balance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.GetBalanceReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealActivationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_activation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"activated\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"terminated\",\"type\":\"int64\"}],\"internalType\":\"struct MarketTypes.GetDealActivationReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealClientParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_client\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"client\",\"type\":\"string\"}],\"internalType\":\"struct MarketTypes.GetDealClientReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealClientCollateralParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_client_collateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.GetDealClientCollateralReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealDataCommitmentParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_data_commitment\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealDataCommitmentReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealLabelParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_label\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct MarketTypes.GetDealLabelReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealProviderParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_provider\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"}],\"internalType\":\"struct MarketTypes.GetDealProviderReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealProviderCollateralParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_provider_collateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.GetDealProviderCollateralReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealTermParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_term\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"start\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"end\",\"type\":\"int64\"}],\"internalType\":\"struct MarketTypes.GetDealTermReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealEpochPriceParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_total_price\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price_per_epoch\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.GetDealEpochPriceReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"}],\"internalType\":\"struct MarketTypes.GetDealVerifiedParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"get_deal_verified\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct MarketTypes.GetDealVerifiedReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"raw_auth_params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"}],\"name\":\"publish_storage_deals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"provider_or_client\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.WithdrawBalanceParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw_balance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount_withdrawn\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketTypes.WithdrawBalanceReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zondax AG\",\"details\":\"Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\",\"kind\":\"dev\",\"methods\":{\"add_balance((string))\":{\"details\":\"Because this is a mock method, no real balance is being deducted from the caller, nor incremented in the Storage Market actor (f05).\"},\"get_balance(string)\":{\"returns\":{\"_0\":\"the escrow balance and locked amount for an address.\"}},\"get_deal_activation((uint64))\":{\"returns\":{\"_0\":\"USR_NOT_FOUND if the deal doesn't exist (yet), or EX_DEAL_EXPIRED if the deal has been removed from state.\"}},\"get_deal_client((uint64))\":{\"returns\":{\"_0\":\"the client of a deal proposal.\"}},\"get_deal_client_collateral((uint64))\":{\"returns\":{\"_0\":\"the client collateral requirement for a deal proposal.\"}},\"get_deal_data_commitment((uint64))\":{\"details\":\"set data values correctly, currently returning fixed data, feel free to adjust in your local mock.\",\"returns\":{\"_0\":\"the data commitment and size of a deal proposal.\"}},\"get_deal_label((uint64))\":{\"returns\":{\"_0\":\"the label of a deal proposal.\"}},\"get_deal_provider((uint64))\":{\"returns\":{\"_0\":\"the provider of a deal proposal.\"}},\"get_deal_provider_collateral((uint64))\":{\"returns\":{\"_0\":\"the provider collateral requirement for a deal proposal.\"}},\"get_deal_term((uint64))\":{\"returns\":{\"_0\":\"the start epoch and duration (in epochs) of a deal proposal.\"}},\"get_deal_total_price((uint64))\":{\"returns\":{\"_0\":\"the per-epoch price of a deal proposal.\"}},\"get_deal_verified((uint64))\":{\"returns\":{\"_0\":\"the verified flag for a deal proposal.\"}},\"withdraw_balance((string,uint256))\":{\"details\":\"This method should be called by an approved address, but the mock does not check that the caller is an approved party.Because this is a mock method, no real balance is deposited in the designated address, nor decremented from the Storage Market actor (f05).\"}},\"title\":\"This contract is a proxy to the singleton Storage Market actor (address: f05). Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"add_balance((string))\":{\"notice\":\"Deposits the received value into the balance held in escrow.\"},\"get_deal_activation((uint64))\":{\"notice\":\"Fetches activation state for a deal.This will be available from when the proposal is published until an undefined period after the deal finishes (either normally or by termination).\"},\"get_deal_data_commitment((uint64))\":{\"notice\":\"This will be available after the deal is published (whether or not is is activated) and up until some undefined period after it is terminated.\"},\"get_deal_verified((uint64))\":{\"notice\":\"Note that the source of truth for verified allocations and claims is the verified registry actor.\"},\"publish_storage_deals(bytes,address)\":{\"notice\":\"Publish a new set of storage deals (not yet included in a sector).\"},\"withdraw_balance((string,uint256))\":{\"notice\":\"Attempt to withdraw the specified amount from the balance held in escrow.If less than the specified amount is available, yields the entire available balance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/filecoinMockAPIs/MarketAPI.sol\":\"MarketAPI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/filecoinMockAPIs/MarketAPI.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\nimport \\\"./types/MarketTypes.sol\\\";\\n\\n/// @title This contract is a proxy to the singleton Storage Market actor (address: f05). Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\\n/// @author Zondax AG\\n/// @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\\n//       with that of the real library!\\ncontract MarketAPI {\\n    mapping(string => uint256) balances;\\n    mapping(uint64 => MarketTypes.MockDeal) deals;\\n\\n    constructor() {\\n        mock_generate_deals();\\n    }\\n\\n    /// @notice Deposits the received value into the balance held in escrow.\\n    /// @dev Because this is a mock method, no real balance is being deducted from the caller, nor incremented in the Storage Market actor (f05).\\n    function add_balance(\\n        MarketTypes.AddBalanceParams memory params\\n    ) public payable {\\n        balances[params.provider_or_client] += msg.value;\\n    }\\n\\n    /// @notice Attempt to withdraw the specified amount from the balance held in escrow.\\n    /// @notice If less than the specified amount is available, yields the entire available balance.\\n    /// @dev This method should be called by an approved address, but the mock does not check that the caller is an approved party.\\n    /// @dev Because this is a mock method, no real balance is deposited in the designated address, nor decremented from the Storage Market actor (f05).\\n    function withdraw_balance(\\n        MarketTypes.WithdrawBalanceParams memory params\\n    ) public returns (MarketTypes.WithdrawBalanceReturn memory) {\\n        uint256 tmp = balances[params.provider_or_client];\\n        if (balances[params.provider_or_client] >= params.tokenAmount) {\\n            balances[params.provider_or_client] -= params.tokenAmount;\\n            tmp = params.tokenAmount;\\n        } else {\\n            balances[params.provider_or_client] = 0;\\n        }\\n\\n        return MarketTypes.WithdrawBalanceReturn(tmp);\\n    }\\n\\n    /// @return the escrow balance and locked amount for an address.\\n    function get_balance(\\n        string memory addr\\n    ) public view returns (MarketTypes.GetBalanceReturn memory) {\\n        uint256 actualBalance = balances[addr];\\n\\n        return MarketTypes.GetBalanceReturn(actualBalance, 0);\\n    }\\n\\n    /// @return the data commitment and size of a deal proposal.\\n    /// @notice This will be available after the deal is published (whether or not is is activated) and up until some undefined period after it is terminated.\\n    /// @dev set data values correctly, currently returning fixed data, feel free to adjust in your local mock.\\n    function get_deal_data_commitment(\\n        MarketTypes.GetDealDataCommitmentParams memory params\\n    ) public view returns (MarketTypes.GetDealDataCommitmentReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealDataCommitmentReturn(\\n                bytes(\\\"0x111111\\\"),\\n                deals[params.id].size\\n            );\\n    }\\n\\n    /// @return the client of a deal proposal.\\n    function get_deal_client(\\n        MarketTypes.GetDealClientParams memory params\\n    ) public view returns (MarketTypes.GetDealClientReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return MarketTypes.GetDealClientReturn(deals[params.id].client);\\n    }\\n\\n    /// @return the provider of a deal proposal.\\n    function get_deal_provider(\\n        MarketTypes.GetDealProviderParams memory params\\n    ) public view returns (MarketTypes.GetDealProviderReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return MarketTypes.GetDealProviderReturn(deals[params.id].provider);\\n    }\\n\\n    /// @return the label of a deal proposal.\\n    function get_deal_label(\\n        MarketTypes.GetDealLabelParams memory params\\n    ) public view returns (MarketTypes.GetDealLabelReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return MarketTypes.GetDealLabelReturn(deals[params.id].label);\\n    }\\n\\n    /// @return the start epoch and duration (in epochs) of a deal proposal.\\n    function get_deal_term(\\n        MarketTypes.GetDealTermParams memory params\\n    ) public view returns (MarketTypes.GetDealTermReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealTermReturn(\\n                deals[params.id].start,\\n                deals[params.id].end\\n            );\\n    }\\n\\n    /// @return the per-epoch price of a deal proposal.\\n    function get_deal_total_price(\\n        MarketTypes.GetDealEpochPriceParams memory params\\n    ) public view returns (MarketTypes.GetDealEpochPriceReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealEpochPriceReturn(\\n                deals[params.id].price_per_epoch\\n            );\\n    }\\n\\n    /// @return the client collateral requirement for a deal proposal.\\n    function get_deal_client_collateral(\\n        MarketTypes.GetDealClientCollateralParams memory params\\n    ) public view returns (MarketTypes.GetDealClientCollateralReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealClientCollateralReturn(\\n                deals[params.id].client_collateral\\n            );\\n    }\\n\\n    /// @return the provider collateral requirement for a deal proposal.\\n    function get_deal_provider_collateral(\\n        MarketTypes.GetDealProviderCollateralParams memory params\\n    ) public view returns (MarketTypes.GetDealProviderCollateralReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealProviderCollateralReturn(\\n                deals[params.id].provider_collateral\\n            );\\n    }\\n\\n    /// @return the verified flag for a deal proposal.\\n    /// @notice Note that the source of truth for verified allocations and claims is the verified registry actor.\\n    function get_deal_verified(\\n        MarketTypes.GetDealVerifiedParams memory params\\n    ) public view returns (MarketTypes.GetDealVerifiedReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return MarketTypes.GetDealVerifiedReturn(deals[params.id].verified);\\n    }\\n\\n    /// @notice Fetches activation state for a deal.\\n    /// @notice This will be available from when the proposal is published until an undefined period after the deal finishes (either normally or by termination).\\n    /// @return USR_NOT_FOUND if the deal doesn't exist (yet), or EX_DEAL_EXPIRED if the deal has been removed from state.\\n    function get_deal_activation(\\n        MarketTypes.GetDealActivationParams memory params\\n    ) public view returns (MarketTypes.GetDealActivationReturn memory) {\\n        require(deals[params.id].id > 0);\\n\\n        return\\n            MarketTypes.GetDealActivationReturn(\\n                deals[params.id].activated,\\n                deals[params.id].terminated\\n            );\\n    }\\n\\n    /// @notice Publish a new set of storage deals (not yet included in a sector).\\n    function publish_storage_deals(bytes memory raw_auth_params, address callee) public {\\n        // calls standard filecoin receiver on message authentication api method number\\n        (bool success, ) = callee.call(\\n            abi.encodeWithSignature(\\n                \\\"handle_filecoin_method(uint64,uint64,bytes)\\\",\\n                0,\\n                2643134072,\\n                raw_auth_params\\n            )\\n        );\\n        require(success, \\\"client contract failed to authorize deal publish\\\");\\n    }\\n\\n    /// @notice Adds mock deal data to the internal state of this mock.\\n    /// @dev Feel free to adjust the data here to make it align with deals in your network.\\n    function mock_generate_deals() internal {\\n        MarketTypes.MockDeal memory deal_67;\\n        deal_67.id = 67;\\n        deal_67\\n            .cid = \\\"baga6ea4seaqlkg6mss5qs56jqtajg5ycrhpkj2b66cgdkukf2qjmmzz6ayksuci\\\";\\n        deal_67.size = 8388608;\\n        deal_67.verified = false;\\n        deal_67.client = \\\"t01109\\\";\\n        deal_67.provider = \\\"t01113\\\";\\n        deal_67.label = \\\"mAXCg5AIg8YBXbFjtdBy1iZjpDYAwRSt0elGLF5GvTqulEii1VcM\\\";\\n        deal_67.start = 25245;\\n        deal_67.end = 545150;\\n        deal_67.price_per_epoch = 1100000000000;\\n        deal_67.provider_collateral = 0;\\n        deal_67.client_collateral = 0;\\n        deal_67.activated = 1;\\n        deal_67.terminated = 0;\\n\\n        deals[deal_67.id] = deal_67;\\n\\n        // As EVM smart contract has a limited capacity for size (24KiB), we cannot set all deals directly here.\\n        // Please, take them from docs.\\n\\n        // Add or replace more deals here.\\n    }\\n}\\n\",\"keccak256\":\"0x8da9644c0ed9a4111d6cc01a76a2599097e63b1fee62bea2bff0a38764caffb5\",\"license\":\"Apache-2.0\"},\"contracts/filecoinMockAPIs/types/MarketTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\n/// @title Filecoin market actor types for Solidity.\\n/// @author Zondax AG\\nlibrary MarketTypes {\\n    struct MockDeal {\\n        uint64 id;\\n        string cid;\\n        uint64 size;\\n        bool verified;\\n        string client;\\n        string provider;\\n        string label;\\n        int64 start;\\n        int64 end;\\n        uint256 price_per_epoch;\\n        uint256 provider_collateral;\\n        uint256 client_collateral;\\n        int64 activated;\\n        int64 terminated;\\n    }\\n\\n    struct AddBalanceParams {\\n        string provider_or_client;\\n    }\\n\\n    struct WithdrawBalanceParams {\\n        string provider_or_client;\\n        uint256 tokenAmount;\\n    }\\n\\n    struct WithdrawBalanceReturn {\\n        uint256 amount_withdrawn;\\n    }\\n\\n    struct GetBalanceReturn {\\n        uint256 balance;\\n        uint256 locked;\\n    }\\n\\n    struct GetDealDataCommitmentParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealDataCommitmentReturn {\\n        bytes data;\\n        uint64 size;\\n    }\\n\\n    struct GetDealClientParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealClientReturn {\\n        string client;\\n    }\\n\\n    struct GetDealProviderParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealProviderReturn {\\n        string provider;\\n    }\\n\\n    struct GetDealLabelParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealLabelReturn {\\n        string label;\\n    }\\n\\n    struct GetDealTermParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealTermReturn {\\n        int64 start;\\n        int64 end;\\n    }\\n\\n    struct GetDealEpochPriceParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealEpochPriceReturn {\\n        uint256 price_per_epoch;\\n    }\\n\\n    struct GetDealClientCollateralParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealClientCollateralReturn {\\n        uint256 collateral;\\n    }\\n\\n    struct GetDealProviderCollateralParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealProviderCollateralReturn {\\n        uint256 collateral;\\n    }\\n\\n    struct GetDealVerifiedParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealVerifiedReturn {\\n        bool verified;\\n    }\\n\\n    struct GetDealActivationParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealActivationReturn {\\n        int64 activated;\\n        int64 terminated;\\n    }\\n}\\n\",\"keccak256\":\"0x49adf6a1ec1d7a41f025b0edb0f5ab8a04f584481b6aff8be95afe48c78c6a91\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3489,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"balances","offset":0,"slot":"0","type":"t_mapping(t_string_memory_ptr,t_uint256)"},{"astId":3494,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"deals","offset":0,"slot":"1","type":"t_mapping(t_uint64,t_struct(MockDeal)4696_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int64":{"encoding":"inplace","label":"int64","numberOfBytes":"8"},"t_mapping(t_string_memory_ptr,t_uint256)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_struct(MockDeal)4696_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct MarketTypes.MockDeal)","numberOfBytes":"32","value":"t_struct(MockDeal)4696_storage"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(MockDeal)4696_storage":{"encoding":"inplace","label":"struct MarketTypes.MockDeal","members":[{"astId":4669,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"id","offset":0,"slot":"0","type":"t_uint64"},{"astId":4671,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"cid","offset":0,"slot":"1","type":"t_string_storage"},{"astId":4673,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"size","offset":0,"slot":"2","type":"t_uint64"},{"astId":4675,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"verified","offset":8,"slot":"2","type":"t_bool"},{"astId":4677,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"client","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4679,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"provider","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4681,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"label","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4683,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"start","offset":0,"slot":"6","type":"t_int64"},{"astId":4685,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"end","offset":8,"slot":"6","type":"t_int64"},{"astId":4687,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"price_per_epoch","offset":0,"slot":"7","type":"t_uint256"},{"astId":4689,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"provider_collateral","offset":0,"slot":"8","type":"t_uint256"},{"astId":4691,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"client_collateral","offset":0,"slot":"9","type":"t_uint256"},{"astId":4693,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"activated","offset":0,"slot":"10","type":"t_int64"},{"astId":4695,"contract":"contracts/filecoinMockAPIs/MarketAPI.sol:MarketAPI","label":"terminated","offset":8,"slot":"10","type":"t_int64"}],"numberOfBytes":"352"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{"add_balance((string))":{"notice":"Deposits the received value into the balance held in escrow."},"get_deal_activation((uint64))":{"notice":"Fetches activation state for a deal.This will be available from when the proposal is published until an undefined period after the deal finishes (either normally or by termination)."},"get_deal_data_commitment((uint64))":{"notice":"This will be available after the deal is published (whether or not is is activated) and up until some undefined period after it is terminated."},"get_deal_verified((uint64))":{"notice":"Note that the source of truth for verified allocations and claims is the verified registry actor."},"publish_storage_deals(bytes,address)":{"notice":"Publish a new set of storage deals (not yet included in a sector)."},"withdraw_balance((string,uint256))":{"notice":"Attempt to withdraw the specified amount from the balance held in escrow.If less than the specified amount is available, yields the entire available balance."}},"version":1}}},"contracts/filecoinMockAPIs/MinerAPI.sol":{"MinerAPI":{"abi":[{"inputs":[{"internalType":"string","name":"_owner","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"components":[{"internalType":"string","name":"new_beneficiary","type":"string"},{"internalType":"int256","name":"new_quota","type":"int256"},{"internalType":"uint64","name":"new_expiration","type":"uint64"}],"internalType":"struct MinerTypes.ChangeBeneficiaryParams","name":"params","type":"tuple"}],"name":"change_beneficiary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"addr","type":"string"}],"name":"change_owner_address","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"get_available_balance","outputs":[{"components":[{"internalType":"int256","name":"available_balance","type":"int256"}],"internalType":"struct MinerTypes.GetAvailableBalanceReturn","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"get_beneficiary","outputs":[{"components":[{"components":[{"internalType":"string","name":"beneficiary","type":"string"},{"components":[{"internalType":"int256","name":"quota","type":"int256"},{"internalType":"int256","name":"used_quota","type":"int256"},{"internalType":"uint64","name":"expiration","type":"uint64"}],"internalType":"struct CommonTypes.BeneficiaryTerm","name":"term","type":"tuple"}],"internalType":"struct CommonTypes.ActiveBeneficiary","name":"active","type":"tuple"},{"components":[{"internalType":"bytes","name":"new_beneficiary","type":"bytes"},{"internalType":"int256","name":"new_quota","type":"int256"},{"internalType":"uint64","name":"new_expiration","type":"uint64"},{"internalType":"bool","name":"approved_by_beneficiary","type":"bool"},{"internalType":"bool","name":"approved_by_nominee","type":"bool"}],"internalType":"struct CommonTypes.PendingBeneficiaryChange","name":"proposed","type":"tuple"}],"internalType":"struct MinerTypes.GetBeneficiaryReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_owner","outputs":[{"components":[{"internalType":"string","name":"owner","type":"string"}],"internalType":"struct MinerTypes.GetOwnerReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_sector_size","outputs":[{"components":[{"internalType":"uint64","name":"sector_size","type":"uint64"}],"internalType":"struct MinerTypes.GetSectorSizeReturn","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_vesting_funds","outputs":[{"components":[{"components":[{"internalType":"int64","name":"epoch","type":"int64"},{"internalType":"int256","name":"amount","type":"int256"}],"internalType":"struct CommonTypes.VestingFunds[]","name":"vesting_funds","type":"tuple[]"}],"internalType":"struct MinerTypes.GetVestingFundsReturn","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"addr","type":"string"}],"internalType":"struct MinerTypes.IsControllingAddressParam","name":"params","type":"tuple"}],"name":"is_controlling_address","outputs":[{"components":[{"internalType":"bool","name":"is_controlling","type":"bool"}],"internalType":"struct MinerTypes.IsControllingAddressReturn","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"addr","type":"string"}],"name":"mock_set_owner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Zondax AG","details":"Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it","kind":"dev","methods":{"change_owner_address(string)":{"params":{"addr":"New owner address"}},"get_available_balance()":{"returns":{"_0":"the available balance of this miner."}},"get_owner()":{"returns":{"_0":"the owner address of a Miner"}},"get_sector_size()":{"returns":{"_0":"the miner's sector size."}},"get_vesting_funds()":{"returns":{"_0":"the funds vesting in this miner as a list of (vesting_epoch, vesting_amount) tuples."}},"is_controlling_address((string))":{"params":{"params":"The \"controlling\" addresses are the Owner, the Worker, and all Control Addresses."},"returns":{"_0":"Whether the provided address is \"controlling\"."}}},"title":"This contract is a proxy to a built-in Miner actor. Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3004:21","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:21","statements":[{"nodeType":"YulAssignment","src":"112:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:21"},"nodeType":"YulFunctionCall","src":"137:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:21"},"nodeType":"YulFunctionCall","src":"121:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:21"},"nodeType":"YulFunctionCall","src":"196:21:21"},"nodeType":"YulExpressionStatement","src":"196:21:21"},{"nodeType":"YulVariableDeclaration","src":"226:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:21"},"nodeType":"YulFunctionCall","src":"237:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:21"},"nodeType":"YulFunctionCall","src":"293:12:21"},"nodeType":"YulExpressionStatement","src":"293:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:21"},"nodeType":"YulFunctionCall","src":"268:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:21"},"nodeType":"YulFunctionCall","src":"265:25:21"},"nodeType":"YulIf","src":"262:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:21"},"nodeType":"YulFunctionCall","src":"316:39:21"},"nodeType":"YulExpressionStatement","src":"316:39:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:21","type":""}],"src":"7:354:21"},{"body":{"nodeType":"YulBlock","src":"454:215:21","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:21"},"nodeType":"YulFunctionCall","src":"505:12:21"},"nodeType":"YulExpressionStatement","src":"505:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:21"},"nodeType":"YulFunctionCall","src":"478:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:21"},"nodeType":"YulFunctionCall","src":"474:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:21"},"nodeType":"YulFunctionCall","src":"467:35:21"},"nodeType":"YulIf","src":"464:2:21"},{"nodeType":"YulVariableDeclaration","src":"528:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:21"},"nodeType":"YulFunctionCall","src":"542:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:21","type":""}]},{"nodeType":"YulAssignment","src":"564:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:21"},"nodeType":"YulFunctionCall","src":"632:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:21"},"nodeType":"YulFunctionCall","src":"573:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:21","type":""}],"src":"381:288:21"},{"body":{"nodeType":"YulBlock","src":"762:303:21","statements":[{"body":{"nodeType":"YulBlock","src":"808:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"817:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"820:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"810:6:21"},"nodeType":"YulFunctionCall","src":"810:12:21"},"nodeType":"YulExpressionStatement","src":"810:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"783:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"792:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"779:3:21"},"nodeType":"YulFunctionCall","src":"779:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"804:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"775:3:21"},"nodeType":"YulFunctionCall","src":"775:32:21"},"nodeType":"YulIf","src":"772:2:21"},{"nodeType":"YulBlock","src":"834:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"849:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"873:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"884:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"869:3:21"},"nodeType":"YulFunctionCall","src":"869:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"863:5:21"},"nodeType":"YulFunctionCall","src":"863:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"853:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"934:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"943:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"946:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"936:6:21"},"nodeType":"YulFunctionCall","src":"936:12:21"},"nodeType":"YulExpressionStatement","src":"936:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"906:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"914:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"903:2:21"},"nodeType":"YulFunctionCall","src":"903:30:21"},"nodeType":"YulIf","src":"900:2:21"},{"nodeType":"YulAssignment","src":"964:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1020:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1031:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1016:3:21"},"nodeType":"YulFunctionCall","src":"1016:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1040:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"974:41:21"},"nodeType":"YulFunctionCall","src":"974:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"964:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"732:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"743:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"755:6:21","type":""}],"src":"675:390:21"},{"body":{"nodeType":"YulBlock","src":"1112:88:21","statements":[{"nodeType":"YulAssignment","src":"1122:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1132:18:21"},"nodeType":"YulFunctionCall","src":"1132:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1122:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1181:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1189:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1161:19:21"},"nodeType":"YulFunctionCall","src":"1161:33:21"},"nodeType":"YulExpressionStatement","src":"1161:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1096:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1105:6:21","type":""}],"src":"1071:129:21"},{"body":{"nodeType":"YulBlock","src":"1246:35:21","statements":[{"nodeType":"YulAssignment","src":"1256:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1272:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1266:5:21"},"nodeType":"YulFunctionCall","src":"1266:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1256:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1239:6:21","type":""}],"src":"1206:75:21"},{"body":{"nodeType":"YulBlock","src":"1354:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1459:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1461:16:21"},"nodeType":"YulFunctionCall","src":"1461:18:21"},"nodeType":"YulExpressionStatement","src":"1461:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1431:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1439:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1428:2:21"},"nodeType":"YulFunctionCall","src":"1428:30:21"},"nodeType":"YulIf","src":"1425:2:21"},{"nodeType":"YulAssignment","src":"1491:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1521:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1499:21:21"},"nodeType":"YulFunctionCall","src":"1499:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1491:4:21"}]},{"nodeType":"YulAssignment","src":"1565:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1577:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1583:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:21"},"nodeType":"YulFunctionCall","src":"1573:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1565:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1338:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1349:4:21","type":""}],"src":"1287:308:21"},{"body":{"nodeType":"YulBlock","src":"1650:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1660:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1669:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1664:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1729:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1754:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1759:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1750:3:21"},"nodeType":"YulFunctionCall","src":"1750:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1773:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1778:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1769:3:21"},"nodeType":"YulFunctionCall","src":"1769:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1763:5:21"},"nodeType":"YulFunctionCall","src":"1763:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1743:6:21"},"nodeType":"YulFunctionCall","src":"1743:39:21"},"nodeType":"YulExpressionStatement","src":"1743:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1690:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1693:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1687:2:21"},"nodeType":"YulFunctionCall","src":"1687:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1701:19:21","statements":[{"nodeType":"YulAssignment","src":"1703:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:21"},"nodeType":"YulFunctionCall","src":"1708:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1703:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1683:3:21","statements":[]},"src":"1679:113:21"},{"body":{"nodeType":"YulBlock","src":"1826:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1876:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1881:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1872:3:21"},"nodeType":"YulFunctionCall","src":"1872:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1890:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1865:6:21"},"nodeType":"YulFunctionCall","src":"1865:27:21"},"nodeType":"YulExpressionStatement","src":"1865:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1807:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1810:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1804:2:21"},"nodeType":"YulFunctionCall","src":"1804:13:21"},"nodeType":"YulIf","src":"1801:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1632:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1637:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1642:6:21","type":""}],"src":"1601:307:21"},{"body":{"nodeType":"YulBlock","src":"1965:269:21","statements":[{"nodeType":"YulAssignment","src":"1975:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1989:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1985:3:21"},"nodeType":"YulFunctionCall","src":"1985:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1975:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2006:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2036:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2042:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2032:3:21"},"nodeType":"YulFunctionCall","src":"2032:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2010:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2083:51:21","statements":[{"nodeType":"YulAssignment","src":"2097:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2111:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2119:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2107:3:21"},"nodeType":"YulFunctionCall","src":"2107:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2097:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2063:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2056:6:21"},"nodeType":"YulFunctionCall","src":"2056:26:21"},"nodeType":"YulIf","src":"2053:2:21"},{"body":{"nodeType":"YulBlock","src":"2186:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2200:16:21"},"nodeType":"YulFunctionCall","src":"2200:18:21"},"nodeType":"YulExpressionStatement","src":"2200:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2150:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2173:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2181:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2170:2:21"},"nodeType":"YulFunctionCall","src":"2170:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2147:2:21"},"nodeType":"YulFunctionCall","src":"2147:38:21"},"nodeType":"YulIf","src":"2144:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1949:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1958:6:21","type":""}],"src":"1914:320:21"},{"body":{"nodeType":"YulBlock","src":"2283:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2293:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2315:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2345:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2323:21:21"},"nodeType":"YulFunctionCall","src":"2323:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2311:3:21"},"nodeType":"YulFunctionCall","src":"2311:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2297:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2462:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2464:16:21"},"nodeType":"YulFunctionCall","src":"2464:18:21"},"nodeType":"YulExpressionStatement","src":"2464:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2405:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2417:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2402:2:21"},"nodeType":"YulFunctionCall","src":"2402:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2441:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2453:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2438:2:21"},"nodeType":"YulFunctionCall","src":"2438:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2399:2:21"},"nodeType":"YulFunctionCall","src":"2399:62:21"},"nodeType":"YulIf","src":"2396:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2500:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2504:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2493:6:21"},"nodeType":"YulFunctionCall","src":"2493:22:21"},"nodeType":"YulExpressionStatement","src":"2493:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2269:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"2277:4:21","type":""}],"src":"2240:281:21"},{"body":{"nodeType":"YulBlock","src":"2555:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2572:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2575:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:21"},"nodeType":"YulFunctionCall","src":"2565:88:21"},"nodeType":"YulExpressionStatement","src":"2565:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2669:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2672:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2662:6:21"},"nodeType":"YulFunctionCall","src":"2662:15:21"},"nodeType":"YulExpressionStatement","src":"2662:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2693:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2696:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2686:6:21"},"nodeType":"YulFunctionCall","src":"2686:15:21"},"nodeType":"YulExpressionStatement","src":"2686:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2527:180:21"},{"body":{"nodeType":"YulBlock","src":"2741:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2758:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2761:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:21"},"nodeType":"YulFunctionCall","src":"2751:88:21"},"nodeType":"YulExpressionStatement","src":"2751:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2855:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2858:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:21"},"nodeType":"YulFunctionCall","src":"2848:15:21"},"nodeType":"YulExpressionStatement","src":"2848:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2879:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2882:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2872:6:21"},"nodeType":"YulFunctionCall","src":"2872:15:21"},"nodeType":"YulExpressionStatement","src":"2872:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2713:180:21"},{"body":{"nodeType":"YulBlock","src":"2947:54:21","statements":[{"nodeType":"YulAssignment","src":"2957:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2975:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2982:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2971:3:21"},"nodeType":"YulFunctionCall","src":"2971:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2991:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2987:3:21"},"nodeType":"YulFunctionCall","src":"2987:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2967:3:21"},"nodeType":"YulFunctionCall","src":"2967:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2957:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2930:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2940:6:21","type":""}],"src":"2899:102:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000600160006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200187f3803806200187f833981810160405281019062000052919062000506565b80600090805190602001906200006a929190620003e4565b5061080060066000806004811115620000ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115620000e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506280000060066000600160048111156200015c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481111562000195577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550632000000060066000600260048111156200020d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481111562000246577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506408000000006006600060036004811115620002bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115620002f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506410000000006006600060048081111562000370577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115620003a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050620006bb565b828054620003f290620005e0565b90600052602060002090601f01602090048101928262000416576000855562000462565b82601f106200043157805160ff191683800117855562000462565b8280016001018555821562000462579182015b828111156200046157825182559160200191906001019062000444565b5b50905062000471919062000475565b5090565b5b808211156200049057600081600090555060010162000476565b5090565b6000620004ab620004a58462000574565b6200054b565b905082815260208101848484011115620004c457600080fd5b620004d1848285620005aa565b509392505050565b600082601f830112620004eb57600080fd5b8151620004fd84826020860162000494565b91505092915050565b6000602082840312156200051957600080fd5b600082015167ffffffffffffffff8111156200053457600080fd5b6200054284828501620004d9565b91505092915050565b6000620005576200056a565b905062000565828262000616565b919050565b6000604051905090565b600067ffffffffffffffff8211156200059257620005916200067b565b5b6200059d82620006aa565b9050602081019050919050565b60005b83811015620005ca578082015181840152602081019050620005ad565b83811115620005da576000848401525b50505050565b60006002820490506001821680620005f957607f821691505b6020821081141562000610576200060f6200064c565b5b50919050565b6200062182620006aa565b810181811067ffffffffffffffff821117156200064357620006426200067b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6111b480620006cb6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806381ab68dd1161006657806381ab68dd1461010e578063a9b494a11461012a578063d9fc907e14610148578063e8d3863314610166578063f5cd020c1461019657610093565b80630ac298dc14610098578063207f2cec146100b6578063214c471c146100d257806359cf9e17146100f0575b600080fd5b6100a06101b2565b6040516100ad9190610ec4565b60405180910390f35b6100d060048036038101906100cb9190610a90565b610273565b005b6100da61028d565b6040516100e79190610f01565b60405180910390f35b6100f8610393565b6040516101059190610e87565b60405180910390f35b61012860048036038101906101239190610ad1565b6103b9565b005b61013261050e565b60405161013f9190610ee6565b60405180910390f35b6101506105cc565b60405161015d9190610ea2565b60405180910390f35b610180600480360381019061017b9190610b12565b610708565b60405161018d9190610f23565b60405180910390f35b6101b060048036038101906101ab9190610a90565b610729565b005b6101ba61075d565b60008080546101c89061107e565b905014156101d557600080fd5b6040518060200160405280600080546101ed9061107e565b80601f01602080910402602001604051908101604052809291908181526020018280546102199061107e565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050815250905090565b8060009080519060200190610289929190610770565b5050565b6102956107f6565b6000600167ffffffffffffffff8111156102d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561031157816020015b6102fe610809565b8152602001906001900390816102f65790505b5090506040518060400160405280636373840960070b8152602001686c6b935b8bbd40000081525081600081518110610373577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180602001604052808281525091505090565b61039b610826565b604051806020016040528069021e19e0c9bab2400000815250905090565b600160009054906101000a900460ff166104a857600060405180606001604052808360200151815260200160008152602001836040015167ffffffffffffffff1681525090506040518060400160405280836000015181526020018281525060026000820151816000019080519060200190610436929190610770565b50602082015181600101600082015181600001556020820151816001015560408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505090505060018060006101000a81548160ff0219169083151502179055505061050b565b8060000151600260000190805190602001906104c5929190610770565b5080602001516002600101600001819055508060400151600260010160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b50565b610516610839565b6040518060200160405280600660006001600481111561055f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115610597577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16815250905090565b6105d4610856565b600160009054906101000a900460ff166105ed57600080fd5b6105f561087c565b6040518060400160405280600260405180604001604052908160008201805461061d9061107e565b80601f01602080910402602001604051908101604052809291908181526020018280546106499061107e565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250508152505081526020018281525091505090565b6107106108b9565b6040518060200160405280600015158152509050919050565b60008080546107379061107e565b90501461074357600080fd5b8060009080519060200190610759929190610770565b5050565b6040518060200160405280606081525090565b82805461077c9061107e565b90600052602060002090601f01602090048101928261079e57600085556107e5565b82601f106107b757805160ff19168380011785556107e5565b828001600101855582156107e5579182015b828111156107e45782518255916020019190600101906107c9565b5b5090506107f291906108ce565b5090565b6040518060200160405280606081525090565b6040518060400160405280600060070b8152602001600081525090565b6040518060200160405280600081525090565b6040518060200160405280600067ffffffffffffffff1681525090565b60405180604001604052806108696108eb565b815260200161087661087c565b81525090565b6040518060a001604052806060815260200160008152602001600067ffffffffffffffff1681526020016000151581526020016000151581525090565b60405180602001604052806000151581525090565b5b808211156108e75760008160009055506001016108cf565b5090565b60405180604001604052806060815260200161090561090b565b81525090565b60405180606001604052806000815260200160008152602001600067ffffffffffffffff1681525090565b600061094961094484610f63565b610f3e565b90508281526020810184848401111561096157600080fd5b61096c84828561103c565b509392505050565b60008135905061098381611150565b92915050565b600082601f83011261099a57600080fd5b81356109aa848260208601610936565b91505092915050565b6000606082840312156109c557600080fd5b6109cf6060610f3e565b9050600082013567ffffffffffffffff8111156109eb57600080fd5b6109f784828501610989565b6000830152506020610a0b84828501610974565b6020830152506040610a1f84828501610a7b565b60408301525092915050565b600060208284031215610a3d57600080fd5b610a476020610f3e565b9050600082013567ffffffffffffffff811115610a6357600080fd5b610a6f84828501610989565b60008301525092915050565b600081359050610a8a81611167565b92915050565b600060208284031215610aa257600080fd5b600082013567ffffffffffffffff811115610abc57600080fd5b610ac884828501610989565b91505092915050565b600060208284031215610ae357600080fd5b600082013567ffffffffffffffff811115610afd57600080fd5b610b09848285016109b3565b91505092915050565b600060208284031215610b2457600080fd5b600082013567ffffffffffffffff811115610b3e57600080fd5b610b4a84828501610a2b565b91505092915050565b6000610b5f8383610e49565b60408301905092915050565b6000610b7682610fa4565b610b808185610fd2565b9350610b8b83610f94565b8060005b83811015610bbc578151610ba38882610b53565b9750610bae83610fc5565b925050600181019050610b8f565b5085935050505092915050565b610bd281611005565b82525050565b6000610be382610faf565b610bed8185610fe3565b9350610bfd81856020860161104b565b610c068161113f565b840191505092915050565b610c1a81611011565b82525050565b610c298161101b565b82525050565b6000610c3a82610fba565b610c448185610ff4565b9350610c5481856020860161104b565b610c5d8161113f565b840191505092915050565b60006080830160008301518482036000860152610c858282610c2f565b9150506020830151610c9a6020860182610ca5565b508091505092915050565b606082016000820151610cbb6000850182610c11565b506020820151610cce6020850182610c11565b506040820151610ce16040850182610e78565b50505050565b602082016000820151610cfd6000850182610c11565b50505050565b60006040830160008301518482036000860152610d208282610c68565b91505060208301518482036020860152610d3a8282610dd3565b9150508091505092915050565b60006020830160008301518482036000860152610d648282610c2f565b9150508091505092915050565b602082016000820151610d876000850182610e78565b50505050565b60006020830160008301518482036000860152610daa8282610b6b565b9150508091505092915050565b602082016000820151610dcd6000850182610bc9565b50505050565b600060a0830160008301518482036000860152610df08282610bd8565b9150506020830151610e056020860182610c11565b506040830151610e186040860182610e78565b506060830151610e2b6060860182610bc9565b506080830151610e3e6080860182610bc9565b508091505092915050565b604082016000820151610e5f6000850182610c20565b506020820151610e726020850182610c11565b50505050565b610e8181611028565b82525050565b6000602082019050610e9c6000830184610ce7565b92915050565b60006020820190508181036000830152610ebc8184610d03565b905092915050565b60006020820190508181036000830152610ede8184610d47565b905092915050565b6000602082019050610efb6000830184610d71565b92915050565b60006020820190508181036000830152610f1b8184610d8d565b905092915050565b6000602082019050610f386000830184610db7565b92915050565b6000610f48610f59565b9050610f5482826110b0565b919050565b6000604051905090565b600067ffffffffffffffff821115610f7e57610f7d611110565b5b610f878261113f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b60008160070b9050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561106957808201518184015260208101905061104e565b83811115611078576000848401525b50505050565b6000600282049050600182168061109657607f821691505b602082108114156110aa576110a96110e1565b5b50919050565b6110b98261113f565b810181811067ffffffffffffffff821117156110d8576110d7611110565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61115981611011565b811461116457600080fd5b50565b61117081611028565b811461117b57600080fd5b5056fea2646970667358221220ac91241b3fab112cf9f96a027fcabf53a89391bcc2fe422cabe2d9e328679ed964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x187F CODESIZE SUB DUP1 PUSH3 0x187F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x52 SWAP2 SWAP1 PUSH3 0x506 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x3E4 JUMP JUMPDEST POP PUSH2 0x800 PUSH1 0x6 PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xAC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xE5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x800000 PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x15C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x195 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x20000000 PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x20D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x246 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH5 0x800000000 PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2BF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2F8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH5 0x1000000000 PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH3 0x370 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x3A9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x6BB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3F2 SWAP1 PUSH3 0x5E0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x416 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x462 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x431 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x462 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x462 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x461 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x444 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x471 SWAP2 SWAP1 PUSH3 0x475 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x490 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x476 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AB PUSH3 0x4A5 DUP5 PUSH3 0x574 JUMP JUMPDEST PUSH3 0x54B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4D1 DUP5 DUP3 DUP6 PUSH3 0x5AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x4FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x494 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x542 DUP5 DUP3 DUP6 ADD PUSH3 0x4D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x557 PUSH3 0x56A JUMP JUMPDEST SWAP1 POP PUSH3 0x565 DUP3 DUP3 PUSH3 0x616 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x592 JUMPI PUSH3 0x591 PUSH3 0x67B JUMP JUMPDEST JUMPDEST PUSH3 0x59D DUP3 PUSH3 0x6AA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5AD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x610 JUMPI PUSH3 0x60F PUSH3 0x64C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x621 DUP3 PUSH3 0x6AA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x643 JUMPI PUSH3 0x642 PUSH3 0x67B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B4 DUP1 PUSH3 0x6CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81AB68DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x81AB68DD EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA9B494A1 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xD9FC907E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xE8D38633 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF5CD020C EQ PUSH2 0x196 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xAC298DC EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x207F2CEC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x214C471C EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x59CF9E17 EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x132 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x75D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD PUSH2 0x1C8 SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP EQ ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x266 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x249 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x289 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x295 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x311 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x2FE PUSH2 0x809 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2F6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH4 0x63738409 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x6C6B935B8BBD400000 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x373 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x436 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP SWAP1 POP POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x50B JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4C5 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x55F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x597 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x679 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x710 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x759 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x79E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x7E5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x7B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x7E5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x7E5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7E4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7C9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x869 PUSH2 0x8EB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x876 PUSH2 0x87C JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x8CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x905 PUSH2 0x90B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x949 PUSH2 0x944 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP5 DUP3 DUP6 PUSH2 0x103C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x983 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CF PUSH1 0x60 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F7 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA0B DUP5 DUP3 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA1F DUP5 DUP3 DUP6 ADD PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA47 PUSH1 0x20 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6F DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8A DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC8 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB09 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5F DUP4 DUP4 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP3 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xB80 DUP2 DUP6 PUSH2 0xFD2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB8B DUP4 PUSH2 0xF94 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBBC JUMPI DUP2 MLOAD PUSH2 0xBA3 DUP9 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP8 POP PUSH2 0xBAE DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB8F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x1005 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xBED DUP2 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH2 0xBFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x104B JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0x113F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3A DUP3 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xC44 DUP2 DUP6 PUSH2 0xFF4 JUMP JUMPDEST SWAP4 POP PUSH2 0xC54 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x104B JUMP JUMPDEST PUSH2 0xC5D DUP2 PUSH2 0x113F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xC85 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xCA5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCBB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCCE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xCE1 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCFD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xD20 DUP3 DUP3 PUSH2 0xC68 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xD3A DUP3 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xD64 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xD87 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDAA DUP3 DUP3 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDCD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDF0 DUP3 DUP3 PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xE05 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xE18 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE2B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xE3E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE5F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC20 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE72 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBC DUP2 DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 DUP5 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF1B DUP2 DUP5 PUSH2 0xD8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP PUSH2 0xF54 DUP3 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH2 0xF87 DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1069 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x104E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1096 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x10E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B9 DUP3 PUSH2 0x113F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1159 DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP2 EQ PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP2 EQ PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SWAP2 0x24 SHL EXTCODEHASH 0xAB GT 0x2C 0xF9 0xF9 PUSH11 0x27FCABF53A89391BCC2FE TIMESTAMP 0x2C 0xAB 0xE2 0xD9 0xE3 0x28 PUSH8 0x9ED964736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"573:5089:17:-:0;;;639:5;615:29;;;;;;;;;;;;;;;;;;;;888:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;940:6;932:5;:14;;;;;;;;;;;;:::i;:::-;;1006:7;957:16;:46;974:28;957:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;1072:7;1023:16;:46;1040:28;1023:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;1140:9;1089:16;:48;1106:30;1089:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;1209:8;1159:16;:47;1176:29;1159:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;1277:14;1227:16;:47;1244:29;1227:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;888:410;573:5089;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:21:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:390::-;755:6;804:2;792:9;783:7;779:23;775:32;772:2;;;820:1;817;810:12;772:2;884:1;873:9;869:17;863:24;914:18;906:6;903:30;900:2;;;946:1;943;936:12;900:2;974:74;1040:7;1031:6;1020:9;1016:22;974:74;:::i;:::-;964:84;;834:224;762:303;;;;:::o;1071:129::-;1105:6;1132:20;;:::i;:::-;1122:30;;1161:33;1189:4;1181:6;1161:33;:::i;:::-;1112:88;;;:::o;1206:75::-;1239:6;1272:2;1266:9;1256:19;;1246:35;:::o;1287:308::-;1349:4;1439:18;1431:6;1428:30;1425:2;;;1461:18;;:::i;:::-;1425:2;1499:29;1521:6;1499:29;:::i;:::-;1491:37;;1583:4;1577;1573:15;1565:23;;1354:241;;;:::o;1601:307::-;1669:1;1679:113;1693:6;1690:1;1687:13;1679:113;;;1778:1;1773:3;1769:11;1763:18;1759:1;1754:3;1750:11;1743:39;1715:2;1712:1;1708:10;1703:15;;1679:113;;;1810:6;1807:1;1804:13;1801:2;;;1890:1;1881:6;1876:3;1872:16;1865:27;1801:2;1650:258;;;;:::o;1914:320::-;1958:6;1995:1;1989:4;1985:12;1975:22;;2042:1;2036:4;2032:12;2063:18;2053:2;;2119:4;2111:6;2107:17;2097:27;;2053:2;2181;2173:6;2170:14;2150:18;2147:38;2144:2;;;2200:18;;:::i;:::-;2144:2;1965:269;;;;:::o;2240:281::-;2323:27;2345:4;2323:27;:::i;:::-;2315:6;2311:40;2453:6;2441:10;2438:22;2417:18;2405:10;2402:34;2399:62;2396:2;;;2464:18;;:::i;:::-;2396:2;2504:10;2500:2;2493:22;2283:238;;;:::o;2527:180::-;2575:77;2572:1;2565:88;2672:4;2669:1;2662:15;2696:4;2693:1;2686:15;2713:180;2761:77;2758:1;2751:88;2858:4;2855:1;2848:15;2882:4;2879:1;2872:15;2899:102;2940:6;2991:2;2987:7;2982:2;2975:5;2971:14;2967:28;2957:38;;2947:54;;;:::o;573:5089:17:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19425:21","statements":[{"body":{"nodeType":"YulBlock","src":"91:261:21","statements":[{"nodeType":"YulAssignment","src":"101:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:21"},"nodeType":"YulFunctionCall","src":"126:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:21"},"nodeType":"YulFunctionCall","src":"110:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:21"},"nodeType":"YulFunctionCall","src":"185:21:21"},"nodeType":"YulExpressionStatement","src":"185:21:21"},{"nodeType":"YulVariableDeclaration","src":"215:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:21"},"nodeType":"YulFunctionCall","src":"226:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"289:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"292:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"282:6:21"},"nodeType":"YulFunctionCall","src":"282:12:21"},"nodeType":"YulExpressionStatement","src":"282:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:21"},"nodeType":"YulFunctionCall","src":"257:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:21"},"nodeType":"YulFunctionCall","src":"254:25:21"},"nodeType":"YulIf","src":"251:2:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"329:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"334:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"339:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"305:23:21"},"nodeType":"YulFunctionCall","src":"305:41:21"},"nodeType":"YulExpressionStatement","src":"305:41:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:21","type":""}],"src":"7:345:21"},{"body":{"nodeType":"YulBlock","src":"409:86:21","statements":[{"nodeType":"YulAssignment","src":"419:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"441:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"428:12:21"},"nodeType":"YulFunctionCall","src":"428:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"419:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"457:25:21"},"nodeType":"YulFunctionCall","src":"457:32:21"},"nodeType":"YulExpressionStatement","src":"457:32:21"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"387:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"395:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"403:5:21","type":""}],"src":"358:137:21"},{"body":{"nodeType":"YulBlock","src":"577:211:21","statements":[{"body":{"nodeType":"YulBlock","src":"626:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"635:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"638:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"628:6:21"},"nodeType":"YulFunctionCall","src":"628:12:21"},"nodeType":"YulExpressionStatement","src":"628:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"605:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"613:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"601:3:21"},"nodeType":"YulFunctionCall","src":"601:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"620:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"597:3:21"},"nodeType":"YulFunctionCall","src":"597:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"590:6:21"},"nodeType":"YulFunctionCall","src":"590:35:21"},"nodeType":"YulIf","src":"587:2:21"},{"nodeType":"YulVariableDeclaration","src":"651:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"678:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"665:12:21"},"nodeType":"YulFunctionCall","src":"665:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"655:6:21","type":""}]},{"nodeType":"YulAssignment","src":"694:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"755:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"763:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"751:3:21"},"nodeType":"YulFunctionCall","src":"751:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"770:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"778:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"703:47:21"},"nodeType":"YulFunctionCall","src":"703:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"694:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"555:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"563:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"571:5:21","type":""}],"src":"515:273:21"},{"body":{"nodeType":"YulBlock","src":"939:715:21","statements":[{"body":{"nodeType":"YulBlock","src":"983:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"992:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"995:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"985:6:21"},"nodeType":"YulFunctionCall","src":"985:12:21"},"nodeType":"YulExpressionStatement","src":"985:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"960:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"965:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"977:4:21","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:30:21"},"nodeType":"YulIf","src":"949:2:21"},{"nodeType":"YulAssignment","src":"1008:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:4:21","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1017:15:21"},"nodeType":"YulFunctionCall","src":"1017:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1008:5:21"}]},{"nodeType":"YulBlock","src":"1048:264:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1094:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:21"},"nodeType":"YulFunctionCall","src":"1121:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1108:12:21"},"nodeType":"YulFunctionCall","src":"1108:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1098:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1186:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1195:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1188:6:21"},"nodeType":"YulFunctionCall","src":"1188:12:21"},"nodeType":"YulExpressionStatement","src":"1188:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1158:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1166:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1155:2:21"},"nodeType":"YulFunctionCall","src":"1155:30:21"},"nodeType":"YulIf","src":"1152:2:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1227:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1234:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1223:3:21"},"nodeType":"YulFunctionCall","src":"1223:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1287:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1272:3:21"},"nodeType":"YulFunctionCall","src":"1272:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"1296:3:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1241:30:21"},"nodeType":"YulFunctionCall","src":"1241:59:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1216:6:21"},"nodeType":"YulFunctionCall","src":"1216:85:21"},"nodeType":"YulExpressionStatement","src":"1216:85:21"}]},{"nodeType":"YulBlock","src":"1322:155:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1362:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1376:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1366:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1403:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1410:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:21"},"nodeType":"YulFunctionCall","src":"1399:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1441:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1452:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1437:3:21"},"nodeType":"YulFunctionCall","src":"1437:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"1461:3:21"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"1417:19:21"},"nodeType":"YulFunctionCall","src":"1417:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1392:6:21"},"nodeType":"YulFunctionCall","src":"1392:74:21"},"nodeType":"YulExpressionStatement","src":"1392:74:21"}]},{"nodeType":"YulBlock","src":"1487:160:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1532:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1546:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1536:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1573:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1580:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:21"},"nodeType":"YulFunctionCall","src":"1569:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1611:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1622:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:21"},"nodeType":"YulFunctionCall","src":"1607:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"1631:3:21"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"1587:19:21"},"nodeType":"YulFunctionCall","src":"1587:48:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1562:6:21"},"nodeType":"YulFunctionCall","src":"1562:74:21"},"nodeType":"YulExpressionStatement","src":"1562:74:21"}]}]},"name":"abi_decode_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"914:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"925:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"933:5:21","type":""}],"src":"843:811:21"},{"body":{"nodeType":"YulBlock","src":"1809:369:21","statements":[{"body":{"nodeType":"YulBlock","src":"1853:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1865:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1855:6:21"},"nodeType":"YulFunctionCall","src":"1855:12:21"},"nodeType":"YulExpressionStatement","src":"1855:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1830:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1835:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"1847:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1822:3:21"},"nodeType":"YulFunctionCall","src":"1822:30:21"},"nodeType":"YulIf","src":"1819:2:21"},{"nodeType":"YulAssignment","src":"1878:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:4:21","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1887:15:21"},"nodeType":"YulFunctionCall","src":"1887:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1878:5:21"}]},{"nodeType":"YulBlock","src":"1918:253:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1953:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:21"},"nodeType":"YulFunctionCall","src":"1980:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1967:12:21"},"nodeType":"YulFunctionCall","src":"1967:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1957:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2045:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2057:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2047:6:21"},"nodeType":"YulFunctionCall","src":"2047:12:21"},"nodeType":"YulExpressionStatement","src":"2047:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2017:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2025:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2014:2:21"},"nodeType":"YulFunctionCall","src":"2014:30:21"},"nodeType":"YulIf","src":"2011:2:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2086:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2093:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2082:3:21"},"nodeType":"YulFunctionCall","src":"2082:16:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:21"},"nodeType":"YulFunctionCall","src":"2131:22:21"},{"name":"end","nodeType":"YulIdentifier","src":"2155:3:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2100:30:21"},"nodeType":"YulFunctionCall","src":"2100:59:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2075:6:21"},"nodeType":"YulFunctionCall","src":"2075:85:21"},"nodeType":"YulExpressionStatement","src":"2075:85:21"}]}]},"name":"abi_decode_t_struct$_IsControllingAddressParam_$4789_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1784:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1795:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1803:5:21","type":""}],"src":"1711:467:21"},{"body":{"nodeType":"YulBlock","src":"2235:86:21","statements":[{"nodeType":"YulAssignment","src":"2245:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2267:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2254:12:21"},"nodeType":"YulFunctionCall","src":"2254:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2245:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2309:5:21"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2283:25:21"},"nodeType":"YulFunctionCall","src":"2283:32:21"},"nodeType":"YulExpressionStatement","src":"2283:32:21"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2213:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2221:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2229:5:21","type":""}],"src":"2184:137:21"},{"body":{"nodeType":"YulBlock","src":"2403:299:21","statements":[{"body":{"nodeType":"YulBlock","src":"2449:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2458:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2461:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2451:6:21"},"nodeType":"YulFunctionCall","src":"2451:12:21"},"nodeType":"YulExpressionStatement","src":"2451:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2424:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2420:3:21"},"nodeType":"YulFunctionCall","src":"2420:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2416:3:21"},"nodeType":"YulFunctionCall","src":"2416:32:21"},"nodeType":"YulIf","src":"2413:2:21"},{"nodeType":"YulBlock","src":"2475:220:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2490:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2532:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:21"},"nodeType":"YulFunctionCall","src":"2517:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2504:12:21"},"nodeType":"YulFunctionCall","src":"2504:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2494:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2582:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2591:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2594:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2584:6:21"},"nodeType":"YulFunctionCall","src":"2584:12:21"},"nodeType":"YulExpressionStatement","src":"2584:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2554:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2562:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2551:2:21"},"nodeType":"YulFunctionCall","src":"2551:30:21"},"nodeType":"YulIf","src":"2548:2:21"},{"nodeType":"YulAssignment","src":"2612:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2657:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2668:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2653:3:21"},"nodeType":"YulFunctionCall","src":"2653:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2677:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2622:30:21"},"nodeType":"YulFunctionCall","src":"2622:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2612:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2373:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2384:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2396:6:21","type":""}],"src":"2327:375:21"},{"body":{"nodeType":"YulBlock","src":"2815:330:21","statements":[{"body":{"nodeType":"YulBlock","src":"2861:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2870:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2873:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2863:6:21"},"nodeType":"YulFunctionCall","src":"2863:12:21"},"nodeType":"YulExpressionStatement","src":"2863:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2836:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2832:3:21"},"nodeType":"YulFunctionCall","src":"2832:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2857:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2828:3:21"},"nodeType":"YulFunctionCall","src":"2828:32:21"},"nodeType":"YulIf","src":"2825:2:21"},{"nodeType":"YulBlock","src":"2887:251:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2902:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2933:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2944:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2929:3:21"},"nodeType":"YulFunctionCall","src":"2929:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2916:12:21"},"nodeType":"YulFunctionCall","src":"2916:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2906:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2994:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3003:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3006:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2996:6:21"},"nodeType":"YulFunctionCall","src":"2996:12:21"},"nodeType":"YulExpressionStatement","src":"2996:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2966:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2974:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2963:2:21"},"nodeType":"YulFunctionCall","src":"2963:30:21"},"nodeType":"YulIf","src":"2960:2:21"},{"nodeType":"YulAssignment","src":"3024:104:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3100:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3111:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:21"},"nodeType":"YulFunctionCall","src":"3096:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3120:7:21"}],"functionName":{"name":"abi_decode_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","nodeType":"YulIdentifier","src":"3034:61:21"},"nodeType":"YulFunctionCall","src":"3034:94:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3024:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2785:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2796:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2808:6:21","type":""}],"src":"2708:437:21"},{"body":{"nodeType":"YulBlock","src":"3260:332:21","statements":[{"body":{"nodeType":"YulBlock","src":"3306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3315:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3308:6:21"},"nodeType":"YulFunctionCall","src":"3308:12:21"},"nodeType":"YulExpressionStatement","src":"3308:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3281:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3290:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3277:3:21"},"nodeType":"YulFunctionCall","src":"3277:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3302:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3273:3:21"},"nodeType":"YulFunctionCall","src":"3273:32:21"},"nodeType":"YulIf","src":"3270:2:21"},{"nodeType":"YulBlock","src":"3332:253:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3378:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3389:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:21"},"nodeType":"YulFunctionCall","src":"3374:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3361:12:21"},"nodeType":"YulFunctionCall","src":"3361:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3439:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3448:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3451:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3441:6:21"},"nodeType":"YulFunctionCall","src":"3441:12:21"},"nodeType":"YulExpressionStatement","src":"3441:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3411:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3419:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3408:2:21"},"nodeType":"YulFunctionCall","src":"3408:30:21"},"nodeType":"YulIf","src":"3405:2:21"},{"nodeType":"YulAssignment","src":"3469:106:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3547:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3558:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:21"},"nodeType":"YulFunctionCall","src":"3543:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3567:7:21"}],"functionName":{"name":"abi_decode_t_struct$_IsControllingAddressParam_$4789_memory_ptr","nodeType":"YulIdentifier","src":"3479:63:21"},"nodeType":"YulFunctionCall","src":"3479:96:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3469:6:21"}]}]}]},"name":"abi_decode_tuple_t_struct$_IsControllingAddressParam_$4789_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3230:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3241:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3253:6:21","type":""}],"src":"3151:441:21"},{"body":{"nodeType":"YulBlock","src":"3738:159:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3842:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3850:3:21"}],"functionName":{"name":"abi_encode_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr","nodeType":"YulIdentifier","src":"3748:93:21"},"nodeType":"YulFunctionCall","src":"3748:106:21"},"nodeType":"YulExpressionStatement","src":"3748:106:21"},{"nodeType":"YulAssignment","src":"3863:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3881:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3886:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3877:3:21"},"nodeType":"YulFunctionCall","src":"3877:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3863:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3711:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3719:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3727:10:21","type":""}],"src":"3598:299:21"},{"body":{"nodeType":"YulBlock","src":"4155:778:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4165:98:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4257:5:21"}],"functionName":{"name":"array_length_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4179:77:21"},"nodeType":"YulFunctionCall","src":"4179:84:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4169:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4272:113:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4373:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4378:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4279:93:21"},"nodeType":"YulFunctionCall","src":"4279:106:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4272:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"4394:101:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4489:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4409:79:21"},"nodeType":"YulFunctionCall","src":"4409:86:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"4398:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4504:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"4518:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4508:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4594:314:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4608:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4635:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4629:5:21"},"nodeType":"YulFunctionCall","src":"4629:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"4612:13:21","type":""}]},{"nodeType":"YulAssignment","src":"4655:130:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"4766:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"4781:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr","nodeType":"YulIdentifier","src":"4662:103:21"},"nodeType":"YulFunctionCall","src":"4662:123:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4655:3:21"}]},{"nodeType":"YulAssignment","src":"4798:100:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4891:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4808:82:21"},"nodeType":"YulFunctionCall","src":"4808:90:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4798:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4556:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4559:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4553:2:21"},"nodeType":"YulFunctionCall","src":"4553:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4567:18:21","statements":[{"nodeType":"YulAssignment","src":"4569:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4578:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"4581:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4574:3:21"},"nodeType":"YulFunctionCall","src":"4574:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4569:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4538:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4540:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4549:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4544:1:21","type":""}]}]},"src":"4534:374:21"},{"nodeType":"YulAssignment","src":"4917:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"4924:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4917:3:21"}]}]},"name":"abi_encode_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4134:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4141:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4150:3:21","type":""}],"src":"3981:952:21"},{"body":{"nodeType":"YulBlock","src":"4988:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5005:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5025:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5010:14:21"},"nodeType":"YulFunctionCall","src":"5010:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4998:6:21"},"nodeType":"YulFunctionCall","src":"4998:34:21"},"nodeType":"YulExpressionStatement","src":"4998:34:21"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4976:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4983:3:21","type":""}],"src":"4939:99:21"},{"body":{"nodeType":"YulBlock","src":"5124:260:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5134:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5180:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5148:31:21"},"nodeType":"YulFunctionCall","src":"5148:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5138:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5195:67:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5250:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5255:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5202:47:21"},"nodeType":"YulFunctionCall","src":"5202:60:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5195:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5297:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5304:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5293:3:21"},"nodeType":"YulFunctionCall","src":"5293:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5311:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5316:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5271:21:21"},"nodeType":"YulFunctionCall","src":"5271:52:21"},"nodeType":"YulExpressionStatement","src":"5271:52:21"},{"nodeType":"YulAssignment","src":"5332:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5343:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5370:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5348:21:21"},"nodeType":"YulFunctionCall","src":"5348:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5339:3:21"},"nodeType":"YulFunctionCall","src":"5339:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5332:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5105:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5112:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5120:3:21","type":""}],"src":"5044:340:21"},{"body":{"nodeType":"YulBlock","src":"5443:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5460:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5482:5:21"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5465:16:21"},"nodeType":"YulFunctionCall","src":"5465:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5453:6:21"},"nodeType":"YulFunctionCall","src":"5453:36:21"},"nodeType":"YulExpressionStatement","src":"5453:36:21"}]},"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5431:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5438:3:21","type":""}],"src":"5390:105:21"},{"body":{"nodeType":"YulBlock","src":"5552:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5569:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5590:5:21"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"5574:15:21"},"nodeType":"YulFunctionCall","src":"5574:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5562:6:21"},"nodeType":"YulFunctionCall","src":"5562:35:21"},"nodeType":"YulExpressionStatement","src":"5562:35:21"}]},"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5540:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5547:3:21","type":""}],"src":"5501:102:21"},{"body":{"nodeType":"YulBlock","src":"5691:262:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5701:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5748:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5715:32:21"},"nodeType":"YulFunctionCall","src":"5715:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5705:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5763:68:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5819:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5824:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5770:48:21"},"nodeType":"YulFunctionCall","src":"5770:61:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5763:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5866:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5873:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5862:3:21"},"nodeType":"YulFunctionCall","src":"5862:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5880:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5885:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5840:21:21"},"nodeType":"YulFunctionCall","src":"5840:52:21"},"nodeType":"YulExpressionStatement","src":"5840:52:21"},{"nodeType":"YulAssignment","src":"5901:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5912:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5939:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5917:21:21"},"nodeType":"YulFunctionCall","src":"5917:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5908:3:21"},"nodeType":"YulFunctionCall","src":"5908:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5901:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5672:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5679:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5687:3:21","type":""}],"src":"5609:344:21"},{"body":{"nodeType":"YulBlock","src":"6177:555:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6187:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6203:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6208:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6199:3:21"},"nodeType":"YulFunctionCall","src":"6199:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"6191:4:21","type":""}]},{"nodeType":"YulBlock","src":"6223:242:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6265:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6295:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6302:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6291:3:21"},"nodeType":"YulFunctionCall","src":"6291:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6285:5:21"},"nodeType":"YulFunctionCall","src":"6285:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6269:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6333:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6338:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6329:3:21"},"nodeType":"YulFunctionCall","src":"6329:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6349:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"6355:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6345:3:21"},"nodeType":"YulFunctionCall","src":"6345:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6322:6:21"},"nodeType":"YulFunctionCall","src":"6322:38:21"},"nodeType":"YulExpressionStatement","src":"6322:38:21"},{"nodeType":"YulAssignment","src":"6373:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6435:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"6449:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6381:53:21"},"nodeType":"YulFunctionCall","src":"6381:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6373:4:21"}]}]},{"nodeType":"YulBlock","src":"6475:230:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6510:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6540:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6547:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:21"},"nodeType":"YulFunctionCall","src":"6536:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6530:5:21"},"nodeType":"YulFunctionCall","src":"6530:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6514:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6666:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6684:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6689:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6680:3:21"},"nodeType":"YulFunctionCall","src":"6680:14:21"}],"functionName":{"name":"abi_encode_t_struct$_BeneficiaryTerm_$4421_memory_ptr_to_t_struct$_BeneficiaryTerm_$4421_memory_ptr","nodeType":"YulIdentifier","src":"6566:99:21"},"nodeType":"YulFunctionCall","src":"6566:129:21"},"nodeType":"YulExpressionStatement","src":"6566:129:21"}]},{"nodeType":"YulAssignment","src":"6715:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"6722:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6715:3:21"}]}]},"name":"abi_encode_t_struct$_ActiveBeneficiary_$4427_memory_ptr_to_t_struct$_ActiveBeneficiary_$4427_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6156:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6163:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6172:3:21","type":""}],"src":"6043:689:21"},{"body":{"nodeType":"YulBlock","src":"6940:572:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6950:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6966:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6971:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6962:3:21"},"nodeType":"YulFunctionCall","src":"6962:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"6954:4:21","type":""}]},{"nodeType":"YulBlock","src":"6986:163:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7022:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7052:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7059:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7048:3:21"},"nodeType":"YulFunctionCall","src":"7048:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7042:5:21"},"nodeType":"YulFunctionCall","src":"7042:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7026:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7110:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7128:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7133:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7124:3:21"},"nodeType":"YulFunctionCall","src":"7124:14:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulIdentifier","src":"7078:31:21"},"nodeType":"YulFunctionCall","src":"7078:61:21"},"nodeType":"YulExpressionStatement","src":"7078:61:21"}]},{"nodeType":"YulBlock","src":"7159:168:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7200:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7230:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7237:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7226:3:21"},"nodeType":"YulFunctionCall","src":"7226:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7220:5:21"},"nodeType":"YulFunctionCall","src":"7220:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7204:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7288:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7306:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7311:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7302:3:21"},"nodeType":"YulFunctionCall","src":"7302:14:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulIdentifier","src":"7256:31:21"},"nodeType":"YulFunctionCall","src":"7256:61:21"},"nodeType":"YulExpressionStatement","src":"7256:61:21"}]},{"nodeType":"YulBlock","src":"7337:168:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7378:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7408:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7415:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7404:3:21"},"nodeType":"YulFunctionCall","src":"7404:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7398:5:21"},"nodeType":"YulFunctionCall","src":"7398:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7382:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7466:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7484:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7489:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7480:3:21"},"nodeType":"YulFunctionCall","src":"7480:14:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"7434:31:21"},"nodeType":"YulFunctionCall","src":"7434:61:21"},"nodeType":"YulExpressionStatement","src":"7434:61:21"}]}]},"name":"abi_encode_t_struct$_BeneficiaryTerm_$4421_memory_ptr_to_t_struct$_BeneficiaryTerm_$4421_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6927:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6934:3:21","type":""}],"src":"6818:694:21"},{"body":{"nodeType":"YulBlock","src":"7768:228:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7778:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7794:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7799:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7790:3:21"},"nodeType":"YulFunctionCall","src":"7790:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7782:4:21","type":""}]},{"nodeType":"YulBlock","src":"7814:175:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7862:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7892:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7899:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7888:3:21"},"nodeType":"YulFunctionCall","src":"7888:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7882:5:21"},"nodeType":"YulFunctionCall","src":"7882:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7866:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7950:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7968:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7973:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:21"},"nodeType":"YulFunctionCall","src":"7964:14:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulIdentifier","src":"7918:31:21"},"nodeType":"YulFunctionCall","src":"7918:61:21"},"nodeType":"YulExpressionStatement","src":"7918:61:21"}]}]},"name":"abi_encode_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7755:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7762:3:21","type":""}],"src":"7616:380:21"},{"body":{"nodeType":"YulBlock","src":"8240:673:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8250:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8266:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8271:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:21"},"nodeType":"YulFunctionCall","src":"8262:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8254:4:21","type":""}]},{"nodeType":"YulBlock","src":"8286:287:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8323:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8353:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8360:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8349:3:21"},"nodeType":"YulFunctionCall","src":"8349:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8343:5:21"},"nodeType":"YulFunctionCall","src":"8343:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8327:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8391:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8396:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8387:3:21"},"nodeType":"YulFunctionCall","src":"8387:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8407:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"8413:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8403:3:21"},"nodeType":"YulFunctionCall","src":"8403:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8380:6:21"},"nodeType":"YulFunctionCall","src":"8380:38:21"},"nodeType":"YulExpressionStatement","src":"8380:38:21"},{"nodeType":"YulAssignment","src":"8431:131:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8543:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"8557:4:21"}],"functionName":{"name":"abi_encode_t_struct$_ActiveBeneficiary_$4427_memory_ptr_to_t_struct$_ActiveBeneficiary_$4427_memory_ptr","nodeType":"YulIdentifier","src":"8439:103:21"},"nodeType":"YulFunctionCall","src":"8439:123:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8431:4:21"}]}]},{"nodeType":"YulBlock","src":"8583:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8622:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8652:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8659:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8648:3:21"},"nodeType":"YulFunctionCall","src":"8648:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8642:5:21"},"nodeType":"YulFunctionCall","src":"8642:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8626:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8690:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8695:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8686:3:21"},"nodeType":"YulFunctionCall","src":"8686:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8706:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"8712:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8702:3:21"},"nodeType":"YulFunctionCall","src":"8702:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8679:6:21"},"nodeType":"YulFunctionCall","src":"8679:38:21"},"nodeType":"YulExpressionStatement","src":"8679:38:21"},{"nodeType":"YulAssignment","src":"8730:145:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8856:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"8870:4:21"}],"functionName":{"name":"abi_encode_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr_to_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr","nodeType":"YulIdentifier","src":"8738:117:21"},"nodeType":"YulFunctionCall","src":"8738:137:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8730:4:21"}]}]},{"nodeType":"YulAssignment","src":"8896:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"8903:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8896:3:21"}]}]},"name":"abi_encode_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8219:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8226:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8235:3:21","type":""}],"src":"8090:823:21"},{"body":{"nodeType":"YulBlock","src":"9133:309:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9143:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9159:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9164:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9155:3:21"},"nodeType":"YulFunctionCall","src":"9155:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9147:4:21","type":""}]},{"nodeType":"YulBlock","src":"9179:236:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9215:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9245:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9252:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9241:3:21"},"nodeType":"YulFunctionCall","src":"9241:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9235:5:21"},"nodeType":"YulFunctionCall","src":"9235:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9219:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9283:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9288:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9279:3:21"},"nodeType":"YulFunctionCall","src":"9279:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9299:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9295:3:21"},"nodeType":"YulFunctionCall","src":"9295:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9272:6:21"},"nodeType":"YulFunctionCall","src":"9272:38:21"},"nodeType":"YulExpressionStatement","src":"9272:38:21"},{"nodeType":"YulAssignment","src":"9323:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9385:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"9399:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9331:53:21"},"nodeType":"YulFunctionCall","src":"9331:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9323:4:21"}]}]},{"nodeType":"YulAssignment","src":"9425:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"9432:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9425:3:21"}]}]},"name":"abi_encode_t_struct$_GetOwnerReturn_$4786_memory_ptr_to_t_struct$_GetOwnerReturn_$4786_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9112:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9119:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9128:3:21","type":""}],"src":"8995:447:21"},{"body":{"nodeType":"YulBlock","src":"9674:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9684:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9700:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9705:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9696:3:21"},"nodeType":"YulFunctionCall","src":"9696:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9688:4:21","type":""}]},{"nodeType":"YulBlock","src":"9720:169:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9762:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9792:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9799:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9788:3:21"},"nodeType":"YulFunctionCall","src":"9788:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9782:5:21"},"nodeType":"YulFunctionCall","src":"9782:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9766:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9850:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9868:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9873:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9864:3:21"},"nodeType":"YulFunctionCall","src":"9864:14:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"9818:31:21"},"nodeType":"YulFunctionCall","src":"9818:61:21"},"nodeType":"YulExpressionStatement","src":"9818:61:21"}]}]},"name":"abi_encode_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9661:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9668:3:21","type":""}],"src":"9534:362:21"},{"body":{"nodeType":"YulBlock","src":"10144:407:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10154:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10170:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10175:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10166:3:21"},"nodeType":"YulFunctionCall","src":"10166:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10158:4:21","type":""}]},{"nodeType":"YulBlock","src":"10190:334:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10234:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10264:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10271:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10260:3:21"},"nodeType":"YulFunctionCall","src":"10260:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10254:5:21"},"nodeType":"YulFunctionCall","src":"10254:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10238:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10302:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10307:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:21"},"nodeType":"YulFunctionCall","src":"10298:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10318:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10324:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10314:3:21"},"nodeType":"YulFunctionCall","src":"10314:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10291:6:21"},"nodeType":"YulFunctionCall","src":"10291:38:21"},"nodeType":"YulExpressionStatement","src":"10291:38:21"},{"nodeType":"YulAssignment","src":"10342:171:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10494:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"10508:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10350:143:21"},"nodeType":"YulFunctionCall","src":"10350:163:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10342:4:21"}]}]},{"nodeType":"YulAssignment","src":"10534:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"10541:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10534:3:21"}]}]},"name":"abi_encode_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10123:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10130:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10139:3:21","type":""}],"src":"9992:559:21"},{"body":{"nodeType":"YulBlock","src":"10811:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10821:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10837:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10842:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10833:3:21"},"nodeType":"YulFunctionCall","src":"10833:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10825:4:21","type":""}]},{"nodeType":"YulBlock","src":"10857:168:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10902:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10932:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10939:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10928:3:21"},"nodeType":"YulFunctionCall","src":"10928:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10922:5:21"},"nodeType":"YulFunctionCall","src":"10922:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10906:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10986:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11004:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11009:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11000:3:21"},"nodeType":"YulFunctionCall","src":"11000:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"10958:27:21"},"nodeType":"YulFunctionCall","src":"10958:57:21"},"nodeType":"YulExpressionStatement","src":"10958:57:21"}]}]},"name":"abi_encode_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10798:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10805:3:21","type":""}],"src":"10657:375:21"},{"body":{"nodeType":"YulBlock","src":"11284:1046:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11294:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11310:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11315:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11306:3:21"},"nodeType":"YulFunctionCall","src":"11306:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11298:4:21","type":""}]},{"nodeType":"YulBlock","src":"11330:244:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11376:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11406:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11413:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11402:3:21"},"nodeType":"YulFunctionCall","src":"11402:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11396:5:21"},"nodeType":"YulFunctionCall","src":"11396:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11380:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11444:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11449:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11440:3:21"},"nodeType":"YulFunctionCall","src":"11440:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11460:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11466:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11456:3:21"},"nodeType":"YulFunctionCall","src":"11456:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11433:6:21"},"nodeType":"YulFunctionCall","src":"11433:38:21"},"nodeType":"YulExpressionStatement","src":"11433:38:21"},{"nodeType":"YulAssignment","src":"11484:79:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11544:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"11558:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11492:51:21"},"nodeType":"YulFunctionCall","src":"11492:71:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11484:4:21"}]}]},{"nodeType":"YulBlock","src":"11584:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11624:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11654:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11661:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11650:3:21"},"nodeType":"YulFunctionCall","src":"11650:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11644:5:21"},"nodeType":"YulFunctionCall","src":"11644:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11628:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11712:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11730:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11735:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11726:3:21"},"nodeType":"YulFunctionCall","src":"11726:14:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulIdentifier","src":"11680:31:21"},"nodeType":"YulFunctionCall","src":"11680:61:21"},"nodeType":"YulExpressionStatement","src":"11680:61:21"}]},{"nodeType":"YulBlock","src":"11761:172:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11806:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11836:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11843:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11832:3:21"},"nodeType":"YulFunctionCall","src":"11832:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11826:5:21"},"nodeType":"YulFunctionCall","src":"11826:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11810:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11894:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11912:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11917:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11908:3:21"},"nodeType":"YulFunctionCall","src":"11908:14:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"11862:31:21"},"nodeType":"YulFunctionCall","src":"11862:61:21"},"nodeType":"YulExpressionStatement","src":"11862:61:21"}]},{"nodeType":"YulBlock","src":"11943:177:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11997:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12027:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12034:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12023:3:21"},"nodeType":"YulFunctionCall","src":"12023:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12017:5:21"},"nodeType":"YulFunctionCall","src":"12017:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12001:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12081:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12104:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:21"},"nodeType":"YulFunctionCall","src":"12095:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12053:27:21"},"nodeType":"YulFunctionCall","src":"12053:57:21"},"nodeType":"YulExpressionStatement","src":"12053:57:21"}]},{"nodeType":"YulBlock","src":"12130:173:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12180:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12210:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12217:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:21"},"nodeType":"YulFunctionCall","src":"12206:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12200:5:21"},"nodeType":"YulFunctionCall","src":"12200:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12184:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12264:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12282:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12287:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:21"},"nodeType":"YulFunctionCall","src":"12278:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"12236:27:21"},"nodeType":"YulFunctionCall","src":"12236:57:21"},"nodeType":"YulExpressionStatement","src":"12236:57:21"}]},{"nodeType":"YulAssignment","src":"12313:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"12320:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12313:3:21"}]}]},"name":"abi_encode_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr_to_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11263:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11270:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11279:3:21","type":""}],"src":"11136:1194:21"},{"body":{"nodeType":"YulBlock","src":"12526:388:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12536:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12552:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12557:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12548:3:21"},"nodeType":"YulFunctionCall","src":"12548:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12540:4:21","type":""}]},{"nodeType":"YulBlock","src":"12572:161:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12608:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12638:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12645:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12634:3:21"},"nodeType":"YulFunctionCall","src":"12634:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12628:5:21"},"nodeType":"YulFunctionCall","src":"12628:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12612:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12694:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12712:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12717:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12708:3:21"},"nodeType":"YulFunctionCall","src":"12708:14:21"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"12664:29:21"},"nodeType":"YulFunctionCall","src":"12664:59:21"},"nodeType":"YulExpressionStatement","src":"12664:59:21"}]},{"nodeType":"YulBlock","src":"12743:164:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12780:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12810:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"12817:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12806:3:21"},"nodeType":"YulFunctionCall","src":"12806:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12800:5:21"},"nodeType":"YulFunctionCall","src":"12800:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12784:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12868:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12886:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12891:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12882:3:21"},"nodeType":"YulFunctionCall","src":"12882:14:21"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256","nodeType":"YulIdentifier","src":"12836:31:21"},"nodeType":"YulFunctionCall","src":"12836:61:21"},"nodeType":"YulExpressionStatement","src":"12836:61:21"}]}]},"name":"abi_encode_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12513:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12520:3:21","type":""}],"src":"12410:504:21"},{"body":{"nodeType":"YulBlock","src":"12973:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12990:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13012:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12995:16:21"},"nodeType":"YulFunctionCall","src":"12995:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12983:6:21"},"nodeType":"YulFunctionCall","src":"12983:36:21"},"nodeType":"YulExpressionStatement","src":"12983:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12961:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12968:3:21","type":""}],"src":"12920:105:21"},{"body":{"nodeType":"YulBlock","src":"13215:210:21","statements":[{"nodeType":"YulAssignment","src":"13225:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13237:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13248:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:21"},"nodeType":"YulFunctionCall","src":"13233:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13225:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13391:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13404:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13415:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13400:3:21"},"nodeType":"YulFunctionCall","src":"13400:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13261:129:21"},"nodeType":"YulFunctionCall","src":"13261:157:21"},"nodeType":"YulExpressionStatement","src":"13261:157:21"}]},"name":"abi_encode_tuple_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr__to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13187:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13199:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13210:4:21","type":""}],"src":"13031:394:21"},{"body":{"nodeType":"YulBlock","src":"13605:251:21","statements":[{"nodeType":"YulAssignment","src":"13615:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13627:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13638:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13623:3:21"},"nodeType":"YulFunctionCall","src":"13623:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13615:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13673:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13658:3:21"},"nodeType":"YulFunctionCall","src":"13658:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13681:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13687:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13677:3:21"},"nodeType":"YulFunctionCall","src":"13677:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13651:6:21"},"nodeType":"YulFunctionCall","src":"13651:47:21"},"nodeType":"YulExpressionStatement","src":"13651:47:21"},{"nodeType":"YulAssignment","src":"13707:142:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13835:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"13844:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13715:119:21"},"nodeType":"YulFunctionCall","src":"13715:134:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13707:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr__to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13577:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13589:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13600:4:21","type":""}],"src":"13431:425:21"},{"body":{"nodeType":"YulBlock","src":"14024:239:21","statements":[{"nodeType":"YulAssignment","src":"14034:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14046:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14057:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14042:3:21"},"nodeType":"YulFunctionCall","src":"14042:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14034:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14081:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14092:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14077:3:21"},"nodeType":"YulFunctionCall","src":"14077:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14100:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14106:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14096:3:21"},"nodeType":"YulFunctionCall","src":"14096:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14070:6:21"},"nodeType":"YulFunctionCall","src":"14070:47:21"},"nodeType":"YulExpressionStatement","src":"14070:47:21"},{"nodeType":"YulAssignment","src":"14126:130:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14242:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"14251:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetOwnerReturn_$4786_memory_ptr_to_t_struct$_GetOwnerReturn_$4786_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14134:107:21"},"nodeType":"YulFunctionCall","src":"14134:122:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14126:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetOwnerReturn_$4786_memory_ptr__to_t_struct$_GetOwnerReturn_$4786_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13996:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14008:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14019:4:21","type":""}],"src":"13862:401:21"},{"body":{"nodeType":"YulBlock","src":"14441:198:21","statements":[{"nodeType":"YulAssignment","src":"14451:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14474:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14459:3:21"},"nodeType":"YulFunctionCall","src":"14459:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14451:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14605:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14618:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14629:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14614:3:21"},"nodeType":"YulFunctionCall","src":"14614:17:21"}],"functionName":{"name":"abi_encode_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14487:117:21"},"nodeType":"YulFunctionCall","src":"14487:145:21"},"nodeType":"YulExpressionStatement","src":"14487:145:21"}]},"name":"abi_encode_tuple_t_struct$_GetSectorSizeReturn_$4795_memory_ptr__to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14413:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14425:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14436:4:21","type":""}],"src":"14269:370:21"},{"body":{"nodeType":"YulBlock","src":"14821:253:21","statements":[{"nodeType":"YulAssignment","src":"14831:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14843:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14854:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:21"},"nodeType":"YulFunctionCall","src":"14839:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14831:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14878:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14889:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14874:3:21"},"nodeType":"YulFunctionCall","src":"14874:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14897:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14903:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14893:3:21"},"nodeType":"YulFunctionCall","src":"14893:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14867:6:21"},"nodeType":"YulFunctionCall","src":"14867:47:21"},"nodeType":"YulExpressionStatement","src":"14867:47:21"},{"nodeType":"YulAssignment","src":"14923:144:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15053:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"15062:4:21"}],"functionName":{"name":"abi_encode_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14931:121:21"},"nodeType":"YulFunctionCall","src":"14931:136:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14923:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_GetVestingFundsReturn_$4803_memory_ptr__to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14793:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14805:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14816:4:21","type":""}],"src":"14645:429:21"},{"body":{"nodeType":"YulBlock","src":"15266:212:21","statements":[{"nodeType":"YulAssignment","src":"15276:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:21"},"nodeType":"YulFunctionCall","src":"15284:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15444:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15468:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15453:3:21"},"nodeType":"YulFunctionCall","src":"15453:17:21"}],"functionName":{"name":"abi_encode_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15312:131:21"},"nodeType":"YulFunctionCall","src":"15312:159:21"},"nodeType":"YulExpressionStatement","src":"15312:159:21"}]},"name":"abi_encode_tuple_t_struct$_IsControllingAddressReturn_$4792_memory_ptr__to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15238:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15250:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:21","type":""}],"src":"15080:398:21"},{"body":{"nodeType":"YulBlock","src":"15525:88:21","statements":[{"nodeType":"YulAssignment","src":"15535:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15545:18:21"},"nodeType":"YulFunctionCall","src":"15545:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15535:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15594:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"15602:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15574:19:21"},"nodeType":"YulFunctionCall","src":"15574:33:21"},"nodeType":"YulExpressionStatement","src":"15574:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15509:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15518:6:21","type":""}],"src":"15484:129:21"},{"body":{"nodeType":"YulBlock","src":"15659:35:21","statements":[{"nodeType":"YulAssignment","src":"15669:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15685:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15679:5:21"},"nodeType":"YulFunctionCall","src":"15679:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15669:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15652:6:21","type":""}],"src":"15619:75:21"},{"body":{"nodeType":"YulBlock","src":"15767:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"15872:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15874:16:21"},"nodeType":"YulFunctionCall","src":"15874:18:21"},"nodeType":"YulExpressionStatement","src":"15874:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15844:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15852:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15841:2:21"},"nodeType":"YulFunctionCall","src":"15841:30:21"},"nodeType":"YulIf","src":"15838:2:21"},{"nodeType":"YulAssignment","src":"15904:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15934:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15912:21:21"},"nodeType":"YulFunctionCall","src":"15912:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"15904:4:21"}]},{"nodeType":"YulAssignment","src":"15978:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"15990:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"15996:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15986:3:21"},"nodeType":"YulFunctionCall","src":"15986:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"15978:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"15751:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"15762:4:21","type":""}],"src":"15700:308:21"},{"body":{"nodeType":"YulBlock","src":"16116:60:21","statements":[{"nodeType":"YulAssignment","src":"16126:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16134:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16126:4:21"}]},{"nodeType":"YulAssignment","src":"16147:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16159:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16164:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16155:3:21"},"nodeType":"YulFunctionCall","src":"16155:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16147:4:21"}]}]},"name":"array_dataslot_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16103:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16111:4:21","type":""}],"src":"16014:162:21"},{"body":{"nodeType":"YulBlock","src":"16286:40:21","statements":[{"nodeType":"YulAssignment","src":"16297:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16313:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16307:5:21"},"nodeType":"YulFunctionCall","src":"16307:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16297:6:21"}]}]},"name":"array_length_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16269:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16279:6:21","type":""}],"src":"16182:144:21"},{"body":{"nodeType":"YulBlock","src":"16390:40:21","statements":[{"nodeType":"YulAssignment","src":"16401:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16417:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16411:5:21"},"nodeType":"YulFunctionCall","src":"16411:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16401:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16373:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16383:6:21","type":""}],"src":"16332:98:21"},{"body":{"nodeType":"YulBlock","src":"16495:40:21","statements":[{"nodeType":"YulAssignment","src":"16506:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16522:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16516:5:21"},"nodeType":"YulFunctionCall","src":"16516:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16506:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16478:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16488:6:21","type":""}],"src":"16436:99:21"},{"body":{"nodeType":"YulBlock","src":"16646:38:21","statements":[{"nodeType":"YulAssignment","src":"16656:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16668:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16673:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16664:3:21"},"nodeType":"YulFunctionCall","src":"16664:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16656:4:21"}]}]},"name":"array_nextElement_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16633:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16641:4:21","type":""}],"src":"16541:143:21"},{"body":{"nodeType":"YulBlock","src":"16821:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16838:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16843:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16831:6:21"},"nodeType":"YulFunctionCall","src":"16831:19:21"},"nodeType":"YulExpressionStatement","src":"16831:19:21"},{"nodeType":"YulAssignment","src":"16859:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16878:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16883:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16874:3:21"},"nodeType":"YulFunctionCall","src":"16874:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16859:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16793:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16798:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16809:11:21","type":""}],"src":"16690:204:21"},{"body":{"nodeType":"YulBlock","src":"16985:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17002:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17007:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16995:6:21"},"nodeType":"YulFunctionCall","src":"16995:19:21"},"nodeType":"YulExpressionStatement","src":"16995:19:21"},{"nodeType":"YulAssignment","src":"17023:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17042:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17047:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17038:3:21"},"nodeType":"YulFunctionCall","src":"17038:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17023:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16957:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"16962:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16973:11:21","type":""}],"src":"16900:158:21"},{"body":{"nodeType":"YulBlock","src":"17150:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17167:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17172:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17160:6:21"},"nodeType":"YulFunctionCall","src":"17160:19:21"},"nodeType":"YulExpressionStatement","src":"17160:19:21"},{"nodeType":"YulAssignment","src":"17188:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17207:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17212:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17203:3:21"},"nodeType":"YulFunctionCall","src":"17203:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17188:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17122:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17127:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17138:11:21","type":""}],"src":"17064:159:21"},{"body":{"nodeType":"YulBlock","src":"17271:48:21","statements":[{"nodeType":"YulAssignment","src":"17281:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17306:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17299:6:21"},"nodeType":"YulFunctionCall","src":"17299:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17292:6:21"},"nodeType":"YulFunctionCall","src":"17292:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17281:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17253:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17263:7:21","type":""}],"src":"17229:90:21"},{"body":{"nodeType":"YulBlock","src":"17369:32:21","statements":[{"nodeType":"YulAssignment","src":"17379:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"17390:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17379:7:21"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17351:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17361:7:21","type":""}],"src":"17325:76:21"},{"body":{"nodeType":"YulBlock","src":"17450:47:21","statements":[{"nodeType":"YulAssignment","src":"17460:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17482:1:21","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"17485:5:21"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"17471:10:21"},"nodeType":"YulFunctionCall","src":"17471:20:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17460:7:21"}]}]},"name":"cleanup_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17432:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17442:7:21","type":""}],"src":"17407:90:21"},{"body":{"nodeType":"YulBlock","src":"17547:57:21","statements":[{"nodeType":"YulAssignment","src":"17557:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17572:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17579:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17568:3:21"},"nodeType":"YulFunctionCall","src":"17568:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17557:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17529:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17539:7:21","type":""}],"src":"17503:101:21"},{"body":{"nodeType":"YulBlock","src":"17661:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17684:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"17689:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17694:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17671:12:21"},"nodeType":"YulFunctionCall","src":"17671:30:21"},"nodeType":"YulExpressionStatement","src":"17671:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17742:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17747:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17738:3:21"},"nodeType":"YulFunctionCall","src":"17738:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"17756:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17731:6:21"},"nodeType":"YulFunctionCall","src":"17731:27:21"},"nodeType":"YulExpressionStatement","src":"17731:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17643:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17648:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17653:6:21","type":""}],"src":"17610:154:21"},{"body":{"nodeType":"YulBlock","src":"17819:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17829:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17838:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17833:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17898:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17923:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"17928:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17919:3:21"},"nodeType":"YulFunctionCall","src":"17919:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17942:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"17947:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17938:3:21"},"nodeType":"YulFunctionCall","src":"17938:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17932:5:21"},"nodeType":"YulFunctionCall","src":"17932:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17912:6:21"},"nodeType":"YulFunctionCall","src":"17912:39:21"},"nodeType":"YulExpressionStatement","src":"17912:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17859:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"17862:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17856:2:21"},"nodeType":"YulFunctionCall","src":"17856:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17870:19:21","statements":[{"nodeType":"YulAssignment","src":"17872:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17881:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"17884:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17877:3:21"},"nodeType":"YulFunctionCall","src":"17877:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17872:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"17852:3:21","statements":[]},"src":"17848:113:21"},{"body":{"nodeType":"YulBlock","src":"17995:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18045:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"18050:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18041:3:21"},"nodeType":"YulFunctionCall","src":"18041:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"18059:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18034:6:21"},"nodeType":"YulFunctionCall","src":"18034:27:21"},"nodeType":"YulExpressionStatement","src":"18034:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17976:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"17979:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17973:2:21"},"nodeType":"YulFunctionCall","src":"17973:13:21"},"nodeType":"YulIf","src":"17970:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17801:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17806:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17811:6:21","type":""}],"src":"17770:307:21"},{"body":{"nodeType":"YulBlock","src":"18134:269:21","statements":[{"nodeType":"YulAssignment","src":"18144:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18158:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18164:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18154:3:21"},"nodeType":"YulFunctionCall","src":"18154:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18144:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"18175:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18205:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18211:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18201:3:21"},"nodeType":"YulFunctionCall","src":"18201:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18179:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18252:51:21","statements":[{"nodeType":"YulAssignment","src":"18266:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18280:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18288:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18276:3:21"},"nodeType":"YulFunctionCall","src":"18276:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18266:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18232:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18225:6:21"},"nodeType":"YulFunctionCall","src":"18225:26:21"},"nodeType":"YulIf","src":"18222:2:21"},{"body":{"nodeType":"YulBlock","src":"18355:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18369:16:21"},"nodeType":"YulFunctionCall","src":"18369:18:21"},"nodeType":"YulExpressionStatement","src":"18369:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18319:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18342:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18350:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18339:2:21"},"nodeType":"YulFunctionCall","src":"18339:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18316:2:21"},"nodeType":"YulFunctionCall","src":"18316:38:21"},"nodeType":"YulIf","src":"18313:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18118:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18127:6:21","type":""}],"src":"18083:320:21"},{"body":{"nodeType":"YulBlock","src":"18452:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18462:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18484:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18514:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18492:21:21"},"nodeType":"YulFunctionCall","src":"18492:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18480:3:21"},"nodeType":"YulFunctionCall","src":"18480:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"18466:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18631:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18633:16:21"},"nodeType":"YulFunctionCall","src":"18633:18:21"},"nodeType":"YulExpressionStatement","src":"18633:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18574:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"18586:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18571:2:21"},"nodeType":"YulFunctionCall","src":"18571:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18610:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"18622:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18607:2:21"},"nodeType":"YulFunctionCall","src":"18607:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18568:2:21"},"nodeType":"YulFunctionCall","src":"18568:62:21"},"nodeType":"YulIf","src":"18565:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18669:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18673:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18662:6:21"},"nodeType":"YulFunctionCall","src":"18662:22:21"},"nodeType":"YulExpressionStatement","src":"18662:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18438:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"18446:4:21","type":""}],"src":"18409:281:21"},{"body":{"nodeType":"YulBlock","src":"18724:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18741:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18744:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18734:6:21"},"nodeType":"YulFunctionCall","src":"18734:88:21"},"nodeType":"YulExpressionStatement","src":"18734:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18838:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18841:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18831:6:21"},"nodeType":"YulFunctionCall","src":"18831:15:21"},"nodeType":"YulExpressionStatement","src":"18831:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18862:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18865:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18855:6:21"},"nodeType":"YulFunctionCall","src":"18855:15:21"},"nodeType":"YulExpressionStatement","src":"18855:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18696:180:21"},{"body":{"nodeType":"YulBlock","src":"18910:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18927:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18930:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18920:6:21"},"nodeType":"YulFunctionCall","src":"18920:88:21"},"nodeType":"YulExpressionStatement","src":"18920:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19024:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19027:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19017:6:21"},"nodeType":"YulFunctionCall","src":"19017:15:21"},"nodeType":"YulExpressionStatement","src":"19017:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19048:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19051:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19041:6:21"},"nodeType":"YulFunctionCall","src":"19041:15:21"},"nodeType":"YulExpressionStatement","src":"19041:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18882:180:21"},{"body":{"nodeType":"YulBlock","src":"19116:54:21","statements":[{"nodeType":"YulAssignment","src":"19126:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19144:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19151:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19140:3:21"},"nodeType":"YulFunctionCall","src":"19140:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19160:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19156:3:21"},"nodeType":"YulFunctionCall","src":"19156:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19136:3:21"},"nodeType":"YulFunctionCall","src":"19136:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19126:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19099:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19109:6:21","type":""}],"src":"19068:102:21"},{"body":{"nodeType":"YulBlock","src":"19218:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"19274:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19283:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19286:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19276:6:21"},"nodeType":"YulFunctionCall","src":"19276:12:21"},"nodeType":"YulExpressionStatement","src":"19276:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19241:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19265:5:21"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"19248:16:21"},"nodeType":"YulFunctionCall","src":"19248:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19238:2:21"},"nodeType":"YulFunctionCall","src":"19238:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19231:6:21"},"nodeType":"YulFunctionCall","src":"19231:42:21"},"nodeType":"YulIf","src":"19228:2:21"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19211:5:21","type":""}],"src":"19176:120:21"},{"body":{"nodeType":"YulBlock","src":"19344:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"19400:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19409:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19412:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19402:6:21"},"nodeType":"YulFunctionCall","src":"19402:12:21"},"nodeType":"YulExpressionStatement","src":"19402:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19367:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19391:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"19374:16:21"},"nodeType":"YulFunctionCall","src":"19374:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19364:2:21"},"nodeType":"YulFunctionCall","src":"19364:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19357:6:21"},"nodeType":"YulFunctionCall","src":"19357:42:21"},"nodeType":"YulIf","src":"19354:2:21"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19337:5:21","type":""}],"src":"19302:120:21"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct MinerTypes.ChangeBeneficiaryParams\n    function abi_decode_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert(0, 0) }\n        value := allocate_memory(0x60)\n\n        {\n            // new_beneficiary\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // new_quota\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_int256(add(headStart, offset), end))\n\n        }\n\n        {\n            // new_expiration\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct MinerTypes.IsControllingAddressParam\n    function abi_decode_t_struct$_IsControllingAddressParam_$4789_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        value := allocate_memory(0x20)\n\n        {\n            // addr\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_ChangeBeneficiaryParams_$4810_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_IsControllingAddressParam_$4789_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_IsControllingAddressParam_$4789_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    // struct CommonTypes.VestingFunds[] -> struct CommonTypes.VestingFunds[]\n    function abi_encode_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_int256_to_t_int256(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_int64_to_t_int64(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct CommonTypes.ActiveBeneficiary -> struct CommonTypes.ActiveBeneficiary\n    function abi_encode_t_struct$_ActiveBeneficiary_$4427_memory_ptr_to_t_struct$_ActiveBeneficiary_$4427_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // beneficiary\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // term\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_struct$_BeneficiaryTerm_$4421_memory_ptr_to_t_struct$_BeneficiaryTerm_$4421_memory_ptr(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    // struct CommonTypes.BeneficiaryTerm -> struct CommonTypes.BeneficiaryTerm\n    function abi_encode_t_struct$_BeneficiaryTerm_$4421_memory_ptr_to_t_struct$_BeneficiaryTerm_$4421_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // quota\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int256_to_t_int256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // used_quota\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int256_to_t_int256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // expiration\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct MinerTypes.GetAvailableBalanceReturn -> struct MinerTypes.GetAvailableBalanceReturn\n    function abi_encode_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // available_balance\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int256_to_t_int256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MinerTypes.GetBeneficiaryReturn -> struct MinerTypes.GetBeneficiaryReturn\n    function abi_encode_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // active\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_struct$_ActiveBeneficiary_$4427_memory_ptr_to_t_struct$_ActiveBeneficiary_$4427_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // proposed\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr_to_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MinerTypes.GetOwnerReturn -> struct MinerTypes.GetOwnerReturn\n    function abi_encode_t_struct$_GetOwnerReturn_$4786_memory_ptr_to_t_struct$_GetOwnerReturn_$4786_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MinerTypes.GetSectorSizeReturn -> struct MinerTypes.GetSectorSizeReturn\n    function abi_encode_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // sector_size\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct MinerTypes.GetVestingFundsReturn -> struct MinerTypes.GetVestingFundsReturn\n    function abi_encode_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x20)\n\n        {\n            // vesting_funds\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MinerTypes.IsControllingAddressReturn -> struct MinerTypes.IsControllingAddressReturn\n    function abi_encode_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // is_controlling\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    // struct CommonTypes.PendingBeneficiaryChange -> struct CommonTypes.PendingBeneficiaryChange\n    function abi_encode_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr_to_t_struct$_PendingBeneficiaryChange_$4414_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // new_beneficiary\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // new_quota\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int256_to_t_int256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // new_expiration\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // approved_by_beneficiary\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // approved_by_nominee\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    // struct CommonTypes.VestingFunds -> struct CommonTypes.VestingFunds\n    function abi_encode_t_struct$_VestingFunds_$4587_memory_ptr_to_t_struct$_VestingFunds_$4587_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // epoch\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int256_to_t_int256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr__to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_to_t_struct$_GetAvailableBalanceReturn_$4798_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr__to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_to_t_struct$_GetBeneficiaryReturn_$4817_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetOwnerReturn_$4786_memory_ptr__to_t_struct$_GetOwnerReturn_$4786_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetOwnerReturn_$4786_memory_ptr_to_t_struct$_GetOwnerReturn_$4786_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetSectorSizeReturn_$4795_memory_ptr__to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_to_t_struct$_GetSectorSizeReturn_$4795_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_GetVestingFundsReturn_$4803_memory_ptr__to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_to_t_struct$_GetVestingFundsReturn_$4803_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_IsControllingAddressReturn_$4792_memory_ptr__to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_to_t_struct$_IsControllingAddressReturn_$4792_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_VestingFunds_$4587_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c806381ab68dd1161006657806381ab68dd1461010e578063a9b494a11461012a578063d9fc907e14610148578063e8d3863314610166578063f5cd020c1461019657610093565b80630ac298dc14610098578063207f2cec146100b6578063214c471c146100d257806359cf9e17146100f0575b600080fd5b6100a06101b2565b6040516100ad9190610ec4565b60405180910390f35b6100d060048036038101906100cb9190610a90565b610273565b005b6100da61028d565b6040516100e79190610f01565b60405180910390f35b6100f8610393565b6040516101059190610e87565b60405180910390f35b61012860048036038101906101239190610ad1565b6103b9565b005b61013261050e565b60405161013f9190610ee6565b60405180910390f35b6101506105cc565b60405161015d9190610ea2565b60405180910390f35b610180600480360381019061017b9190610b12565b610708565b60405161018d9190610f23565b60405180910390f35b6101b060048036038101906101ab9190610a90565b610729565b005b6101ba61075d565b60008080546101c89061107e565b905014156101d557600080fd5b6040518060200160405280600080546101ed9061107e565b80601f01602080910402602001604051908101604052809291908181526020018280546102199061107e565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050815250905090565b8060009080519060200190610289929190610770565b5050565b6102956107f6565b6000600167ffffffffffffffff8111156102d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561031157816020015b6102fe610809565b8152602001906001900390816102f65790505b5090506040518060400160405280636373840960070b8152602001686c6b935b8bbd40000081525081600081518110610373577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180602001604052808281525091505090565b61039b610826565b604051806020016040528069021e19e0c9bab2400000815250905090565b600160009054906101000a900460ff166104a857600060405180606001604052808360200151815260200160008152602001836040015167ffffffffffffffff1681525090506040518060400160405280836000015181526020018281525060026000820151816000019080519060200190610436929190610770565b50602082015181600101600082015181600001556020820151816001015560408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505090505060018060006101000a81548160ff0219169083151502179055505061050b565b8060000151600260000190805190602001906104c5929190610770565b5080602001516002600101600001819055508060400151600260010160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b50565b610516610839565b6040518060200160405280600660006001600481111561055f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115610597577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16815250905090565b6105d4610856565b600160009054906101000a900460ff166105ed57600080fd5b6105f561087c565b6040518060400160405280600260405180604001604052908160008201805461061d9061107e565b80601f01602080910402602001604051908101604052809291908181526020018280546106499061107e565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b505050505081526020016001820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250508152505081526020018281525091505090565b6107106108b9565b6040518060200160405280600015158152509050919050565b60008080546107379061107e565b90501461074357600080fd5b8060009080519060200190610759929190610770565b5050565b6040518060200160405280606081525090565b82805461077c9061107e565b90600052602060002090601f01602090048101928261079e57600085556107e5565b82601f106107b757805160ff19168380011785556107e5565b828001600101855582156107e5579182015b828111156107e45782518255916020019190600101906107c9565b5b5090506107f291906108ce565b5090565b6040518060200160405280606081525090565b6040518060400160405280600060070b8152602001600081525090565b6040518060200160405280600081525090565b6040518060200160405280600067ffffffffffffffff1681525090565b60405180604001604052806108696108eb565b815260200161087661087c565b81525090565b6040518060a001604052806060815260200160008152602001600067ffffffffffffffff1681526020016000151581526020016000151581525090565b60405180602001604052806000151581525090565b5b808211156108e75760008160009055506001016108cf565b5090565b60405180604001604052806060815260200161090561090b565b81525090565b60405180606001604052806000815260200160008152602001600067ffffffffffffffff1681525090565b600061094961094484610f63565b610f3e565b90508281526020810184848401111561096157600080fd5b61096c84828561103c565b509392505050565b60008135905061098381611150565b92915050565b600082601f83011261099a57600080fd5b81356109aa848260208601610936565b91505092915050565b6000606082840312156109c557600080fd5b6109cf6060610f3e565b9050600082013567ffffffffffffffff8111156109eb57600080fd5b6109f784828501610989565b6000830152506020610a0b84828501610974565b6020830152506040610a1f84828501610a7b565b60408301525092915050565b600060208284031215610a3d57600080fd5b610a476020610f3e565b9050600082013567ffffffffffffffff811115610a6357600080fd5b610a6f84828501610989565b60008301525092915050565b600081359050610a8a81611167565b92915050565b600060208284031215610aa257600080fd5b600082013567ffffffffffffffff811115610abc57600080fd5b610ac884828501610989565b91505092915050565b600060208284031215610ae357600080fd5b600082013567ffffffffffffffff811115610afd57600080fd5b610b09848285016109b3565b91505092915050565b600060208284031215610b2457600080fd5b600082013567ffffffffffffffff811115610b3e57600080fd5b610b4a84828501610a2b565b91505092915050565b6000610b5f8383610e49565b60408301905092915050565b6000610b7682610fa4565b610b808185610fd2565b9350610b8b83610f94565b8060005b83811015610bbc578151610ba38882610b53565b9750610bae83610fc5565b925050600181019050610b8f565b5085935050505092915050565b610bd281611005565b82525050565b6000610be382610faf565b610bed8185610fe3565b9350610bfd81856020860161104b565b610c068161113f565b840191505092915050565b610c1a81611011565b82525050565b610c298161101b565b82525050565b6000610c3a82610fba565b610c448185610ff4565b9350610c5481856020860161104b565b610c5d8161113f565b840191505092915050565b60006080830160008301518482036000860152610c858282610c2f565b9150506020830151610c9a6020860182610ca5565b508091505092915050565b606082016000820151610cbb6000850182610c11565b506020820151610cce6020850182610c11565b506040820151610ce16040850182610e78565b50505050565b602082016000820151610cfd6000850182610c11565b50505050565b60006040830160008301518482036000860152610d208282610c68565b91505060208301518482036020860152610d3a8282610dd3565b9150508091505092915050565b60006020830160008301518482036000860152610d648282610c2f565b9150508091505092915050565b602082016000820151610d876000850182610e78565b50505050565b60006020830160008301518482036000860152610daa8282610b6b565b9150508091505092915050565b602082016000820151610dcd6000850182610bc9565b50505050565b600060a0830160008301518482036000860152610df08282610bd8565b9150506020830151610e056020860182610c11565b506040830151610e186040860182610e78565b506060830151610e2b6060860182610bc9565b506080830151610e3e6080860182610bc9565b508091505092915050565b604082016000820151610e5f6000850182610c20565b506020820151610e726020850182610c11565b50505050565b610e8181611028565b82525050565b6000602082019050610e9c6000830184610ce7565b92915050565b60006020820190508181036000830152610ebc8184610d03565b905092915050565b60006020820190508181036000830152610ede8184610d47565b905092915050565b6000602082019050610efb6000830184610d71565b92915050565b60006020820190508181036000830152610f1b8184610d8d565b905092915050565b6000602082019050610f386000830184610db7565b92915050565b6000610f48610f59565b9050610f5482826110b0565b919050565b6000604051905090565b600067ffffffffffffffff821115610f7e57610f7d611110565b5b610f878261113f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b60008160070b9050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561106957808201518184015260208101905061104e565b83811115611078576000848401525b50505050565b6000600282049050600182168061109657607f821691505b602082108114156110aa576110a96110e1565b5b50919050565b6110b98261113f565b810181811067ffffffffffffffff821117156110d8576110d7611110565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61115981611011565b811461116457600080fd5b50565b61117081611028565b811461117b57600080fd5b5056fea2646970667358221220ac91241b3fab112cf9f96a027fcabf53a89391bcc2fe422cabe2d9e328679ed964736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81AB68DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x81AB68DD EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA9B494A1 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xD9FC907E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xE8D38633 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF5CD020C EQ PUSH2 0x196 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xAC298DC EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x207F2CEC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x214C471C EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x59CF9E17 EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x132 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x75D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD PUSH2 0x1C8 SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP EQ ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 SLOAD PUSH2 0x1ED SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x266 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x266 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x249 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x289 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x295 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x311 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x2FE PUSH2 0x809 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2F6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH4 0x63738409 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x6C6B935B8BBD400000 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x373 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x436 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP SWAP1 POP POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x50B JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4C5 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x55F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x597 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH2 0x107E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x679 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x710 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x759 SWAP3 SWAP2 SWAP1 PUSH2 0x770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x107E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x79E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x7E5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x7B7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x7E5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x7E5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7E4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7C9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x869 PUSH2 0x8EB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x876 PUSH2 0x87C JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x8CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x905 PUSH2 0x90B JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x949 PUSH2 0x944 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP5 DUP3 DUP6 PUSH2 0x103C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x983 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CF PUSH1 0x60 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F7 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA0B DUP5 DUP3 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA1F DUP5 DUP3 DUP6 ADD PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA47 PUSH1 0x20 PUSH2 0xF3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6F DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8A DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC8 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB09 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5F DUP4 DUP4 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP3 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xB80 DUP2 DUP6 PUSH2 0xFD2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB8B DUP4 PUSH2 0xF94 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBBC JUMPI DUP2 MLOAD PUSH2 0xBA3 DUP9 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP8 POP PUSH2 0xBAE DUP4 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB8F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x1005 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xBED DUP2 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH2 0xBFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x104B JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0x113F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0x101B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3A DUP3 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xC44 DUP2 DUP6 PUSH2 0xFF4 JUMP JUMPDEST SWAP4 POP PUSH2 0xC54 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x104B JUMP JUMPDEST PUSH2 0xC5D DUP2 PUSH2 0x113F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xC85 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xCA5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCBB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xCCE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xCE1 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xCFD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xD20 DUP3 DUP3 PUSH2 0xC68 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xD3A DUP3 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xD64 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xD87 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDAA DUP3 DUP3 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDCD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xDF0 DUP3 DUP3 PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xE05 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xE18 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xE78 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xE2B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xE3E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE5F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xC20 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE72 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBC DUP2 DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 DUP5 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF1B DUP2 DUP5 PUSH2 0xD8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP PUSH2 0xF54 DUP3 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH2 0xF87 DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1069 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x104E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1096 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x10E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B9 DUP3 PUSH2 0x113F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1159 DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP2 EQ PUSH2 0x1164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP2 EQ PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SWAP2 0x24 SHL EXTCODEHASH 0xAB GT 0x2C 0xF9 0xF9 PUSH11 0x27FCABF53A89391BCC2FE TIMESTAMP 0x2C 0xAB 0xE2 0xD9 0xE3 0x28 PUSH8 0x9ED964736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"573:5089:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1735:204;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2250:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3617:419;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3298:212;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4435:686;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2789:259;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5362:298;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2509:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1401:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1735:204;1801:32;;:::i;:::-;1880:1;1863:5;1857:19;;;;;:::i;:::-;;;:24;;1849:33;;;;;;1900:32;;;;;;;;1926:5;1900:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:39;;1735:204;:::o;2250:86::-;2325:4;2317:5;:12;;;;;;;;;;;;:::i;:::-;;2250:86;:::o;3617:419::-;3691:39;;:::i;:::-;3746:59;3839:1;3808:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3746:95;;3870:94;;;;;;;;3908:10;3870:94;;;;;;3932:22;3870:94;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;;;;;;;;;:113;;;;3982:47;;;;;;;;4015:13;3982:47;;;3975:54;;;3617:419;:::o;3298:212::-;3376:43;;:::i;:::-;3442:61;;;;;;;;3479:23;3442:61;;;3435:68;;3298:212;:::o;4435:686::-;4549:16;;;;;;;;;;;4544:571;;4581:39;4623:88;;;;;;;;4668:6;:16;;;4623:88;;;;4686:1;4623:88;;;;4689:6;:21;;;4623:88;;;;;4581:130;;4745:105;;;;;;;;4792:6;:22;;;4745:105;;;;4832:4;4745:105;;;4725:17;:125;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4883:4;4864:16;;:23;;;;;;;;;;;;;;;;;;4544:571;;;;4950:6;:22;;;4918:17;:29;;:54;;;;;;;;;;;;:::i;:::-;;5017:6;:16;;;4986:17;:22;;:28;;:47;;;;5083:6;:21;;;5047:17;:22;;:33;;;:57;;;;;;;;;;;;;;;;;;4544:571;4435:686;:::o;2789:259::-;2861:37;;:::i;:::-;2933:108;;;;;;;;2981:16;:46;2998:28;2981:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:108;;;;;2914:127;;2789:259;:::o;5362:298::-;5434:38;;:::i;:::-;5496:16;;;;;;;;;;;5488:25;;;;;;5524:52;;:::i;:::-;5593:60;;;;;;;;5625:17;5593:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5644:8;5593:60;;;5586:67;;;5362:298;:::o;2509:233::-;2628:44;;:::i;:::-;2691;;;;;;;;2729:5;2691:44;;;;;2684:51;;2509:233;;;:::o;1401:123::-;1493:1;1476:5;1470:19;;;;;:::i;:::-;;;:24;1462:33;;;;;;1513:4;1505:5;:12;;;;;;;;;;;;:::i;:::-;;1401:123;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:345:21:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:137::-;403:5;441:6;428:20;419:29;;457:32;483:5;457:32;:::i;:::-;409:86;;;;:::o;515:273::-;571:5;620:3;613:4;605:6;601:17;597:27;587:2;;638:1;635;628:12;587:2;678:6;665:20;703:79;778:3;770:6;763:4;755:6;751:17;703:79;:::i;:::-;694:88;;577:211;;;;;:::o;843:811::-;933:5;977:4;965:9;960:3;956:19;952:30;949:2;;;995:1;992;985:12;949:2;1017:21;1033:4;1017:21;:::i;:::-;1008:30;;1136:1;1125:9;1121:17;1108:31;1166:18;1158:6;1155:30;1152:2;;;1198:1;1195;1188:12;1152:2;1241:59;1296:3;1287:6;1276:9;1272:22;1241:59;:::i;:::-;1234:4;1227:5;1223:16;1216:85;1048:264;1376:2;1417:48;1461:3;1452:6;1441:9;1437:22;1417:48;:::i;:::-;1410:4;1403:5;1399:16;1392:74;1322:155;1546:2;1587:48;1631:3;1622:6;1611:9;1607:22;1587:48;:::i;:::-;1580:4;1573:5;1569:16;1562:74;1487:160;939:715;;;;:::o;1711:467::-;1803:5;1847:4;1835:9;1830:3;1826:19;1822:30;1819:2;;;1865:1;1862;1855:12;1819:2;1887:21;1903:4;1887:21;:::i;:::-;1878:30;;1995:1;1984:9;1980:17;1967:31;2025:18;2017:6;2014:30;2011:2;;;2057:1;2054;2047:12;2011:2;2100:59;2155:3;2146:6;2135:9;2131:22;2100:59;:::i;:::-;2093:4;2086:5;2082:16;2075:85;1918:253;1809:369;;;;:::o;2184:137::-;2229:5;2267:6;2254:20;2245:29;;2283:32;2309:5;2283:32;:::i;:::-;2235:86;;;;:::o;2327:375::-;2396:6;2445:2;2433:9;2424:7;2420:23;2416:32;2413:2;;;2461:1;2458;2451:12;2413:2;2532:1;2521:9;2517:17;2504:31;2562:18;2554:6;2551:30;2548:2;;;2594:1;2591;2584:12;2548:2;2622:63;2677:7;2668:6;2657:9;2653:22;2622:63;:::i;:::-;2612:73;;2475:220;2403:299;;;;:::o;2708:437::-;2808:6;2857:2;2845:9;2836:7;2832:23;2828:32;2825:2;;;2873:1;2870;2863:12;2825:2;2944:1;2933:9;2929:17;2916:31;2974:18;2966:6;2963:30;2960:2;;;3006:1;3003;2996:12;2960:2;3034:94;3120:7;3111:6;3100:9;3096:22;3034:94;:::i;:::-;3024:104;;2887:251;2815:330;;;;:::o;3151:441::-;3253:6;3302:2;3290:9;3281:7;3277:23;3273:32;3270:2;;;3318:1;3315;3308:12;3270:2;3389:1;3378:9;3374:17;3361:31;3419:18;3411:6;3408:30;3405:2;;;3451:1;3448;3441:12;3405:2;3479:96;3567:7;3558:6;3547:9;3543:22;3479:96;:::i;:::-;3469:106;;3332:253;3260:332;;;;:::o;3598:299::-;3727:10;3748:106;3850:3;3842:6;3748:106;:::i;:::-;3886:4;3881:3;3877:14;3863:28;;3738:159;;;;:::o;3981:952::-;4150:3;4179:84;4257:5;4179:84;:::i;:::-;4279:106;4378:6;4373:3;4279:106;:::i;:::-;4272:113;;4409:86;4489:5;4409:86;:::i;:::-;4518:7;4549:1;4534:374;4559:6;4556:1;4553:13;4534:374;;;4635:6;4629:13;4662:123;4781:3;4766:13;4662:123;:::i;:::-;4655:130;;4808:90;4891:6;4808:90;:::i;:::-;4798:100;;4594:314;4581:1;4578;4574:9;4569:14;;4534:374;;;4538:14;4924:3;4917:10;;4155:778;;;;;;;:::o;4939:99::-;5010:21;5025:5;5010:21;:::i;:::-;5005:3;4998:34;4988:50;;:::o;5044:340::-;5120:3;5148:38;5180:5;5148:38;:::i;:::-;5202:60;5255:6;5250:3;5202:60;:::i;:::-;5195:67;;5271:52;5316:6;5311:3;5304:4;5297:5;5293:16;5271:52;:::i;:::-;5348:29;5370:6;5348:29;:::i;:::-;5343:3;5339:39;5332:46;;5124:260;;;;;:::o;5390:105::-;5465:23;5482:5;5465:23;:::i;:::-;5460:3;5453:36;5443:52;;:::o;5501:102::-;5574:22;5590:5;5574:22;:::i;:::-;5569:3;5562:35;5552:51;;:::o;5609:344::-;5687:3;5715:39;5748:5;5715:39;:::i;:::-;5770:61;5824:6;5819:3;5770:61;:::i;:::-;5763:68;;5840:52;5885:6;5880:3;5873:4;5866:5;5862:16;5840:52;:::i;:::-;5917:29;5939:6;5917:29;:::i;:::-;5912:3;5908:39;5901:46;;5691:262;;;;;:::o;6043:689::-;6172:3;6208:4;6203:3;6199:14;6302:4;6295:5;6291:16;6285:23;6355:3;6349:4;6345:14;6338:4;6333:3;6329:14;6322:38;6381:73;6449:4;6435:12;6381:73;:::i;:::-;6373:81;;6223:242;6547:4;6540:5;6536:16;6530:23;6566:129;6689:4;6684:3;6680:14;6666:12;6566:129;:::i;:::-;6475:230;6722:4;6715:11;;6177:555;;;;;:::o;6818:694::-;6971:4;6966:3;6962:14;7059:4;7052:5;7048:16;7042:23;7078:61;7133:4;7128:3;7124:14;7110:12;7078:61;:::i;:::-;6986:163;7237:4;7230:5;7226:16;7220:23;7256:61;7311:4;7306:3;7302:14;7288:12;7256:61;:::i;:::-;7159:168;7415:4;7408:5;7404:16;7398:23;7434:61;7489:4;7484:3;7480:14;7466:12;7434:61;:::i;:::-;7337:168;6940:572;;;:::o;7616:380::-;7799:4;7794:3;7790:14;7899:4;7892:5;7888:16;7882:23;7918:61;7973:4;7968:3;7964:14;7950:12;7918:61;:::i;:::-;7814:175;7768:228;;;:::o;8090:823::-;8235:3;8271:4;8266:3;8262:14;8360:4;8353:5;8349:16;8343:23;8413:3;8407:4;8403:14;8396:4;8391:3;8387:14;8380:38;8439:123;8557:4;8543:12;8439:123;:::i;:::-;8431:131;;8286:287;8659:4;8652:5;8648:16;8642:23;8712:3;8706:4;8702:14;8695:4;8690:3;8686:14;8679:38;8738:137;8870:4;8856:12;8738:137;:::i;:::-;8730:145;;8583:303;8903:4;8896:11;;8240:673;;;;;:::o;8995:447::-;9128:3;9164:4;9159:3;9155:14;9252:4;9245:5;9241:16;9235:23;9305:3;9299:4;9295:14;9288:4;9283:3;9279:14;9272:38;9331:73;9399:4;9385:12;9331:73;:::i;:::-;9323:81;;9179:236;9432:4;9425:11;;9133:309;;;;;:::o;9534:362::-;9705:4;9700:3;9696:14;9799:4;9792:5;9788:16;9782:23;9818:61;9873:4;9868:3;9864:14;9850:12;9818:61;:::i;:::-;9720:169;9674:222;;;:::o;9992:559::-;10139:3;10175:4;10170:3;10166:14;10271:4;10264:5;10260:16;10254:23;10324:3;10318:4;10314:14;10307:4;10302:3;10298:14;10291:38;10350:163;10508:4;10494:12;10350:163;:::i;:::-;10342:171;;10190:334;10541:4;10534:11;;10144:407;;;;;:::o;10657:375::-;10842:4;10837:3;10833:14;10939:4;10932:5;10928:16;10922:23;10958:57;11009:4;11004:3;11000:14;10986:12;10958:57;:::i;:::-;10857:168;10811:221;;;:::o;11136:1194::-;11279:3;11315:4;11310:3;11306:14;11413:4;11406:5;11402:16;11396:23;11466:3;11460:4;11456:14;11449:4;11444:3;11440:14;11433:38;11492:71;11558:4;11544:12;11492:71;:::i;:::-;11484:79;;11330:244;11661:4;11654:5;11650:16;11644:23;11680:61;11735:4;11730:3;11726:14;11712:12;11680:61;:::i;:::-;11584:167;11843:4;11836:5;11832:16;11826:23;11862:61;11917:4;11912:3;11908:14;11894:12;11862:61;:::i;:::-;11761:172;12034:4;12027:5;12023:16;12017:23;12053:57;12104:4;12099:3;12095:14;12081:12;12053:57;:::i;:::-;11943:177;12217:4;12210:5;12206:16;12200:23;12236:57;12287:4;12282:3;12278:14;12264:12;12236:57;:::i;:::-;12130:173;12320:4;12313:11;;11284:1046;;;;;:::o;12410:504::-;12557:4;12552:3;12548:14;12645:4;12638:5;12634:16;12628:23;12664:59;12717:4;12712:3;12708:14;12694:12;12664:59;:::i;:::-;12572:161;12817:4;12810:5;12806:16;12800:23;12836:61;12891:4;12886:3;12882:14;12868:12;12836:61;:::i;:::-;12743:164;12526:388;;;:::o;12920:105::-;12995:23;13012:5;12995:23;:::i;:::-;12990:3;12983:36;12973:52;;:::o;13031:394::-;13210:4;13248:2;13237:9;13233:18;13225:26;;13261:157;13415:1;13404:9;13400:17;13391:6;13261:157;:::i;:::-;13215:210;;;;:::o;13431:425::-;13600:4;13638:2;13627:9;13623:18;13615:26;;13687:9;13681:4;13677:20;13673:1;13662:9;13658:17;13651:47;13715:134;13844:4;13835:6;13715:134;:::i;:::-;13707:142;;13605:251;;;;:::o;13862:401::-;14019:4;14057:2;14046:9;14042:18;14034:26;;14106:9;14100:4;14096:20;14092:1;14081:9;14077:17;14070:47;14134:122;14251:4;14242:6;14134:122;:::i;:::-;14126:130;;14024:239;;;;:::o;14269:370::-;14436:4;14474:2;14463:9;14459:18;14451:26;;14487:145;14629:1;14618:9;14614:17;14605:6;14487:145;:::i;:::-;14441:198;;;;:::o;14645:429::-;14816:4;14854:2;14843:9;14839:18;14831:26;;14903:9;14897:4;14893:20;14889:1;14878:9;14874:17;14867:47;14931:136;15062:4;15053:6;14931:136;:::i;:::-;14923:144;;14821:253;;;;:::o;15080:398::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15312:159;15468:1;15457:9;15453:17;15444:6;15312:159;:::i;:::-;15266:212;;;;:::o;15484:129::-;15518:6;15545:20;;:::i;:::-;15535:30;;15574:33;15602:4;15594:6;15574:33;:::i;:::-;15525:88;;;:::o;15619:75::-;15652:6;15685:2;15679:9;15669:19;;15659:35;:::o;15700:308::-;15762:4;15852:18;15844:6;15841:30;15838:2;;;15874:18;;:::i;:::-;15838:2;15912:29;15934:6;15912:29;:::i;:::-;15904:37;;15996:4;15990;15986:15;15978:23;;15767:241;;;:::o;16014:162::-;16111:4;16134:3;16126:11;;16164:4;16159:3;16155:14;16147:22;;16116:60;;;:::o;16182:144::-;16279:6;16313:5;16307:12;16297:22;;16286:40;;;:::o;16332:98::-;16383:6;16417:5;16411:12;16401:22;;16390:40;;;:::o;16436:99::-;16488:6;16522:5;16516:12;16506:22;;16495:40;;;:::o;16541:143::-;16641:4;16673;16668:3;16664:14;16656:22;;16646:38;;;:::o;16690:204::-;16809:11;16843:6;16838:3;16831:19;16883:4;16878:3;16874:14;16859:29;;16821:73;;;;:::o;16900:158::-;16973:11;17007:6;17002:3;16995:19;17047:4;17042:3;17038:14;17023:29;;16985:73;;;;:::o;17064:159::-;17138:11;17172:6;17167:3;17160:19;17212:4;17207:3;17203:14;17188:29;;17150:73;;;;:::o;17229:90::-;17263:7;17306:5;17299:13;17292:21;17281:32;;17271:48;;;:::o;17325:76::-;17361:7;17390:5;17379:16;;17369:32;;;:::o;17407:90::-;17442:7;17485:5;17482:1;17471:20;17460:31;;17450:47;;;:::o;17503:101::-;17539:7;17579:18;17572:5;17568:30;17557:41;;17547:57;;;:::o;17610:154::-;17694:6;17689:3;17684;17671:30;17756:1;17747:6;17742:3;17738:16;17731:27;17661:103;;;:::o;17770:307::-;17838:1;17848:113;17862:6;17859:1;17856:13;17848:113;;;17947:1;17942:3;17938:11;17932:18;17928:1;17923:3;17919:11;17912:39;17884:2;17881:1;17877:10;17872:15;;17848:113;;;17979:6;17976:1;17973:13;17970:2;;;18059:1;18050:6;18045:3;18041:16;18034:27;17970:2;17819:258;;;;:::o;18083:320::-;18127:6;18164:1;18158:4;18154:12;18144:22;;18211:1;18205:4;18201:12;18232:18;18222:2;;18288:4;18280:6;18276:17;18266:27;;18222:2;18350;18342:6;18339:14;18319:18;18316:38;18313:2;;;18369:18;;:::i;:::-;18313:2;18134:269;;;;:::o;18409:281::-;18492:27;18514:4;18492:27;:::i;:::-;18484:6;18480:40;18622:6;18610:10;18607:22;18586:18;18574:10;18571:34;18568:62;18565:2;;;18633:18;;:::i;:::-;18565:2;18673:10;18669:2;18662:22;18452:238;;;:::o;18696:180::-;18744:77;18741:1;18734:88;18841:4;18838:1;18831:15;18865:4;18862:1;18855:15;18882:180;18930:77;18927:1;18920:88;19027:4;19024:1;19017:15;19051:4;19048:1;19041:15;19068:102;19109:6;19160:2;19156:7;19151:2;19144:5;19140:14;19136:28;19126:38;;19116:54;;;:::o;19176:120::-;19248:23;19265:5;19248:23;:::i;:::-;19241:5;19238:34;19228:2;;19286:1;19283;19276:12;19228:2;19218:78;:::o;19302:120::-;19374:23;19391:5;19374:23;:::i;:::-;19367:5;19364:34;19354:2;;19412:1;19409;19402:12;19354:2;19344:78;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"906400","executionCost":"infinite","totalCost":"infinite"},"external":{"change_beneficiary((string,int256,uint64))":"infinite","change_owner_address(string)":"infinite","get_available_balance()":"566","get_beneficiary()":"infinite","get_owner()":"infinite","get_sector_size()":"1505","get_vesting_funds()":"infinite","is_controlling_address((string))":"infinite","mock_set_owner(string)":"infinite"}},"methodIdentifiers":{"change_beneficiary((string,int256,uint64))":"81ab68dd","change_owner_address(string)":"207f2cec","get_available_balance()":"59cf9e17","get_beneficiary()":"d9fc907e","get_owner()":"0ac298dc","get_sector_size()":"a9b494a1","get_vesting_funds()":"214c471c","is_controlling_address((string))":"e8d38633","mock_set_owner(string)":"f5cd020c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_owner\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"new_beneficiary\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"new_quota\",\"type\":\"int256\"},{\"internalType\":\"uint64\",\"name\":\"new_expiration\",\"type\":\"uint64\"}],\"internalType\":\"struct MinerTypes.ChangeBeneficiaryParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"change_beneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"addr\",\"type\":\"string\"}],\"name\":\"change_owner_address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_available_balance\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"available_balance\",\"type\":\"int256\"}],\"internalType\":\"struct MinerTypes.GetAvailableBalanceReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_beneficiary\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"beneficiary\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"quota\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"used_quota\",\"type\":\"int256\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"}],\"internalType\":\"struct CommonTypes.BeneficiaryTerm\",\"name\":\"term\",\"type\":\"tuple\"}],\"internalType\":\"struct CommonTypes.ActiveBeneficiary\",\"name\":\"active\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"new_beneficiary\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"new_quota\",\"type\":\"int256\"},{\"internalType\":\"uint64\",\"name\":\"new_expiration\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"approved_by_beneficiary\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approved_by_nominee\",\"type\":\"bool\"}],\"internalType\":\"struct CommonTypes.PendingBeneficiaryChange\",\"name\":\"proposed\",\"type\":\"tuple\"}],\"internalType\":\"struct MinerTypes.GetBeneficiaryReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_owner\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"owner\",\"type\":\"string\"}],\"internalType\":\"struct MinerTypes.GetOwnerReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_sector_size\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"sector_size\",\"type\":\"uint64\"}],\"internalType\":\"struct MinerTypes.GetSectorSizeReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_vesting_funds\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"epoch\",\"type\":\"int64\"},{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"internalType\":\"struct CommonTypes.VestingFunds[]\",\"name\":\"vesting_funds\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MinerTypes.GetVestingFundsReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"addr\",\"type\":\"string\"}],\"internalType\":\"struct MinerTypes.IsControllingAddressParam\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"is_controlling_address\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"is_controlling\",\"type\":\"bool\"}],\"internalType\":\"struct MinerTypes.IsControllingAddressReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"addr\",\"type\":\"string\"}],\"name\":\"mock_set_owner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zondax AG\",\"details\":\"Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\",\"kind\":\"dev\",\"methods\":{\"change_owner_address(string)\":{\"params\":{\"addr\":\"New owner address\"}},\"get_available_balance()\":{\"returns\":{\"_0\":\"the available balance of this miner.\"}},\"get_owner()\":{\"returns\":{\"_0\":\"the owner address of a Miner\"}},\"get_sector_size()\":{\"returns\":{\"_0\":\"the miner's sector size.\"}},\"get_vesting_funds()\":{\"returns\":{\"_0\":\"the funds vesting in this miner as a list of (vesting_epoch, vesting_amount) tuples.\"}},\"is_controlling_address((string))\":{\"params\":{\"params\":\"The \\\"controlling\\\" addresses are the Owner, the Worker, and all Control Addresses.\"},\"returns\":{\"_0\":\"Whether the provided address is \\\"controlling\\\".\"}}},\"title\":\"This contract is a proxy to a built-in Miner actor. Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"change_beneficiary((string,int256,uint64))\":{\"notice\":\"Proposes or confirms a change of beneficiary address.A proposal must be submitted by the owner, and takes effect after approval of both the proposed beneficiary and current beneficiary, if applicable, any current beneficiary that has time and quota remaining.See FIP-0029, https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0029.md\"},\"change_owner_address(string)\":{\"notice\":\"Proposes or confirms a change of owner address.If invoked by the current owner, proposes a new owner address for confirmation. If the proposed address is the current owner address, revokes any existing proposal that proposed address.\"},\"constructor\":{\"notice\":\"(Mock method) Sets the owner of a Miner on contract deployment, which will be returned via get_owner().\"},\"get_available_balance()\":{\"notice\":\"This is calculated as actor balance - (vesting funds + pre-commit deposit + initial pledge requirement + fee debt)Can go negative if the miner is in IP debt.\"},\"get_beneficiary()\":{\"notice\":\"This method is for use by other actors (such as those acting as beneficiaries), and to abstract the state representation for clients.Retrieves the currently active and proposed beneficiary information.\"},\"get_owner()\":{\"notice\":\"Income and returned collateral are paid to this addressThis address is also allowed to change the worker address for the miner\"},\"mock_set_owner(string)\":{\"notice\":\"(Mock method) Sets the owner of a Miner, which will be returned via get_owner().\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/filecoinMockAPIs/MinerAPI.sol\":\"MinerAPI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/filecoinMockAPIs/MinerAPI.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\nimport \\\"./types/MinerTypes.sol\\\";\\n\\n/// @title This contract is a proxy to a built-in Miner actor. Calling one of its methods will result in a cross-actor call being performed. However, in this mock library, no actual call is performed.\\n/// @author Zondax AG\\n/// @dev Methods prefixed with mock_ will not be available in the real library. These methods are merely used to set mock state. Note that this interface will likely break in the future as we align it\\n//       with that of the real library!\\ncontract MinerAPI {\\n    string owner;\\n    bool isBeneficiarySet = false;\\n    CommonTypes.ActiveBeneficiary activeBeneficiary;\\n    mapping(CommonTypes.SectorSize => uint64) sectorSizesBytes;\\n\\n    /// @notice (Mock method) Sets the owner of a Miner on contract deployment, which will be returned via get_owner().\\n    constructor(string memory _owner) {\\n        owner = _owner;\\n\\n        sectorSizesBytes[CommonTypes.SectorSize._2KiB] = 2 << 10;\\n        sectorSizesBytes[CommonTypes.SectorSize._8MiB] = 8 << 20;\\n        sectorSizesBytes[CommonTypes.SectorSize._512MiB] = 512 << 20;\\n        sectorSizesBytes[CommonTypes.SectorSize._32GiB] = 32 << 30;\\n        sectorSizesBytes[CommonTypes.SectorSize._64GiB] = 2 * (32 << 30);\\n    }\\n\\n    /// @notice (Mock method) Sets the owner of a Miner, which will be returned via get_owner().\\n    function mock_set_owner(string memory addr) public {\\n        require(bytes(owner).length == 0);\\n        owner = addr;\\n    }\\n\\n    /// @notice Income and returned collateral are paid to this address\\n    /// @notice This address is also allowed to change the worker address for the miner\\n    /// @return the owner address of a Miner\\n    function get_owner()\\n        public\\n        view\\n        returns (MinerTypes.GetOwnerReturn memory)\\n    {\\n        require(bytes(owner).length != 0);\\n\\n        return MinerTypes.GetOwnerReturn(owner);\\n    }\\n\\n    /// @param addr New owner address\\n    /// @notice Proposes or confirms a change of owner address.\\n    /// @notice If invoked by the current owner, proposes a new owner address for confirmation. If the proposed address is the current owner address, revokes any existing proposal that proposed address.\\n    function change_owner_address(string memory addr) public {\\n        owner = addr;\\n    }\\n\\n    /// @param params The \\\"controlling\\\" addresses are the Owner, the Worker, and all Control Addresses.\\n    /// @return Whether the provided address is \\\"controlling\\\".\\n    function is_controlling_address(\\n        MinerTypes.IsControllingAddressParam memory params\\n    ) public pure returns (MinerTypes.IsControllingAddressReturn memory) {\\n        return MinerTypes.IsControllingAddressReturn(false);\\n    }\\n\\n    /// @return the miner's sector size.\\n    function get_sector_size()\\n        public\\n        view\\n        returns (MinerTypes.GetSectorSizeReturn memory)\\n    {\\n        return\\n            MinerTypes.GetSectorSizeReturn(\\n                sectorSizesBytes[CommonTypes.SectorSize._8MiB]\\n            );\\n    }\\n\\n    /// @notice This is calculated as actor balance - (vesting funds + pre-commit deposit + initial pledge requirement + fee debt)\\n    /// @notice Can go negative if the miner is in IP debt.\\n    /// @return the available balance of this miner.\\n    function get_available_balance()\\n        public\\n        pure\\n        returns (MinerTypes.GetAvailableBalanceReturn memory)\\n    {\\n        return MinerTypes.GetAvailableBalanceReturn(10000000000000000000000);\\n    }\\n\\n    /// @return the funds vesting in this miner as a list of (vesting_epoch, vesting_amount) tuples.\\n    function get_vesting_funds()\\n        public\\n        pure\\n        returns (MinerTypes.GetVestingFundsReturn memory)\\n    {\\n        CommonTypes.VestingFunds[]\\n            memory vesting_funds = new CommonTypes.VestingFunds[](1);\\n        vesting_funds[0] = CommonTypes.VestingFunds(\\n            1668514825,\\n            2000000000000000000000\\n        );\\n\\n        return MinerTypes.GetVestingFundsReturn(vesting_funds);\\n    }\\n\\n    /// @notice Proposes or confirms a change of beneficiary address.\\n    /// @notice A proposal must be submitted by the owner, and takes effect after approval of both the proposed beneficiary and current beneficiary, if applicable, any current beneficiary that has time and quota remaining.\\n    /// @notice See FIP-0029, https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0029.md\\n    function change_beneficiary(\\n        MinerTypes.ChangeBeneficiaryParams memory params\\n    ) public {\\n        if (!isBeneficiarySet) {\\n            CommonTypes.BeneficiaryTerm memory term = CommonTypes\\n                .BeneficiaryTerm(params.new_quota, 0, params.new_expiration);\\n            activeBeneficiary = CommonTypes.ActiveBeneficiary(\\n                params.new_beneficiary,\\n                term\\n            );\\n            isBeneficiarySet = true;\\n        } else {\\n            activeBeneficiary.beneficiary = params.new_beneficiary;\\n            activeBeneficiary.term.quota = params.new_quota;\\n            activeBeneficiary.term.expiration = params.new_expiration;\\n        }\\n    }\\n\\n    /// @notice This method is for use by other actors (such as those acting as beneficiaries), and to abstract the state representation for clients.\\n    /// @notice Retrieves the currently active and proposed beneficiary information.\\n    function get_beneficiary()\\n        public\\n        view\\n        returns (MinerTypes.GetBeneficiaryReturn memory)\\n    {\\n        require(isBeneficiarySet);\\n\\n        CommonTypes.PendingBeneficiaryChange memory proposed;\\n        return MinerTypes.GetBeneficiaryReturn(activeBeneficiary, proposed);\\n    }\\n}\\n\",\"keccak256\":\"0xdaecb3186fb688647334f03d231fd2ecf2ad5007cb2b6993997cdfe6ab1ce253\",\"license\":\"Apache-2.0\"},\"contracts/filecoinMockAPIs/types/CommonTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\n/// @title Filecoin actors' common types for Solidity.\\n/// @author Zondax AG\\nlibrary CommonTypes {\\n    enum RegisteredSealProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        StackedDRG2KiBV1P1,\\n        StackedDRG512MiBV1P1,\\n        StackedDRG8MiBV1P1,\\n        StackedDRG32GiBV1P1,\\n        StackedDRG64GiBV1P1,\\n        Invalid\\n    }\\n\\n    enum RegisteredPoStProof {\\n        StackedDRGWinning2KiBV1,\\n        StackedDRGWinning8MiBV1,\\n        StackedDRGWinning512MiBV1,\\n        StackedDRGWinning32GiBV1,\\n        StackedDRGWinning64GiBV1,\\n        StackedDRGWindow2KiBV1,\\n        StackedDRGWindow8MiBV1,\\n        StackedDRGWindow512MiBV1,\\n        StackedDRGWindow32GiBV1,\\n        StackedDRGWindow64GiBV1,\\n        Invalid\\n    }\\n\\n    enum RegisteredUpdateProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        Invalid\\n    }\\n    enum ExtensionKind {\\n        ExtendCommittmentLegacy,\\n        ExtendCommittment\\n    }\\n\\n    enum SectorSize {\\n        _2KiB,\\n        _8MiB,\\n        _512MiB,\\n        _32GiB,\\n        _64GiB\\n    }\\n\\n    struct ValidatedExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExtendExpirationsInner {\\n        ValidatedExpirationExtension[] extensions;\\n        bytes claims; // FIXME this is a BTreeMap<SectorNumber, (u64, u64)> on rust\\n    }\\n\\n    struct PendingBeneficiaryChange {\\n        bytes new_beneficiary;\\n        int256 new_quota;\\n        uint64 new_expiration;\\n        bool approved_by_beneficiary;\\n        bool approved_by_nominee;\\n    }\\n\\n    struct BeneficiaryTerm {\\n        int256 quota;\\n        int256 used_quota;\\n        uint64 expiration;\\n    }\\n\\n    struct ActiveBeneficiary {\\n        string beneficiary;\\n        BeneficiaryTerm term;\\n    }\\n\\n    struct RecoveryDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct FaultDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct TerminationDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct SectorClaim {\\n        uint64 sector_number;\\n        uint64[] maintain_claims;\\n        uint64[] drop_claims;\\n    }\\n\\n    struct ExpirationExtension2 {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        SectorClaim[] sectors_with_claims;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct FilterEstimate {\\n        int256 position;\\n        int256 velocity;\\n    }\\n\\n    struct SectorPreCommitInfoInner {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n\\n    struct SectorPreCommitInfo {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n    struct ReplicaUpdateInner {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64[] deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate2 {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct PoStPartition {\\n        uint64 index;\\n        int8 skipped;\\n    }\\n\\n    struct PoStProof {\\n        RegisteredPoStProof post_proof;\\n        bytes proof_bytes;\\n    }\\n\\n    struct VestingFunds {\\n        int64 epoch;\\n        int256 amount;\\n    }\\n    struct SectorDeals {\\n        int64 sector_type;\\n        int64 sector_expiry;\\n        uint64[] deal_ids;\\n    }\\n\\n    struct Signature {\\n        int8 sig_type;\\n        bytes data;\\n    }\\n\\n    struct DealProposal {\\n        bytes piece_cid;\\n        uint64 piece_size;\\n        bool verified_deal;\\n        bytes client;\\n        bytes provider;\\n        string label;\\n        int64 start_epoch;\\n        int64 end_epoch;\\n        int storage_price_per_epoch;\\n        int provider_collateral;\\n        int client_collateral;\\n    }\\n\\n    struct ClientDealProposal {\\n        DealProposal proposal;\\n        Signature client_signature;\\n    }\\n\\n    struct SectorDealData {\\n        bytes commd;\\n    }\\n\\n    struct CID {\\n        uint8 version;\\n        uint64 codec;\\n        Multihash hash;\\n    }\\n\\n    struct Multihash {\\n        uint64 code;\\n        uint8 size;\\n        bytes digest;\\n    }\\n\\n    struct VerifiedDealInfo {\\n        uint64 client;\\n        uint64 allocation_id;\\n        bytes data;\\n        uint64 size;\\n    }\\n\\n    struct SectorDataSpec {\\n        uint64[] deal_ids;\\n        int64 sector_type;\\n    }\\n}\\n\",\"keccak256\":\"0xebdb76491f260497fdac9c48a8317e54af4d16a305db2a781ef99bccd098df26\",\"license\":\"Apache-2.0\"},\"contracts/filecoinMockAPIs/types/MinerTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\nimport \\\"./CommonTypes.sol\\\";\\n\\n/// @title Filecoin miner actor types for Solidity.\\n/// @author Zondax AG\\nlibrary MinerTypes {\\n    struct GetOwnerReturn {\\n        string owner;\\n    }\\n    struct IsControllingAddressParam {\\n        string addr;\\n    }\\n    struct IsControllingAddressReturn {\\n        bool is_controlling;\\n    }\\n    struct GetSectorSizeReturn {\\n        uint64 sector_size;\\n    }\\n    struct GetAvailableBalanceReturn {\\n        int256 available_balance;\\n    }\\n    struct GetVestingFundsReturn {\\n        CommonTypes.VestingFunds[] vesting_funds;\\n    }\\n\\n    struct ChangeBeneficiaryParams {\\n        string new_beneficiary;\\n        int256 new_quota;\\n        uint64 new_expiration;\\n    }\\n\\n    struct GetBeneficiaryReturn {\\n        CommonTypes.ActiveBeneficiary active;\\n        CommonTypes.PendingBeneficiaryChange proposed;\\n    }\\n}\\n\",\"keccak256\":\"0x1b06628cb1781edf562540b9c0ae31ae19ca2a76eed55564c4ee485becaf60c7\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4042,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"owner","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4045,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"isBeneficiarySet","offset":0,"slot":"1","type":"t_bool"},{"astId":4048,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"activeBeneficiary","offset":0,"slot":"2","type":"t_struct(ActiveBeneficiary)4427_storage"},{"astId":4053,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"sectorSizesBytes","offset":0,"slot":"6","type":"t_mapping(t_enum(SectorSize)4387,t_uint64)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(SectorSize)4387":{"encoding":"inplace","label":"enum CommonTypes.SectorSize","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_enum(SectorSize)4387,t_uint64)":{"encoding":"mapping","key":"t_enum(SectorSize)4387","label":"mapping(enum CommonTypes.SectorSize => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ActiveBeneficiary)4427_storage":{"encoding":"inplace","label":"struct CommonTypes.ActiveBeneficiary","members":[{"astId":4423,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"beneficiary","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4426,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"term","offset":0,"slot":"1","type":"t_struct(BeneficiaryTerm)4421_storage"}],"numberOfBytes":"128"},"t_struct(BeneficiaryTerm)4421_storage":{"encoding":"inplace","label":"struct CommonTypes.BeneficiaryTerm","members":[{"astId":4416,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"quota","offset":0,"slot":"0","type":"t_int256"},{"astId":4418,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"used_quota","offset":0,"slot":"1","type":"t_int256"},{"astId":4420,"contract":"contracts/filecoinMockAPIs/MinerAPI.sol:MinerAPI","label":"expiration","offset":0,"slot":"2","type":"t_uint64"}],"numberOfBytes":"96"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{"change_beneficiary((string,int256,uint64))":{"notice":"Proposes or confirms a change of beneficiary address.A proposal must be submitted by the owner, and takes effect after approval of both the proposed beneficiary and current beneficiary, if applicable, any current beneficiary that has time and quota remaining.See FIP-0029, https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0029.md"},"change_owner_address(string)":{"notice":"Proposes or confirms a change of owner address.If invoked by the current owner, proposes a new owner address for confirmation. If the proposed address is the current owner address, revokes any existing proposal that proposed address."},"constructor":{"notice":"(Mock method) Sets the owner of a Miner on contract deployment, which will be returned via get_owner()."},"get_available_balance()":{"notice":"This is calculated as actor balance - (vesting funds + pre-commit deposit + initial pledge requirement + fee debt)Can go negative if the miner is in IP debt."},"get_beneficiary()":{"notice":"This method is for use by other actors (such as those acting as beneficiaries), and to abstract the state representation for clients.Retrieves the currently active and proposed beneficiary information."},"get_owner()":{"notice":"Income and returned collateral are paid to this addressThis address is also allowed to change the worker address for the miner"},"mock_set_owner(string)":{"notice":"(Mock method) Sets the owner of a Miner, which will be returned via get_owner()."}},"version":1}}},"contracts/filecoinMockAPIs/types/CommonTypes.sol":{"CommonTypes":{"abi":[],"devdoc":{"author":"Zondax AG","kind":"dev","methods":{},"title":"Filecoin actors' common types for Solidity.","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbc5635e5b5f33a314595bac0f1ed666004a5d3b9fea675d39ae8abc82492c5664736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xC5 PUSH4 0x5E5B5F33 LOG3 EQ MSIZE JUMPDEST 0xAC 0xF 0x1E 0xD6 PUSH7 0x4A5D3B9FEA67 0x5D CODECOPY 0xAE DUP11 0xBC DUP3 0x49 0x2C JUMP PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"152:5405:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbc5635e5b5f33a314595bac0f1ed666004a5d3b9fea675d39ae8abc82492c5664736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xC5 PUSH4 0x5E5B5F33 LOG3 EQ MSIZE JUMPDEST 0xAC 0xF 0x1E 0xD6 PUSH7 0x4A5D3B9FEA67 0x5D CODECOPY 0xAE DUP11 0xBC DUP3 0x49 0x2C JUMP PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"152:5405:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Zondax AG\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Filecoin actors' common types for Solidity.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/filecoinMockAPIs/types/CommonTypes.sol\":\"CommonTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/filecoinMockAPIs/types/CommonTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\n/// @title Filecoin actors' common types for Solidity.\\n/// @author Zondax AG\\nlibrary CommonTypes {\\n    enum RegisteredSealProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        StackedDRG2KiBV1P1,\\n        StackedDRG512MiBV1P1,\\n        StackedDRG8MiBV1P1,\\n        StackedDRG32GiBV1P1,\\n        StackedDRG64GiBV1P1,\\n        Invalid\\n    }\\n\\n    enum RegisteredPoStProof {\\n        StackedDRGWinning2KiBV1,\\n        StackedDRGWinning8MiBV1,\\n        StackedDRGWinning512MiBV1,\\n        StackedDRGWinning32GiBV1,\\n        StackedDRGWinning64GiBV1,\\n        StackedDRGWindow2KiBV1,\\n        StackedDRGWindow8MiBV1,\\n        StackedDRGWindow512MiBV1,\\n        StackedDRGWindow32GiBV1,\\n        StackedDRGWindow64GiBV1,\\n        Invalid\\n    }\\n\\n    enum RegisteredUpdateProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        Invalid\\n    }\\n    enum ExtensionKind {\\n        ExtendCommittmentLegacy,\\n        ExtendCommittment\\n    }\\n\\n    enum SectorSize {\\n        _2KiB,\\n        _8MiB,\\n        _512MiB,\\n        _32GiB,\\n        _64GiB\\n    }\\n\\n    struct ValidatedExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExtendExpirationsInner {\\n        ValidatedExpirationExtension[] extensions;\\n        bytes claims; // FIXME this is a BTreeMap<SectorNumber, (u64, u64)> on rust\\n    }\\n\\n    struct PendingBeneficiaryChange {\\n        bytes new_beneficiary;\\n        int256 new_quota;\\n        uint64 new_expiration;\\n        bool approved_by_beneficiary;\\n        bool approved_by_nominee;\\n    }\\n\\n    struct BeneficiaryTerm {\\n        int256 quota;\\n        int256 used_quota;\\n        uint64 expiration;\\n    }\\n\\n    struct ActiveBeneficiary {\\n        string beneficiary;\\n        BeneficiaryTerm term;\\n    }\\n\\n    struct RecoveryDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct FaultDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct TerminationDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct SectorClaim {\\n        uint64 sector_number;\\n        uint64[] maintain_claims;\\n        uint64[] drop_claims;\\n    }\\n\\n    struct ExpirationExtension2 {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        SectorClaim[] sectors_with_claims;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct FilterEstimate {\\n        int256 position;\\n        int256 velocity;\\n    }\\n\\n    struct SectorPreCommitInfoInner {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n\\n    struct SectorPreCommitInfo {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n    struct ReplicaUpdateInner {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64[] deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate2 {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct PoStPartition {\\n        uint64 index;\\n        int8 skipped;\\n    }\\n\\n    struct PoStProof {\\n        RegisteredPoStProof post_proof;\\n        bytes proof_bytes;\\n    }\\n\\n    struct VestingFunds {\\n        int64 epoch;\\n        int256 amount;\\n    }\\n    struct SectorDeals {\\n        int64 sector_type;\\n        int64 sector_expiry;\\n        uint64[] deal_ids;\\n    }\\n\\n    struct Signature {\\n        int8 sig_type;\\n        bytes data;\\n    }\\n\\n    struct DealProposal {\\n        bytes piece_cid;\\n        uint64 piece_size;\\n        bool verified_deal;\\n        bytes client;\\n        bytes provider;\\n        string label;\\n        int64 start_epoch;\\n        int64 end_epoch;\\n        int storage_price_per_epoch;\\n        int provider_collateral;\\n        int client_collateral;\\n    }\\n\\n    struct ClientDealProposal {\\n        DealProposal proposal;\\n        Signature client_signature;\\n    }\\n\\n    struct SectorDealData {\\n        bytes commd;\\n    }\\n\\n    struct CID {\\n        uint8 version;\\n        uint64 codec;\\n        Multihash hash;\\n    }\\n\\n    struct Multihash {\\n        uint64 code;\\n        uint8 size;\\n        bytes digest;\\n    }\\n\\n    struct VerifiedDealInfo {\\n        uint64 client;\\n        uint64 allocation_id;\\n        bytes data;\\n        uint64 size;\\n    }\\n\\n    struct SectorDataSpec {\\n        uint64[] deal_ids;\\n        int64 sector_type;\\n    }\\n}\\n\",\"keccak256\":\"0xebdb76491f260497fdac9c48a8317e54af4d16a305db2a781ef99bccd098df26\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/filecoinMockAPIs/types/MarketTypes.sol":{"MarketTypes":{"abi":[],"devdoc":{"author":"Zondax AG","kind":"dev","methods":{},"title":"Filecoin market actor types for Solidity.","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e084a234f19f8d8e6fcde0a78e2a105e79c78b4bf0a338a81c669a39c09eb464736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE084A234F19F8D8E6FCDE0A78E2A105E79C78B4BF0A338A81C PUSH7 0x9A39C09EB46473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"150:2122:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e084a234f19f8d8e6fcde0a78e2a105e79c78b4bf0a338a81c669a39c09eb464736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE084A234F19F8D8E6FCDE0A78E2A105E79C78B4BF0A338A81C PUSH7 0x9A39C09EB46473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"150:2122:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Zondax AG\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Filecoin market actor types for Solidity.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/filecoinMockAPIs/types/MarketTypes.sol\":\"MarketTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/filecoinMockAPIs/types/MarketTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\n/// @title Filecoin market actor types for Solidity.\\n/// @author Zondax AG\\nlibrary MarketTypes {\\n    struct MockDeal {\\n        uint64 id;\\n        string cid;\\n        uint64 size;\\n        bool verified;\\n        string client;\\n        string provider;\\n        string label;\\n        int64 start;\\n        int64 end;\\n        uint256 price_per_epoch;\\n        uint256 provider_collateral;\\n        uint256 client_collateral;\\n        int64 activated;\\n        int64 terminated;\\n    }\\n\\n    struct AddBalanceParams {\\n        string provider_or_client;\\n    }\\n\\n    struct WithdrawBalanceParams {\\n        string provider_or_client;\\n        uint256 tokenAmount;\\n    }\\n\\n    struct WithdrawBalanceReturn {\\n        uint256 amount_withdrawn;\\n    }\\n\\n    struct GetBalanceReturn {\\n        uint256 balance;\\n        uint256 locked;\\n    }\\n\\n    struct GetDealDataCommitmentParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealDataCommitmentReturn {\\n        bytes data;\\n        uint64 size;\\n    }\\n\\n    struct GetDealClientParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealClientReturn {\\n        string client;\\n    }\\n\\n    struct GetDealProviderParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealProviderReturn {\\n        string provider;\\n    }\\n\\n    struct GetDealLabelParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealLabelReturn {\\n        string label;\\n    }\\n\\n    struct GetDealTermParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealTermReturn {\\n        int64 start;\\n        int64 end;\\n    }\\n\\n    struct GetDealEpochPriceParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealEpochPriceReturn {\\n        uint256 price_per_epoch;\\n    }\\n\\n    struct GetDealClientCollateralParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealClientCollateralReturn {\\n        uint256 collateral;\\n    }\\n\\n    struct GetDealProviderCollateralParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealProviderCollateralReturn {\\n        uint256 collateral;\\n    }\\n\\n    struct GetDealVerifiedParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealVerifiedReturn {\\n        bool verified;\\n    }\\n\\n    struct GetDealActivationParams {\\n        uint64 id;\\n    }\\n\\n    struct GetDealActivationReturn {\\n        int64 activated;\\n        int64 terminated;\\n    }\\n}\\n\",\"keccak256\":\"0x49adf6a1ec1d7a41f025b0edb0f5ab8a04f584481b6aff8be95afe48c78c6a91\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/filecoinMockAPIs/types/MinerTypes.sol":{"MinerTypes":{"abi":[],"devdoc":{"author":"Zondax AG","kind":"dev","methods":{},"title":"Filecoin miner actor types for Solidity.","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021e3f9a6416fbe48361b68edca926d32c69ab4c61b177140b9c026e13f5fa38964736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xE3 0xF9 0xA6 COINBASE PUSH16 0xBE48361B68EDCA926D32C69AB4C61B17 PUSH18 0x40B9C026E13F5FA38964736F6C6343000804 STOP CALLER ","sourceMap":"178:731:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021e3f9a6416fbe48361b68edca926d32c69ab4c61b177140b9c026e13f5fa38964736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xE3 0xF9 0xA6 COINBASE PUSH16 0xBE48361B68EDCA926D32C69AB4C61B17 PUSH18 0x40B9C026E13F5FA38964736F6C6343000804 STOP CALLER ","sourceMap":"178:731:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Zondax AG\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Filecoin miner actor types for Solidity.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/filecoinMockAPIs/types/MinerTypes.sol\":\"MinerTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/filecoinMockAPIs/types/CommonTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\n/// @title Filecoin actors' common types for Solidity.\\n/// @author Zondax AG\\nlibrary CommonTypes {\\n    enum RegisteredSealProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        StackedDRG2KiBV1P1,\\n        StackedDRG512MiBV1P1,\\n        StackedDRG8MiBV1P1,\\n        StackedDRG32GiBV1P1,\\n        StackedDRG64GiBV1P1,\\n        Invalid\\n    }\\n\\n    enum RegisteredPoStProof {\\n        StackedDRGWinning2KiBV1,\\n        StackedDRGWinning8MiBV1,\\n        StackedDRGWinning512MiBV1,\\n        StackedDRGWinning32GiBV1,\\n        StackedDRGWinning64GiBV1,\\n        StackedDRGWindow2KiBV1,\\n        StackedDRGWindow8MiBV1,\\n        StackedDRGWindow512MiBV1,\\n        StackedDRGWindow32GiBV1,\\n        StackedDRGWindow64GiBV1,\\n        Invalid\\n    }\\n\\n    enum RegisteredUpdateProof {\\n        StackedDRG2KiBV1,\\n        StackedDRG8MiBV1,\\n        StackedDRG512MiBV1,\\n        StackedDRG32GiBV1,\\n        StackedDRG64GiBV1,\\n        Invalid\\n    }\\n    enum ExtensionKind {\\n        ExtendCommittmentLegacy,\\n        ExtendCommittment\\n    }\\n\\n    enum SectorSize {\\n        _2KiB,\\n        _8MiB,\\n        _512MiB,\\n        _32GiB,\\n        _64GiB\\n    }\\n\\n    struct ValidatedExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExtendExpirationsInner {\\n        ValidatedExpirationExtension[] extensions;\\n        bytes claims; // FIXME this is a BTreeMap<SectorNumber, (u64, u64)> on rust\\n    }\\n\\n    struct PendingBeneficiaryChange {\\n        bytes new_beneficiary;\\n        int256 new_quota;\\n        uint64 new_expiration;\\n        bool approved_by_beneficiary;\\n        bool approved_by_nominee;\\n    }\\n\\n    struct BeneficiaryTerm {\\n        int256 quota;\\n        int256 used_quota;\\n        uint64 expiration;\\n    }\\n\\n    struct ActiveBeneficiary {\\n        string beneficiary;\\n        BeneficiaryTerm term;\\n    }\\n\\n    struct RecoveryDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct FaultDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct TerminationDeclaration {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n    }\\n\\n    struct SectorClaim {\\n        uint64 sector_number;\\n        uint64[] maintain_claims;\\n        uint64[] drop_claims;\\n    }\\n\\n    struct ExpirationExtension2 {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        SectorClaim[] sectors_with_claims;\\n        int64 new_expiration;\\n    }\\n\\n    struct ExpirationExtension {\\n        uint64 deadline;\\n        uint64 partition;\\n        uint8 sectors;\\n        int64 new_expiration;\\n    }\\n\\n    struct FilterEstimate {\\n        int256 position;\\n        int256 velocity;\\n    }\\n\\n    struct SectorPreCommitInfoInner {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n\\n    struct SectorPreCommitInfo {\\n        RegisteredSealProof seal_proof;\\n        uint64 sector_number;\\n        bytes sealed_cid;\\n        int64 seal_rand_epoch;\\n        uint64[] deal_ids;\\n        int64 expiration;\\n        bytes unsealed_cid;\\n    }\\n    struct ReplicaUpdateInner {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64[] deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct ReplicaUpdate2 {\\n        uint64 sector_number;\\n        uint64 deadline;\\n        uint64 partition;\\n        bytes new_sealed_cid;\\n        bytes new_unsealed_cid;\\n        uint64 deals;\\n        RegisteredUpdateProof update_proof_type;\\n        bytes replica_proof;\\n    }\\n\\n    struct PoStPartition {\\n        uint64 index;\\n        int8 skipped;\\n    }\\n\\n    struct PoStProof {\\n        RegisteredPoStProof post_proof;\\n        bytes proof_bytes;\\n    }\\n\\n    struct VestingFunds {\\n        int64 epoch;\\n        int256 amount;\\n    }\\n    struct SectorDeals {\\n        int64 sector_type;\\n        int64 sector_expiry;\\n        uint64[] deal_ids;\\n    }\\n\\n    struct Signature {\\n        int8 sig_type;\\n        bytes data;\\n    }\\n\\n    struct DealProposal {\\n        bytes piece_cid;\\n        uint64 piece_size;\\n        bool verified_deal;\\n        bytes client;\\n        bytes provider;\\n        string label;\\n        int64 start_epoch;\\n        int64 end_epoch;\\n        int storage_price_per_epoch;\\n        int provider_collateral;\\n        int client_collateral;\\n    }\\n\\n    struct ClientDealProposal {\\n        DealProposal proposal;\\n        Signature client_signature;\\n    }\\n\\n    struct SectorDealData {\\n        bytes commd;\\n    }\\n\\n    struct CID {\\n        uint8 version;\\n        uint64 codec;\\n        Multihash hash;\\n    }\\n\\n    struct Multihash {\\n        uint64 code;\\n        uint8 size;\\n        bytes digest;\\n    }\\n\\n    struct VerifiedDealInfo {\\n        uint64 client;\\n        uint64 allocation_id;\\n        bytes data;\\n        uint64 size;\\n    }\\n\\n    struct SectorDataSpec {\\n        uint64[] deal_ids;\\n        int64 sector_type;\\n    }\\n}\\n\",\"keccak256\":\"0xebdb76491f260497fdac9c48a8317e54af4d16a305db2a781ef99bccd098df26\",\"license\":\"Apache-2.0\"},\"contracts/filecoinMockAPIs/types/MinerTypes.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.4.25 <=0.8.17;\\n\\nimport \\\"./CommonTypes.sol\\\";\\n\\n/// @title Filecoin miner actor types for Solidity.\\n/// @author Zondax AG\\nlibrary MinerTypes {\\n    struct GetOwnerReturn {\\n        string owner;\\n    }\\n    struct IsControllingAddressParam {\\n        string addr;\\n    }\\n    struct IsControllingAddressReturn {\\n        bool is_controlling;\\n    }\\n    struct GetSectorSizeReturn {\\n        uint64 sector_size;\\n    }\\n    struct GetAvailableBalanceReturn {\\n        int256 available_balance;\\n    }\\n    struct GetVestingFundsReturn {\\n        CommonTypes.VestingFunds[] vesting_funds;\\n    }\\n\\n    struct ChangeBeneficiaryParams {\\n        string new_beneficiary;\\n        int256 new_quota;\\n        uint64 new_expiration;\\n    }\\n\\n    struct GetBeneficiaryReturn {\\n        CommonTypes.ActiveBeneficiary active;\\n        CommonTypes.PendingBeneficiaryChange proposed;\\n    }\\n}\\n\",\"keccak256\":\"0x1b06628cb1781edf562540b9c0ae31ae19ca2a76eed55564c4ee485becaf60c7\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}